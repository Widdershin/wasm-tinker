(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
var adapt_1 = require("@cycle/run/lib/adapt");
var fromEvent_1 = require("./fromEvent");
var BodyDOMSource = /** @class */ (function () {
    function BodyDOMSource(_name) {
        this._name = _name;
    }
    BodyDOMSource.prototype.select = function (selector) {
        // This functionality is still undefined/undecided.
        return this;
    };
    BodyDOMSource.prototype.elements = function () {
        var out = adapt_1.adapt(xstream_1.default.of([document.body]));
        out._isCycleSource = this._name;
        return out;
    };
    BodyDOMSource.prototype.element = function () {
        var out = adapt_1.adapt(xstream_1.default.of(document.body));
        out._isCycleSource = this._name;
        return out;
    };
    BodyDOMSource.prototype.events = function (eventType, options) {
        if (options === void 0) { options = {}; }
        var stream;
        stream = fromEvent_1.fromEvent(document.body, eventType, options.useCapture, options.preventDefault);
        var out = adapt_1.adapt(stream);
        out._isCycleSource = this._name;
        return out;
    };
    return BodyDOMSource;
}());
exports.BodyDOMSource = BodyDOMSource;

},{"./fromEvent":9,"@cycle/run/lib/adapt":19,"xstream":145}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
var adapt_1 = require("@cycle/run/lib/adapt");
var fromEvent_1 = require("./fromEvent");
var DocumentDOMSource = /** @class */ (function () {
    function DocumentDOMSource(_name) {
        this._name = _name;
    }
    DocumentDOMSource.prototype.select = function (selector) {
        // This functionality is still undefined/undecided.
        return this;
    };
    DocumentDOMSource.prototype.elements = function () {
        var out = adapt_1.adapt(xstream_1.default.of([document]));
        out._isCycleSource = this._name;
        return out;
    };
    DocumentDOMSource.prototype.element = function () {
        var out = adapt_1.adapt(xstream_1.default.of(document));
        out._isCycleSource = this._name;
        return out;
    };
    DocumentDOMSource.prototype.events = function (eventType, options) {
        if (options === void 0) { options = {}; }
        var stream;
        stream = fromEvent_1.fromEvent(document, eventType, options.useCapture, options.preventDefault);
        var out = adapt_1.adapt(stream);
        out._isCycleSource = this._name;
        return out;
    };
    return DocumentDOMSource;
}());
exports.DocumentDOMSource = DocumentDOMSource;

},{"./fromEvent":9,"@cycle/run/lib/adapt":19,"xstream":145}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ScopeChecker_1 = require("./ScopeChecker");
var utils_1 = require("./utils");
var matchesSelector_1 = require("./matchesSelector");
function toElArray(input) {
    return Array.prototype.slice.call(input);
}
var ElementFinder = /** @class */ (function () {
    function ElementFinder(namespace, isolateModule) {
        this.namespace = namespace;
        this.isolateModule = isolateModule;
    }
    ElementFinder.prototype.call = function (rootElement) {
        var namespace = this.namespace;
        var selector = utils_1.getSelectors(namespace);
        if (!selector) {
            return [rootElement];
        }
        var fullScope = utils_1.getFullScope(namespace);
        var scopeChecker = new ScopeChecker_1.ScopeChecker(fullScope, this.isolateModule);
        var topNode = fullScope
            ? this.isolateModule.getElement(fullScope) || rootElement
            : rootElement;
        var topNodeMatchesSelector = !!fullScope && !!selector && matchesSelector_1.matchesSelector(topNode, selector);
        return toElArray(topNode.querySelectorAll(selector))
            .filter(scopeChecker.isDirectlyInScope, scopeChecker)
            .concat(topNodeMatchesSelector ? [topNode] : []);
    };
    return ElementFinder;
}());
exports.ElementFinder = ElementFinder;

},{"./ScopeChecker":7,"./matchesSelector":14,"./utils":18}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
var ScopeChecker_1 = require("./ScopeChecker");
var utils_1 = require("./utils");
var matchesSelector_1 = require("./matchesSelector");
var fromEvent_1 = require("./fromEvent");
/**
 * Finds (with binary search) index of the destination that id equal to searchId
 * among the destinations in the given array.
 */
function indexOf(arr, searchId) {
    var minIndex = 0;
    var maxIndex = arr.length - 1;
    var currentIndex;
    var current;
    while (minIndex <= maxIndex) {
        currentIndex = ((minIndex + maxIndex) / 2) | 0; // tslint:disable-line:no-bitwise
        current = arr[currentIndex];
        var currentId = current.id;
        if (currentId < searchId) {
            minIndex = currentIndex + 1;
        }
        else if (currentId > searchId) {
            maxIndex = currentIndex - 1;
        }
        else {
            return currentIndex;
        }
    }
    return -1;
}
/**
 * Manages "Event delegation", by connecting an origin with multiple
 * destinations.
 *
 * Attaches a DOM event listener to the DOM element called the "origin",
 * and delegates events to "destinations", which are subjects as outputs
 * for the DOMSource. Simulates bubbling or capturing, with regards to
 * isolation boundaries too.
 */
var EventDelegator = /** @class */ (function () {
    function EventDelegator(origin, eventType, useCapture, isolateModule, preventDefault) {
        if (preventDefault === void 0) { preventDefault = false; }
        var _this = this;
        this.origin = origin;
        this.eventType = eventType;
        this.useCapture = useCapture;
        this.isolateModule = isolateModule;
        this.preventDefault = preventDefault;
        this.destinations = [];
        this._lastId = 0;
        if (preventDefault) {
            if (useCapture) {
                this.listener = function (ev) {
                    fromEvent_1.preventDefaultConditional(ev, preventDefault);
                    _this.capture(ev);
                };
            }
            else {
                this.listener = function (ev) {
                    fromEvent_1.preventDefaultConditional(ev, preventDefault);
                    _this.bubble(ev);
                };
            }
        }
        else {
            if (useCapture) {
                this.listener = function (ev) { return _this.capture(ev); };
            }
            else {
                this.listener = function (ev) { return _this.bubble(ev); };
            }
        }
        origin.addEventListener(eventType, this.listener, useCapture);
    }
    EventDelegator.prototype.updateOrigin = function (newOrigin) {
        this.origin.removeEventListener(this.eventType, this.listener, this.useCapture);
        newOrigin.addEventListener(this.eventType, this.listener, this.useCapture);
        this.origin = newOrigin;
    };
    /**
     * Creates a *new* destination given the namespace and returns the subject
     * representing the destination of events. Is not referentially transparent,
     * will always return a different output for the same input.
     */
    EventDelegator.prototype.createDestination = function (namespace) {
        var _this = this;
        var id = this._lastId++;
        var selector = utils_1.getSelectors(namespace);
        var scopeChecker = new ScopeChecker_1.ScopeChecker(utils_1.getFullScope(namespace), this.isolateModule);
        var subject = xstream_1.default.create({
            start: function () { },
            stop: function () {
                if ('requestIdleCallback' in window) {
                    requestIdleCallback(function () {
                        _this.removeDestination(id);
                    });
                }
                else {
                    _this.removeDestination(id);
                }
            },
        });
        var destination = { id: id, selector: selector, scopeChecker: scopeChecker, subject: subject };
        this.destinations.push(destination);
        return subject;
    };
    /**
     * Removes the destination that has the given id.
     */
    EventDelegator.prototype.removeDestination = function (id) {
        var i = indexOf(this.destinations, id);
        i >= 0 && this.destinations.splice(i, 1); // tslint:disable-line:no-unused-expression
    };
    EventDelegator.prototype.capture = function (ev) {
        var n = this.destinations.length;
        for (var i = 0; i < n; i++) {
            var dest = this.destinations[i];
            if (matchesSelector_1.matchesSelector(ev.target, dest.selector)) {
                dest.subject._n(ev);
            }
        }
    };
    EventDelegator.prototype.bubble = function (rawEvent) {
        var origin = this.origin;
        if (!origin.contains(rawEvent.currentTarget)) {
            return;
        }
        var roof = origin.parentElement;
        var ev = this.patchEvent(rawEvent);
        for (var el = ev.target; el && el !== roof; el = el.parentElement) {
            if (!origin.contains(el)) {
                ev.stopPropagation();
            }
            if (ev.propagationHasBeenStopped) {
                return;
            }
            this.matchEventAgainstDestinations(el, ev);
        }
    };
    EventDelegator.prototype.patchEvent = function (event) {
        var pEvent = event;
        pEvent.propagationHasBeenStopped = false;
        var oldStopPropagation = pEvent.stopPropagation;
        pEvent.stopPropagation = function stopPropagation() {
            oldStopPropagation.call(this);
            this.propagationHasBeenStopped = true;
        };
        return pEvent;
    };
    EventDelegator.prototype.matchEventAgainstDestinations = function (el, ev) {
        var n = this.destinations.length;
        for (var i = 0; i < n; i++) {
            var dest = this.destinations[i];
            if (!dest.scopeChecker.isDirectlyInScope(el)) {
                continue;
            }
            if (matchesSelector_1.matchesSelector(el, dest.selector)) {
                this.mutateEventCurrentTarget(ev, el);
                dest.subject._n(ev);
            }
        }
    };
    EventDelegator.prototype.mutateEventCurrentTarget = function (event, currentTargetElement) {
        try {
            Object.defineProperty(event, "currentTarget", {
                value: currentTargetElement,
                configurable: true,
            });
        }
        catch (err) {
            console.log("please use event.ownerTarget");
        }
        event.ownerTarget = currentTargetElement;
    };
    return EventDelegator;
}());
exports.EventDelegator = EventDelegator;

},{"./ScopeChecker":7,"./fromEvent":9,"./matchesSelector":14,"./utils":18,"xstream":145}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var IsolateModule = /** @class */ (function () {
    function IsolateModule() {
        this.elementsByFullScope = new Map();
        this.delegatorsByFullScope = new Map();
        this.fullScopesBeingUpdated = [];
        this.vnodesBeingRemoved = [];
    }
    IsolateModule.prototype.cleanupVNode = function (_a) {
        var data = _a.data, elm = _a.elm;
        var fullScope = (data || {}).isolate || '';
        var isCurrentElm = this.elementsByFullScope.get(fullScope) === elm;
        var isScopeBeingUpdated = this.fullScopesBeingUpdated.indexOf(fullScope) >= 0;
        if (fullScope && isCurrentElm && !isScopeBeingUpdated) {
            this.elementsByFullScope.delete(fullScope);
            this.delegatorsByFullScope.delete(fullScope);
        }
    };
    IsolateModule.prototype.getElement = function (fullScope) {
        return this.elementsByFullScope.get(fullScope);
    };
    IsolateModule.prototype.getFullScope = function (elm) {
        var iterator = this.elementsByFullScope.entries();
        for (var result = iterator.next(); !!result.value; result = iterator.next()) {
            var _a = result.value, fullScope = _a[0], element = _a[1];
            if (elm === element) {
                return fullScope;
            }
        }
        return '';
    };
    IsolateModule.prototype.addEventDelegator = function (fullScope, eventDelegator) {
        var delegators = this.delegatorsByFullScope.get(fullScope);
        if (!delegators) {
            delegators = [];
            this.delegatorsByFullScope.set(fullScope, delegators);
        }
        delegators[delegators.length] = eventDelegator;
    };
    IsolateModule.prototype.reset = function () {
        this.elementsByFullScope.clear();
        this.delegatorsByFullScope.clear();
        this.fullScopesBeingUpdated = [];
    };
    IsolateModule.prototype.createModule = function () {
        var self = this;
        return {
            create: function (oldVNode, vNode) {
                var _a = oldVNode.data, oldData = _a === void 0 ? {} : _a;
                var elm = vNode.elm, _b = vNode.data, data = _b === void 0 ? {} : _b;
                var oldFullScope = oldData.isolate || '';
                var fullScope = data.isolate || '';
                // Update data structures with the newly-created element
                if (fullScope) {
                    self.fullScopesBeingUpdated.push(fullScope);
                    if (oldFullScope) {
                        self.elementsByFullScope.delete(oldFullScope);
                    }
                    self.elementsByFullScope.set(fullScope, elm);
                    // Update delegators for this scope
                    var delegators = self.delegatorsByFullScope.get(fullScope);
                    if (delegators) {
                        var len = delegators.length;
                        for (var i = 0; i < len; ++i) {
                            delegators[i].updateOrigin(elm);
                        }
                    }
                }
                if (oldFullScope && !fullScope) {
                    self.elementsByFullScope.delete(fullScope);
                }
            },
            update: function (oldVNode, vNode) {
                var _a = oldVNode.data, oldData = _a === void 0 ? {} : _a;
                var elm = vNode.elm, _b = vNode.data, data = _b === void 0 ? {} : _b;
                var oldFullScope = oldData.isolate || '';
                var fullScope = data.isolate || '';
                // Same element, but different scope, so update the data structures
                if (fullScope && fullScope !== oldFullScope) {
                    if (oldFullScope) {
                        self.elementsByFullScope.delete(oldFullScope);
                    }
                    self.elementsByFullScope.set(fullScope, elm);
                    var delegators = self.delegatorsByFullScope.get(oldFullScope);
                    if (delegators) {
                        self.delegatorsByFullScope.delete(oldFullScope);
                        self.delegatorsByFullScope.set(fullScope, delegators);
                    }
                }
                // Same element, but lost the scope, so update the data structures
                if (oldFullScope && !fullScope) {
                    self.elementsByFullScope.delete(oldFullScope);
                    self.delegatorsByFullScope.delete(oldFullScope);
                }
            },
            destroy: function (vNode) {
                self.vnodesBeingRemoved.push(vNode);
            },
            remove: function (vNode, cb) {
                self.vnodesBeingRemoved.push(vNode);
                cb();
            },
            post: function () {
                var vnodesBeingRemoved = self.vnodesBeingRemoved;
                for (var i = vnodesBeingRemoved.length - 1; i >= 0; i--) {
                    self.cleanupVNode(vnodesBeingRemoved[i]);
                }
                self.vnodesBeingRemoved = [];
                self.fullScopesBeingUpdated = [];
            },
        };
    };
    return IsolateModule;
}());
exports.IsolateModule = IsolateModule;

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var adapt_1 = require("@cycle/run/lib/adapt");
var DocumentDOMSource_1 = require("./DocumentDOMSource");
var BodyDOMSource_1 = require("./BodyDOMSource");
var ElementFinder_1 = require("./ElementFinder");
var fromEvent_1 = require("./fromEvent");
var isolate_1 = require("./isolate");
var EventDelegator_1 = require("./EventDelegator");
var utils_1 = require("./utils");
var eventTypesThatDontBubble = [
    "blur",
    "canplay",
    "canplaythrough",
    "durationchange",
    "emptied",
    "ended",
    "focus",
    "load",
    "loadeddata",
    "loadedmetadata",
    "mouseenter",
    "mouseleave",
    "pause",
    "play",
    "playing",
    "ratechange",
    "reset",
    "scroll",
    "seeked",
    "seeking",
    "stalled",
    "submit",
    "suspend",
    "timeupdate",
    "unload",
    "volumechange",
    "waiting",
];
function determineUseCapture(eventType, options) {
    var result = false;
    if (typeof options.useCapture === 'boolean') {
        result = options.useCapture;
    }
    if (eventTypesThatDontBubble.indexOf(eventType) !== -1) {
        result = true;
    }
    return result;
}
function filterBasedOnIsolation(domSource, fullScope) {
    return function filterBasedOnIsolationOperator(rootElement$) {
        var initialState = {
            wasIsolated: false,
            shouldPass: false,
            element: null,
        };
        return rootElement$
            .fold(function checkIfShouldPass(state, element) {
            var isIsolated = !!domSource._isolateModule.getElement(fullScope);
            state.shouldPass = isIsolated && !state.wasIsolated;
            state.wasIsolated = isIsolated;
            state.element = element;
            return state;
        }, initialState)
            .drop(1)
            .filter(function (s) { return s.shouldPass; })
            .map(function (s) { return s.element; });
    };
}
var MainDOMSource = /** @class */ (function () {
    function MainDOMSource(_rootElement$, _sanitation$, _namespace, _isolateModule, _delegators, _name) {
        if (_namespace === void 0) { _namespace = []; }
        var _this = this;
        this._rootElement$ = _rootElement$;
        this._sanitation$ = _sanitation$;
        this._namespace = _namespace;
        this._isolateModule = _isolateModule;
        this._delegators = _delegators;
        this._name = _name;
        this.isolateSource = isolate_1.isolateSource;
        this.isolateSink = function (sink, scope) {
            if (scope === ':root') {
                return sink;
            }
            else if (utils_1.isClassOrId(scope)) {
                return isolate_1.siblingIsolateSink(sink, scope);
            }
            else {
                var prevFullScope = utils_1.getFullScope(_this._namespace);
                var nextFullScope = [prevFullScope, scope].filter(function (x) { return !!x; }).join('-');
                return isolate_1.totalIsolateSink(sink, nextFullScope);
            }
        };
    }
    MainDOMSource.prototype.elements = function () {
        var output$;
        if (this._namespace.length === 0) {
            output$ = this._rootElement$.map(function (x) { return [x]; });
        }
        else {
            var elementFinder_1 = new ElementFinder_1.ElementFinder(this._namespace, this._isolateModule);
            output$ = this._rootElement$.map(function (el) { return elementFinder_1.call(el); });
        }
        var out = adapt_1.adapt(output$.remember());
        out._isCycleSource = this._name;
        return out;
    };
    MainDOMSource.prototype.element = function () {
        var output$ = this.elements()
            .filter(function (arr) { return arr.length > 0; })
            .map(function (arr) { return arr[0]; })
            .remember();
        var out = adapt_1.adapt(output$);
        out._isCycleSource = this._name;
        return out;
    };
    Object.defineProperty(MainDOMSource.prototype, "namespace", {
        get: function () {
            return this._namespace;
        },
        enumerable: true,
        configurable: true
    });
    MainDOMSource.prototype.select = function (selector) {
        if (typeof selector !== 'string') {
            throw new Error("DOM driver's select() expects the argument to be a " +
                "string as a CSS selector");
        }
        if (selector === 'document') {
            return new DocumentDOMSource_1.DocumentDOMSource(this._name);
        }
        if (selector === 'body') {
            return new BodyDOMSource_1.BodyDOMSource(this._name);
        }
        var trimmedSelector = selector.trim();
        var childNamespace = trimmedSelector === ":root"
            ? this._namespace
            : this._namespace.concat(trimmedSelector);
        return new MainDOMSource(this._rootElement$, this._sanitation$, childNamespace, this._isolateModule, this._delegators, this._name);
    };
    MainDOMSource.prototype.events = function (eventType, options) {
        if (options === void 0) { options = {}; }
        if (typeof eventType !== "string") {
            throw new Error("DOM driver's events() expects argument to be a " +
                "string representing the event type to listen for.");
        }
        var useCapture = determineUseCapture(eventType, options);
        var namespace = this._namespace;
        var fullScope = utils_1.getFullScope(namespace);
        var keyParts = [eventType, useCapture];
        if (fullScope) {
            keyParts.push(fullScope);
        }
        var key = keyParts.join('~');
        var domSource = this;
        var rootElement$;
        if (fullScope) {
            rootElement$ = this._rootElement$.compose(filterBasedOnIsolation(domSource, fullScope));
        }
        else {
            rootElement$ = this._rootElement$.take(2);
        }
        var event$ = rootElement$
            .map(function setupEventDelegatorOnTopElement(rootElement) {
            // Event listener just for the root element
            if (!namespace || namespace.length === 0) {
                return fromEvent_1.fromEvent(rootElement, eventType, useCapture, options.preventDefault);
            }
            // Event listener on the origin element as an EventDelegator
            var delegators = domSource._delegators;
            var origin = domSource._isolateModule.getElement(fullScope) || rootElement;
            var delegator;
            if (delegators.has(key)) {
                delegator = delegators.get(key);
                delegator.updateOrigin(origin);
            }
            else {
                delegator = new EventDelegator_1.EventDelegator(origin, eventType, useCapture, domSource._isolateModule, options.preventDefault);
                delegators.set(key, delegator);
            }
            if (fullScope) {
                domSource._isolateModule.addEventDelegator(fullScope, delegator);
            }
            var subject = delegator.createDestination(namespace);
            return subject;
        })
            .flatten();
        var out = adapt_1.adapt(event$);
        out._isCycleSource = domSource._name;
        return out;
    };
    MainDOMSource.prototype.dispose = function () {
        this._sanitation$.shamefullySendNext(null);
        this._isolateModule.reset();
    };
    return MainDOMSource;
}());
exports.MainDOMSource = MainDOMSource;

},{"./BodyDOMSource":1,"./DocumentDOMSource":2,"./ElementFinder":3,"./EventDelegator":4,"./fromEvent":9,"./isolate":12,"./utils":18,"@cycle/run/lib/adapt":19}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ScopeChecker = /** @class */ (function () {
    function ScopeChecker(fullScope, isolateModule) {
        this.fullScope = fullScope;
        this.isolateModule = isolateModule;
    }
    /**
     * Checks whether the given element is *directly* in the scope of this
     * scope checker. Being contained *indirectly* through other scopes
     * is not valid. This is crucial for implementing parent-child isolation,
     * so that the parent selectors don't search inside a child scope.
     */
    ScopeChecker.prototype.isDirectlyInScope = function (leaf) {
        for (var el = leaf; el; el = el.parentElement) {
            var fullScope = this.isolateModule.getFullScope(el);
            if (fullScope && fullScope !== this.fullScope) {
                return false;
            }
            if (fullScope) {
                return true;
            }
        }
        return true;
    };
    return ScopeChecker;
}());
exports.ScopeChecker = ScopeChecker;

},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("snabbdom/vnode");
var h_1 = require("snabbdom/h");
var snabbdom_selector_1 = require("snabbdom-selector");
var utils_1 = require("./utils");
var VNodeWrapper = /** @class */ (function () {
    function VNodeWrapper(rootElement) {
        this.rootElement = rootElement;
    }
    VNodeWrapper.prototype.call = function (vnode) {
        if (utils_1.isDocFrag(this.rootElement)) {
            return this.wrapDocFrag(vnode === null ? [] : [vnode]);
        }
        if (vnode === null) {
            return this.wrap([]);
        }
        var _a = snabbdom_selector_1.selectorParser(vnode), selTagName = _a.tagName, selId = _a.id;
        var vNodeClassName = snabbdom_selector_1.classNameFromVNode(vnode);
        var vNodeData = vnode.data || {};
        var vNodeDataProps = vNodeData.props || {};
        var _b = vNodeDataProps.id, vNodeId = _b === void 0 ? selId : _b;
        var isVNodeAndRootElementIdentical = typeof vNodeId === 'string' &&
            vNodeId.toUpperCase() === this.rootElement.id.toUpperCase() &&
            selTagName.toUpperCase() === this.rootElement.tagName.toUpperCase() &&
            vNodeClassName.toUpperCase() === this.rootElement.className.toUpperCase();
        if (isVNodeAndRootElementIdentical) {
            return vnode;
        }
        return this.wrap([vnode]);
    };
    VNodeWrapper.prototype.wrapDocFrag = function (children) {
        return vnode_1.vnode('', {}, children, undefined, this.rootElement);
    };
    VNodeWrapper.prototype.wrap = function (children) {
        var _a = this.rootElement, tagName = _a.tagName, id = _a.id, className = _a.className;
        var selId = id ? "#" + id : '';
        var selClass = className ? "." + className.split(" ").join(".") : '';
        return h_1.h("" + tagName.toLowerCase() + selId + selClass, {}, children);
    };
    return VNodeWrapper;
}());
exports.VNodeWrapper = VNodeWrapper;

},{"./utils":18,"snabbdom-selector":119,"snabbdom/h":123,"snabbdom/vnode":134}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
function fromEvent(element, eventName, useCapture, preventDefault) {
    if (useCapture === void 0) { useCapture = false; }
    if (preventDefault === void 0) { preventDefault = false; }
    return xstream_1.Stream.create({
        element: element,
        next: null,
        start: function start(listener) {
            if (preventDefault) {
                this.next = function next(event) {
                    preventDefaultConditional(event, preventDefault);
                    listener.next(event);
                };
            }
            else {
                this.next = function next(event) {
                    listener.next(event);
                };
            }
            this.element.addEventListener(eventName, this.next, useCapture);
        },
        stop: function stop() {
            this.element.removeEventListener(eventName, this.next, useCapture);
        },
    });
}
exports.fromEvent = fromEvent;
function matchObject(matcher, obj) {
    var keys = Object.keys(matcher);
    var n = keys.length;
    for (var i = 0; i < n; i++) {
        var k = keys[i];
        if (typeof matcher[k] === 'object' && typeof obj[k] === 'object') {
            if (!matchObject(matcher[k], obj[k])) {
                return false;
            }
        }
        else if (matcher[k] !== obj[k]) {
            return false;
        }
    }
    return true;
}
function preventDefaultConditional(event, preventDefault) {
    if (preventDefault) {
        if (typeof preventDefault === 'boolean') {
            event.preventDefault();
        }
        else if (typeof preventDefault === 'function') {
            if (preventDefault(event)) {
                event.preventDefault();
            }
        }
        else if (typeof preventDefault === 'object') {
            if (matchObject(preventDefault, event)) {
                event.preventDefault();
            }
        }
        else {
            throw new Error('preventDefault has to be either a boolean, predicate function or object');
        }
    }
}
exports.preventDefaultConditional = preventDefaultConditional;

},{"xstream":145}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:max-file-line-count
var h_1 = require("snabbdom/h");
function isValidString(param) {
    return typeof param === 'string' && param.length > 0;
}
function isSelector(param) {
    return isValidString(param) && (param[0] === '.' || param[0] === '#');
}
function createTagFunction(tagName) {
    return function hyperscript(a, b, c) {
        var hasA = typeof a !== 'undefined';
        var hasB = typeof b !== 'undefined';
        var hasC = typeof c !== 'undefined';
        if (isSelector(a)) {
            if (hasB && hasC) {
                return h_1.h(tagName + a, b, c);
            }
            else if (hasB) {
                return h_1.h(tagName + a, b);
            }
            else {
                return h_1.h(tagName + a, {});
            }
        }
        else if (hasC) {
            return h_1.h(tagName + a, b, c);
        }
        else if (hasB) {
            return h_1.h(tagName, a, b);
        }
        else if (hasA) {
            return h_1.h(tagName, a);
        }
        else {
            return h_1.h(tagName, {});
        }
    };
}
var SVG_TAG_NAMES = [
    'a',
    'altGlyph',
    'altGlyphDef',
    'altGlyphItem',
    'animate',
    'animateColor',
    'animateMotion',
    'animateTransform',
    'circle',
    'clipPath',
    'colorProfile',
    'cursor',
    'defs',
    'desc',
    'ellipse',
    'feBlend',
    'feColorMatrix',
    'feComponentTransfer',
    'feComposite',
    'feConvolveMatrix',
    'feDiffuseLighting',
    'feDisplacementMap',
    'feDistantLight',
    'feFlood',
    'feFuncA',
    'feFuncB',
    'feFuncG',
    'feFuncR',
    'feGaussianBlur',
    'feImage',
    'feMerge',
    'feMergeNode',
    'feMorphology',
    'feOffset',
    'fePointLight',
    'feSpecularLighting',
    'feSpotlight',
    'feTile',
    'feTurbulence',
    'filter',
    'font',
    'fontFace',
    'fontFaceFormat',
    'fontFaceName',
    'fontFaceSrc',
    'fontFaceUri',
    'foreignObject',
    'g',
    'glyph',
    'glyphRef',
    'hkern',
    'image',
    'line',
    'linearGradient',
    'marker',
    'mask',
    'metadata',
    'missingGlyph',
    'mpath',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'radialGradient',
    'rect',
    'script',
    'set',
    'stop',
    'style',
    'switch',
    'symbol',
    'text',
    'textPath',
    'title',
    'tref',
    'tspan',
    'use',
    'view',
    'vkern',
];
var svg = createTagFunction('svg');
SVG_TAG_NAMES.forEach(function (tag) {
    svg[tag] = createTagFunction(tag);
});
var TAG_NAMES = [
    'a',
    'abbr',
    'address',
    'area',
    'article',
    'aside',
    'audio',
    'b',
    'base',
    'bdi',
    'bdo',
    'blockquote',
    'body',
    'br',
    'button',
    'canvas',
    'caption',
    'cite',
    'code',
    'col',
    'colgroup',
    'dd',
    'del',
    'dfn',
    'dir',
    'div',
    'dl',
    'dt',
    'em',
    'embed',
    'fieldset',
    'figcaption',
    'figure',
    'footer',
    'form',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'head',
    'header',
    'hgroup',
    'hr',
    'html',
    'i',
    'iframe',
    'img',
    'input',
    'ins',
    'kbd',
    'keygen',
    'label',
    'legend',
    'li',
    'link',
    'main',
    'map',
    'mark',
    'menu',
    'meta',
    'nav',
    'noscript',
    'object',
    'ol',
    'optgroup',
    'option',
    'p',
    'param',
    'pre',
    'progress',
    'q',
    'rp',
    'rt',
    'ruby',
    's',
    'samp',
    'script',
    'section',
    'select',
    'small',
    'source',
    'span',
    'strong',
    'style',
    'sub',
    'sup',
    'table',
    'tbody',
    'td',
    'textarea',
    'tfoot',
    'th',
    'thead',
    'time',
    'title',
    'tr',
    'u',
    'ul',
    'video',
];
var exported = {
    SVG_TAG_NAMES: SVG_TAG_NAMES,
    TAG_NAMES: TAG_NAMES,
    svg: svg,
    isSelector: isSelector,
    createTagFunction: createTagFunction,
};
TAG_NAMES.forEach(function (n) {
    exported[n] = createTagFunction(n);
});
exports.default = exported;

},{"snabbdom/h":123}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var thunk_1 = require("./thunk");
exports.thunk = thunk_1.thunk;
var MainDOMSource_1 = require("./MainDOMSource");
exports.MainDOMSource = MainDOMSource_1.MainDOMSource;
/**
 * A factory for the DOM driver function.
 *
 * Takes a `container` to define the target on the existing DOM which this
 * driver will operate on, and an `options` object as the second argument. The
 * input to this driver is a stream of virtual DOM objects, or in other words,
 * Snabbdom "VNode" objects. The output of this driver is a "DOMSource": a
 * collection of Observables queried with the methods `select()` and `events()`.
 *
 * **`DOMSource.select(selector)`** returns a new DOMSource with scope
 * restricted to the element(s) that matches the CSS `selector` given. To select
 * the page's `document`, use `.select('document')`. To select the container
 * element for this app, use `.select(':root')`.
 *
 * **`DOMSource.events(eventType, options)`** returns a stream of events of
 * `eventType` happening on the elements that match the current DOMSource. The
 * event object contains the `ownerTarget` property that behaves exactly like
 * `currentTarget`. The reason for this is that some browsers doesn't allow
 * `currentTarget` property to be mutated, hence a new property is created. The
 * returned stream is an *xstream* Stream if you use `@cycle/xstream-run` to run
 * your app with this driver, or it is an RxJS Observable if you use
 * `@cycle/rxjs-run`, and so forth.
 *
 * **options for DOMSource.events**
 *
 * The `options` parameter on `DOMSource.events(eventType, options)` is an
 * (optional) object with two optional fields: `useCapture` and
 * `preventDefault`.
 *
 * `useCapture` is by default `false`, except it is `true` for event types that
 * do not bubble. Read more here
 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
 * about the `useCapture` and its purpose.
 *
 * `preventDefault` is by default `false`, and indicates to the driver whether
 * `event.preventDefault()` should be invoked. This option can be configured in
 * three ways:
 *
 * - `{preventDefault: boolean}` to invoke preventDefault if `true`, and not
 * invoke otherwise.
 * - `{preventDefault: (ev: Event) => boolean}` for conditional invocation.
 * - `{preventDefault: NestedObject}` uses an object to be recursively compared
 * to the `Event` object. `preventDefault` is invoked when all properties on the
 * nested object match with the properties on the event object.
 *
 * Here are some examples:
 * ```typescript
 * // always prevent default
 * DOMSource.select('input').events('keydown', {
 *   preventDefault: true
 * })
 *
 * // prevent default only when `ENTER` is pressed
 * DOMSource.select('input').events('keydown', {
 *   preventDefault: e => e.keyCode === 13
 * })
 *
 * // prevent defualt when `ENTER` is pressed AND target.value is 'HELLO'
 * DOMSource.select('input').events('keydown', {
 *   preventDefault: { keyCode: 13, ownerTarget: { value: 'HELLO' } }
 * });
 * ```
 *
 * **`DOMSource.elements()`** returns a stream of arrays containing the DOM
 * elements that match the selectors in the DOMSource (e.g. from previous
 * `select(x)` calls).
 *
 * **`DOMSource.element()`** returns a stream of DOM elements. Notice that this
 * is the singular version of `.elements()`, so the stream will emit an element,
 * not an array. If there is no element that matches the selected DOMSource,
 * then the returned stream will not emit anything.
 *
 * @param {(String|HTMLElement)} container the DOM selector for the element
 * (or the element itself) to contain the rendering of the VTrees.
 * @param {DOMDriverOptions} options an object with two optional properties:
 *
 *   - `modules: array` overrides `@cycle/dom`'s default Snabbdom modules as
 *     as defined in [`src/modules.ts`](./src/modules.ts).
 * @return {Function} the DOM driver function. The function expects a stream of
 * VNode as input, and outputs the DOMSource object.
 * @function makeDOMDriver
 */
var makeDOMDriver_1 = require("./makeDOMDriver");
exports.makeDOMDriver = makeDOMDriver_1.makeDOMDriver;
/**
 * A factory function to create mocked DOMSource objects, for testing purposes.
 *
 * Takes a `mockConfig` object as argument, and returns
 * a DOMSource that can be given to any Cycle.js app that expects a DOMSource in
 * the sources, for testing.
 *
 * The `mockConfig` parameter is an object specifying selectors, eventTypes and
 * their streams. Example:
 *
 * ```js
 * const domSource = mockDOMSource({
 *   '.foo': {
 *     'click': xs.of({target: {}}),
 *     'mouseover': xs.of({target: {}}),
 *   },
 *   '.bar': {
 *     'scroll': xs.of({target: {}}),
 *     elements: xs.of({tagName: 'div'}),
 *   }
 * });
 *
 * // Usage
 * const click$ = domSource.select('.foo').events('click');
 * const element$ = domSource.select('.bar').elements();
 * ```
 *
 * The mocked DOM Source supports isolation. It has the functions `isolateSink`
 * and `isolateSource` attached to it, and performs simple isolation using
 * classNames. *isolateSink* with scope `foo` will append the class `___foo` to
 * the stream of virtual DOM nodes, and *isolateSource* with scope `foo` will
 * perform a conventional `mockedDOMSource.select('.__foo')` call.
 *
 * @param {Object} mockConfig an object where keys are selector strings
 * and values are objects. Those nested objects have `eventType` strings as keys
 * and values are streams you created.
 * @return {Object} fake DOM source object, with an API containing `select()`
 * and `events()` and `elements()` which can be used just like the DOM Driver's
 * DOMSource.
 *
 * @function mockDOMSource
 */
var mockDOMSource_1 = require("./mockDOMSource");
exports.mockDOMSource = mockDOMSource_1.mockDOMSource;
exports.MockedDOMSource = mockDOMSource_1.MockedDOMSource;
/**
 * The hyperscript function `h()` is a function to create virtual DOM objects,
 * also known as VNodes. Call
 *
 * ```js
 * h('div.myClass', {style: {color: 'red'}}, [])
 * ```
 *
 * to create a VNode that represents a `DIV` element with className `myClass`,
 * styled with red color, and no children because the `[]` array was passed. The
 * API is `h(tagOrSelector, optionalData, optionalChildrenOrText)`.
 *
 * However, usually you should use "hyperscript helpers", which are shortcut
 * functions based on hyperscript. There is one hyperscript helper function for
 * each DOM tagName, such as `h1()`, `h2()`, `div()`, `span()`, `label()`,
 * `input()`. For instance, the previous example could have been written
 * as:
 *
 * ```js
 * div('.myClass', {style: {color: 'red'}}, [])
 * ```
 *
 * There are also SVG helper functions, which apply the appropriate SVG
 * namespace to the resulting elements. `svg()` function creates the top-most
 * SVG element, and `svg.g`, `svg.polygon`, `svg.circle`, `svg.path` are for
 * SVG-specific child elements. Example:
 *
 * ```js
 * svg({attrs: {width: 150, height: 150}}, [
 *   svg.polygon({
 *     attrs: {
 *       class: 'triangle',
 *       points: '20 0 20 150 150 20'
 *     }
 *   })
 * ])
 * ```
 *
 * @function h
 */
var h_1 = require("snabbdom/h");
exports.h = h_1.h;
var hyperscript_helpers_1 = require("./hyperscript-helpers");
exports.svg = hyperscript_helpers_1.default.svg;
exports.a = hyperscript_helpers_1.default.a;
exports.abbr = hyperscript_helpers_1.default.abbr;
exports.address = hyperscript_helpers_1.default.address;
exports.area = hyperscript_helpers_1.default.area;
exports.article = hyperscript_helpers_1.default.article;
exports.aside = hyperscript_helpers_1.default.aside;
exports.audio = hyperscript_helpers_1.default.audio;
exports.b = hyperscript_helpers_1.default.b;
exports.base = hyperscript_helpers_1.default.base;
exports.bdi = hyperscript_helpers_1.default.bdi;
exports.bdo = hyperscript_helpers_1.default.bdo;
exports.blockquote = hyperscript_helpers_1.default.blockquote;
exports.body = hyperscript_helpers_1.default.body;
exports.br = hyperscript_helpers_1.default.br;
exports.button = hyperscript_helpers_1.default.button;
exports.canvas = hyperscript_helpers_1.default.canvas;
exports.caption = hyperscript_helpers_1.default.caption;
exports.cite = hyperscript_helpers_1.default.cite;
exports.code = hyperscript_helpers_1.default.code;
exports.col = hyperscript_helpers_1.default.col;
exports.colgroup = hyperscript_helpers_1.default.colgroup;
exports.dd = hyperscript_helpers_1.default.dd;
exports.del = hyperscript_helpers_1.default.del;
exports.dfn = hyperscript_helpers_1.default.dfn;
exports.dir = hyperscript_helpers_1.default.dir;
exports.div = hyperscript_helpers_1.default.div;
exports.dl = hyperscript_helpers_1.default.dl;
exports.dt = hyperscript_helpers_1.default.dt;
exports.em = hyperscript_helpers_1.default.em;
exports.embed = hyperscript_helpers_1.default.embed;
exports.fieldset = hyperscript_helpers_1.default.fieldset;
exports.figcaption = hyperscript_helpers_1.default.figcaption;
exports.figure = hyperscript_helpers_1.default.figure;
exports.footer = hyperscript_helpers_1.default.footer;
exports.form = hyperscript_helpers_1.default.form;
exports.h1 = hyperscript_helpers_1.default.h1;
exports.h2 = hyperscript_helpers_1.default.h2;
exports.h3 = hyperscript_helpers_1.default.h3;
exports.h4 = hyperscript_helpers_1.default.h4;
exports.h5 = hyperscript_helpers_1.default.h5;
exports.h6 = hyperscript_helpers_1.default.h6;
exports.head = hyperscript_helpers_1.default.head;
exports.header = hyperscript_helpers_1.default.header;
exports.hgroup = hyperscript_helpers_1.default.hgroup;
exports.hr = hyperscript_helpers_1.default.hr;
exports.html = hyperscript_helpers_1.default.html;
exports.i = hyperscript_helpers_1.default.i;
exports.iframe = hyperscript_helpers_1.default.iframe;
exports.img = hyperscript_helpers_1.default.img;
exports.input = hyperscript_helpers_1.default.input;
exports.ins = hyperscript_helpers_1.default.ins;
exports.kbd = hyperscript_helpers_1.default.kbd;
exports.keygen = hyperscript_helpers_1.default.keygen;
exports.label = hyperscript_helpers_1.default.label;
exports.legend = hyperscript_helpers_1.default.legend;
exports.li = hyperscript_helpers_1.default.li;
exports.link = hyperscript_helpers_1.default.link;
exports.main = hyperscript_helpers_1.default.main;
exports.map = hyperscript_helpers_1.default.map;
exports.mark = hyperscript_helpers_1.default.mark;
exports.menu = hyperscript_helpers_1.default.menu;
exports.meta = hyperscript_helpers_1.default.meta;
exports.nav = hyperscript_helpers_1.default.nav;
exports.noscript = hyperscript_helpers_1.default.noscript;
exports.object = hyperscript_helpers_1.default.object;
exports.ol = hyperscript_helpers_1.default.ol;
exports.optgroup = hyperscript_helpers_1.default.optgroup;
exports.option = hyperscript_helpers_1.default.option;
exports.p = hyperscript_helpers_1.default.p;
exports.param = hyperscript_helpers_1.default.param;
exports.pre = hyperscript_helpers_1.default.pre;
exports.progress = hyperscript_helpers_1.default.progress;
exports.q = hyperscript_helpers_1.default.q;
exports.rp = hyperscript_helpers_1.default.rp;
exports.rt = hyperscript_helpers_1.default.rt;
exports.ruby = hyperscript_helpers_1.default.ruby;
exports.s = hyperscript_helpers_1.default.s;
exports.samp = hyperscript_helpers_1.default.samp;
exports.script = hyperscript_helpers_1.default.script;
exports.section = hyperscript_helpers_1.default.section;
exports.select = hyperscript_helpers_1.default.select;
exports.small = hyperscript_helpers_1.default.small;
exports.source = hyperscript_helpers_1.default.source;
exports.span = hyperscript_helpers_1.default.span;
exports.strong = hyperscript_helpers_1.default.strong;
exports.style = hyperscript_helpers_1.default.style;
exports.sub = hyperscript_helpers_1.default.sub;
exports.sup = hyperscript_helpers_1.default.sup;
exports.table = hyperscript_helpers_1.default.table;
exports.tbody = hyperscript_helpers_1.default.tbody;
exports.td = hyperscript_helpers_1.default.td;
exports.textarea = hyperscript_helpers_1.default.textarea;
exports.tfoot = hyperscript_helpers_1.default.tfoot;
exports.th = hyperscript_helpers_1.default.th;
exports.thead = hyperscript_helpers_1.default.thead;
exports.title = hyperscript_helpers_1.default.title;
exports.tr = hyperscript_helpers_1.default.tr;
exports.u = hyperscript_helpers_1.default.u;
exports.ul = hyperscript_helpers_1.default.ul;
exports.video = hyperscript_helpers_1.default.video;

},{"./MainDOMSource":6,"./hyperscript-helpers":10,"./makeDOMDriver":13,"./mockDOMSource":15,"./thunk":17,"snabbdom/h":123}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("snabbdom/vnode");
var utils_1 = require("./utils");
function totalIsolateSource(source, scope) {
    return source.select(utils_1.SCOPE_PREFIX + scope);
}
function siblingIsolateSource(source, scope) {
    return source.select(scope);
}
function isolateSource(source, scope) {
    if (scope === ':root') {
        return source;
    }
    else if (utils_1.isClassOrId(scope)) {
        return siblingIsolateSource(source, scope);
    }
    else {
        return totalIsolateSource(source, scope);
    }
}
exports.isolateSource = isolateSource;
function siblingIsolateSink(sink, scope) {
    return sink.map(function (node) {
        return node
            ? vnode_1.vnode(node.sel + scope, node.data, node.children, node.text, node.elm)
            : node;
    });
}
exports.siblingIsolateSink = siblingIsolateSink;
function totalIsolateSink(sink, fullScope) {
    return sink.map(function (node) {
        if (!node) {
            return node;
        }
        // Ignore if already had up-to-date full scope in vnode.data.isolate
        if (node.data && node.data.isolate) {
            var isolateData = node.data.isolate;
            var prevFullScopeNum = isolateData.replace(/(cycle|\-)/g, '');
            var fullScopeNum = fullScope.replace(/(cycle|\-)/g, '');
            if (isNaN(parseInt(prevFullScopeNum)) ||
                isNaN(parseInt(fullScopeNum)) ||
                prevFullScopeNum > fullScopeNum) {
                // > is lexicographic string comparison
                return node;
            }
        }
        // Insert up-to-date full scope in vnode.data.isolate, and also a key if needed
        node.data = node.data || {};
        node.data.isolate = fullScope;
        if (typeof node.key === 'undefined') {
            node.key = utils_1.SCOPE_PREFIX + fullScope;
        }
        return node;
    });
}
exports.totalIsolateSink = totalIsolateSink;

},{"./utils":18,"snabbdom/vnode":134}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var snabbdom_1 = require("snabbdom");
var xstream_1 = require("xstream");
var sampleCombine_1 = require("xstream/extra/sampleCombine");
var MainDOMSource_1 = require("./MainDOMSource");
var tovnode_1 = require("snabbdom/tovnode");
var VNodeWrapper_1 = require("./VNodeWrapper");
var utils_1 = require("./utils");
var modules_1 = require("./modules");
var IsolateModule_1 = require("./IsolateModule");
require("es6-map/implement"); // tslint:disable-line
function makeDOMDriverInputGuard(modules) {
    if (!Array.isArray(modules)) {
        throw new Error("Optional modules option must be " + "an array for snabbdom modules");
    }
}
function domDriverInputGuard(view$) {
    if (!view$ ||
        typeof view$.addListener !== "function" ||
        typeof view$.fold !== "function") {
        throw new Error("The DOM driver function expects as input a Stream of " +
            "virtual DOM elements");
    }
}
function dropCompletion(input) {
    return xstream_1.default.merge(input, xstream_1.default.never());
}
function unwrapElementFromVNode(vnode) {
    return vnode.elm;
}
function reportSnabbdomError(err) {
    (console.error || console.log)(err);
}
function makeDOMReady$() {
    return xstream_1.default.create({
        start: function (lis) {
            if (document.readyState === 'loading') {
                document.addEventListener('readystatechange', function () {
                    var state = document.readyState;
                    if (state === 'interactive' || state === 'complete') {
                        lis.next(null);
                        lis.complete();
                    }
                });
            }
            else {
                lis.next(null);
                lis.complete();
            }
        },
        stop: function () { },
    });
}
function makeDOMDriver(container, options) {
    if (!options) {
        options = {};
    }
    utils_1.checkValidContainer(container);
    var modules = options.modules || modules_1.default;
    makeDOMDriverInputGuard(modules);
    var isolateModule = new IsolateModule_1.IsolateModule();
    var patch = snabbdom_1.init([isolateModule.createModule()].concat(modules));
    var domReady$ = makeDOMReady$();
    var vnodeWrapper;
    var delegators = new Map();
    var mutationObserver;
    var mutationConfirmed$ = xstream_1.default.create({
        start: function (listener) {
            mutationObserver = new MutationObserver(function () { return listener.next(null); });
        },
        stop: function () {
            mutationObserver.disconnect();
        },
    });
    function DOMDriver(vnode$, name) {
        if (name === void 0) { name = 'DOM'; }
        domDriverInputGuard(vnode$);
        var sanitation$ = xstream_1.default.create();
        var firstRoot$ = domReady$.map(function () {
            var firstRoot = utils_1.getValidNode(container) || document.body;
            vnodeWrapper = new VNodeWrapper_1.VNodeWrapper(firstRoot);
            return firstRoot;
        });
        // We need to subscribe to the sink (i.e. vnode$) synchronously inside this
        // driver, and not later in the map().flatten() because this sink is in
        // reality a SinkProxy from @cycle/run, and we don't want to miss the first
        // emission when the main() is connected to the drivers.
        // Read more in issue #739.
        var rememberedVNode$ = vnode$.remember();
        rememberedVNode$.addListener({});
        // The mutation observer internal to mutationConfirmed$ should
        // exist before elementAfterPatch$ calls mutationObserver.observe()
        mutationConfirmed$.addListener({});
        var elementAfterPatch$ = firstRoot$
            .map(function (firstRoot) {
            return xstream_1.default
                .merge(rememberedVNode$.endWhen(sanitation$), sanitation$)
                .map(function (vnode) { return vnodeWrapper.call(vnode); })
                .fold(patch, tovnode_1.toVNode(firstRoot))
                .drop(1)
                .map(unwrapElementFromVNode)
                .startWith(firstRoot)
                .map(function (el) {
                mutationObserver.observe(el, {
                    childList: true,
                    attributes: true,
                    characterData: true,
                    subtree: true,
                    attributeOldValue: true,
                    characterDataOldValue: true,
                });
                return el;
            })
                .compose(dropCompletion);
        })
            .flatten();
        var rootElement$ = mutationConfirmed$
            .startWith(null)
            .endWhen(sanitation$)
            .compose(sampleCombine_1.default(elementAfterPatch$))
            .map(function (arr) { return arr[1]; })
            .remember();
        // Start the snabbdom patching, over time
        rootElement$.addListener({ error: reportSnabbdomError });
        return new MainDOMSource_1.MainDOMSource(rootElement$, sanitation$, [], isolateModule, delegators, name);
    }
    return DOMDriver;
}
exports.makeDOMDriver = makeDOMDriver;

},{"./IsolateModule":5,"./MainDOMSource":6,"./VNodeWrapper":8,"./modules":16,"./utils":18,"es6-map/implement":81,"snabbdom":131,"snabbdom/tovnode":133,"xstream":145,"xstream/extra/sampleCombine":144}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function createMatchesSelector() {
    var vendor;
    try {
        var proto = Element.prototype;
        vendor =
            proto.matches ||
                proto.matchesSelector ||
                proto.webkitMatchesSelector ||
                proto.mozMatchesSelector ||
                proto.msMatchesSelector ||
                proto.oMatchesSelector;
    }
    catch (err) {
        vendor = null;
    }
    return function match(elem, selector) {
        if (selector.length === 0) {
            return true;
        }
        if (vendor) {
            return vendor.call(elem, selector);
        }
        var nodes = elem.parentNode.querySelectorAll(selector);
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i] === elem) {
                return true;
            }
        }
        return false;
    };
}
exports.matchesSelector = createMatchesSelector();

},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
var adapt_1 = require("@cycle/run/lib/adapt");
var SCOPE_PREFIX = '___';
var MockedDOMSource = /** @class */ (function () {
    function MockedDOMSource(_mockConfig) {
        this._mockConfig = _mockConfig;
        if (_mockConfig['elements']) {
            this._elements = _mockConfig['elements'];
        }
        else {
            this._elements = adapt_1.adapt(xstream_1.default.empty());
        }
    }
    MockedDOMSource.prototype.elements = function () {
        var out = this
            ._elements;
        out._isCycleSource = 'MockedDOM';
        return out;
    };
    MockedDOMSource.prototype.element = function () {
        var output$ = this.elements()
            .filter(function (arr) { return arr.length > 0; })
            .map(function (arr) { return arr[0]; })
            .remember();
        var out = adapt_1.adapt(output$);
        out._isCycleSource = 'MockedDOM';
        return out;
    };
    MockedDOMSource.prototype.events = function (eventType, options) {
        var streamForEventType = this._mockConfig[eventType];
        var out = adapt_1.adapt(streamForEventType || xstream_1.default.empty());
        out._isCycleSource = 'MockedDOM';
        return out;
    };
    MockedDOMSource.prototype.select = function (selector) {
        var mockConfigForSelector = this._mockConfig[selector] || {};
        return new MockedDOMSource(mockConfigForSelector);
    };
    MockedDOMSource.prototype.isolateSource = function (source, scope) {
        return source.select('.' + SCOPE_PREFIX + scope);
    };
    MockedDOMSource.prototype.isolateSink = function (sink, scope) {
        return sink.map(function (vnode) {
            if (vnode.sel && vnode.sel.indexOf(SCOPE_PREFIX + scope) !== -1) {
                return vnode;
            }
            else {
                vnode.sel += "." + SCOPE_PREFIX + scope;
                return vnode;
            }
        });
    };
    return MockedDOMSource;
}());
exports.MockedDOMSource = MockedDOMSource;
function mockDOMSource(mockConfig) {
    return new MockedDOMSource(mockConfig);
}
exports.mockDOMSource = mockDOMSource;

},{"@cycle/run/lib/adapt":19,"xstream":145}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var class_1 = require("snabbdom/modules/class");
exports.ClassModule = class_1.default;
var props_1 = require("snabbdom/modules/props");
exports.PropsModule = props_1.default;
var attributes_1 = require("snabbdom/modules/attributes");
exports.AttrsModule = attributes_1.default;
var style_1 = require("snabbdom/modules/style");
exports.StyleModule = style_1.default;
var dataset_1 = require("snabbdom/modules/dataset");
exports.DatasetModule = dataset_1.default;
var modules = [
    style_1.default,
    class_1.default,
    props_1.default,
    attributes_1.default,
    dataset_1.default,
];
exports.default = modules;

},{"snabbdom/modules/attributes":126,"snabbdom/modules/class":127,"snabbdom/modules/dataset":128,"snabbdom/modules/props":129,"snabbdom/modules/style":130}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var h_1 = require("snabbdom/h");
function copyToThunk(vnode, thunkVNode) {
    thunkVNode.elm = vnode.elm;
    vnode.data.fn = thunkVNode.data.fn;
    vnode.data.args = thunkVNode.data.args;
    vnode.data.isolate = thunkVNode.data.isolate;
    thunkVNode.data = vnode.data;
    thunkVNode.children = vnode.children;
    thunkVNode.text = vnode.text;
    thunkVNode.elm = vnode.elm;
}
function init(thunkVNode) {
    var cur = thunkVNode.data;
    var vnode = cur.fn.apply(undefined, cur.args);
    copyToThunk(vnode, thunkVNode);
}
function prepatch(oldVnode, thunkVNode) {
    var old = oldVnode.data, cur = thunkVNode.data;
    var i;
    var oldArgs = old.args, args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn.apply(undefined, args), thunkVNode);
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn.apply(undefined, args), thunkVNode);
            return;
        }
    }
    copyToThunk(oldVnode, thunkVNode);
}
function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return h_1.h(sel, {
        key: key,
        hook: { init: init, prepatch: prepatch },
        fn: fn,
        args: args,
    });
}
exports.thunk = thunk;
exports.default = thunk;

},{"snabbdom/h":123}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isValidNode(obj) {
    var ELEM_TYPE = 1;
    var FRAG_TYPE = 11;
    return typeof HTMLElement === 'object'
        ? obj instanceof HTMLElement || obj instanceof DocumentFragment
        : obj &&
            typeof obj === 'object' &&
            obj !== null &&
            (obj.nodeType === ELEM_TYPE || obj.nodeType === FRAG_TYPE) &&
            typeof obj.nodeName === 'string';
}
function isClassOrId(str) {
    return str.length > 1 && (str[0] === '.' || str[0] === '#');
}
exports.isClassOrId = isClassOrId;
function isDocFrag(el) {
    return el.nodeType === 11;
}
exports.isDocFrag = isDocFrag;
exports.SCOPE_PREFIX = '$$CYCLEDOM$$-';
function checkValidContainer(container) {
    if (typeof container !== 'string' && !isValidNode(container)) {
        throw new Error('Given container is not a DOM element neither a selector string.');
    }
}
exports.checkValidContainer = checkValidContainer;
function getValidNode(selectors) {
    var domElement = typeof selectors === 'string'
        ? document.querySelector(selectors)
        : selectors;
    if (typeof selectors === 'string' && domElement === null) {
        throw new Error("Cannot render into unknown element `" + selectors + "`");
    }
    return domElement;
}
exports.getValidNode = getValidNode;
/**
 * The full scope of a namespace is the "absolute path" of scopes from
 * parent to child. This is extracted from the namespace, filter only for
 * scopes in the namespace.
 */
function getFullScope(namespace) {
    return namespace
        .filter(function (c) { return c.indexOf(exports.SCOPE_PREFIX) > -1; })
        .map(function (c) { return c.replace(exports.SCOPE_PREFIX, ''); })
        .join('-');
}
exports.getFullScope = getFullScope;
function getSelectors(namespace) {
    return namespace.filter(function (c) { return c.indexOf(exports.SCOPE_PREFIX) === -1; }).join(' ');
}
exports.getSelectors = getSelectors;

},{}],19:[function(require,module,exports){
(function (global){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getGlobal() {
    var globalObj;
    if (typeof window !== 'undefined') {
        globalObj = window;
    }
    else if (typeof global !== 'undefined') {
        globalObj = global;
    }
    else {
        globalObj = this;
    }
    globalObj.Cyclejs = globalObj.Cyclejs || {};
    globalObj = globalObj.Cyclejs;
    globalObj.adaptStream = globalObj.adaptStream || (function (x) { return x; });
    return globalObj;
}
function setAdapt(f) {
    getGlobal().adaptStream = f;
}
exports.setAdapt = setAdapt;
function adapt(stream) {
    return getGlobal().adaptStream(stream);
}
exports.adapt = adapt;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],20:[function(require,module,exports){
arguments[4][19][0].apply(exports,arguments)
},{"dup":19}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
var adapt_1 = require("./adapt");
var microtask_1 = require("./microtask");
var scheduleMicrotask = microtask_1.default();
function makeSinkProxies(drivers) {
    var sinkProxies = {};
    for (var name_1 in drivers) {
        if (drivers.hasOwnProperty(name_1)) {
            sinkProxies[name_1] = xstream_1.default.create();
        }
    }
    return sinkProxies;
}
function callDrivers(drivers, sinkProxies) {
    var sources = {};
    for (var name_2 in drivers) {
        if (drivers.hasOwnProperty(name_2)) {
            sources[name_2] = drivers[name_2](sinkProxies[name_2], name_2);
            if (sources[name_2] && typeof sources[name_2] === 'object') {
                sources[name_2]._isCycleSource = name_2;
            }
        }
    }
    return sources;
}
// NOTE: this will mutate `sources`.
function adaptSources(sources) {
    for (var name_3 in sources) {
        if (sources.hasOwnProperty(name_3) &&
            sources[name_3] &&
            typeof sources[name_3]['shamefullySendNext'] === 'function') {
            sources[name_3] = adapt_1.adapt(sources[name_3]);
        }
    }
    return sources;
}
function replicateMany(sinks, sinkProxies) {
    var sinkNames = Object.keys(sinks).filter(function (name) { return !!sinkProxies[name]; });
    var buffers = {};
    var replicators = {};
    sinkNames.forEach(function (name) {
        buffers[name] = { _n: [], _e: [] };
        replicators[name] = {
            next: function (x) { return buffers[name]._n.push(x); },
            error: function (err) { return buffers[name]._e.push(err); },
            complete: function () { },
        };
    });
    var subscriptions = sinkNames.map(function (name) {
        return xstream_1.default.fromObservable(sinks[name]).subscribe(replicators[name]);
    });
    sinkNames.forEach(function (name) {
        var listener = sinkProxies[name];
        var next = function (x) {
            scheduleMicrotask(function () { return listener._n(x); });
        };
        var error = function (err) {
            scheduleMicrotask(function () {
                (console.error || console.log)(err);
                listener._e(err);
            });
        };
        buffers[name]._n.forEach(next);
        buffers[name]._e.forEach(error);
        replicators[name].next = next;
        replicators[name].error = error;
        // because sink.subscribe(replicator) had mutated replicator to add
        // _n, _e, _c, we must also update these:
        replicators[name]._n = next;
        replicators[name]._e = error;
    });
    buffers = null; // free up for GC
    return function disposeReplication() {
        subscriptions.forEach(function (s) { return s.unsubscribe(); });
        sinkNames.forEach(function (name) { return sinkProxies[name]._c(); });
    };
}
function disposeSources(sources) {
    for (var k in sources) {
        if (sources.hasOwnProperty(k) &&
            sources[k] &&
            sources[k].dispose) {
            sources[k].dispose();
        }
    }
}
function isObjectEmpty(obj) {
    return Object.keys(obj).length === 0;
}
/**
 * A function that prepares the Cycle application to be executed. Takes a `main`
 * function and prepares to circularly connects it to the given collection of
 * driver functions. As an output, `setup()` returns an object with three
 * properties: `sources`, `sinks` and `run`. Only when `run()` is called will
 * the application actually execute. Refer to the documentation of `run()` for
 * more details.
 *
 * **Example:**
 * ```js
 * import {setup} from '@cycle/run';
 * const {sources, sinks, run} = setup(main, drivers);
 * // ...
 * const dispose = run(); // Executes the application
 * // ...
 * dispose();
 * ```
 *
 * @param {Function} main a function that takes `sources` as input and outputs
 * `sinks`.
 * @param {Object} drivers an object where keys are driver names and values
 * are driver functions.
 * @return {Object} an object with three properties: `sources`, `sinks` and
 * `run`. `sources` is the collection of driver sources, `sinks` is the
 * collection of driver sinks, these can be used for debugging or testing. `run`
 * is the function that once called will execute the application.
 * @function setup
 */
function setup(main, drivers) {
    if (typeof main !== "function") {
        throw new Error("First argument given to Cycle must be the 'main' " + "function.");
    }
    if (typeof drivers !== "object" || drivers === null) {
        throw new Error("Second argument given to Cycle must be an object " +
            "with driver functions as properties.");
    }
    if (isObjectEmpty(drivers)) {
        throw new Error("Second argument given to Cycle must be an object " +
            "with at least one driver function declared as a property.");
    }
    var sinkProxies = makeSinkProxies(drivers);
    var sources = callDrivers(drivers, sinkProxies);
    var adaptedSources = adaptSources(sources);
    var sinks = main(adaptedSources);
    if (typeof window !== 'undefined') {
        window.Cyclejs = window.Cyclejs || {};
        window.Cyclejs.sinks = sinks;
    }
    function _run() {
        var disposeReplication = replicateMany(sinks, sinkProxies);
        return function dispose() {
            disposeSources(sources);
            disposeReplication();
        };
    }
    return { sinks: sinks, sources: sources, run: _run };
}
exports.setup = setup;
/**
 * Takes a `main` function and circularly connects it to the given collection
 * of driver functions.
 *
 * **Example:**
 * ```js
 * import run from '@cycle/run';
 * const dispose = run(main, drivers);
 * // ...
 * dispose();
 * ```
 *
 * The `main` function expects a collection of "source" streams (returned from
 * drivers) as input, and should return a collection of "sink" streams (to be
 * given to drivers). A "collection of streams" is a JavaScript object where
 * keys match the driver names registered by the `drivers` object, and values
 * are the streams. Refer to the documentation of each driver to see more
 * details on what types of sources it outputs and sinks it receives.
 *
 * @param {Function} main a function that takes `sources` as input and outputs
 * `sinks`.
 * @param {Object} drivers an object where keys are driver names and values
 * are driver functions.
 * @return {Function} a dispose function, used to terminate the execution of the
 * Cycle.js program, cleaning up resources used.
 * @function run
 */
function run(main, drivers) {
    var program = setup(main, drivers);
    if (typeof window !== 'undefined' &&
        window['CyclejsDevTool_startGraphSerializer']) {
        window['CyclejsDevTool_startGraphSerializer'](program.sinks);
    }
    return program.run();
}
exports.run = run;
exports.default = run;

},{"./adapt":20,"./microtask":22,"xstream":145}],22:[function(require,module,exports){
(function (process){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Inspired by https://github.com/yoshuawuyts/nanotask, this function manages
 * a queue of microtasks. It returns a "scheduleMicrotask" helper.
 *
 * Uses MutationObserver in the browser, supported by many browsers, including
 * IE11.
 *
 * Uses process.nextTick in Node.js.
 *
 * Uses setTimeout otherwise.
 */
function microtask() {
    if (typeof MutationObserver !== 'undefined') {
        var node_1 = document.createTextNode('');
        var queue_1 = [];
        var i_1 = 0;
        new MutationObserver(function () {
            while (queue_1.length) {
                queue_1.shift()();
            }
        }).observe(node_1, { characterData: true });
        return function (fn) {
            queue_1.push(fn);
            node_1.data = i_1 = 1 - i_1;
        };
    }
    else if (typeof process !== 'undefined') {
        return process.nextTick;
    }
    else {
        return setTimeout;
    }
}
exports.default = microtask;

}).call(this,require('_process'))
},{"_process":101}],23:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],24:[function(require,module,exports){

},{}],25:[function(require,module,exports){
arguments[4][24][0].apply(exports,arguments)
},{"dup":24}],26:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (isArrayBufferView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (isArrayBufferView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
function isArrayBufferView (obj) {
  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":23,"ieee754":94}],27:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":97}],28:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = language;

var _tokenizer = require('./tokenizer');

var _tokenizer2 = _interopRequireDefault(_tokenizer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function language(lookups, matchComparison) {
  return function (selector) {
    return parse(selector, remap(lookups), matchComparison || caseSensitiveComparison);
  };
}

function remap(opts) {
  for (var key in opts) {
    if (opt_okay(opts, key)) {
      opts[key] = Function('return function(node, attr) { return node.' + opts[key] + ' }');
      opts[key] = opts[key]();
    }
  }return opts;
}

function opt_okay(opts, key) {
  return opts.hasOwnProperty(key) && typeof opts[key] === 'string';
}

function parse(selector, options, matchComparison) {
  var stream = (0, _tokenizer2.default)(),
      default_subj = true,
      selectors = [[]],
      traversal,
      bits;

  bits = selectors[0];

  traversal = {
    '': any_parents,
    '>': direct_parent,
    '+': direct_sibling,
    '~': any_sibling
  };

  stream.on('data', group).end(selector);

  function group(token) {
    var crnt;

    if (token.type === 'comma') {
      selectors.unshift(bits = []);

      return;
    }

    if (token.type === 'op' || token.type === 'any-child') {
      bits.unshift(traversal[token.data]);
      bits.unshift(check());

      return;
    }

    bits[0] = bits[0] || check();
    crnt = bits[0];

    if (token.type === '!') {
      crnt.subject = selectors[0].subject = true;

      return;
    }

    crnt.push(token.type === 'class' ? listContains(token.type, token.data) : token.type === 'attr' ? attr(token) : token.type === ':' || token.type === '::' ? pseudo(token) : token.type === '*' ? Boolean : matches(token.type, token.data, matchComparison));
  }

  return selector_fn;

  function selector_fn(node, as_boolean) {
    var current, length, orig, subj, set;

    orig = node;
    set = [];

    for (var i = 0, len = selectors.length; i < len; ++i) {
      bits = selectors[i];
      current = entry;
      length = bits.length;
      node = orig;
      subj = [];

      for (var j = 0; j < length; j += 2) {
        node = current(node, bits[j], subj);

        if (!node) {
          break;
        }

        current = bits[j + 1];
      }

      if (j >= length) {
        if (as_boolean) {
          return true;
        }

        add(!bits.subject ? [orig] : subj);
      }
    }

    if (as_boolean) {
      return false;
    }

    return !set.length ? false : set.length === 1 ? set[0] : set;

    function add(items) {
      var next;

      while (items.length) {
        next = items.shift();

        if (set.indexOf(next) === -1) {
          set.push(next);
        }
      }
    }
  }

  function check() {
    _check.bits = [];
    _check.subject = false;
    _check.push = function (token) {
      _check.bits.push(token);
    };

    return _check;

    function _check(node, subj) {
      for (var i = 0, len = _check.bits.length; i < len; ++i) {
        if (!_check.bits[i](node)) {
          return false;
        }
      }

      if (_check.subject) {
        subj.push(node);
      }

      return true;
    }
  }

  function listContains(type, data) {
    return function (node) {
      var val = options[type](node);
      val = Array.isArray(val) ? val : val ? val.toString().split(/\s+/) : [];
      return val.indexOf(data) >= 0;
    };
  }

  function attr(token) {
    return token.data.lhs ? valid_attr(options.attr, token.data.lhs, token.data.cmp, token.data.rhs) : valid_attr(options.attr, token.data);
  }

  function matches(type, data, matchComparison) {
    return function (node) {
      return matchComparison(type, options[type](node), data);
    };
  }

  function any_parents(node, next, subj) {
    do {
      node = options.parent(node);
    } while (node && !next(node, subj));

    return node;
  }

  function direct_parent(node, next, subj) {
    node = options.parent(node);

    return node && next(node, subj) ? node : null;
  }

  function direct_sibling(node, next, subj) {
    var parent = options.parent(node),
        idx = 0,
        children;

    children = options.children(parent);

    for (var i = 0, len = children.length; i < len; ++i) {
      if (children[i] === node) {
        idx = i;

        break;
      }
    }

    return children[idx - 1] && next(children[idx - 1], subj) ? children[idx - 1] : null;
  }

  function any_sibling(node, next, subj) {
    var parent = options.parent(node),
        children;

    children = options.children(parent);

    for (var i = 0, len = children.length; i < len; ++i) {
      if (children[i] === node) {
        return null;
      }

      if (next(children[i], subj)) {
        return children[i];
      }
    }

    return null;
  }

  function pseudo(token) {
    return valid_pseudo(options, token.data, matchComparison);
  }
}

function entry(node, next, subj) {
  return next(node, subj) ? node : null;
}

function valid_pseudo(options, match, matchComparison) {
  switch (match) {
    case 'empty':
      return valid_empty(options);
    case 'first-child':
      return valid_first_child(options);
    case 'last-child':
      return valid_last_child(options);
    case 'root':
      return valid_root(options);
  }

  if (match.indexOf('contains') === 0) {
    return valid_contains(options, match.slice(9, -1));
  }

  if (match.indexOf('any') === 0) {
    return valid_any_match(options, match.slice(4, -1), matchComparison);
  }

  if (match.indexOf('not') === 0) {
    return valid_not_match(options, match.slice(4, -1), matchComparison);
  }

  if (match.indexOf('nth-child') === 0) {
    return valid_nth_child(options, match.slice(10, -1));
  }

  return function () {
    return false;
  };
}

function valid_not_match(options, selector, matchComparison) {
  var fn = parse(selector, options, matchComparison);

  return not_function;

  function not_function(node) {
    return !fn(node, true);
  }
}

function valid_any_match(options, selector, matchComparison) {
  var fn = parse(selector, options, matchComparison);

  return fn;
}

function valid_attr(fn, lhs, cmp, rhs) {
  return function (node) {
    var attr = fn(node, lhs);

    if (!cmp) {
      return !!attr;
    }

    if (cmp.length === 1) {
      return attr == rhs;
    }

    if (attr === void 0 || attr === null) {
      return false;
    }

    return checkattr[cmp.charAt(0)](attr, rhs);
  };
}

function valid_first_child(options) {
  return function (node) {
    return options.children(options.parent(node))[0] === node;
  };
}

function valid_last_child(options) {
  return function (node) {
    var children = options.children(options.parent(node));

    return children[children.length - 1] === node;
  };
}

function valid_empty(options) {
  return function (node) {
    return options.children(node).length === 0;
  };
}

function valid_root(options) {
  return function (node) {
    return !options.parent(node);
  };
}

function valid_contains(options, contents) {
  return function (node) {
    return options.contents(node).indexOf(contents) !== -1;
  };
}

function valid_nth_child(options, nth) {
  var test = function test() {
    return false;
  };
  if (nth == 'odd') {
    nth = '2n+1';
  } else if (nth == 'even') {
    nth = '2n';
  }
  var regexp = /( ?([-|\+])?(\d*)n)? ?((\+|-)? ?(\d+))? ?/;
  var matches = nth.match(regexp);
  if (matches) {
    var growth = 0;
    if (matches[1]) {
      var positiveGrowth = matches[2] != '-';
      growth = parseInt(matches[3] == '' ? 1 : matches[3]);
      growth = growth * (positiveGrowth ? 1 : -1);
    }
    var offset = 0;
    if (matches[4]) {
      offset = parseInt(matches[6]);
      var positiveOffset = matches[5] != '-';
      offset = offset * (positiveOffset ? 1 : -1);
    }
    if (growth == 0) {
      if (offset != 0) {
        test = function test(children, node) {
          return children[offset - 1] === node;
        };
      }
    } else {
      test = function test(children, node) {
        var validPositions = [];
        var len = children.length;
        for (var position = 1; position <= len; position++) {
          var divisible = (position - offset) % growth == 0;
          if (divisible) {
            if (growth > 0) {
              validPositions.push(position);
            } else {
              if ((position - offset) / growth >= 0) {
                validPositions.push(position);
              }
            }
          }
        }
        for (var i = 0; i < validPositions.length; i++) {
          if (children[validPositions[i] - 1] === node) {
            return true;
          }
        }
        return false;
      };
    }
  }
  return function (node) {
    var children = options.children(options.parent(node));

    return test(children, node);
  };
}

var checkattr = {
  '$': check_end,
  '^': check_beg,
  '*': check_any,
  '~': check_spc,
  '|': check_dsh
};

function check_end(l, r) {
  return l.slice(l.length - r.length) === r;
}

function check_beg(l, r) {
  return l.slice(0, r.length) === r;
}

function check_any(l, r) {
  return l.indexOf(r) > -1;
}

function check_spc(l, r) {
  return l.split(/\s+/).indexOf(r) > -1;
}

function check_dsh(l, r) {
  return l.split('-').indexOf(r) > -1;
}

function caseSensitiveComparison(type, pattern, data) {
  return pattern === data;
}
},{"./tokenizer":29}],29:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = tokenize;

var _through = require('through');

var _through2 = _interopRequireDefault(_through);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PSEUDOSTART = 'pseudo-start',
    ATTR_START = 'attr-start',
    ANY_CHILD = 'any-child',
    ATTR_COMP = 'attr-comp',
    ATTR_END = 'attr-end',
    PSEUDOPSEUDO = '::',
    PSEUDOCLASS = ':',
    READY = '(ready)',
    OPERATION = 'op',
    CLASS = 'class',
    COMMA = 'comma',
    ATTR = 'attr',
    SUBJECT = '!',
    TAG = 'tag',
    STAR = '*',
    ID = 'id';

function tokenize() {
  var escaped = false,
      gathered = [],
      state = READY,
      data = [],
      idx = 0,
      stream,
      length,
      quote,
      depth,
      lhs,
      rhs,
      cmp,
      c;

  return stream = (0, _through2.default)(ondata, onend);

  function ondata(chunk) {
    data = data.concat(chunk.split(''));
    length = data.length;

    while (idx < length && (c = data[idx++])) {
      switch (state) {
        case READY:
          state_ready();break;
        case ANY_CHILD:
          state_any_child();break;
        case OPERATION:
          state_op();break;
        case ATTR_START:
          state_attr_start();break;
        case ATTR_COMP:
          state_attr_compare();break;
        case ATTR_END:
          state_attr_end();break;
        case PSEUDOCLASS:
        case PSEUDOPSEUDO:
          state_pseudo();break;
        case PSEUDOSTART:
          state_pseudostart();break;
        case ID:
        case TAG:
        case CLASS:
          state_gather();break;
      }
    }

    data = data.slice(idx);
  }

  function onend(chunk) {
    if (arguments.length) {
      ondata(chunk);
    }

    if (gathered.length) {
      stream.queue(token());
    }
  }

  function state_ready() {
    switch (true) {
      case '#' === c:
        state = ID;break;
      case '.' === c:
        state = CLASS;break;
      case ':' === c:
        state = PSEUDOCLASS;break;
      case '[' === c:
        state = ATTR_START;break;
      case '!' === c:
        subject();break;
      case '*' === c:
        star();break;
      case ',' === c:
        comma();break;
      case /[>\+~]/.test(c):
        state = OPERATION;break;
      case /\s/.test(c):
        state = ANY_CHILD;break;
      case /[\w\d\-_]/.test(c):
        state = TAG;--idx;break;
    }
  }

  function subject() {
    state = SUBJECT;
    gathered = ['!'];
    stream.queue(token());
    state = READY;
  }

  function star() {
    state = STAR;
    gathered = ['*'];
    stream.queue(token());
    state = READY;
  }

  function comma() {
    state = COMMA;
    gathered = [','];
    stream.queue(token());
    state = READY;
  }

  function state_op() {
    if (/[>\+~]/.test(c)) {
      return gathered.push(c);
    }

    // chomp down the following whitespace.
    if (/\s/.test(c)) {
      return;
    }

    stream.queue(token());
    state = READY;
    --idx;
  }

  function state_any_child() {
    if (/\s/.test(c)) {
      return;
    }

    if (/[>\+~]/.test(c)) {
      return --idx, state = OPERATION;
    }

    stream.queue(token());
    state = READY;
    --idx;
  }

  function state_pseudo() {
    rhs = state;
    state_gather(true);

    if (state !== READY) {
      return;
    }

    if (c === '(') {
      lhs = gathered.join('');
      state = PSEUDOSTART;
      gathered.length = 0;
      depth = 1;
      ++idx;

      return;
    }

    state = PSEUDOCLASS;
    stream.queue(token());
    state = READY;
  }

  function state_pseudostart() {
    if (gathered.length === 0 && !quote) {
      quote = /['"]/.test(c) ? c : null;

      if (quote) {
        return;
      }
    }

    if (quote) {
      if (!escaped && c === quote) {
        quote = null;

        return;
      }

      if (c === '\\') {
        escaped ? gathered.push(c) : escaped = true;

        return;
      }

      escaped = false;
      gathered.push(c);

      return;
    }

    gathered.push(c);

    if (c === '(') {
      ++depth;
    } else if (c === ')') {
      --depth;
    }

    if (!depth) {
      gathered.pop();
      stream.queue({
        type: rhs,
        data: lhs + '(' + gathered.join('') + ')'
      });

      state = READY;
      lhs = rhs = cmp = null;
      gathered.length = 0;
    }

    return;
  }

  function state_attr_start() {
    state_gather(true);

    if (state !== READY) {
      return;
    }

    if (c === ']') {
      state = ATTR;
      stream.queue(token());
      state = READY;

      return;
    }

    lhs = gathered.join('');
    gathered.length = 0;
    state = ATTR_COMP;
  }

  function state_attr_compare() {
    if (/[=~|$^*]/.test(c)) {
      gathered.push(c);
    }

    if (gathered.length === 2 || c === '=') {
      cmp = gathered.join('');
      gathered.length = 0;
      state = ATTR_END;
      quote = null;

      return;
    }
  }

  function state_attr_end() {
    if (!gathered.length && !quote) {
      quote = /['"]/.test(c) ? c : null;

      if (quote) {
        return;
      }
    }

    if (quote) {
      if (!escaped && c === quote) {
        quote = null;

        return;
      }

      if (c === '\\') {
        if (escaped) {
          gathered.push(c);
        }

        escaped = !escaped;

        return;
      }

      escaped = false;
      gathered.push(c);

      return;
    }

    state_gather(true);

    if (state !== READY) {
      return;
    }

    stream.queue({
      type: ATTR,
      data: {
        lhs: lhs,
        rhs: gathered.join(''),
        cmp: cmp
      }
    });

    state = READY;
    lhs = rhs = cmp = null;
    gathered.length = 0;

    return;
  }

  function state_gather(quietly) {
    if (/[^\d\w\-_]/.test(c) && !escaped) {
      if (c === '\\') {
        escaped = true;
      } else {
        !quietly && stream.queue(token());
        state = READY;
        --idx;
      }

      return;
    }

    escaped = false;
    gathered.push(c);
  }

  function token() {
    var data = gathered.join('');

    gathered.length = 0;

    return {
      type: state,
      data: data
    };
  }
}
},{"through":139}],30:[function(require,module,exports){
'use strict';

var copy             = require('es5-ext/object/copy')
  , normalizeOptions = require('es5-ext/object/normalize-options')
  , ensureCallable   = require('es5-ext/object/valid-callable')
  , map              = require('es5-ext/object/map')
  , callable         = require('es5-ext/object/valid-callable')
  , validValue       = require('es5-ext/object/valid-value')

  , bind = Function.prototype.bind, defineProperty = Object.defineProperty
  , hasOwnProperty = Object.prototype.hasOwnProperty
  , define;

define = function (name, desc, options) {
	var value = validValue(desc) && callable(desc.value), dgs;
	dgs = copy(desc);
	delete dgs.writable;
	delete dgs.value;
	dgs.get = function () {
		if (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;
		desc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);
		defineProperty(this, name, desc);
		return this[name];
	};
	return dgs;
};

module.exports = function (props/*, options*/) {
	var options = normalizeOptions(arguments[1]);
	if (options.resolveContext != null) ensureCallable(options.resolveContext);
	return map(props, function (desc, name) { return define(name, desc, options); });
};

},{"es5-ext/object/copy":53,"es5-ext/object/map":62,"es5-ext/object/normalize-options":63,"es5-ext/object/valid-callable":68,"es5-ext/object/valid-value":69}],31:[function(require,module,exports){
'use strict';

var assign        = require('es5-ext/object/assign')
  , normalizeOpts = require('es5-ext/object/normalize-options')
  , isCallable    = require('es5-ext/object/is-callable')
  , contains      = require('es5-ext/string/#/contains')

  , d;

d = module.exports = function (dscr, value/*, options*/) {
	var c, e, w, options, desc;
	if ((arguments.length < 2) || (typeof dscr !== 'string')) {
		options = value;
		value = dscr;
		dscr = null;
	} else {
		options = arguments[2];
	}
	if (dscr == null) {
		c = w = true;
		e = false;
	} else {
		c = contains.call(dscr, 'c');
		e = contains.call(dscr, 'e');
		w = contains.call(dscr, 'w');
	}

	desc = { value: value, configurable: c, enumerable: e, writable: w };
	return !options ? desc : assign(normalizeOpts(options), desc);
};

d.gs = function (dscr, get, set/*, options*/) {
	var c, e, options, desc;
	if (typeof dscr !== 'string') {
		options = set;
		set = get;
		get = dscr;
		dscr = null;
	} else {
		options = arguments[3];
	}
	if (get == null) {
		get = undefined;
	} else if (!isCallable(get)) {
		options = get;
		get = set = undefined;
	} else if (set == null) {
		set = undefined;
	} else if (!isCallable(set)) {
		options = set;
		set = undefined;
	}
	if (dscr == null) {
		c = true;
		e = false;
	} else {
		c = contains.call(dscr, 'c');
		e = contains.call(dscr, 'e');
	}

	desc = { get: get, set: set, configurable: c, enumerable: e };
	return !options ? desc : assign(normalizeOpts(options), desc);
};

},{"es5-ext/object/assign":50,"es5-ext/object/is-callable":56,"es5-ext/object/normalize-options":63,"es5-ext/string/#/contains":70}],32:[function(require,module,exports){
// Inspired by Google Closure:
// http://closure-library.googlecode.com/svn/docs/
// closure_goog_array_array.js.html#goog.array.clear

"use strict";

var value = require("../../object/valid-value");

module.exports = function () {
	value(this).length = 0;
	return this;
};

},{"../../object/valid-value":69}],33:[function(require,module,exports){
"use strict";

var numberIsNaN       = require("../../number/is-nan")
  , toPosInt          = require("../../number/to-pos-integer")
  , value             = require("../../object/valid-value")
  , indexOf           = Array.prototype.indexOf
  , objHasOwnProperty = Object.prototype.hasOwnProperty
  , abs               = Math.abs
  , floor             = Math.floor;

module.exports = function (searchElement /*, fromIndex*/) {
	var i, length, fromIndex, val;
	if (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);

	length = toPosInt(value(this).length);
	fromIndex = arguments[1];
	if (isNaN(fromIndex)) fromIndex = 0;
	else if (fromIndex >= 0) fromIndex = floor(fromIndex);
	else fromIndex = toPosInt(this.length) - floor(abs(fromIndex));

	for (i = fromIndex; i < length; ++i) {
		if (objHasOwnProperty.call(this, i)) {
			val = this[i];
			if (numberIsNaN(val)) return i; // Jslint: ignore
		}
	}
	return -1;
};

},{"../../number/is-nan":44,"../../number/to-pos-integer":48,"../../object/valid-value":69}],34:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Array.from
	: require("./shim");

},{"./is-implemented":35,"./shim":36}],35:[function(require,module,exports){
"use strict";

module.exports = function () {
	var from = Array.from, arr, result;
	if (typeof from !== "function") return false;
	arr = ["raz", "dwa"];
	result = from(arr);
	return Boolean(result && (result !== arr) && (result[1] === "dwa"));
};

},{}],36:[function(require,module,exports){
"use strict";

var iteratorSymbol = require("es6-symbol").iterator
  , isArguments    = require("../../function/is-arguments")
  , isFunction     = require("../../function/is-function")
  , toPosInt       = require("../../number/to-pos-integer")
  , callable       = require("../../object/valid-callable")
  , validValue     = require("../../object/valid-value")
  , isValue        = require("../../object/is-value")
  , isString       = require("../../string/is-string")
  , isArray        = Array.isArray
  , call           = Function.prototype.call
  , desc           = { configurable: true, enumerable: true, writable: true, value: null }
  , defineProperty = Object.defineProperty;

// eslint-disable-next-line complexity
module.exports = function (arrayLike /*, mapFn, thisArg*/) {
	var mapFn = arguments[1]
	  , thisArg = arguments[2]
	  , Context
	  , i
	  , j
	  , arr
	  , length
	  , code
	  , iterator
	  , result
	  , getIterator
	  , value;

	arrayLike = Object(validValue(arrayLike));

	if (isValue(mapFn)) callable(mapFn);
	if (!this || this === Array || !isFunction(this)) {
		// Result: Plain array
		if (!mapFn) {
			if (isArguments(arrayLike)) {
				// Source: Arguments
				length = arrayLike.length;
				if (length !== 1) return Array.apply(null, arrayLike);
				arr = new Array(1);
				arr[0] = arrayLike[0];
				return arr;
			}
			if (isArray(arrayLike)) {
				// Source: Array
				arr = new Array(length = arrayLike.length);
				for (i = 0; i < length; ++i) arr[i] = arrayLike[i];
				return arr;
			}
		}
		arr = [];
	} else {
		// Result: Non plain array
		Context = this;
	}

	if (!isArray(arrayLike)) {
		if ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {
			// Source: Iterator
			iterator = callable(getIterator).call(arrayLike);
			if (Context) arr = new Context();
			result = iterator.next();
			i = 0;
			while (!result.done) {
				value = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;
				if (Context) {
					desc.value = value;
					defineProperty(arr, i, desc);
				} else {
					arr[i] = value;
				}
				result = iterator.next();
				++i;
			}
			length = i;
		} else if (isString(arrayLike)) {
			// Source: String
			length = arrayLike.length;
			if (Context) arr = new Context();
			for (i = 0, j = 0; i < length; ++i) {
				value = arrayLike[i];
				if (i + 1 < length) {
					code = value.charCodeAt(0);
					// eslint-disable-next-line max-depth
					if (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];
				}
				value = mapFn ? call.call(mapFn, thisArg, value, j) : value;
				if (Context) {
					desc.value = value;
					defineProperty(arr, j, desc);
				} else {
					arr[j] = value;
				}
				++j;
			}
			length = j;
		}
	}
	if (length === undefined) {
		// Source: array or array-like
		length = toPosInt(arrayLike.length);
		if (Context) arr = new Context(length);
		for (i = 0; i < length; ++i) {
			value = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];
			if (Context) {
				desc.value = value;
				defineProperty(arr, i, desc);
			} else {
				arr[i] = value;
			}
		}
	}
	if (Context) {
		desc.value = null;
		arr.length = length;
	}
	return arr;
};

},{"../../function/is-arguments":37,"../../function/is-function":38,"../../number/to-pos-integer":48,"../../object/is-value":58,"../../object/valid-callable":68,"../../object/valid-value":69,"../../string/is-string":73,"es6-symbol":87}],37:[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString
  , id = objToString.call(
	(function () {
		return arguments;
	})()
);

module.exports = function (value) {
	return objToString.call(value) === id;
};

},{}],38:[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString, id = objToString.call(require("./noop"));

module.exports = function (value) {
	return typeof value === "function" && objToString.call(value) === id;
};

},{"./noop":39}],39:[function(require,module,exports){
"use strict";

// eslint-disable-next-line no-empty-function
module.exports = function () {};

},{}],40:[function(require,module,exports){
/* eslint strict: "off" */

module.exports = (function () {
	return this;
}());

},{}],41:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Math.sign
	: require("./shim");

},{"./is-implemented":42,"./shim":43}],42:[function(require,module,exports){
"use strict";

module.exports = function () {
	var sign = Math.sign;
	if (typeof sign !== "function") return false;
	return (sign(10) === 1) && (sign(-20) === -1);
};

},{}],43:[function(require,module,exports){
"use strict";

module.exports = function (value) {
	value = Number(value);
	if (isNaN(value) || (value === 0)) return value;
	return value > 0 ? 1 : -1;
};

},{}],44:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Number.isNaN
	: require("./shim");

},{"./is-implemented":45,"./shim":46}],45:[function(require,module,exports){
"use strict";

module.exports = function () {
	var numberIsNaN = Number.isNaN;
	if (typeof numberIsNaN !== "function") return false;
	return !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);
};

},{}],46:[function(require,module,exports){
"use strict";

module.exports = function (value) {
	// eslint-disable-next-line no-self-compare
	return value !== value;
};

},{}],47:[function(require,module,exports){
"use strict";

var sign = require("../math/sign")

  , abs = Math.abs, floor = Math.floor;

module.exports = function (value) {
	if (isNaN(value)) return 0;
	value = Number(value);
	if ((value === 0) || !isFinite(value)) return value;
	return sign(value) * floor(abs(value));
};

},{"../math/sign":41}],48:[function(require,module,exports){
"use strict";

var toInteger = require("./to-integer")

  , max = Math.max;

module.exports = function (value) {
 return max(0, toInteger(value));
};

},{"./to-integer":47}],49:[function(require,module,exports){
// Internal method, used by iteration functions.
// Calls a function for each key-value pair found in object
// Optionally takes compareFn to iterate object in specific order

"use strict";

var callable                = require("./valid-callable")
  , value                   = require("./valid-value")
  , bind                    = Function.prototype.bind
  , call                    = Function.prototype.call
  , keys                    = Object.keys
  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;

module.exports = function (method, defVal) {
	return function (obj, cb /*, thisArg, compareFn*/) {
		var list, thisArg = arguments[2], compareFn = arguments[3];
		obj = Object(value(obj));
		callable(cb);

		list = keys(obj);
		if (compareFn) {
			list.sort(typeof compareFn === "function" ? bind.call(compareFn, obj) : undefined);
		}
		if (typeof method !== "function") method = list[method];
		return call.call(method, list, function (key, index) {
			if (!objPropertyIsEnumerable.call(obj, key)) return defVal;
			return call.call(cb, thisArg, obj[key], key, obj, index);
		});
	};
};

},{"./valid-callable":68,"./valid-value":69}],50:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Object.assign
	: require("./shim");

},{"./is-implemented":51,"./shim":52}],51:[function(require,module,exports){
"use strict";

module.exports = function () {
	var assign = Object.assign, obj;
	if (typeof assign !== "function") return false;
	obj = { foo: "raz" };
	assign(obj, { bar: "dwa" }, { trzy: "trzy" });
	return (obj.foo + obj.bar + obj.trzy) === "razdwatrzy";
};

},{}],52:[function(require,module,exports){
"use strict";

var keys  = require("../keys")
  , value = require("../valid-value")
  , max   = Math.max;

module.exports = function (dest, src /*, …srcn*/) {
	var error, i, length = max(arguments.length, 2), assign;
	dest = Object(value(dest));
	assign = function (key) {
		try {
			dest[key] = src[key];
		} catch (e) {
			if (!error) error = e;
		}
	};
	for (i = 1; i < length; ++i) {
		src = arguments[i];
		keys(src).forEach(assign);
	}
	if (error !== undefined) throw error;
	return dest;
};

},{"../keys":59,"../valid-value":69}],53:[function(require,module,exports){
"use strict";

var aFrom  = require("../array/from")
  , assign = require("./assign")
  , value  = require("./valid-value");

module.exports = function (obj/*, propertyNames, options*/) {
	var copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);
	if (copy !== obj && !propertyNames) return copy;
	var result = {};
	if (propertyNames) {
		aFrom(propertyNames, function (propertyName) {
			if (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];
		});
	} else {
		assign(result, obj);
	}
	return result;
};

},{"../array/from":34,"./assign":50,"./valid-value":69}],54:[function(require,module,exports){
// Workaround for http://code.google.com/p/v8/issues/detail?id=2804

"use strict";

var create = Object.create, shim;

if (!require("./set-prototype-of/is-implemented")()) {
	shim = require("./set-prototype-of/shim");
}

module.exports = (function () {
	var nullObject, polyProps, desc;
	if (!shim) return create;
	if (shim.level !== 1) return create;

	nullObject = {};
	polyProps = {};
	desc = {
		configurable: false,
		enumerable: false,
		writable: true,
		value: undefined
	};
	Object.getOwnPropertyNames(Object.prototype).forEach(function (name) {
		if (name === "__proto__") {
			polyProps[name] = {
				configurable: true,
				enumerable: false,
				writable: true,
				value: undefined
			};
			return;
		}
		polyProps[name] = desc;
	});
	Object.defineProperties(nullObject, polyProps);

	Object.defineProperty(shim, "nullPolyfill", {
		configurable: false,
		enumerable: false,
		writable: false,
		value: nullObject
	});

	return function (prototype, props) {
		return create(prototype === null ? nullObject : prototype, props);
	};
}());

},{"./set-prototype-of/is-implemented":66,"./set-prototype-of/shim":67}],55:[function(require,module,exports){
"use strict";

module.exports = require("./_iterate")("forEach");

},{"./_iterate":49}],56:[function(require,module,exports){
// Deprecated

"use strict";

module.exports = function (obj) {
 return typeof obj === "function";
};

},{}],57:[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

var map = { function: true, object: true };

module.exports = function (value) {
	return (isValue(value) && map[typeof value]) || false;
};

},{"./is-value":58}],58:[function(require,module,exports){
"use strict";

var _undefined = require("../function/noop")(); // Support ES3 engines

module.exports = function (val) {
 return (val !== _undefined) && (val !== null);
};

},{"../function/noop":39}],59:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Object.keys
	: require("./shim");

},{"./is-implemented":60,"./shim":61}],60:[function(require,module,exports){
"use strict";

module.exports = function () {
	try {
		Object.keys("primitive");
		return true;
	} catch (e) {
 return false;
}
};

},{}],61:[function(require,module,exports){
"use strict";

var isValue = require("../is-value");

var keys = Object.keys;

module.exports = function (object) {
	return keys(isValue(object) ? Object(object) : object);
};

},{"../is-value":58}],62:[function(require,module,exports){
"use strict";

var callable = require("./valid-callable")
  , forEach  = require("./for-each")
  , call     = Function.prototype.call;

module.exports = function (obj, cb /*, thisArg*/) {
	var result = {}, thisArg = arguments[2];
	callable(cb);
	forEach(obj, function (value, key, targetObj, index) {
		result[key] = call.call(cb, thisArg, value, key, targetObj, index);
	});
	return result;
};

},{"./for-each":55,"./valid-callable":68}],63:[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

var forEach = Array.prototype.forEach, create = Object.create;

var process = function (src, obj) {
	var key;
	for (key in src) obj[key] = src[key];
};

// eslint-disable-next-line no-unused-vars
module.exports = function (opts1 /*, …options*/) {
	var result = create(null);
	forEach.call(arguments, function (options) {
		if (!isValue(options)) return;
		process(Object(options), result);
	});
	return result;
};

},{"./is-value":58}],64:[function(require,module,exports){
"use strict";

var forEach = Array.prototype.forEach, create = Object.create;

// eslint-disable-next-line no-unused-vars
module.exports = function (arg /*, …args*/) {
	var set = create(null);
	forEach.call(arguments, function (name) {
		set[name] = true;
	});
	return set;
};

},{}],65:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Object.setPrototypeOf
	: require("./shim");

},{"./is-implemented":66,"./shim":67}],66:[function(require,module,exports){
"use strict";

var create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};

module.exports = function (/* CustomCreate*/) {
	var setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;
	if (typeof setPrototypeOf !== "function") return false;
	return getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;
};

},{}],67:[function(require,module,exports){
/* eslint no-proto: "off" */

// Big thanks to @WebReflection for sorting this out
// https://gist.github.com/WebReflection/5593554

"use strict";

var isObject        = require("../is-object")
  , value           = require("../valid-value")
  , objIsPrototypeOf = Object.prototype.isPrototypeOf
  , defineProperty  = Object.defineProperty
  , nullDesc        = {
	configurable: true,
	enumerable: false,
	writable: true,
	value: undefined
}
  , validate;

validate = function (obj, prototype) {
	value(obj);
	if (prototype === null || isObject(prototype)) return obj;
	throw new TypeError("Prototype must be null or an object");
};

module.exports = (function (status) {
	var fn, set;
	if (!status) return null;
	if (status.level === 2) {
		if (status.set) {
			set = status.set;
			fn = function (obj, prototype) {
				set.call(validate(obj, prototype), prototype);
				return obj;
			};
		} else {
			fn = function (obj, prototype) {
				validate(obj, prototype).__proto__ = prototype;
				return obj;
			};
		}
	} else {
		fn = function self(obj, prototype) {
			var isNullBase;
			validate(obj, prototype);
			isNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);
			if (isNullBase) delete self.nullPolyfill.__proto__;
			if (prototype === null) prototype = self.nullPolyfill;
			obj.__proto__ = prototype;
			if (isNullBase) defineProperty(self.nullPolyfill, "__proto__", nullDesc);
			return obj;
		};
	}
	return Object.defineProperty(fn, "level", {
		configurable: false,
		enumerable: false,
		writable: false,
		value: status.level
	});
}(
	(function () {
		var tmpObj1 = Object.create(null)
		  , tmpObj2 = {}
		  , set
		  , desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");

		if (desc) {
			try {
				set = desc.set; // Opera crashes at this point
				set.call(tmpObj1, tmpObj2);
			} catch (ignore) {}
			if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };
		}

		tmpObj1.__proto__ = tmpObj2;
		if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };

		tmpObj1 = {};
		tmpObj1.__proto__ = tmpObj2;
		if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };

		return false;
	})()
));

require("../create");

},{"../create":54,"../is-object":57,"../valid-value":69}],68:[function(require,module,exports){
"use strict";

module.exports = function (fn) {
	if (typeof fn !== "function") throw new TypeError(fn + " is not a function");
	return fn;
};

},{}],69:[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

module.exports = function (value) {
	if (!isValue(value)) throw new TypeError("Cannot use null or undefined");
	return value;
};

},{"./is-value":58}],70:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? String.prototype.contains
	: require("./shim");

},{"./is-implemented":71,"./shim":72}],71:[function(require,module,exports){
"use strict";

var str = "razdwatrzy";

module.exports = function () {
	if (typeof str.contains !== "function") return false;
	return (str.contains("dwa") === true) && (str.contains("foo") === false);
};

},{}],72:[function(require,module,exports){
"use strict";

var indexOf = String.prototype.indexOf;

module.exports = function (searchString/*, position*/) {
	return indexOf.call(this, searchString, arguments[1]) > -1;
};

},{}],73:[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString, id = objToString.call("");

module.exports = function (value) {
	return (
		typeof value === "string" ||
		(value &&
			typeof value === "object" &&
			(value instanceof String || objToString.call(value) === id)) ||
		false
	);
};

},{}],74:[function(require,module,exports){
"use strict";

var setPrototypeOf = require("es5-ext/object/set-prototype-of")
  , contains       = require("es5-ext/string/#/contains")
  , d              = require("d")
  , Symbol         = require("es6-symbol")
  , Iterator       = require("./");

var defineProperty = Object.defineProperty, ArrayIterator;

ArrayIterator = module.exports = function (arr, kind) {
	if (!(this instanceof ArrayIterator)) throw new TypeError("Constructor requires 'new'");
	Iterator.call(this, arr);
	if (!kind) kind = "value";
	else if (contains.call(kind, "key+value")) kind = "key+value";
	else if (contains.call(kind, "key")) kind = "key";
	else kind = "value";
	defineProperty(this, "__kind__", d("", kind));
};
if (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);

// Internal %ArrayIteratorPrototype% doesn't expose its constructor
delete ArrayIterator.prototype.constructor;

ArrayIterator.prototype = Object.create(Iterator.prototype, {
	_resolve: d(function (i) {
		if (this.__kind__ === "value") return this.__list__[i];
		if (this.__kind__ === "key+value") return [i, this.__list__[i]];
		return i;
	})
});
defineProperty(ArrayIterator.prototype, Symbol.toStringTag, d("c", "Array Iterator"));

},{"./":77,"d":31,"es5-ext/object/set-prototype-of":65,"es5-ext/string/#/contains":70,"es6-symbol":87}],75:[function(require,module,exports){
"use strict";

var isArguments = require("es5-ext/function/is-arguments")
  , callable    = require("es5-ext/object/valid-callable")
  , isString    = require("es5-ext/string/is-string")
  , get         = require("./get");

var isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;

module.exports = function (iterable, cb /*, thisArg*/) {
	var mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;
	if (isArray(iterable) || isArguments(iterable)) mode = "array";
	else if (isString(iterable)) mode = "string";
	else iterable = get(iterable);

	callable(cb);
	doBreak = function () {
		broken = true;
	};
	if (mode === "array") {
		some.call(iterable, function (value) {
			call.call(cb, thisArg, value, doBreak);
			return broken;
		});
		return;
	}
	if (mode === "string") {
		length = iterable.length;
		for (i = 0; i < length; ++i) {
			char = iterable[i];
			if (i + 1 < length) {
				code = char.charCodeAt(0);
				if (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];
			}
			call.call(cb, thisArg, char, doBreak);
			if (broken) break;
		}
		return;
	}
	result = iterable.next();

	while (!result.done) {
		call.call(cb, thisArg, result.value, doBreak);
		if (broken) return;
		result = iterable.next();
	}
};

},{"./get":76,"es5-ext/function/is-arguments":37,"es5-ext/object/valid-callable":68,"es5-ext/string/is-string":73}],76:[function(require,module,exports){
"use strict";

var isArguments    = require("es5-ext/function/is-arguments")
  , isString       = require("es5-ext/string/is-string")
  , ArrayIterator  = require("./array")
  , StringIterator = require("./string")
  , iterable       = require("./valid-iterable")
  , iteratorSymbol = require("es6-symbol").iterator;

module.exports = function (obj) {
	if (typeof iterable(obj)[iteratorSymbol] === "function") return obj[iteratorSymbol]();
	if (isArguments(obj)) return new ArrayIterator(obj);
	if (isString(obj)) return new StringIterator(obj);
	return new ArrayIterator(obj);
};

},{"./array":74,"./string":79,"./valid-iterable":80,"es5-ext/function/is-arguments":37,"es5-ext/string/is-string":73,"es6-symbol":87}],77:[function(require,module,exports){
"use strict";

var clear    = require("es5-ext/array/#/clear")
  , assign   = require("es5-ext/object/assign")
  , callable = require("es5-ext/object/valid-callable")
  , value    = require("es5-ext/object/valid-value")
  , d        = require("d")
  , autoBind = require("d/auto-bind")
  , Symbol   = require("es6-symbol");

var defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;

module.exports = Iterator = function (list, context) {
	if (!(this instanceof Iterator)) throw new TypeError("Constructor requires 'new'");
	defineProperties(this, {
		__list__: d("w", value(list)),
		__context__: d("w", context),
		__nextIndex__: d("w", 0)
	});
	if (!context) return;
	callable(context.on);
	context.on("_add", this._onAdd);
	context.on("_delete", this._onDelete);
	context.on("_clear", this._onClear);
};

// Internal %IteratorPrototype% doesn't expose its constructor
delete Iterator.prototype.constructor;

defineProperties(
	Iterator.prototype,
	assign(
		{
			_next: d(function () {
				var i;
				if (!this.__list__) return undefined;
				if (this.__redo__) {
					i = this.__redo__.shift();
					if (i !== undefined) return i;
				}
				if (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;
				this._unBind();
				return undefined;
			}),
			next: d(function () {
				return this._createResult(this._next());
			}),
			_createResult: d(function (i) {
				if (i === undefined) return { done: true, value: undefined };
				return { done: false, value: this._resolve(i) };
			}),
			_resolve: d(function (i) {
				return this.__list__[i];
			}),
			_unBind: d(function () {
				this.__list__ = null;
				delete this.__redo__;
				if (!this.__context__) return;
				this.__context__.off("_add", this._onAdd);
				this.__context__.off("_delete", this._onDelete);
				this.__context__.off("_clear", this._onClear);
				this.__context__ = null;
			}),
			toString: d(function () {
				return "[object " + (this[Symbol.toStringTag] || "Object") + "]";
			})
		},
		autoBind({
			_onAdd: d(function (index) {
				if (index >= this.__nextIndex__) return;
				++this.__nextIndex__;
				if (!this.__redo__) {
					defineProperty(this, "__redo__", d("c", [index]));
					return;
				}
				this.__redo__.forEach(function (redo, i) {
					if (redo >= index) this.__redo__[i] = ++redo;
				}, this);
				this.__redo__.push(index);
			}),
			_onDelete: d(function (index) {
				var i;
				if (index >= this.__nextIndex__) return;
				--this.__nextIndex__;
				if (!this.__redo__) return;
				i = this.__redo__.indexOf(index);
				if (i !== -1) this.__redo__.splice(i, 1);
				this.__redo__.forEach(function (redo, j) {
					if (redo > index) this.__redo__[j] = --redo;
				}, this);
			}),
			_onClear: d(function () {
				if (this.__redo__) clear.call(this.__redo__);
				this.__nextIndex__ = 0;
			})
		})
	)
);

defineProperty(
	Iterator.prototype,
	Symbol.iterator,
	d(function () {
		return this;
	})
);

},{"d":31,"d/auto-bind":30,"es5-ext/array/#/clear":32,"es5-ext/object/assign":50,"es5-ext/object/valid-callable":68,"es5-ext/object/valid-value":69,"es6-symbol":87}],78:[function(require,module,exports){
"use strict";

var isArguments = require("es5-ext/function/is-arguments")
  , isValue     = require("es5-ext/object/is-value")
  , isString    = require("es5-ext/string/is-string");

var iteratorSymbol = require("es6-symbol").iterator
  , isArray        = Array.isArray;

module.exports = function (value) {
	if (!isValue(value)) return false;
	if (isArray(value)) return true;
	if (isString(value)) return true;
	if (isArguments(value)) return true;
	return typeof value[iteratorSymbol] === "function";
};

},{"es5-ext/function/is-arguments":37,"es5-ext/object/is-value":58,"es5-ext/string/is-string":73,"es6-symbol":87}],79:[function(require,module,exports){
// Thanks @mathiasbynens
// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols

"use strict";

var setPrototypeOf = require("es5-ext/object/set-prototype-of")
  , d              = require("d")
  , Symbol         = require("es6-symbol")
  , Iterator       = require("./");

var defineProperty = Object.defineProperty, StringIterator;

StringIterator = module.exports = function (str) {
	if (!(this instanceof StringIterator)) throw new TypeError("Constructor requires 'new'");
	str = String(str);
	Iterator.call(this, str);
	defineProperty(this, "__length__", d("", str.length));
};
if (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);

// Internal %ArrayIteratorPrototype% doesn't expose its constructor
delete StringIterator.prototype.constructor;

StringIterator.prototype = Object.create(Iterator.prototype, {
	_next: d(function () {
		if (!this.__list__) return undefined;
		if (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;
		this._unBind();
		return undefined;
	}),
	_resolve: d(function (i) {
		var char = this.__list__[i], code;
		if (this.__nextIndex__ === this.__length__) return char;
		code = char.charCodeAt(0);
		if (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];
		return char;
	})
});
defineProperty(StringIterator.prototype, Symbol.toStringTag, d("c", "String Iterator"));

},{"./":77,"d":31,"es5-ext/object/set-prototype-of":65,"es6-symbol":87}],80:[function(require,module,exports){
"use strict";

var isIterable = require("./is-iterable");

module.exports = function (value) {
	if (!isIterable(value)) throw new TypeError(value + " is not iterable");
	return value;
};

},{"./is-iterable":78}],81:[function(require,module,exports){
'use strict';

if (!require('./is-implemented')()) {
	Object.defineProperty(require('es5-ext/global'), 'Map',
		{ value: require('./polyfill'), configurable: true, enumerable: false,
			writable: true });
}

},{"./is-implemented":82,"./polyfill":86,"es5-ext/global":40}],82:[function(require,module,exports){
'use strict';

module.exports = function () {
	var map, iterator, result;
	if (typeof Map !== 'function') return false;
	try {
		// WebKit doesn't support arguments and crashes
		map = new Map([['raz', 'one'], ['dwa', 'two'], ['trzy', 'three']]);
	} catch (e) {
		return false;
	}
	if (String(map) !== '[object Map]') return false;
	if (map.size !== 3) return false;
	if (typeof map.clear !== 'function') return false;
	if (typeof map.delete !== 'function') return false;
	if (typeof map.entries !== 'function') return false;
	if (typeof map.forEach !== 'function') return false;
	if (typeof map.get !== 'function') return false;
	if (typeof map.has !== 'function') return false;
	if (typeof map.keys !== 'function') return false;
	if (typeof map.set !== 'function') return false;
	if (typeof map.values !== 'function') return false;

	iterator = map.entries();
	result = iterator.next();
	if (result.done !== false) return false;
	if (!result.value) return false;
	if (result.value[0] !== 'raz') return false;
	if (result.value[1] !== 'one') return false;

	return true;
};

},{}],83:[function(require,module,exports){
// Exports true if environment provides native `Map` implementation,
// whatever that is.

'use strict';

module.exports = (function () {
	if (typeof Map === 'undefined') return false;
	return (Object.prototype.toString.call(new Map()) === '[object Map]');
}());

},{}],84:[function(require,module,exports){
'use strict';

module.exports = require('es5-ext/object/primitive-set')('key',
	'value', 'key+value');

},{"es5-ext/object/primitive-set":64}],85:[function(require,module,exports){
'use strict';

var setPrototypeOf    = require('es5-ext/object/set-prototype-of')
  , d                 = require('d')
  , Iterator          = require('es6-iterator')
  , toStringTagSymbol = require('es6-symbol').toStringTag
  , kinds             = require('./iterator-kinds')

  , defineProperties = Object.defineProperties
  , unBind = Iterator.prototype._unBind
  , MapIterator;

MapIterator = module.exports = function (map, kind) {
	if (!(this instanceof MapIterator)) return new MapIterator(map, kind);
	Iterator.call(this, map.__mapKeysData__, map);
	if (!kind || !kinds[kind]) kind = 'key+value';
	defineProperties(this, {
		__kind__: d('', kind),
		__values__: d('w', map.__mapValuesData__)
	});
};
if (setPrototypeOf) setPrototypeOf(MapIterator, Iterator);

MapIterator.prototype = Object.create(Iterator.prototype, {
	constructor: d(MapIterator),
	_resolve: d(function (i) {
		if (this.__kind__ === 'value') return this.__values__[i];
		if (this.__kind__ === 'key') return this.__list__[i];
		return [this.__list__[i], this.__values__[i]];
	}),
	_unBind: d(function () {
		this.__values__ = null;
		unBind.call(this);
	}),
	toString: d(function () { return '[object Map Iterator]'; })
});
Object.defineProperty(MapIterator.prototype, toStringTagSymbol,
	d('c', 'Map Iterator'));

},{"./iterator-kinds":84,"d":31,"es5-ext/object/set-prototype-of":65,"es6-iterator":77,"es6-symbol":87}],86:[function(require,module,exports){
'use strict';

var clear          = require('es5-ext/array/#/clear')
  , eIndexOf       = require('es5-ext/array/#/e-index-of')
  , setPrototypeOf = require('es5-ext/object/set-prototype-of')
  , callable       = require('es5-ext/object/valid-callable')
  , validValue     = require('es5-ext/object/valid-value')
  , d              = require('d')
  , ee             = require('event-emitter')
  , Symbol         = require('es6-symbol')
  , iterator       = require('es6-iterator/valid-iterable')
  , forOf          = require('es6-iterator/for-of')
  , Iterator       = require('./lib/iterator')
  , isNative       = require('./is-native-implemented')

  , call = Function.prototype.call
  , defineProperties = Object.defineProperties, getPrototypeOf = Object.getPrototypeOf
  , MapPoly;

module.exports = MapPoly = function (/*iterable*/) {
	var iterable = arguments[0], keys, values, self;
	if (!(this instanceof MapPoly)) throw new TypeError('Constructor requires \'new\'');
	if (isNative && setPrototypeOf && (Map !== MapPoly)) {
		self = setPrototypeOf(new Map(), getPrototypeOf(this));
	} else {
		self = this;
	}
	if (iterable != null) iterator(iterable);
	defineProperties(self, {
		__mapKeysData__: d('c', keys = []),
		__mapValuesData__: d('c', values = [])
	});
	if (!iterable) return self;
	forOf(iterable, function (value) {
		var key = validValue(value)[0];
		value = value[1];
		if (eIndexOf.call(keys, key) !== -1) return;
		keys.push(key);
		values.push(value);
	}, self);
	return self;
};

if (isNative) {
	if (setPrototypeOf) setPrototypeOf(MapPoly, Map);
	MapPoly.prototype = Object.create(Map.prototype, {
		constructor: d(MapPoly)
	});
}

ee(defineProperties(MapPoly.prototype, {
	clear: d(function () {
		if (!this.__mapKeysData__.length) return;
		clear.call(this.__mapKeysData__);
		clear.call(this.__mapValuesData__);
		this.emit('_clear');
	}),
	delete: d(function (key) {
		var index = eIndexOf.call(this.__mapKeysData__, key);
		if (index === -1) return false;
		this.__mapKeysData__.splice(index, 1);
		this.__mapValuesData__.splice(index, 1);
		this.emit('_delete', index, key);
		return true;
	}),
	entries: d(function () { return new Iterator(this, 'key+value'); }),
	forEach: d(function (cb/*, thisArg*/) {
		var thisArg = arguments[1], iterator, result;
		callable(cb);
		iterator = this.entries();
		result = iterator._next();
		while (result !== undefined) {
			call.call(cb, thisArg, this.__mapValuesData__[result],
				this.__mapKeysData__[result], this);
			result = iterator._next();
		}
	}),
	get: d(function (key) {
		var index = eIndexOf.call(this.__mapKeysData__, key);
		if (index === -1) return;
		return this.__mapValuesData__[index];
	}),
	has: d(function (key) {
		return (eIndexOf.call(this.__mapKeysData__, key) !== -1);
	}),
	keys: d(function () { return new Iterator(this, 'key'); }),
	set: d(function (key, value) {
		var index = eIndexOf.call(this.__mapKeysData__, key), emit;
		if (index === -1) {
			index = this.__mapKeysData__.push(key) - 1;
			emit = true;
		}
		this.__mapValuesData__[index] = value;
		if (emit) this.emit('_add', index, key);
		return this;
	}),
	size: d.gs(function () { return this.__mapKeysData__.length; }),
	values: d(function () { return new Iterator(this, 'value'); }),
	toString: d(function () { return '[object Map]'; })
}));
Object.defineProperty(MapPoly.prototype, Symbol.iterator, d(function () {
	return this.entries();
}));
Object.defineProperty(MapPoly.prototype, Symbol.toStringTag, d('c', 'Map'));

},{"./is-native-implemented":83,"./lib/iterator":85,"d":31,"es5-ext/array/#/clear":32,"es5-ext/array/#/e-index-of":33,"es5-ext/object/set-prototype-of":65,"es5-ext/object/valid-callable":68,"es5-ext/object/valid-value":69,"es6-iterator/for-of":75,"es6-iterator/valid-iterable":80,"es6-symbol":87,"event-emitter":92}],87:[function(require,module,exports){
'use strict';

module.exports = require('./is-implemented')() ? Symbol : require('./polyfill');

},{"./is-implemented":88,"./polyfill":90}],88:[function(require,module,exports){
'use strict';

var validTypes = { object: true, symbol: true };

module.exports = function () {
	var symbol;
	if (typeof Symbol !== 'function') return false;
	symbol = Symbol('test symbol');
	try { String(symbol); } catch (e) { return false; }

	// Return 'true' also for polyfills
	if (!validTypes[typeof Symbol.iterator]) return false;
	if (!validTypes[typeof Symbol.toPrimitive]) return false;
	if (!validTypes[typeof Symbol.toStringTag]) return false;

	return true;
};

},{}],89:[function(require,module,exports){
'use strict';

module.exports = function (x) {
	if (!x) return false;
	if (typeof x === 'symbol') return true;
	if (!x.constructor) return false;
	if (x.constructor.name !== 'Symbol') return false;
	return (x[x.constructor.toStringTag] === 'Symbol');
};

},{}],90:[function(require,module,exports){
// ES2015 Symbol polyfill for environments that do not (or partially) support it

'use strict';

var d              = require('d')
  , validateSymbol = require('./validate-symbol')

  , create = Object.create, defineProperties = Object.defineProperties
  , defineProperty = Object.defineProperty, objPrototype = Object.prototype
  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)
  , isNativeSafe;

if (typeof Symbol === 'function') {
	NativeSymbol = Symbol;
	try {
		String(NativeSymbol());
		isNativeSafe = true;
	} catch (ignore) {}
}

var generateName = (function () {
	var created = create(null);
	return function (desc) {
		var postfix = 0, name, ie11BugWorkaround;
		while (created[desc + (postfix || '')]) ++postfix;
		desc += (postfix || '');
		created[desc] = true;
		name = '@@' + desc;
		defineProperty(objPrototype, name, d.gs(null, function (value) {
			// For IE11 issue see:
			// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/
			//    ie11-broken-getters-on-dom-objects
			// https://github.com/medikoo/es6-symbol/issues/12
			if (ie11BugWorkaround) return;
			ie11BugWorkaround = true;
			defineProperty(this, name, d(value));
			ie11BugWorkaround = false;
		}));
		return name;
	};
}());

// Internal constructor (not one exposed) for creating Symbol instances.
// This one is used to ensure that `someSymbol instanceof Symbol` always return false
HiddenSymbol = function Symbol(description) {
	if (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');
	return SymbolPolyfill(description);
};

// Exposed `Symbol` constructor
// (returns instances of HiddenSymbol)
module.exports = SymbolPolyfill = function Symbol(description) {
	var symbol;
	if (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');
	if (isNativeSafe) return NativeSymbol(description);
	symbol = create(HiddenSymbol.prototype);
	description = (description === undefined ? '' : String(description));
	return defineProperties(symbol, {
		__description__: d('', description),
		__name__: d('', generateName(description))
	});
};
defineProperties(SymbolPolyfill, {
	for: d(function (key) {
		if (globalSymbols[key]) return globalSymbols[key];
		return (globalSymbols[key] = SymbolPolyfill(String(key)));
	}),
	keyFor: d(function (s) {
		var key;
		validateSymbol(s);
		for (key in globalSymbols) if (globalSymbols[key] === s) return key;
	}),

	// To ensure proper interoperability with other native functions (e.g. Array.from)
	// fallback to eventual native implementation of given symbol
	hasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),
	isConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||
		SymbolPolyfill('isConcatSpreadable')),
	iterator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),
	match: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),
	replace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),
	search: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),
	species: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),
	split: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),
	toPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),
	toStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),
	unscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))
});

// Internal tweaks for real symbol producer
defineProperties(HiddenSymbol.prototype, {
	constructor: d(SymbolPolyfill),
	toString: d('', function () { return this.__name__; })
});

// Proper implementation of methods exposed on Symbol.prototype
// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
defineProperties(SymbolPolyfill.prototype, {
	toString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),
	valueOf: d(function () { return validateSymbol(this); })
});
defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {
	var symbol = validateSymbol(this);
	if (typeof symbol === 'symbol') return symbol;
	return symbol.toString();
}));
defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));

// Proper implementaton of toPrimitive and toStringTag for returned symbol instances
defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,
	d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));

// Note: It's important to define `toPrimitive` as last one, as some implementations
// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)
// And that may invoke error in definition flow:
// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149
defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,
	d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));

},{"./validate-symbol":91,"d":31}],91:[function(require,module,exports){
'use strict';

var isSymbol = require('./is-symbol');

module.exports = function (value) {
	if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
	return value;
};

},{"./is-symbol":89}],92:[function(require,module,exports){
'use strict';

var d        = require('d')
  , callable = require('es5-ext/object/valid-callable')

  , apply = Function.prototype.apply, call = Function.prototype.call
  , create = Object.create, defineProperty = Object.defineProperty
  , defineProperties = Object.defineProperties
  , hasOwnProperty = Object.prototype.hasOwnProperty
  , descriptor = { configurable: true, enumerable: false, writable: true }

  , on, once, off, emit, methods, descriptors, base;

on = function (type, listener) {
	var data;

	callable(listener);

	if (!hasOwnProperty.call(this, '__ee__')) {
		data = descriptor.value = create(null);
		defineProperty(this, '__ee__', descriptor);
		descriptor.value = null;
	} else {
		data = this.__ee__;
	}
	if (!data[type]) data[type] = listener;
	else if (typeof data[type] === 'object') data[type].push(listener);
	else data[type] = [data[type], listener];

	return this;
};

once = function (type, listener) {
	var once, self;

	callable(listener);
	self = this;
	on.call(this, type, once = function () {
		off.call(self, type, once);
		apply.call(listener, this, arguments);
	});

	once.__eeOnceListener__ = listener;
	return this;
};

off = function (type, listener) {
	var data, listeners, candidate, i;

	callable(listener);

	if (!hasOwnProperty.call(this, '__ee__')) return this;
	data = this.__ee__;
	if (!data[type]) return this;
	listeners = data[type];

	if (typeof listeners === 'object') {
		for (i = 0; (candidate = listeners[i]); ++i) {
			if ((candidate === listener) ||
					(candidate.__eeOnceListener__ === listener)) {
				if (listeners.length === 2) data[type] = listeners[i ? 0 : 1];
				else listeners.splice(i, 1);
			}
		}
	} else {
		if ((listeners === listener) ||
				(listeners.__eeOnceListener__ === listener)) {
			delete data[type];
		}
	}

	return this;
};

emit = function (type) {
	var i, l, listener, listeners, args;

	if (!hasOwnProperty.call(this, '__ee__')) return;
	listeners = this.__ee__[type];
	if (!listeners) return;

	if (typeof listeners === 'object') {
		l = arguments.length;
		args = new Array(l - 1);
		for (i = 1; i < l; ++i) args[i - 1] = arguments[i];

		listeners = listeners.slice();
		for (i = 0; (listener = listeners[i]); ++i) {
			apply.call(listener, this, args);
		}
	} else {
		switch (arguments.length) {
		case 1:
			call.call(listeners, this);
			break;
		case 2:
			call.call(listeners, this, arguments[1]);
			break;
		case 3:
			call.call(listeners, this, arguments[1], arguments[2]);
			break;
		default:
			l = arguments.length;
			args = new Array(l - 1);
			for (i = 1; i < l; ++i) {
				args[i - 1] = arguments[i];
			}
			apply.call(listeners, this, args);
		}
	}
};

methods = {
	on: on,
	once: once,
	off: off,
	emit: emit
};

descriptors = {
	on: d(on),
	once: d(once),
	off: d(off),
	emit: d(emit)
};

base = defineProperties({}, descriptors);

module.exports = exports = function (o) {
	return (o == null) ? create(base) : defineProperties(Object(o), descriptors);
};
exports.methods = methods;

},{"d":31,"es5-ext/object/valid-callable":68}],93:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],94:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],95:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],96:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],97:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],98:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],99:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":101}],100:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

}).call(this,require('_process'))
},{"_process":101}],101:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],102:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":103}],103:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":105,"./_stream_writable":107,"core-util-is":27,"inherits":96,"process-nextick-args":100}],104:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":106,"core-util-is":27,"inherits":96}],105:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

// TODO(bmeurer): Change this back to const once hole checks are
// properly optimized away early in Ignition+TurboFan.
/*<replacement>*/
var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":103,"./internal/streams/BufferList":108,"./internal/streams/destroy":109,"./internal/streams/stream":110,"_process":101,"core-util-is":27,"events":93,"inherits":96,"isarray":98,"process-nextick-args":100,"safe-buffer":115,"string_decoder/":136,"util":24}],106:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return stream.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":103,"core-util-is":27,"inherits":96}],107:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/
var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = _isUint8Array(chunk) && !state.objectMode;

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":103,"./internal/streams/destroy":109,"./internal/streams/stream":110,"_process":101,"core-util-is":27,"inherits":96,"process-nextick-args":100,"safe-buffer":115,"util-deprecate":140}],108:[function(require,module,exports){
'use strict';

/*<replacement>*/

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();
},{"safe-buffer":115}],109:[function(require,module,exports){
'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":100}],110:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":93}],111:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":112}],112:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":103,"./lib/_stream_passthrough.js":104,"./lib/_stream_readable.js":105,"./lib/_stream_transform.js":106,"./lib/_stream_writable.js":107}],113:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":112}],114:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":107}],115:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":26}],116:[function(require,module,exports){
"use strict";
var selectorParser_1 = require('./selectorParser');
function classNameFromVNode(vNode) {
    var _a = selectorParser_1.selectorParser(vNode).className, cn = _a === void 0 ? '' : _a;
    if (!vNode.data) {
        return cn;
    }
    var _b = vNode.data, dataClass = _b.class, props = _b.props;
    if (dataClass) {
        var c = Object.keys(dataClass)
            .filter(function (cl) { return dataClass[cl]; });
        cn += " " + c.join(" ");
    }
    if (props && props.className) {
        cn += " " + props.className;
    }
    return cn && cn.trim();
}
exports.classNameFromVNode = classNameFromVNode;

},{"./selectorParser":122}],117:[function(require,module,exports){
"use strict";
function curry2(select) {
    return function selector(sel, vNode) {
        switch (arguments.length) {
            case 0: return select;
            case 1: return function (_vNode) { return select(sel, _vNode); };
            default: return select(sel, vNode);
        }
    };
}
exports.curry2 = curry2;
;

},{}],118:[function(require,module,exports){
"use strict";
var language_1 = require('./language');
var parent_symbol_1 = require('./parent-symbol');
function findMatches(cssSelector, vNode) {
    var selector = language_1.language(cssSelector);
    var matches = [];
    traverseVNode(vNode, addParent); // add mapping to the parent selectorParser
    traverseVNode(vNode, function (currentNode) {
        var data = currentNode.data;
        var result;
        if (data && data.fn) {
            if (Array.isArray(data.args)) {
                result = selector(data.fn.apply(null, data.args));
            }
            else if (data.args) {
                result = selector(data.fn.call(null, data.args));
            }
            else {
                result = selector(data.fn());
            }
        }
        else {
            result = selector(currentNode);
        }
        if (result) {
            if (!Array.isArray(result)) {
                result = [result];
            }
            matches.push.apply(matches, result);
        }
    });
    return matches;
}
exports.findMatches = findMatches;
function traverseVNode(vNode, f) {
    function recurse(currentNode, isParent, parentVNode) {
        var length = currentNode.children && currentNode.children.length || 0;
        for (var i = 0; i < length; ++i) {
            var children = currentNode.children;
            if (children && children[i] && typeof children[i] !== 'string') {
                var child = children[i];
                recurse(child, false, currentNode);
            }
        }
        f(currentNode, isParent, isParent ? void 0 : parentVNode);
    }
    recurse(vNode, true);
}
function addParent(vNode, isParent, parent) {
    if (isParent) {
        return void 0;
    }
    if (!vNode.data) {
        vNode.data = {};
    }
    if (!vNode.data[parent_symbol_1.default]) {
        Object.defineProperty(vNode.data, parent_symbol_1.default, {
            value: parent,
        });
    }
}

},{"./language":120,"./parent-symbol":121}],119:[function(require,module,exports){
"use strict";
var curry2_1 = require('./curry2');
var findMatches_1 = require('./findMatches');
exports.select = curry2_1.curry2(findMatches_1.findMatches);
var selectorParser_1 = require('./selectorParser');
exports.selectorParser = selectorParser_1.selectorParser;
var classNameFromVNode_1 = require('./classNameFromVNode');
exports.classNameFromVNode = classNameFromVNode_1.classNameFromVNode;

},{"./classNameFromVNode":116,"./curry2":117,"./findMatches":118,"./selectorParser":122}],120:[function(require,module,exports){
"use strict";
var cssauron2_1 = require('cssauron2');
var selectorParser_1 = require('./selectorParser');
var classNameFromVNode_1 = require('./classNameFromVNode');
var parent_symbol_1 = require('./parent-symbol');
exports.language = cssauron2_1.default({
    tag: function (vNode) { return selectorParser_1.selectorParser(vNode).tagName; },
    class: function (vNode) { return classNameFromVNode_1.classNameFromVNode(vNode); },
    id: function (vNode) { return selectorParser_1.selectorParser(vNode).id; },
    children: function (vNode) { return vNode.children || []; },
    parent: function (vNode) { return vNode.data[parent_symbol_1.default] || vNode; },
    contents: function (vNode) { return vNode.text; },
    attr: function (vNode, attr) {
        if (vNode.data) {
            var _a = vNode.data, _b = _a.attrs, attrs = _b === void 0 ? {} : _b, _c = _a.props, props = _c === void 0 ? {} : _c;
            if (attrs[attr]) {
                return attrs[attr];
            }
            if (props[attr]) {
                return props[attr];
            }
        }
    },
});

},{"./classNameFromVNode":116,"./parent-symbol":121,"./selectorParser":122,"cssauron2":28}],121:[function(require,module,exports){
(function (global){
"use strict";
var root;
if (typeof self !== 'undefined') {
    root = self;
}
else if (typeof window !== 'undefined') {
    root = window;
}
else if (typeof global !== 'undefined') {
    root = global;
}
else {
    root = Function('return this')();
}
var Symbol = root.Symbol;
var parentSymbol;
if (typeof Symbol === 'function') {
    parentSymbol = Symbol('parent');
}
else {
    parentSymbol = '@@snabbdom-selector-parent';
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = parentSymbol;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],122:[function(require,module,exports){
"use strict";
function selectorParser(node) {
    if (!node.sel) {
        return {
            tagName: '',
            id: '',
            className: '',
        };
    }
    var sel = node.sel;
    var hashIdx = sel.indexOf('#');
    var dotIdx = sel.indexOf('.', hashIdx);
    var hash = hashIdx > 0 ? hashIdx : sel.length;
    var dot = dotIdx > 0 ? dotIdx : sel.length;
    var tagName = hashIdx !== -1 || dotIdx !== -1 ?
        sel.slice(0, Math.min(hash, dot)) :
        sel;
    var id = hash < dot ? sel.slice(hash + 1, dot) : void 0;
    var className = dotIdx > 0 ? sel.slice(dot + 1).replace(/\./g, ' ') : void 0;
    return {
        tagName: tagName,
        id: id,
        className: className,
    };
}
exports.selectorParser = selectorParser;

},{}],123:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("./vnode");
var is = require("./is");
function addNS(data, children, sel) {
    data.ns = 'http://www.w3.org/2000/svg';
    if (sel !== 'foreignObject' && children !== undefined) {
        for (var i = 0; i < children.length; ++i) {
            var childData = children[i].data;
            if (childData !== undefined) {
                addNS(childData, children[i].children, children[i].sel);
            }
        }
    }
}
function h(sel, b, c) {
    var data = {}, children, text, i;
    if (c !== undefined) {
        data = b;
        if (is.array(c)) {
            children = c;
        }
        else if (is.primitive(c)) {
            text = c;
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined) {
        if (is.array(b)) {
            children = b;
        }
        else if (is.primitive(b)) {
            text = b;
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (is.array(children)) {
        for (i = 0; i < children.length; ++i) {
            if (is.primitive(children[i]))
                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i]);
        }
    }
    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
        addNS(data, children, sel);
    }
    return vnode_1.vnode(sel, data, children, text, undefined);
}
exports.h = h;
;
exports.default = h;

},{"./is":125,"./vnode":134}],124:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function createElement(tagName) {
    return document.createElement(tagName);
}
function createElementNS(namespaceURI, qualifiedName) {
    return document.createElementNS(namespaceURI, qualifiedName);
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    node.appendChild(child);
}
function parentNode(node) {
    return node.parentNode;
}
function nextSibling(node) {
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
exports.htmlDomApi = {
    createElement: createElement,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    getTextContent: getTextContent,
    isElement: isElement,
    isText: isText,
    isComment: isComment,
};
exports.default = exports.htmlDomApi;

},{}],125:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.array = Array.isArray;
function primitive(s) {
    return typeof s === 'string' || typeof s === 'number';
}
exports.primitive = primitive;

},{}],126:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xlinkNS = 'http://www.w3.org/1999/xlink';
var xmlNS = 'http://www.w3.org/XML/1998/namespace';
var colonChar = 58;
var xChar = 120;
function updateAttrs(oldVnode, vnode) {
    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;
    if (!oldAttrs && !attrs)
        return;
    if (oldAttrs === attrs)
        return;
    oldAttrs = oldAttrs || {};
    attrs = attrs || {};
    // update modified attributes, add new attributes
    for (key in attrs) {
        var cur = attrs[key];
        var old = oldAttrs[key];
        if (old !== cur) {
            if (cur === true) {
                elm.setAttribute(key, "");
            }
            else if (cur === false) {
                elm.removeAttribute(key);
            }
            else {
                if (key.charCodeAt(0) !== xChar) {
                    elm.setAttribute(key, cur);
                }
                else if (key.charCodeAt(3) === colonChar) {
                    // Assume xml namespace
                    elm.setAttributeNS(xmlNS, key, cur);
                }
                else if (key.charCodeAt(5) === colonChar) {
                    // Assume xlink namespace
                    elm.setAttributeNS(xlinkNS, key, cur);
                }
                else {
                    elm.setAttribute(key, cur);
                }
            }
        }
    }
    // remove removed attributes
    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
    // the other option is to remove all attributes with value == undefined
    for (key in oldAttrs) {
        if (!(key in attrs)) {
            elm.removeAttribute(key);
        }
    }
}
exports.attributesModule = { create: updateAttrs, update: updateAttrs };
exports.default = exports.attributesModule;

},{}],127:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function updateClass(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;
    if (!oldClass && !klass)
        return;
    if (oldClass === klass)
        return;
    oldClass = oldClass || {};
    klass = klass || {};
    for (name in oldClass) {
        if (!klass[name]) {
            elm.classList.remove(name);
        }
    }
    for (name in klass) {
        cur = klass[name];
        if (cur !== oldClass[name]) {
            elm.classList[cur ? 'add' : 'remove'](name);
        }
    }
}
exports.classModule = { create: updateClass, update: updateClass };
exports.default = exports.classModule;

},{}],128:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CAPS_REGEX = /[A-Z]/g;
function updateDataset(oldVnode, vnode) {
    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;
    if (!oldDataset && !dataset)
        return;
    if (oldDataset === dataset)
        return;
    oldDataset = oldDataset || {};
    dataset = dataset || {};
    var d = elm.dataset;
    for (key in oldDataset) {
        if (!dataset[key]) {
            if (d) {
                if (key in d) {
                    delete d[key];
                }
            }
            else {
                elm.removeAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase());
            }
        }
    }
    for (key in dataset) {
        if (oldDataset[key] !== dataset[key]) {
            if (d) {
                d[key] = dataset[key];
            }
            else {
                elm.setAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(), dataset[key]);
            }
        }
    }
}
exports.datasetModule = { create: updateDataset, update: updateDataset };
exports.default = exports.datasetModule;

},{}],129:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function updateProps(oldVnode, vnode) {
    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;
    if (!oldProps && !props)
        return;
    if (oldProps === props)
        return;
    oldProps = oldProps || {};
    props = props || {};
    for (key in oldProps) {
        if (!props[key]) {
            delete elm[key];
        }
    }
    for (key in props) {
        cur = props[key];
        old = oldProps[key];
        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {
            elm[key] = cur;
        }
    }
}
exports.propsModule = { create: updateProps, update: updateProps };
exports.default = exports.propsModule;

},{}],130:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;
var nextFrame = function (fn) { raf(function () { raf(fn); }); };
function setNextFrame(obj, prop, val) {
    nextFrame(function () { obj[prop] = val; });
}
function updateStyle(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;
    if (!oldStyle && !style)
        return;
    if (oldStyle === style)
        return;
    oldStyle = oldStyle || {};
    style = style || {};
    var oldHasDel = 'delayed' in oldStyle;
    for (name in oldStyle) {
        if (!style[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.removeProperty(name);
            }
            else {
                elm.style[name] = '';
            }
        }
    }
    for (name in style) {
        cur = style[name];
        if (name === 'delayed' && style.delayed) {
            for (var name2 in style.delayed) {
                cur = style.delayed[name2];
                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                    setNextFrame(elm.style, name2, cur);
                }
            }
        }
        else if (name !== 'remove' && cur !== oldStyle[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.setProperty(name, cur);
            }
            else {
                elm.style[name] = cur;
            }
        }
    }
}
function applyDestroyStyle(vnode) {
    var style, name, elm = vnode.elm, s = vnode.data.style;
    if (!s || !(style = s.destroy))
        return;
    for (name in style) {
        elm.style[name] = style[name];
    }
}
function applyRemoveStyle(vnode, rm) {
    var s = vnode.data.style;
    if (!s || !s.remove) {
        rm();
        return;
    }
    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];
    for (name in style) {
        applied.push(name);
        elm.style[name] = style[name];
    }
    compStyle = getComputedStyle(elm);
    var props = compStyle['transition-property'].split(', ');
    for (; i < props.length; ++i) {
        if (applied.indexOf(props[i]) !== -1)
            amount++;
    }
    elm.addEventListener('transitionend', function (ev) {
        if (ev.target === elm)
            --amount;
        if (amount === 0)
            rm();
    });
}
exports.styleModule = {
    create: updateStyle,
    update: updateStyle,
    destroy: applyDestroyStyle,
    remove: applyRemoveStyle
};
exports.default = exports.styleModule;

},{}],131:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("./vnode");
var is = require("./is");
var htmldomapi_1 = require("./htmldomapi");
function isUndef(s) { return s === undefined; }
function isDef(s) { return s !== undefined; }
var emptyNode = vnode_1.default('', {}, [], undefined, undefined);
function sameVnode(vnode1, vnode2) {
    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;
}
function isVnode(vnode) {
    return vnode.sel !== undefined;
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var i, map = {}, key, ch;
    for (i = beginIdx; i <= endIdx; ++i) {
        ch = children[i];
        if (ch != null) {
            key = ch.key;
            if (key !== undefined)
                map[key] = i;
        }
    }
    return map;
}
var hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];
var h_1 = require("./h");
exports.h = h_1.h;
var thunk_1 = require("./thunk");
exports.thunk = thunk_1.thunk;
function init(modules, domApi) {
    var i, j, cbs = {};
    var api = domApi !== undefined ? domApi : htmldomapi_1.default;
    for (i = 0; i < hooks.length; ++i) {
        cbs[hooks[i]] = [];
        for (j = 0; j < modules.length; ++j) {
            var hook = modules[j][hooks[i]];
            if (hook !== undefined) {
                cbs[hooks[i]].push(hook);
            }
        }
    }
    function emptyNodeAt(elm) {
        var id = elm.id ? '#' + elm.id : '';
        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';
        return vnode_1.default(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
    }
    function createRmCb(childElm, listeners) {
        return function rmCb() {
            if (--listeners === 0) {
                var parent_1 = api.parentNode(childElm);
                api.removeChild(parent_1, childElm);
            }
        };
    }
    function createElm(vnode, insertedVnodeQueue) {
        var i, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.init)) {
                i(vnode);
                data = vnode.data;
            }
        }
        var children = vnode.children, sel = vnode.sel;
        if (sel === '!') {
            if (isUndef(vnode.text)) {
                vnode.text = '';
            }
            vnode.elm = api.createComment(vnode.text);
        }
        else if (sel !== undefined) {
            // Parse selector
            var hashIdx = sel.indexOf('#');
            var dotIdx = sel.indexOf('.', hashIdx);
            var hash = hashIdx > 0 ? hashIdx : sel.length;
            var dot = dotIdx > 0 ? dotIdx : sel.length;
            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;
            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)
                : api.createElement(tag);
            if (hash < dot)
                elm.setAttribute('id', sel.slice(hash + 1, dot));
            if (dotIdx > 0)
                elm.setAttribute('class', sel.slice(dot + 1).replace(/\./g, ' '));
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            if (is.array(children)) {
                for (i = 0; i < children.length; ++i) {
                    var ch = children[i];
                    if (ch != null) {
                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                    }
                }
            }
            else if (is.primitive(vnode.text)) {
                api.appendChild(elm, api.createTextNode(vnode.text));
            }
            i = vnode.data.hook; // Reuse variable
            if (isDef(i)) {
                if (i.create)
                    i.create(emptyNode, vnode);
                if (i.insert)
                    insertedVnodeQueue.push(vnode);
            }
        }
        else {
            vnode.elm = api.createTextNode(vnode.text);
        }
        return vnode.elm;
    }
    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            var ch = vnodes[startIdx];
            if (ch != null) {
                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
            }
        }
    }
    function invokeDestroyHook(vnode) {
        var i, j, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.destroy))
                i(vnode);
            for (i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
            if (vnode.children !== undefined) {
                for (j = 0; j < vnode.children.length; ++j) {
                    i = vnode.children[j];
                    if (i != null && typeof i !== "string") {
                        invokeDestroyHook(i);
                    }
                }
            }
        }
    }
    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
        for (; startIdx <= endIdx; ++startIdx) {
            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];
            if (ch != null) {
                if (isDef(ch.sel)) {
                    invokeDestroyHook(ch);
                    listeners = cbs.remove.length + 1;
                    rm = createRmCb(ch.elm, listeners);
                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)
                        cbs.remove[i_1](ch, rm);
                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {
                        i_1(ch, rm);
                    }
                    else {
                        rm();
                    }
                }
                else {
                    api.removeChild(parentElm, ch.elm);
                }
            }
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
        var oldStartIdx = 0, newStartIdx = 0;
        var oldEndIdx = oldCh.length - 1;
        var oldStartVnode = oldCh[0];
        var oldEndVnode = oldCh[oldEndIdx];
        var newEndIdx = newCh.length - 1;
        var newStartVnode = newCh[0];
        var newEndVnode = newCh[newEndIdx];
        var oldKeyToIdx;
        var idxInOld;
        var elmToMove;
        var before;
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (oldStartVnode == null) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
            }
            else if (oldEndVnode == null) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (newStartVnode == null) {
                newStartVnode = newCh[++newStartIdx];
            }
            else if (newEndVnode == null) {
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (oldKeyToIdx === undefined) {
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                }
                idxInOld = oldKeyToIdx[newStartVnode.key];
                if (isUndef(idxInOld)) {
                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    newStartVnode = newCh[++newStartIdx];
                }
                else {
                    elmToMove = oldCh[idxInOld];
                    if (elmToMove.sel !== newStartVnode.sel) {
                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    }
                    else {
                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                        oldCh[idxInOld] = undefined;
                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                    }
                    newStartVnode = newCh[++newStartIdx];
                }
            }
        }
        if (oldStartIdx > oldEndIdx) {
            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
        }
        else if (newStartIdx > newEndIdx) {
            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
        var i, hook;
        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {
            i(oldVnode, vnode);
        }
        var elm = vnode.elm = oldVnode.elm;
        var oldCh = oldVnode.children;
        var ch = vnode.children;
        if (oldVnode === vnode)
            return;
        if (vnode.data !== undefined) {
            for (i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            i = vnode.data.hook;
            if (isDef(i) && isDef(i = i.update))
                i(oldVnode, vnode);
        }
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
            }
            else if (isDef(ch)) {
                if (isDef(oldVnode.text))
                    api.setTextContent(elm, '');
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                api.setTextContent(elm, '');
            }
        }
        else if (oldVnode.text !== vnode.text) {
            api.setTextContent(elm, vnode.text);
        }
        if (isDef(hook) && isDef(i = hook.postpatch)) {
            i(oldVnode, vnode);
        }
    }
    return function patch(oldVnode, vnode) {
        var i, elm, parent;
        var insertedVnodeQueue = [];
        for (i = 0; i < cbs.pre.length; ++i)
            cbs.pre[i]();
        if (!isVnode(oldVnode)) {
            oldVnode = emptyNodeAt(oldVnode);
        }
        if (sameVnode(oldVnode, vnode)) {
            patchVnode(oldVnode, vnode, insertedVnodeQueue);
        }
        else {
            elm = oldVnode.elm;
            parent = api.parentNode(elm);
            createElm(vnode, insertedVnodeQueue);
            if (parent !== null) {
                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                removeVnodes(parent, [oldVnode], 0, 0);
            }
        }
        for (i = 0; i < insertedVnodeQueue.length; ++i) {
            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
        }
        for (i = 0; i < cbs.post.length; ++i)
            cbs.post[i]();
        return vnode;
    };
}
exports.init = init;

},{"./h":123,"./htmldomapi":124,"./is":125,"./thunk":132,"./vnode":134}],132:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var h_1 = require("./h");
function copyToThunk(vnode, thunk) {
    thunk.elm = vnode.elm;
    vnode.data.fn = thunk.data.fn;
    vnode.data.args = thunk.data.args;
    thunk.data = vnode.data;
    thunk.children = vnode.children;
    thunk.text = vnode.text;
    thunk.elm = vnode.elm;
}
function init(thunk) {
    var cur = thunk.data;
    var vnode = cur.fn.apply(undefined, cur.args);
    copyToThunk(vnode, thunk);
}
function prepatch(oldVnode, thunk) {
    var i, old = oldVnode.data, cur = thunk.data;
    var oldArgs = old.args, args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn.apply(undefined, args), thunk);
        return;
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn.apply(undefined, args), thunk);
            return;
        }
    }
    copyToThunk(oldVnode, thunk);
}
exports.thunk = function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return h_1.h(sel, {
        key: key,
        hook: { init: init, prepatch: prepatch },
        fn: fn,
        args: args
    });
};
exports.default = exports.thunk;

},{"./h":123}],133:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("./vnode");
var htmldomapi_1 = require("./htmldomapi");
function toVNode(node, domApi) {
    var api = domApi !== undefined ? domApi : htmldomapi_1.default;
    var text;
    if (api.isElement(node)) {
        var id = node.id ? '#' + node.id : '';
        var cn = node.getAttribute('class');
        var c = cn ? '.' + cn.split(' ').join('.') : '';
        var sel = api.tagName(node).toLowerCase() + id + c;
        var attrs = {};
        var children = [];
        var name_1;
        var i = void 0, n = void 0;
        var elmAttrs = node.attributes;
        var elmChildren = node.childNodes;
        for (i = 0, n = elmAttrs.length; i < n; i++) {
            name_1 = elmAttrs[i].nodeName;
            if (name_1 !== 'id' && name_1 !== 'class') {
                attrs[name_1] = elmAttrs[i].nodeValue;
            }
        }
        for (i = 0, n = elmChildren.length; i < n; i++) {
            children.push(toVNode(elmChildren[i]));
        }
        return vnode_1.default(sel, { attrs: attrs }, children, undefined, node);
    }
    else if (api.isText(node)) {
        text = api.getTextContent(node);
        return vnode_1.default(undefined, undefined, undefined, text, node);
    }
    else if (api.isComment(node)) {
        text = api.getTextContent(node);
        return vnode_1.default('!', {}, [], text, node);
    }
    else {
        return vnode_1.default('', {}, [], undefined, node);
    }
}
exports.toVNode = toVNode;
exports.default = toVNode;

},{"./htmldomapi":124,"./vnode":134}],134:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
exports.vnode = vnode;
exports.default = vnode;

},{}],135:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":93,"inherits":96,"readable-stream/duplex.js":102,"readable-stream/passthrough.js":111,"readable-stream/readable.js":112,"readable-stream/transform.js":113,"readable-stream/writable.js":114}],136:[function(require,module,exports){
'use strict';

var Buffer = require('safe-buffer').Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":115}],137:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = require('./ponyfill.js');

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var root; /* global window */


if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./ponyfill.js":138}],138:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};
},{}],139:[function(require,module,exports){
(function (process){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this,require('_process'))
},{"_process":101,"stream":135}],140:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],141:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":95}],142:[function(require,module,exports){
const wasm = require('./src/libwabt.js').wasm

/**
 * Translates from [s-expressions](https://github.com/WebAssembly/spec) to the WebAssembly [binary-encoding](https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md)
 * @param {String} text the s-expression to convert
 * @param {Bool} log wether or not to produce a log
 * @return {Promise} which resolves an object with the property `buffer` for
 * for the compiled binary and `log` for the log
 */
module.exports = (text, log = false) => {
  return wasm.ready.then((wasm) => {
    const script = wasm.parseWast('test.wast', text)
    return script.toBinary({
      log: log
    })
  })
}

},{"./src/libwabt.js":143}],143:[function(require,module,exports){
(function (process,__dirname){
var wabt=wabt||{};((function(wabt){"use strict";var WABT_OK=0;function malloc(size){var addr=Module._malloc(size);if(addr==0){throw new Error("out of memory")}return addr}function allocateBuffer(buf){var addr;var size;if(buf instanceof ArrayBuffer){size=buf.byteLength;addr=malloc(size);HEAPU8.set(new Uint8Array(buf),addr)}else if(ArrayBuffer.isView(buf)){size=buf.byteLength;addr=malloc(size);HEAPU8.set(new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength),addr)}else if(typeof buf=="string"){size=buf.length;addr=malloc(size);Module.writeAsciiToMemory(buf,addr,true)}else{throw new Error("unknown buffer type: "+buf)}return{addr:addr,size:size}}function allocateCString(s){var size=s.length;var addr=malloc(size);Module.writeAsciiToMemory(s,addr);return{addr:addr,size:size}}function Lexer(filename,buffer){this.filenameObj=allocateCString(filename);this.bufferObj=allocateBuffer(buffer);this.addr=Module._wabt_new_wast_buffer_lexer(this.filenameObj.addr,this.bufferObj.addr,this.bufferObj.size)}Lexer.prototype=Object.create(Object.prototype);Lexer.prototype.destroy=(function(){Module._wabt_destroy_wast_lexer(this.addr);Module._free(this.bufferObj.addr);Module._free(this.filenameObj.addr)});function OutputBuffer(addr){this.addr=addr}OutputBuffer.prototype=Object.create(Object.prototype);OutputBuffer.prototype.toTypedArray=(function(){if(!this.addr){return null}var addr=Module._wabt_output_buffer_get_data(this.addr);var size=Module._wabt_output_buffer_get_size(this.addr);var buffer=new Uint8Array(size);buffer.set(new Uint8Array(HEAPU8.buffer,addr,size));return buffer});OutputBuffer.prototype.toString=(function(){if(!this.addr){return""}var addr=Module._wabt_output_buffer_get_data(this.addr);var size=Module._wabt_output_buffer_get_size(this.addr);return Module.Pointer_stringify(addr,size)});OutputBuffer.prototype.destroy=(function(){Module._wabt_destroy_output_buffer(this.addr)});function ErrorHandler(){this.addr=Module._wabt_new_source_error_handler_buffer()}ErrorHandler.prototype=Object.create(Object.prototype);ErrorHandler.prototype.getMessage=(function(){var addr=Module._wabt_source_error_handler_buffer_get_data(this.addr);var size=Module._wabt_source_error_handler_buffer_get_size(this.addr);return Module.Pointer_stringify(addr,size)});ErrorHandler.prototype.destroy=(function(){Module._wabt_destroy_source_error_handler_buffer(this.addr)});function parseWast(filename,buffer){var lexer=new Lexer(filename,buffer);var errorHandler=new ErrorHandler;try{var parseResult_addr=Module._wabt_parse_wast(lexer.addr,errorHandler.addr);var result=Module._wabt_parse_wast_result_get_result(parseResult_addr);if(result!==WABT_OK){throw new Error("parseWast failed:\n"+errorHandler.getMessage())}var script_addr=Module._wabt_parse_wast_result_release_script(parseResult_addr);var result=new Script(lexer,script_addr);lexer=null;return result}finally{Module._wabt_destroy_parse_wast_result(parseResult_addr);errorHandler.destroy();if(lexer){lexer.destroy()}}}function Script(lexer,script_addr){this.lexer=lexer;this.script_addr=script_addr}Script.prototype=Object.create(Object.prototype);Script.prototype.resolveNames=(function(){var errorHandler=new ErrorHandler;try{var result=Module._wabt_resolve_names_script(this.lexer.addr,this.script_addr,errorHandler.addr);if(result!==WABT_OK){throw new Error("resolveNames failed:\n"+errorHandler.getMessage())}}finally{errorHandler.destroy()}});Script.prototype.validate=(function(){var errorHandler=new ErrorHandler;try{var result=Module._wabt_validate_script(this.lexer.addr,this.script_addr,errorHandler.addr);if(result!==WABT_OK){throw new Error("validate failed:\n"+errorHandler.getMessage())}}finally{errorHandler.destroy()}});Script.prototype.toBinary=(function(options){var log=options.log||false;var canonicalize_lebs=options.canonicalize_lebs||true;var relocatable=options.relocatable||false;var write_debug_names=options.write_debug_names||false;var writeBinaryResult_addr=Module._wabt_write_binary_module(this.script_addr,log,canonicalize_lebs,relocatable,write_debug_names);var result=Module._wabt_write_binary_module_result_get_result(writeBinaryResult_addr);try{if(result!==WABT_OK){throw new Error("writeBinaryModule failed.")}var binaryOutputBuffer=new OutputBuffer(Module._wabt_write_binary_module_result_release_binary_output_buffer(writeBinaryResult_addr));var logOutputBuffer=new OutputBuffer(Module._wabt_write_binary_module_result_release_log_output_buffer(writeBinaryResult_addr));return{buffer:binaryOutputBuffer.toTypedArray(),log:logOutputBuffer.toString()}}finally{if(binaryOutputBuffer){binaryOutputBuffer.destroy()}if(logOutputBuffer){logOutputBuffer.destroy()}Module._wabt_destroy_write_binary_module_result(writeBinaryResult_addr)}});Script.prototype.destroy=(function(){Module._wabt_destroy_script(this.script_addr);this.lexer.destroy()});wabt.ready=Promise.resolve(wabt);wabt.parseWast=parseWast}))(wabt);var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[null,null,null,null,null,null,null,null,null,null],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){try{func=eval("_"+ident)}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource=null;function ensureJSsource(){if(!JSsource){JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type==="number"}));var numericRet=returnType!=="string";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return"$"+i}));var funcstr="(function("+argNames.join(",")+") {";var nargs=argTypes.length;if(!numericArgs){ensureJSsource();funcstr+="var stack = "+JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type==="number")continue;var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";";funcstr+=convertCode.body+";";funcstr+=arg+"=("+convertCode.returnValue+");"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}if(!numericArgs){ensureJSsource();funcstr+=JSsource["stackRestore"].body.replace("()","(stack)")+";"}funcstr+="return ret})";return eval(funcstr)}}))();Module["ccall"]=ccall;Module["cwrap"]=cwrap;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(typeof _sbrk!=="undefined"&&!_sbrk.called||!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module["getMemory"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){return func}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){TOTAL_MEMORY=totalMemory}if(Module["buffer"]){buffer=Module["buffer"]}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[0]=255;if(HEAPU8[0]!==255||HEAPU8[3]!==0)throw"Typed arrays 2 must be run on a little-endian system";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var ASM_CONSTS=[];STATIC_BASE=8;STATICTOP=STATIC_BASE+36720;__ATINIT__.push();allocate([40,26,0,0,34,43,0,0,80,26,0,0,76,43,0,0,8,0,0,0,0,0,0,0,80,26,0,0,233,44,0,0,48,0,0,0,0,0,0,0,40,26,0,0,11,45,0,0,80,26,0,0,164,67,0,0,72,0,0,0,0,0,0,0,80,26,0,0,203,67,0,0,88,0,0,0,0,0,0,0,40,26,0,0,228,67,0,0,80,26,0,0,94,69,0,0,8,0,0,0,0,0,0,0,80,26,0,0,173,70,0,0,128,0,0,0,0,0,0,0,40,26,0,0,195,70,0,0,80,26,0,0,209,109,0,0,88,0,0,0,0,0,0,0,40,26,0,0,6,136,0,0,80,26,0,0,228,135,0,0,192,0,0,0,0,0,0,0,80,26,0,0,145,135,0,0,160,0,0,0,0,0,0,0,80,26,0,0,182,135,0,0,208,0,0,0,0,0,0,0,40,26,0,0,215,135,0,0,80,26,0,0,204,136,0,0,152,0,0,0,0,0,0,0,80,26,0,0,12,137,0,0,192,0,0,0,0,0,0,0,80,26,0,0,232,136,0,0,232,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,22,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,0,0,0,0,32,0,0,0,24,0,0,0,25,0,0,0,22,0,0,0,116,50,0,0,122,50,0,0,128,50,0,0,139,50,0,0,143,50,0,0,147,50,0,0,151,50,0,0,155,50,0,0,161,50,0,0,166,50,0,0,170,50,0,0,181,50,0,0,189,50,0,0,193,50,0,0,197,50,0,0,202,50,0,0,208,50,0,0,212,50,0,0,215,50,0,0,220,50,0,0,225,50,0,0,230,50,0,0,233,50,0,0,239,50,0,0,248,50,0,0,253,50,0,0,9,51,0,0,23,51,0,0,30,51,0,0,40,51,0,0,50,51,0,0,60,51,0,0,71,51,0,0,82,51,0,0,87,51,0,0,93,51,0,0,107,51,0,0,120,51,0,0,126,51,0,0,132,51,0,0,139,51,0,0,147,51,0,0,155,51,0,0,162,51,0,0,174,51,0,0,189,51,0,0,201,51,0,0,206,51,0,0,212,51,0,0,217,51,0,0,223,51,0,0,230,51,0,0,236,51,0,0,243,51,0,0,250,51,0,0,0,52,0,0,5,52,0,0,12,52,0,0,17,52,0,0,24,52,0,0,31,52,0,0,38,52,0,0,47,52,0,0,54,52,0,0,58,52,0,0,75,52,0,0,90,52,0,0,108,52,0,0,122,52,0,0,150,52,0,0,179,52,0,0,191,52,0,0,209,52,0,0,215,52,0,0,222,52,0,0,226,52,0,0,234,52,0,0,254,52,0,0,8,53,0,0,20,53,0,0,36,53,0,0,46,53,0,0,58,53,0,0,68,53,0,0,77,53,0,0,87,53,0,0,98,53,0,0,105,53,0,0,114,53,0,0,118,53,0,0,126,53,0,0,130,53,0,0,139,53,0,0,152,53,0,0,161,53,0,0,174,53,0,0,185,53,0,0,195,53,0,0,201,53,0,0,213,53,0,0,180,79,0,0,225,53,0,0,230,53,0,0,236,53,0,0,240,53,0,0,251,53,0,0,5,54,0,0,16,54,0,0,28,54,0,0,38,54,0,0,39,111,0,0,116,84,0,0,48,54,0,0,201,69,0,0,53,54,0,0,207,69,0,0,214,69,0,0,58,54,0,0,70,54,0,0,77,54,0,0,91,54,0,0,103,54,0,0,110,54,0,0,128,54,0,0,142,54,0,0,151,54,0,0,157,54,0,0,171,54,0,0,182,54,0,0,189,54,0,0,3,63,0,0,204,54,0,0,214,54,0,0,218,54,0,0,227,54,0,0,233,54,0,0,244,54,0,0,251,54,0,0,0,0,0,0,0,0,0,0,56,0,0,0,26,0,0,0,27,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,25,0,0,0,22,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,22,0,0,0,23,0,0,0,22,0,0,0,24,0,0,0,23,0,0,0,26,0,0,0,28,0,0,0,29,0,0,0,25,0,0,0,27,0,0,0,30,0,0,0,31,0,0,0,23,0,0,0,28,0,0,0,32,0,0,0,33,0,0,0,26,0,0,0,29,0,0,0,34,0,0,0,35,0,0,0,24,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,30,0,0,0,39,0,0,0,40,0,0,0,23,0,0,0,31,0,0,0,41,0,0,0,42,0,0,0,32,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,25,0,0,0,47,0,0,0,33,0,0,0,48,0,0,0,27,0,0,0,28,0,0,0,49,0,0,0,29,0,0,0,30,0,0,0,50,0,0,0,31,0,0,0,51,0,0,0,52,0,0,0,26,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,57,0,0,0,32,0,0,0,58,0,0,0,59,0,0,0,39,0,0,0,60,0,0,0,33,0,0,0,34,0,0,0,27,0,0,0,35,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,61,0,0,0,62,0,0,0,28,0,0,0,63,0,0,0,64,0,0,0,43,0,0,0,65,0,0,0,44,0,0,0,66,0,0,0,67,0,0,0,36,0,0,0,68,0,0,0,69,0,0,0,37,0,0,0,38,0,0,0,70,0,0,0,45,0,0,0,71,0,0,0,72,0,0,0,39,0,0,0,73,0,0,0,74,0,0,0,29,0,0,0,75,0,0,0,46,0,0,0,76,0,0,0,30,0,0,0,77,0,0,0,40,0,0,0,31,0,0,0,78,0,0,0,41,0,0,0,32,0,0,0,47,0,0,0,79,0,0,0,33,0,0,0,24,0,0,0,48,0,0,0,42,0,0,0,34,0,0,0,43,0,0,0,44,0,0,0,35,0,0,0,0,0,0,0,96,0,0,0,28,0,0,0,29,0,0,0,25,0,0,0,49,0,0,0,125,69,0,0,132,69,0,0,137,69,0,0,144,69,0,0,153,69,0,0,159,69,0,0,166,69,0,0,173,69,0,0,180,69,0,0,186,69,0,0,191,69,0,0,196,69,0,0,39,111,0,0,201,69,0,0,207,69,0,0,214,69,0,0,221,69,0,0,238,69,0,0,1,70,0,0,19,70,0,0,37,70,0,0,56,70,0,0,74,70,0,0,91,70,0,0,0,0,0,0,112,0,0,0,30,0,0,0,31,0,0,0,36,0,0,0,37,0,0,0,210,70,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,222,70,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,180,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,186,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,191,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,226,70,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,231,70,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,246,70,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,5,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,20,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,35,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,50,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,25,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,28,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,34,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,210,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,43,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,48,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,54,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,69,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,84,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,99,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,114,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,129,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,144,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,159,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,62,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,217,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,174,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,189,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,204,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,219,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,234,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,235,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,245,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,244,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,224,79,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,255,71,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,14,72,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,29,72,0,0,192,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,44,72,0,0,255,255,255,255,255,255,255,255,192,255,255,255,4,0,0,0,53,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,8,0,0,0,62,72,0,0,253,255,255,255,255,255,255,255,192,255,255,255,4,0,0,0,71,72,0,0,252,255,255,255,255,255,255,255,192,255,255,255,8,0,0,0,80,72,0,0,255,255,255,255,255,255,255,255,192,255,255,255,1,0,0,0,92,72,0,0,255,255,255,255,255,255,255,255,192,255,255,255,1,0,0,0,104,72,0,0,255,255,255,255,255,255,255,255,192,255,255,255,2,0,0,0,117,72,0,0,255,255,255,255,255,255,255,255,192,255,255,255,2,0,0,0,130,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,1,0,0,0,142,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,1,0,0,0,154,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,2,0,0,0,167,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,2,0,0,0,180,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,4,0,0,0,193,72,0,0,254,255,255,255,255,255,255,255,192,255,255,255,4,0,0,0,206,72,0,0,192,255,255,255,255,255,255,255,255,255,255,255,4,0,0,0,216,72,0,0,192,255,255,255,255,255,255,255,254,255,255,255,8,0,0,0,226,72,0,0,192,255,255,255,255,255,255,255,253,255,255,255,4,0,0,0,236,72,0,0,192,255,255,255,255,255,255,255,252,255,255,255,8,0,0,0,246,72,0,0,192,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,1,73,0,0,192,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,13,73,0,0,192,255,255,255,255,255,255,255,254,255,255,255,1,0,0,0,24,73,0,0,192,255,255,255,255,255,255,255,254,255,255,255,2,0,0,0,36,73,0,0,192,255,255,255,255,255,255,255,254,255,255,255,4,0,0,0,48,73,0,0,255,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,63,73,0,0,255,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,75,73,0,0,255,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,85,73,0,0,254,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,95,73,0,0,253,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,105,73,0,0,252,255,255,255,192,255,255,255,192,255,255,255,0,0,0,0,115,73,0,0,255,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,123,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,130,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,137,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,146,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,155,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,164,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,173,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,182,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,191,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,200,73,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,209,73,0,0,255,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,217,73,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,224,73,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,231,73,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,240,73,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,249,73,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,2,74,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,11,74,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,20,74,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,29,74,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,38,74,0,0,255,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,47,74,0,0,255,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,54,74,0,0,255,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,61,74,0,0,255,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,68,74,0,0,255,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,75,74,0,0,255,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,82,74,0,0,255,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,89,74,0,0,255,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,96,74,0,0,255,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,103,74,0,0,255,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,110,74,0,0,255,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,117,74,0,0,255,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,124,74,0,0,255,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,131,74,0,0,255,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,139,74,0,0,255,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,147,74,0,0,255,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,158,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,166,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,174,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,182,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,192,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,202,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,212,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,222,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,230,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,237,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,245,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,253,74,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,7,75,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,17,75,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,26,75,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,35,75,0,0,254,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,43,75,0,0,254,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,51,75,0,0,254,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,62,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,70,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,78,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,86,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,96,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,106,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,116,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,126,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,134,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,141,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,149,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,157,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,167,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,177,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,186,75,0,0,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,195,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,203,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,211,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,220,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,230,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,240,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,252,75,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,5,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,13,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,21,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,29,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,37,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,45,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,53,76,0,0,253,255,255,255,253,255,255,255,253,255,255,255,0,0,0,0,66,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,74,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,82,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,91,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,101,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,111,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,123,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,132,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,140,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,148,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,156,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,164,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,172,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,180,76,0,0,252,255,255,255,252,255,255,255,252,255,255,255,0,0,0,0,193,76,0,0,255,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,206,76,0,0,255,255,255,255,253,255,255,255,192,255,255,255,0,0,0,0,222,76,0,0,255,255,255,255,253,255,255,255,192,255,255,255,0,0,0,0,238,76,0,0,255,255,255,255,252,255,255,255,192,255,255,255,0,0,0,0,254,76,0,0,255,255,255,255,252,255,255,255,192,255,255,255,0,0,0,0,14,77,0,0,254,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,31,77,0,0,254,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,48,77,0,0,254,255,255,255,253,255,255,255,192,255,255,255,0,0,0,0,64,77,0,0,254,255,255,255,253,255,255,255,192,255,255,255,0,0,0,0,80,77,0,0,254,255,255,255,252,255,255,255,192,255,255,255,0,0,0,0,96,77,0,0,254,255,255,255,252,255,255,255,192,255,255,255,0,0,0,0,112,77,0,0,253,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,130,77,0,0,253,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,148,77,0,0,253,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,166,77,0,0,253,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,184,77,0,0,253,255,255,255,252,255,255,255,192,255,255,255,0,0,0,0,199,77,0,0,252,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,217,77,0,0,252,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,235,77,0,0,252,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,253,77,0,0,252,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,15,78,0,0,252,255,255,255,253,255,255,255,192,255,255,255,0,0,0,0,31,78,0,0,255,255,255,255,253,255,255,255,192,255,255,255,0,0,0,0,51,78,0,0,254,255,255,255,252,255,255,255,192,255,255,255,0,0,0,0,71,78,0,0,253,255,255,255,255,255,255,255,192,255,255,255,0,0,0,0,91,78,0,0,252,255,255,255,254,255,255,255,192,255,255,255,0,0,0,0,171,79,0,0,180,79,0,0,186,79,0,0,191,79,0,0,194,79,0,0,0,0,0,0,136,0,0,0,32,0,0,0,33,0,0,0,80,0,0,0,23,0,0,0,81,0,0,0,50,0,0,0,45,0,0,0,46,0,0,0,51,0,0,0,82,0,0,0,83,0,0,0,25,0,0,0,52,0,0,0,84,0,0,0,85,0,0,0,38,0,0,0,26,0,0,0,24,0,0,0,27,0,0,0,25,0,0,0,53,0,0,0,86,0,0,0,87,0,0,0,47,0,0,0,54,0,0,0,88,0,0,0,89,0,0,0,39,0,0,0,55,0,0,0,90,0,0,0,91,0,0,0,48,0,0,0,56,0,0,0,92,0,0,0,93,0,0,0,40,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,57,0,0,0,97,0,0,0,98,0,0,0,26,0,0,0,58,0,0,0,99,0,0,0,100,0,0,0,59,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,41,0,0,0,105,0,0,0,60,0,0,0,106,0,0,0,49,0,0,0,50,0,0,0,107,0,0,0,51,0,0,0,52,0,0,0,108,0,0,0,53,0,0,0,109,0,0,0,110,0,0,0,42,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,115,0,0,0,54,0,0,0,116,0,0,0,117,0,0,0,66,0,0,0,118,0,0,0,55,0,0,0,56,0,0,0,43,0,0,0,57,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,119,0,0,0,120,0,0,0,44,0,0,0,121,0,0,0,122,0,0,0,70,0,0,0,123,0,0,0,71,0,0,0,124,0,0,0,125,0,0,0,58,0,0,0,126,0,0,0,127,0,0,0,59,0,0,0,60,0,0,0,128,0,0,0,72,0,0,0,129,0,0,0,130,0,0,0,61,0,0,0,131,0,0,0,132,0,0,0,45,0,0,0,133,0,0,0,73,0,0,0,134,0,0,0,46,0,0,0,135,0,0,0,62,0,0,0,47,0,0,0,136,0,0,0,63,0,0,0,48,0,0,0,74,0,0,0,137,0,0,0,49,0,0,0,27,0,0,0,75,0,0,0,64,0,0,0,50,0,0,0,65,0,0,0,66,0,0,0,51,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,68,0,0,0,100,139,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,23,0,0,156,23,0,0,5,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,0,0,0,68,0,0,0,108,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,1,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,121,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,143,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,169,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,187,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,209,0,0,0,22,0,0,0,0,0,0,0,160,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,71,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,0,0,0,0,176,0,0,0,34,0,0,0,38,0,0,0,36,0,0,0,37,0,0,0,71,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,0,0,0,0,216,0,0,0,39,0,0,0,40,0,0,0,77,0,0,0,238,254,41,0,238,254,46,0,68,0,238,254,238,254,238,254,238,254,238,254,238,254,60,0,73,0,82,0,82,0,121,0,121,0,121,0,123,0,123,0,123,0,142,0,123,0,238,254,166,0,238,254,238,254,82,0,238,254,73,0,73,0,128,0,73,0,73,0,73,0,104,0,238,254,184,0,205,0,0,0,73,0,73,0,73,0,238,254,161,0,221,0,213,0,238,254,243,0,245,0,254,0,255,0,228,0,238,254,238,254,0,1,7,1,8,1,238,254,238,254,116,0,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,231,0,238,254,238,254,238,254,238,254,153,0,238,254,238,254,238,254,238,254,238,254,60,0,98,0,69,0,60,0,60,0,111,0,60,0,111,0,73,0,73,0,238,254,237,0,152,1,238,254,238,254,238,254,9,1,224,0,11,1,204,0,58,0,14,1,73,1,15,1,238,254,238,254,16,1,15,1,166,0,73,0,17,1,238,254,238,254,238,254,19,1,32,1,238,254,238,254,60,0,60,0,60,0,98,0,98,0,238,254,98,0,98,0,238,254,98,0,98,0,98,0,98,0,98,0,242,0,242,0,237,0,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,185,1,218,1,238,254,238,254,238,254,238,254,238,254,238,254,20,1,22,1,251,1,238,254,23,1,238,254,24,1,6,0,238,254,218,1,89,0,89,0,186,0,28,1,114,0,238,254,60,0,60,0,60,0,218,1,31,1,33,1,238,254,118,0,170,0,28,1,28,1,35,1,166,0,27,1,36,1,45,1,34,0,46,1,238,254,98,0,60,0,238,254,60,0,73,0,73,0,238,254,238,254,238,254,238,254,238,254,238,254,98,0,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,247,0,247,0,238,254,100,2,47,1,240,2,238,254,238,254,203,0,53,1,63,1,61,2,185,1,64,1,206,0,74,1,238,254,26,1,238,254,75,1,72,1,81,1,218,1,85,1,87,1,28,1,238,254,105,1,115,1,238,254,238,254,238,254,116,1,31,1,238,254,238,254,197,0,238,254,238,254,166,0,117,1,238,254,120,1,238,0,121,1,238,254,52,0,122,1,98,0,98,0,98,0,98,0,238,254,123,1,173,0,99,1,174,0,175,0,113,1,73,0,124,1,119,1,114,1,48,0,128,1,214,0,238,254,238,254,238,254,238,254,238,254,238,254,238,254,238,254,131,1,238,254,238,254,133,1,238,254,238,254,134,1,238,254,238,254,238,254,132,1,238,254,238,254,99,0,238,254,238,254,238,254,238,254,150,1,238,254,238,254,166,0,238,254,60,0,60,0,60,0,60,0,238,254,164,1,166,1,167,1,173,1,238,254,185,1,238,254,197,1,28,2,28,2,199,1,200,1,238,254,238,254,60,0,60,0,60,0,60,0,188,0,189,0,238,254,238,254,238,254,238,254,174,2,207,1,238,254,216,1,230,1,22,1,89,0,28,1,28,1,238,254,238,254,238,254,238,254,238,254,185,1,139,2,238,254,238,254,28,2,238,254,238,254,238,254,218,1,238,254,233,1,238,254,217,0,218,1,207,2,31,1,238,254,239,1,249,1,7,2,9,2,10,2,16,2,238,254,238,254,221,1,236,1,40,2,42,2,218,1,238,254,238,254,238,254,238,254,238,254,238,254,238,254,60,0,238,254,238,254,44,2,49,2,238,254,193,0,45,2,60,2,238,254,218,1,58,2,75,2,218,1,238,254,76,2,238,254,11,0,89,0,106,0,91,0,148,0,156,0,157,0,123,0,124,0,127,0,191,0,192,0,193,0,159,0,169,0,119,0,165,0,166,0,12,0,107,0,164,0,29,0,30,0,111,0,32,0,33,0,34,0,183,0,168,0,169,0,174,0,181,0,40,0,41,0,42,0,180,0,181,0,147,0,174,0,84,0,180,0,181,0,87,0,88,0,3,0,90,0,0,0,157,0,65,1,66,1,62,1,198,0,199,0,53,0,91,0,171,0,172,0,173,0,14,0,177,0,241,0,3,0,62,0,63,0,16,0,59,0,60,0,19,0,10,0,9,0,107,0,27,0,3,0,84,0,111,0,86,0,87,0,88,0,9,0,90,0,46,0,8,0,99,1,95,1,92,0,93,0,52,0,175,0,54,0,233,0,56,0,9,0,3,0,240,0,250,0,242,0,236,0,233,0,46,0,10,0,25,1,26,1,3,0,5,0,52,0,113,0,54,0,9,0,56,0,10,0,214,0,85,0,216,0,223,0,3,0,89,0,5,0,91,0,222,0,5,0,9,0,53,0,4,0,5,0,3,0,11,0,3,0,9,0,16,1,61,0,62,0,63,0,64,0,65,0,66,0,67,0,68,0,69,0,70,0,71,0,15,0,16,0,17,0,104,0,105,0,3,0,21,0,104,0,105,0,110,0,50,1,125,0,126,0,110,0,128,0,129,0,244,0,131,0,132,0,133,0,134,0,135,0,46,0,47,0,48,0,4,0,62,0,63,0,52,0,8,0,54,0,55,0,56,0,57,0,8,0,59,0,60,0,4,0,4,0,4,0,191,0,53,0,193,0,10,0,10,0,10,0,194,0,195,0,4,0,88,1,37,0,86,1,4,0,4,0,87,1,89,1,86,1,4,0,10,0,10,0,89,1,4,0,5,0,10,0,88,1,89,1,9,0,3,0,133,1,4,0,42,1,71,1,72,1,73,1,74,1,103,1,190,0,4,0,80,1,5,0,108,1,4,0,5,0,9,0,3,0,4,0,9,0,57,0,202,0,59,0,60,0,3,0,4,0,81,1,3,0,4,0,124,1,18,0,19,0,20,0,21,0,22,0,5,0,6,0,7,0,59,0,60,0,4,0,96,1,4,0,82,1,48,0,49,0,50,0,142,1,49,0,50,0,145,1,4,0,4,0,4,0,109,1,14,1,52,1,53,1,54,1,55,1,4,0,4,0,4,0,46,0,4,0,132,1,3,0,3,0,3,0,3,0,35,0,110,1,4,0,4,0,3,0,3,0,36,0,4,0,3,1,4,1,5,1,6,1,5,0,3,0,8,0,10,0,4,0,3,0,57,0,4,0,52,1,53,1,54,1,55,1,13,0,14,0,15,0,3,0,17,0,4,0,4,0,20,0,21,0,22,0,23,0,24,0,4,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,4,0,4,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,4,0,4,0,48,0,49,0,50,0,51,0,12,0,4,0,13,0,14,0,15,0,4,0,17,0,59,0,60,0,20,0,21,0,22,0,23,0,24,0,11,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,3,0,10,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,4,0,4,0,4,0,3,0,10,0,4,0,4,0,4,0,4,0,4,0,10,0,16,0,58,0,13,0,14,0,15,0,4,0,17,0,4,0,4,0,20,0,21,0,22,0,23,0,24,0,16,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,4,0,3,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,4,0,17,0,4,0,4,0,20,0,21,0,22,0,23,0,24,0,4,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,55,0,3,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,4,0,17,0,4,0,4,0,20,0,21,0,22,0,23,0,24,0,3,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,4,0,3,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,4,0,17,0,3,0,16,0,20,0,21,0,22,0,23,0,24,0,4,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,4,0,3,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,4,0,17,0,4,0,4,0,20,0,21,0,22,0,23,0,24,0,4,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,50,0,3,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,4,0,17,0,4,0,3,0,20,0,21,0,22,0,23,0,24,0,4,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,3,0,19,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,19,0,17,0,4,0,4,0,20,0,21,0,22,0,23,0,24,0,24,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,138,0,235,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,103,0,137,0,48,0,49,0,50,0,51,0,13,0,14,0,15,0,212,0,17,0,244,0,47,0,20,0,21,0,22,0,23,0,24,0,110,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,255,255,255,255,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,255,255,255,255,255,255,49,0,50,0,51,0,13,0,14,0,15,0,255,255,17,0,255,255,255,255,20,0,21,0,22,0,23,0,24,0,255,255,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,255,255,255,255,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,255,255,255,255,13,0,14,0,15,0,51,0,17,0,18,0,255,255,20,0,21,0,22,0,23,0,24,0,255,255,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,255,255,255,255,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,255,255,17,0,18,0,255,255,20,0,21,0,22,0,23,0,24,0,255,255,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,255,255,255,255,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,13,0,14,0,15,0,255,255,17,0,255,255,255,255,20,0,21,0,22,0,23,0,24,0,255,255,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,255,255,255,255,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,25,0,108,0,175,0,108,0,217,0,221,0,223,0,198,0,199,0,202,0,9,1,11,1,12,1,226,0,239,0,175,0,232,0,233,0,228,0,108,0,229,0,47,0,48,0,108,0,49,0,50,0,51,0,255,0,236,0,236,0,229,0,253,0,55,0,56,0,57,0,252,0,252,0,215,0,243,0,96,0,236,0,236,0,104,0,105,0,4,0,110,0,10,0,224,0,97,1,98,1,94,1,18,1,19,1,11,0,112,0,240,0,241,0,242,0,30,0,247,0,42,1,162,0,13,0,14,0,72,1,194,0,195,0,73,1,163,0,23,0,177,0,46,0,101,0,25,0,183,0,103,0,25,0,25,0,23,0,25,0,3,1,26,0,119,1,118,1,113,0,114,0,4,1,244,0,5,1,229,0,6,1,28,0,231,0,41,1,47,1,43,1,38,1,35,1,52,1,163,0,75,1,76,1,81,1,97,0,53,1,186,0,54,1,98,0,55,1,63,1,175,0,100,0,175,0,29,1,106,0,107,0,97,0,111,0,175,0,97,0,98,0,11,0,248,0,97,0,31,0,237,0,35,0,98,0,70,1,12,0,13,0,14,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,32,0,33,0,34,0,165,0,168,0,39,0,40,0,166,0,170,0,180,0,85,1,200,0,201,0,182,0,203,0,204,0,244,0,205,0,206,0,207,0,208,0,209,0,84,0,85,0,86,0,58,0,13,0,14,0,87,0,59,0,88,0,89,0,90,0,91,0,43,0,92,0,93,0,62,1,65,1,66,1,10,1,11,0,13,1,63,1,63,1,63,1,14,1,15,1,53,0,116,1,95,0,114,1,105,1,106,1,115,1,117,1,113,1,141,1,63,1,63,1,252,0,46,1,97,0,63,1,236,0,236,0,98,0,101,0,138,1,54,0,82,1,101,1,102,1,103,1,104,1,120,1,8,1,72,0,107,1,227,255,123,1,122,1,97,0,227,255,60,0,61,0,98,0,250,0,20,1,194,0,195,0,78,0,79,0,175,0,78,0,94,0,136,1,36,0,37,0,38,0,41,0,42,0,115,0,116,0,117,0,194,0,195,0,74,0,175,0,75,0,110,1,190,0,25,1,26,1,144,1,25,1,26,1,147,1,76,0,77,0,81,0,175,0,68,1,86,1,87,1,88,1,89,1,82,0,83,0,158,0,159,0,160,0,137,1,167,0,106,0,179,0,187,0,210,0,125,1,189,0,218,0,219,0,225,0,21,1,227,0,57,1,58,1,59,1,60,1,97,0,216,0,59,0,32,1,246,0,254,0,50,1,0,1,25,0,25,0,25,0,25,0,120,0,121,0,171,0,1,1,172,0,7,1,24,1,173,0,125,0,126,0,127,0,128,0,27,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,28,1,30,1,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,31,1,33,1,190,0,191,0,192,0,193,0,228,0,34,1,120,0,121,0,171,0,36,1,172,0,194,0,195,0,173,0,125,0,126,0,127,0,128,0,237,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,39,1,64,1,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,40,1,44,1,48,1,216,0,67,1,49,1,51,1,56,1,61,1,69,1,63,1,71,1,174,0,120,0,121,0,122,0,77,1,123,0,78,1,79,1,124,0,125,0,126,0,127,0,128,0,74,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,84,1,119,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,122,0,90,1,123,0,91,1,92,1,124,0,125,0,126,0,127,0,128,0,93,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,80,1,214,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,122,0,95,1,123,0,99,1,100,1,124,0,125,0,126,0,127,0,128,0,109,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,111,1,216,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,122,0,112,1,123,0,121,1,132,1,124,0,125,0,126,0,127,0,128,0,126,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,127,1,222,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,122,0,128,1,123,0,129,1,130,1],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([124,0,125,0,126,0,127,0,128,0,131,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,133,1,96,1,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,122,0,134,1,123,0,135,1,139,1,124,0,125,0,126,0,127,0,128,0,140,1,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,143,1,142,1,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,171,0,145,1,172,0,146,1,148,1,173,0,125,0,126,0,127,0,128,0,44,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,213,0,37,1,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,161,0,212,0,190,0,191,0,192,0,193,0,120,0,121,0,171,0,23,1,172,0,45,1,73,0,173,0,125,0,126,0,127,0,128,0,181,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,0,0,0,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,0,0,0,0,0,0,191,0,192,0,193,0,120,0,121,0,171,0,0,0,172,0,0,0,0,0,173,0,125,0,126,0,127,0,128,0,0,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,0,0,0,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,0,0,0,0,120,0,121,0,171,0,193,0,172,0,108,1,0,0,173,0,125,0,126,0,127,0,128,0,0,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,0,0,0,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,171,0,0,0,172,0,124,1,0,0,173,0,125,0,126,0,127,0,128,0,0,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,0,0,0,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,120,0,121,0,171,0,0,0,172,0,0,0,0,0,173,0,125,0,126,0,127,0,128,0,0,0,129,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,0,0,0,0,138,0,139,0,140,0,141,0,142,0,143,0,144,0,145,0,146,0,238,254,62,2,100,255,248,255,75,255,118,1,107,255,4,2,110,255,101,255,106,255,111,255,105,255,116,255,214,1,26,0,138,255,211,255,245,255,140,255,227,1,160,1,238,254,152,255,238,254,109,255,168,255,238,254,238,254,112,255,130,1,120,255,244,254,239,254,146,255,238,254,219,255,238,254,238,254,238,254,238,254,238,254,238,254,238,254,39,0,238,254,238,254,15,2,43,0,238,254,238,254,238,254,125,0,238,254,44,0,219,0,238,254,238,254,238,254,238,254,72,2,238,254,238,254,255,255,184,0,185,0,27,0,16,1,238,0,164,0,102,0,220,0,234,0,251,0,235,0,147,0,99,0,118,0,249,0,178,0,24,0,196,0,197,0,211,0,22,1,148,0,149,0,150,0,17,1,151,0,176,0,83,1,152,0,245,0,230,0,153,0,154,0,155,0,62,0,109,0,63,0,64,0,65,0,66,0,67,0,2,1,68,0,156,0,188,0,69,0,169,0,157,0,70,0,71,0,45,0,5,0,6,0,29,0,7,0,8,0,9,0,1,0,80,0,52,0,2,0,3,0,78,52,119,97,98,116,49,56,83,111,117,114,99,101,69,114,114,111,114,72,97,110,100,108,101,114,69,0,37,115,58,37,100,58,37,100,58,32,37,115,10,0,78,52,119,97,98,116,50,52,83,111,117,114,99,101,69,114,114,111,114,72,97,110,100,108,101,114,66,117,102,102,101,114,69,0,117,110,101,120,112,101,99,116,101,100,32,69,79,70,0,105,108,108,101,103,97,108,32,99,104,97,114,97,99,116,101,114,32,105,110,32,115,116,114,105,110,103,0,110,101,119,108,105,110,101,32,105,110,32,115,116,114,105,110,103,0,98,97,100,32,101,115,99,97,112,101,32,34,37,46,42,115,34,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,80,0,80,80,80,80,80,64,64,80,80,64,80,80,80,240,240,240,240,240,240,240,240,240,240,80,64,80,80,80,80,80,208,208,208,208,208,208,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,64,16,64,80,80,80,208,208,208,208,208,208,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,64,80,64,80,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,117,110,101,120,112,101,99,116,101,100,32,99,104,97,114,0,117,110,101,120,112,101,99,116,101,100,32,116,111,107,101,110,32,34,37,46,42,115,34,0,46,46,46,0,78,52,119,97,98,116,50,52,66,105,110,97,114,121,69,114,114,111,114,72,97,110,100,108,101,114,77,111,100,117,108,101,69,0,78,52,119,97,98,116,49,56,66,105,110,97,114,121,69,114,114,111,114,72,97,110,100,108,101,114,69,0,101,114,114,111,114,32,105,110,32,98,105,110,97,114,121,32,109,111,100,117,108,101,58,32,37,115,0,101,114,114,111,114,32,105,110,32,98,105,110,97,114,121,32,109,111,100,117,108,101,58,32,64,48,120,37,48,56,120,58,32,37,115,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,166,171,172,0,0,148,164,162,163,167,1,30,0,149,149,0,0,0,0,0,0,0,0,32,135,31,6,149,150,0,0,0,0,0,0,0,169,0,0,0,0,0,0,2,0,0,0,169,0,0,0,0,0,158,159,0,0,0,147,3,0,146,140,141,138,142,139,137,144,145,136,143,165,0,152,153,154,155,0,157,170,156,160,161,30,0,0,30,30,0,30,0,0,0,151,0,82,22,27,26,0,0,0,0,0,129,0,0,100,28,129,0,4,0,0,23,24,25,0,0,43,44,33,33,33,0,0,28,0,0,49,0,0,0,0,0,35,35,0,60,61,62,63,45,42,64,65,82,82,39,40,41,91,94,87,0,13,82,134,13,132,0,0,10,82,0,0,0,0,0,130,33,33,33,82,84,0,28,0,0,0,0,130,4,5,0,0,0,0,168,0,7,7,7,0,0,34,7,7,7,46,47,0,50,51,52,53,54,55,56,36,37,37,59,0,0,0,83,98,0,0,0,0,82,0,0,0,133,0,86,0,0,0,82,0,0,19,9,0,0,7,7,7,0,84,72,71,0,102,29,4,0,18,0,0,0,106,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,82,0,0,0,48,38,57,58,96,7,7,119,118,0,97,12,0,111,122,0,120,17,20,0,103,73,0,74,99,85,101,0,121,107,4,105,30,30,30,30,117,0,0,0,0,21,82,8,0,82,82,0,0,131,70,33,33,33,33,0,0,95,11,110,28,0,0,75,0,0,13,0,0,0,124,127,125,126,89,82,0,88,92,82,123,66,68,82,67,14,16,0,82,0,81,109,0,0,0,0,0,0,90,93,0,0,0,0,82,80,108,113,112,116,114,115,33,7,104,77,0,69,0,0,79,15,82,0,0,82,76,0,78,0,2,1,2,0,1,1,0,2,1,1,4,4,0,4,8,4,2,1,1,2,4,1,1,1,1,1,1,0,2,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,2,2,3,1,2,2,2,2,2,2,2,3,3,2,1,1,1,1,1,1,5,5,5,8,2,3,2,3,3,4,8,4,9,5,3,2,0,2,0,2,1,1,5,5,6,1,5,6,1,7,6,6,5,4,1,6,5,6,10,6,5,6,9,8,7,6,5,5,5,5,5,6,6,6,6,6,6,5,4,4,4,4,5,0,1,4,4,5,4,0,2,2,2,2,2,2,2,2,2,2,5,5,1,0,1,6,5,5,5,5,5,5,4,4,5,5,1,1,1,5,0,2,4,0,2,1,1,105,110,118,97,108,105,100,32,105,110,116,32,37,46,42,115,34,0,105,110,118,97,108,105,100,32,111,102,102,115,101,116,32,34,37,46,42,115,34,0,105,110,118,97,108,105,100,32,97,108,105,103,110,109,101,110,116,32,34,37,46,42,115,34,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,32,34,37,46,42,115,34,0,117,110,101,120,112,101,99,116,101,100,32,108,97,98,101,108,32,34,37,46,42,115,34,0,109,105,115,109,97,116,99,104,105,110,103,32,108,97,98,101,108,32,34,37,46,42,115,34,32,33,61,32,34,37,46,42,115,34,0,105,109,112,111,114,116,115,32,109,117,115,116,32,111,99,99,117,114,32,98,101,102,111,114,101,32,97,108,108,32,110,111,110,45,105,109,112,111,114,116,32,100,101,102,105,110,105,116,105,111,110,115,0,0,75,76,76,77,77,78,79,79,80,81,81,82,83,83,83,83,84,85,86,86,87,88,89,89,89,90,90,91,91,92,92,93,94,94,95,95,96,96,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,100,101,102,102,102,102,103,103,103,103,103,103,104,104,105,105,106,107,107,107,107,108,108,108,109,110,110,110,110,111,111,112,112,113,113,114,114,115,115,115,116,116,117,117,117,117,117,118,118,118,118,118,118,119,120,120,120,120,121,122,122,123,124,124,125,126,126,126,126,126,126,126,126,126,126,126,127,127,128,129,129,130,130,131,131,131,131,131,131,131,131,131,132,132,132,132,133,133,134,135,135,136,137,115,121,110,116,97,120,32,101,114,114,111,114,0,34,69,79,70,34,0,101,114,114,111,114,0,36,117,110,100,101,102,105,110,101,100,0,34,40,34,0,34,41,34,0,78,65,84,0,73,78,84,0,70,76,79,65,84,0,84,69,88,84,0,86,65,82,0,86,65,76,85,69,95,84,89,80,69,0,65,78,89,70,85,78,67,0,77,85,84,0,78,79,80,0,68,82,79,80,0,66,76,79,67,75,0,69,78,68,0,73,70,0,84,72,69,78,0,69,76,83,69,0,76,79,79,80,0,66,82,0,66,82,95,73,70,0,66,82,95,84,65,66,76,69,0,67,65,76,76,0,67,65,76,76,95,73,77,80,79,82,84,0,67,65,76,76,95,73,78,68,73,82,69,67,84,0,82,69,84,85,82,78,0,71,69,84,95,76,79,67,65,76,0,83,69,84,95,76,79,67,65,76,0,84,69,69,95,76,79,67,65,76,0,71,69,84,95,71,76,79,66,65,76,0,83,69,84,95,71,76,79,66,65,76,0,76,79,65,68,0,83,84,79,82,69,0,79,70,70,83,69,84,95,69,81,95,78,65,84,0,65,76,73,71,78,95,69,81,95,78,65,84,0,67,79,78,83,84,0,85,78,65,82,89,0,66,73,78,65,82,89,0,67,79,77,80,65,82,69,0,67,79,78,86,69,82,84,0,83,69,76,69,67,84,0,85,78,82,69,65,67,72,65,66,76,69,0,67,85,82,82,69,78,84,95,77,69,77,79,82,89,0,71,82,79,87,95,77,69,77,79,82,89,0,70,85,78,67,0,83,84,65,82,84,0,84,89,80,69,0,80,65,82,65,77,0,82,69,83,85,76,84,0,76,79,67,65,76,0,71,76,79,66,65,76,0,77,79,68,85,76,69,0,84,65,66,76,69,0,69,76,69,77,0,77,69,77,79,82,89,0,68,65,84,65,0,79,70,70,83,69,84,0,73,77,80,79,82,84,0,69,88,80,79,82,84,0,82,69,71,73,83,84,69,82,0,73,78,86,79,75,69,0,71,69,84,0,65,83,83,69,82,84,95,77,65,76,70,79,82,77,69,68,0,65,83,83,69,82,84,95,73,78,86,65,76,73,68,0,65,83,83,69,82,84,95,85,78,76,73,78,75,65,66,76,69,0,65,83,83,69,82,84,95,82,69,84,85,82,78,0,65,83,83,69,82,84,95,82,69,84,85,82,78,95,67,65,78,79,78,73,67,65,76,95,78,65,78,0,65,83,83,69,82,84,95,82,69,84,85,82,78,95,65,82,73,84,72,77,69,84,73,67,95,78,65,78,0,65,83,83,69,82,84,95,84,82,65,80,0,65,83,83,69,82,84,95,69,88,72,65,85,83,84,73,79,78,0,73,78,80,85,84,0,79,85,84,80,85,84,0,76,79,87,0,36,97,99,99,101,112,116,0,110,111,110,95,101,109,112,116,121,95,116,101,120,116,95,108,105,115,116,0,116,101,120,116,95,108,105,115,116,0,113,117,111,116,101,100,95,116,101,120,116,0,118,97,108,117,101,95,116,121,112,101,95,108,105,115,116,0,101,108,101,109,95,116,121,112,101,0,103,108,111,98,97,108,95,116,121,112,101,0,102,117,110,99,95,116,121,112,101,0,102,117,110,99,95,115,105,103,0,116,97,98,108,101,95,115,105,103,0,109,101,109,111,114,121,95,115,105,103,0,108,105,109,105,116,115,0,116,121,112,101,95,117,115,101,0,110,97,116,0,108,105,116,101,114,97,108,0,118,97,114,0,118,97,114,95,108,105,115,116,0,98,105,110,100,95,118,97,114,95,111,112,116,0,98,105,110,100,95,118,97,114,0,108,97,98,101,108,105,110,103,95,111,112,116,0,111,102,102,115,101,116,95,111,112,116,0,97,108,105,103,110,95,111,112,116,0,105,110,115,116,114,0,112,108,97,105,110,95,105,110,115,116,114,0,98,108,111,99,107,95,105,110,115,116,114,0,101,120,112,114,0,101,120,112,114,49,0,105,102,95,0,105,110,115,116,114,95,108,105,115,116,0,101,120,112,114,95,108,105,115,116,0,99,111,110,115,116,95,101,120,112,114,0,102,117,110,99,95,102,105,101,108,100,115,0,102,117,110,99,95,98,111,100,121,0,102,117,110,99,95,105,110,102,111,0,101,108,101,109,0,100,97,116,97,0,105,109,112,111,114,116,95,107,105,110,100,0,105,109,112,111,114,116,0,105,110,108,105,110,101,95,105,109,112,111,114,116,0,101,120,112,111,114,116,95,107,105,110,100,0,101,120,112,111,114,116,0,105,110,108,105,110,101,95,101,120,112,111,114,116,95,111,112,116,0,105,110,108,105,110,101,95,101,120,112,111,114,116,0,116,121,112,101,95,100,101,102,0,115,116,97,114,116,0,109,111,100,117,108,101,95,102,105,101,108,100,115,0,114,97,119,95,109,111,100,117,108,101,0,109,111,100,117,108,101,0,115,99,114,105,112,116,95,118,97,114,95,111,112,116,0,97,115,115,101,114,116,105,111,110,0,99,109,100,0,99,109,100,95,108,105,115,116,0,99,111,110,115,116,0,99,111,110,115,116,95,108,105,115,116,0,115,99,114,105,112,116,0,115,99,114,105,112,116,95,115,116,97,114,116,0,115,121,110,116,97,120,32,101,114,114,111,114,44,32,117,110,101,120,112,101,99,116,101,100,32,37,115,0,115,121,110,116,97,120,32,101,114,114,111,114,44,32,117,110,101,120,112,101,99,116,101,100,32,37,115,44,32,101,120,112,101,99,116,105,110,103,32,37,115,0,115,121,110,116,97,120,32,101,114,114,111,114,44,32,117,110,101,120,112,101,99,116,101,100,32,37,115,44,32,101,120,112,101,99,116,105,110,103,32,37,115,32,111,114,32,37,115,0,115,121,110,116,97,120,32,101,114,114,111,114,44,32,117,110,101,120,112,101,99,116,101,100,32,37,115,44,32,101,120,112,101,99,116,105,110,103,32,37,115,32,111,114,32,37,115,32,111,114,32,37,115,0,115,121,110,116,97,120,32,101,114,114,111,114,44,32,117,110,101,120,112,101,99,116,101,100,32,37,115,44,32,101,120,112,101,99,116,105,110,103,32,37,115,32,111,114,32,37,115,32,111,114,32,37,115,32,111,114,32,37,115,0,0,133,136,137,3,127,128,130,131,132,0,53,61,62,63,64,65,66,67,68,69,70,71,9,92,93,8,78,9,129,129,3,127,127,127,3,130,130,130,3,127,130,130,8,76,126,129,78,78,78,78,78,135,4,4,78,78,78,4,8,3,4,110,112,113,114,115,116,118,121,124,125,4,135,4,4,4,4,3,4,134,4,4,4,46,47,48,52,54,55,56,57,59,60,4,37,92,5,9,88,90,3,82,93,92,92,3,90,101,111,92,90,111,78,78,5,6,7,89,3,13,14,15,17,20,21,22,23,24,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,87,97,98,99,101,104,107,108,109,119,123,4,46,4,82,3,10,81,119,123,3,119,122,123,15,17,20,58,98,102,111,91,3,119,122,123,111,76,77,78,3,120,4,48,49,50,51,59,60,93,94,94,94,90,90,91,90,90,90,90,90,90,90,35,95,95,89,3,109,3,104,4,3,83,87,3,87,109,3,83,4,12,104,106,3,81,81,84,86,88,11,80,84,94,94,94,106,101,105,4,91,4,90,57,85,86,85,3,77,4,3,117,46,52,54,56,4,90,79,93,79,79,93,78,78,79,100,100,100,90,36,96,96,4,49,50,4,4,109,4,4,10,4,4,106,4,80,88,3,4,100,79,100,4,105,4,77,4,4,57,4,46,52,54,56,4,90,90,90,90,4,4,10,10,4,4,10,78,4,104,16,16,19,16,79,79,4,4,4,55,3,101,103,4,77,92,92,92,92,4,4,4,4,107,4,3,108,108,4,4,94,94,94,94,4,4,91,18,3,101,4,4,83,87,81,84,85,107,108,104,3,4,104,18,101,4,4,4,4,4,4,16,50,4,4,104,94,79,3,4,4,19,3,104,19,4,104,4,69,114,114,111,114,58,32,112,111,112,112,105,110,103,0,109,101,109,111,114,121,32,101,120,104,97,117,115,116,101,100,0,67,108,101,97,110,117,112,58,32,100,105,115,99,97,114,100,105,110,103,32,108,111,111,107,97,104,101,97,100,0,67,108,101,97,110,117,112,58,32,112,111,112,112,105,110,103,0,37,115,32,118,97,114,105,97,98,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,32,40,109,97,120,32,37,100,41,0,101,108,101,109,32,115,101,103,109,101,110,116,32,111,102,102,115,101,116,0,105,110,118,97,108,105,100,32,37,115,44,32,109,117,115,116,32,98,101,32,97,32,99,111,110,115,116,97,110,116,32,101,120,112,114,101,115,115,105,111,110,59,32,101,105,116,104,101,114,32,42,46,99,111,110,115,116,32,111,114,32,103,101,116,95,103,108,111,98,97,108,46,0,105,110,105,116,105,97,108,105,122,101,114,32,101,120,112,114,101,115,115,105,111,110,32,99,97,110,32,111,110,108,121,32,114,101,102,101,114,101,110,99,101,32,97,32,112,114,101,118,105,111,117,115,108,121,32,100,101,102,105,110,101,100,32,103,108,111,98,97,108,0,105,110,105,116,105,97,108,105,122,101,114,32,101,120,112,114,101,115,115,105,111,110,32,99,97,110,32,111,110,108,121,32,114,101,102,101,114,101,110,99,101,32,97,110,32,105,109,112,111,114,116,101,100,32,103,108,111,98,97,108,0,105,110,105,116,105,97,108,105,122,101,114,32,101,120,112,114,101,115,115,105,111,110,32,99,97,110,110,111,116,32,114,101,102,101,114,101,110,99,101,32,97,32,109,117,116,97,98,108,101,32,103,108,111,98,97,108,0,116,121,112,101,32,109,105,115,109,97,116,99,104,32,97,116,32,37,115,46,32,103,111,116,32,37,115,44,32,101,120,112,101,99,116,101,100,32,37,115,0,100,97,116,97,32,115,101,103,109,101,110,116,32,111,102,102,115,101,116,0,109,117,108,116,105,112,108,101,32,114,101,115,117,108,116,32,118,97,108,117,101,115,32,110,111,116,32,99,117,114,114,101,110,116,108,121,32,115,117,112,112,111,114,116,101,100,46,0,114,101,115,117,108,116,0,116,121,112,101,32,109,105,115,109,97,116,99,104,32,102,111,114,32,37,115,32,37,100,32,111,102,32,37,115,46,32,103,111,116,32,37,115,44,32,101,120,112,101,99,116,101,100,32,37,115,0,101,120,112,101,99,116,101,100,32,37,122,100,32,37,115,115,44,32,103,111,116,32,37,122,100,0,97,114,103,117,109,101,110,116,0,102,111,117,110,100,32,99,97,108,108,95,105,110,100,105,114,101,99,116,32,111,112,101,114,97,116,111,114,44,32,98,117,116,32,110,111,32,116,97,98,108,101,0,108,111,99,97,108,32,118,97,114,105,97,98,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,32,40,109,97,120,32,37,100,41,0,37,115,32,114,101,113,117,105,114,101,115,32,97,110,32,105,109,112,111,114,116,101,100,32,111,114,32,100,101,102,105,110,101,100,32,109,101,109,111,114,121,46,0,97,108,105,103,110,109,101,110,116,32,109,117,115,116,32,98,101,32,112,111,119,101,114,45,111,102,45,116,119,111,0,97,108,105,103,110,109,101,110,116,32,109,117,115,116,32,110,111,116,32,98,101,32,108,97,114,103,101,114,32,116,104,97,110,32,110,97,116,117,114,97,108,32,97,108,105,103,110,109,101,110,116,32,40,37,117,41,0,111,102,102,115,101,116,32,109,117,115,116,32,98,101,32,108,101,115,115,32,116,104,97,110,32,111,114,32,101,113,117,97,108,32,116,111,32,48,120,102,102,102,102,102,102,102,102,0,103,108,111,98,97,108,32,105,110,105,116,105,97,108,105,122,101,114,32,101,120,112,114,101,115,115,105,111,110,0,111,110,108,121,32,111,110,101,32,116,97,98,108,101,32,97,108,108,111,119,101,100,0,101,108,101,109,115,0,105,110,105,116,105,97,108,32,37,115,32,40,37,108,108,117,41,32,109,117,115,116,32,98,101,32,60,61,32,40,37,108,108,117,41,0,109,97,120,32,37,115,32,40,37,108,108,117,41,32,109,117,115,116,32,98,101,32,60,61,32,40,37,108,108,117,41,0,109,97,120,32,37,115,32,40,37,108,108,117,41,32,109,117,115,116,32,98,101,32,62,61,32,105,110,105,116,105,97,108,32,37,115,32,40,37,108,108,117,41,0,111,110,108,121,32,111,110,101,32,109,101,109,111,114,121,32,98,108,111,99,107,32,97,108,108,111,119,101,100,0,112,97,103,101,115,0,109,117,116,97,98,108,101,32,103,108,111,98,97,108,115,32,99,97,110,110,111,116,32,98,101,32,105,109,112,111,114,116,101,100,0,109,117,116,97,98,108,101,32,103,108,111,98,97,108,115,32,99,97,110,110,111,116,32,98,101,32,101,120,112,111,114,116,101,100,0,111,110,108,121,32,111,110,101,32,115,116,97,114,116,32,102,117,110,99,116,105,111,110,32,97,108,108,111,119,101,100,0,115,116,97,114,116,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,98,101,32,110,117,108,108,97,114,121,0,115,116,97,114,116,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,110,111,116,32,114,101,116,117,114,110,32,97,110,121,116,104,105,110,103,0,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,101,120,112,111,114,116,32,34,37,115,34,0,117,110,107,110,111,119,110,32,109,111,100,117,108,101,0,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,101,120,112,111,114,116,32,34,37,46,42,115,34,0,109,97,110,121,0,102,101,119,0,116,111,111,32,37,115,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,46,32,103,111,116,32,37,122,100,44,32,101,120,112,101,99,116,101,100,32,37,122,100,0,105,110,118,111,107,101,0,117,110,107,110,111,119,110,32,103,108,111,98,97,108,32,101,120,112,111,114,116,32,34,37,46,42,115,34,0,97,99,116,105,111,110,0,101,120,112,101,99,116,101,100,32,37,122,100,32,114,101,115,117,108,116,115,44,32,103,111,116,32,37,122,100,0,101,120,112,101,99,116,101,100,32,49,32,114,101,115,117,108,116,44,32,103,111,116,32,37,122,100,0,116,121,112,101,32,109,105,115,109,97,116,99,104,32,97,116,32,37,115,46,32,103,111,116,32,37,115,44,32,101,120,112,101,99,116,101,100,32,102,51,50,32,111,114,32,102,54,52,0,108,105,109,105,116,115,58,32,102,108,97,103,115,0,108,105,109,105,116,115,58,32,105,110,105,116,105,97,108,0,108,105,109,105,116,115,58,32,109,97,120,0,87,65,83,77,95,66,73,78,65,82,89,95,77,65,71,73,67,0,87,65,83,77,95,66,73,78,65,82,89,95,86,69,82,83,73,79,78,0,115,101,99,116,105,111,110,32,34,37,115,34,32,40,37,117,41,0,59,32,37,115,10,0,115,101,99,116,105,111,110,32,115,105,122,101,32,40,103,117,101,115,115,41,0,110,117,109,32,116,121,112,101,115,0,70,73,88,85,80,32,115,101,99,116,105,111,110,32,115,105,122,101,0,116,121,112,101,0,59,32,37,115,32,37,100,10,0,110,117,109,32,112,97,114,97,109,115,0,110,117,109,32,114,101,115,117,108,116,115,0,110,117,109,32,105,109,112,111,114,116,115,0,105,109,112,111,114,116,32,104,101,97,100,101,114,0,110,117,109,32,102,117,110,99,116,105,111,110,115,0,102,117,110,99,116,105,111,110,32,37,122,100,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,110,117,109,32,116,97,98,108,101,115,0,110,117,109,32,109,101,109,111,114,105,101,115,0,110,117,109,32,103,108,111,98,97,108,115,0,73,78,86,65,76,73,68,32,73,78,76,73,78,69,32,83,73,71,78,65,84,85,82,69,0,98,114,101,97,107,32,100,101,112,116,104,0,110,117,109,32,116,97,114,103,101,116,115,0,98,114,101,97,107,32,100,101,112,116,104,32,102,111,114,32,100,101,102,97,117,108,116,0,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,105,51,50,32,108,105,116,101,114,97,108,0,105,54,52,32,108,105,116,101,114,97,108,0,102,51,50,32,108,105,116,101,114,97,108,0,102,54,52,32,108,105,116,101,114,97,108,0,103,108,111,98,97,108,32,105,110,100,101,120,0,108,111,99,97,108,32,105,110,100,101,120,0,97,108,105,103,110,109,101,110,116,0,110,117,109,32,101,120,112,111,114,116,115,0,101,120,112,111,114,116,32,110,97,109,101,0,101,120,112,111,114,116,32,107,105,110,100,0,101,120,112,111,114,116,32,102,117,110,99,32,105,110,100,101,120,0,101,120,112,111,114,116,32,116,97,98,108,101,32,105,110,100,101,120,0,101,120,112,111,114,116,32,109,101,109,111,114,121,32,105,110,100,101,120,0,101,120,112,111,114,116,32,103,108,111,98,97,108,32,105,110,100,101,120,0,115,116,97,114,116,32,102,117,110,99,32,105,110,100,101,120,0,110,117,109,32,101,108,101,109,32,115,101,103,109,101,110,116,115,0,101,108,101,109,32,115,101,103,109,101,110,116,32,104,101,97,100,101,114,0,116,97,98,108,101,32,105,110,100,101,120,0,110,117,109,32,102,117,110,99,116,105,111,110,32,105,110,100,105,99,101,115,0,102,117,110,99,116,105,111,110,32,98,111,100,121,0,102,117,110,99,32,98,111,100,121,32,115,105,122,101,32,40,103,117,101,115,115,41,0,108,111,99,97,108,32,100,101,99,108,32,99,111,117,110,116,0,70,73,88,85,80,32,102,117,110,99,32,98,111,100,121,32,115,105,122,101,0,110,117,109,32,100,97,116,97,32,115,101,103,109,101,110,116,115,0,100,97,116,97,32,115,101,103,109,101,110,116,32,104,101,97,100,101,114,0,109,101,109,111,114,121,32,105,110,100,101,120,0,100,97,116,97,32,115,101,103,109,101,110,116,32,115,105,122,101,0,115,101,99,116,105,111,110,32,34,37,115,34,0,99,117,115,116,111,109,32,115,101,99,116,105,111,110,32,99,111,100,101,0,99,117,115,116,111,109,32,115,101,99,116,105,111,110,32,110,97,109,101,0,102,117,110,99,116,105,111,110,32,110,97,109,101,32,116,121,112,101,0,115,117,98,115,101,99,116,105,111,110,32,115,105,122,101,32,40,103,117,101,115,115,41,0,70,73,88,85,80,32,115,117,98,115,101,99,116,105,111,110,32,115,105,122,101,0,102,117,110,99,32,110,97,109,101,32,37,122,100,0,108,111,99,97,108,32,110,97,109,101,32,116,121,112,101,0,110,117,109,32,108,111,99,97,108,115,0,108,111,99,97,108,32,110,97,109,101,32,37,122,100,0,37,115,46,37,115,0,114,101,108,111,99,32,115,101,99,116,105,111,110,32,116,121,112,101,0,110,117,109,32,114,101,108,111,99,115,0,114,101,108,111,99,32,116,121,112,101,0,114,101,108,111,99,32,111,102,102,115,101,116,0,114,101,108,111,99,32,105,110,100,101,120,0,114,101,108,111,99,32,97,100,100,101,110,100,0,78,52,119,97,98,116,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,53,66,105,110,97,114,121,82,101,97,100,101,114,87,97,116,69,0,78,52,119,97,98,116,49,53,66,105,110,97,114,121,82,101,97,100,101,114,78,111,112,69,0,78,52,119,97,98,116,49,50,66,105,110,97,114,121,82,101,97,100,101,114,69,0,97,99,99,101,115,115,105,110,103,32,115,116,97,99,107,32,100,101,112,116,104,58,32,37,117,32,62,61,32,109,97,120,58,32,37,122,100,0,101,108,115,101,32,101,120,112,114,101,115,115,105,111,110,32,119,105,116,104,111,117,116,32,109,97,116,99,104,105,110,103,32,105,102,0,112,111,112,112,105,110,103,32,101,109,112,116,121,32,108,97,98,101,108,32,115,116,97,99,107,0,101,120,112,101,99,116,101,100,32,102,117,110,99,116,105,111,110,32,110,97,109,101,32,99,111,117,110,116,32,40,37,117,41,32,60,61,32,102,117,110,99,116,105,111,110,32,99,111,117,110,116,32,40,37,122,100,41,0,101,120,112,101,99,116,101,100,32,108,111,99,97,108,32,110,97,109,101,32,99,111,117,110,116,32,40,37,100,41,32,60,61,32,108,111,99,97,108,32,99,111,117,110,116,32,40,37,100,41,0,117,110,100,101,102,105,110,101,100,32,108,97,98,101,108,32,118,97,114,105,97,98,108,101,32,34,37,46,42,115,34,0,117,110,100,101,102,105,110,101,100,32,37,115,32,118,97,114,105,97,98,108,101,32,34,37,46,42,115,34,0,102,117,110,99,116,105,111,110,32,116,121,112,101,0,117,110,100,101,102,105,110,101,100,32,108,111,99,97,108,32,118,97,114,105,97,98,108,101,32,34,37,46,42,115,34,0,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,37,115,32,34,37,115,34,0,112,97,114,97,109,101,116,101,114,0,108,111,99,97,108,0,78,52,119,97,98,116,50,49,83,111,117,114,99,101,69,114,114,111,114,72,97,110,100,108,101,114,78,111,112,69,0,67,117,115,116,111,109,0,84,121,112,101,0,73,109,112,111,114,116,0,70,117,110,99,116,105,111,110,0,84,97,98,108,101,0,77,101,109,111,114,121,0,71,108,111,98,97,108,0,69,120,112,111,114,116,0,83,116,97,114,116,0,69,108,101,109,0,67,111,100,101,0,68,97,116,97,0,116,97,98,108,101,0,109,101,109,111,114,121,0,103,108,111,98,97,108,0,82,95,70,85,78,67,95,73,78,68,69,88,95,76,69,66,0,82,95,84,65,66,76,69,95,73,78,68,69,88,95,83,76,69,66,0,82,95,84,65,66,76,69,95,73,78,68,69,88,95,73,51,50,0,82,95,77,69,77,79,82,89,95,65,68,68,82,95,76,69,66,0,82,95,77,69,77,79,82,89,95,65,68,68,82,95,83,76,69,66,0,82,95,77,69,77,79,82,89,95,65,68,68,82,95,73,51,50,0,82,95,84,89,80,69,95,73,78,68,69,88,95,76,69,66,0,82,95,71,76,79,66,65,76,95,73,78,68,69,88,95,76,69,66,0,58,48,120,0,37,48,55,122,120,58,32,0,37,48,50,120,0,32,32,59,32,37,115,0,59,32,109,111,118,101,32,100,97,116,97,58,32,91,37,122,120,44,32,37,122,120,41,32,45,62,32,91,37,122,120,44,32,37,122,120,41,10,0,78,52,119,97,98,116,49,50,77,101,109,111,114,121,87,114,105,116,101,114,69,0,78,52,119,97,98,116,54,87,114,105,116,101,114,69,0,117,110,114,101,97,99,104,97,98,108,101,0,110,111,112,0,101,108,115,101,0,60,105,110,118,97,108,105,100,58,48,120,48,54,62,0,60,105,110,118,97,108,105,100,58,48,120,48,55,62,0,60,105,110,118,97,108,105,100,58,48,120,48,56,62,0,60,105,110,118,97,108,105,100,58,48,120,48,57,62,0,60,105,110,118,97,108,105,100,58,48,120,48,97,62,0,101,110,100,0,60,105,110,118,97,108,105,100,58,48,120,49,50,62,0,60,105,110,118,97,108,105,100,58,48,120,49,51,62,0,60,105,110,118,97,108,105,100,58,48,120,49,52,62,0,60,105,110,118,97,108,105,100,58,48,120,49,53,62,0,60,105,110,118,97,108,105,100,58,48,120,49,54,62,0,60,105,110,118,97,108,105,100,58,48,120,49,55,62,0,60,105,110,118,97,108,105,100,58,48,120,49,56,62,0,60,105,110,118,97,108,105,100,58,48,120,49,57,62,0,60,105,110,118,97,108,105,100,58,48,120,49,99,62,0,60,105,110,118,97,108,105,100,58,48,120,49,100,62,0,60,105,110,118,97,108,105,100,58,48,120,49,101,62,0,60,105,110,118,97,108,105,100,58,48,120,49,102,62,0,103,101,116,95,108,111,99,97,108,0,103,101,116,95,103,108,111,98,97,108,0,60,105,110,118,97,108,105,100,58,48,120,50,53,62,0,60,105,110,118,97,108,105,100,58,48,120,50,54,62,0,60,105,110,118,97,108,105,100,58,48,120,50,55,62,0,105,51,50,46,108,111,97,100,0,105,54,52,46,108,111,97,100,0,102,51,50,46,108,111,97,100,0,102,54,52,46,108,111,97,100,0,105,51,50,46,108,111,97,100,56,95,115,0,105,51,50,46,108,111,97,100,56,95,117,0,105,51,50,46,108,111,97,100,49,54,95,115,0,105,51,50,46,108,111,97,100,49,54,95,117,0,105,54,52,46,108,111,97,100,56,95,115,0,105,54,52,46,108,111,97,100,56,95,117,0,105,54,52,46,108,111,97,100,49,54,95,115,0,105,54,52,46,108,111,97,100,49,54,95,117,0,105,54,52,46,108,111,97,100,51,50,95,115,0,105,54,52,46,108,111,97,100,51,50,95,117,0,105,51,50,46,115,116,111,114,101,0,105,54,52,46,115,116,111,114,101,0,102,51,50,46,115,116,111,114,101,0,102,54,52,46,115,116,111,114,101,0,105,51,50,46,115,116,111,114,101,56,0,105,51,50,46,115,116,111,114,101,49,54,0,105,54,52,46,115,116,111,114,101,56,0,105,54,52,46,115,116,111,114,101,49,54,0,105,54,52,46,115,116,111,114,101,51,50,0,99,117,114,114,101,110,116,95,109,101,109,111,114,121,0,103,114,111,119,95,109,101,109,111,114,121,0,105,51,50,46,99,111,110,115,116,0,105,54,52,46,99,111,110,115,116,0,102,51,50,46,99,111,110,115,116,0,102,54,52,46,99,111,110,115,116,0,105,51,50,46,101,113,122,0,105,51,50,46,101,113,0,105,51,50,46,110,101,0,105,51,50,46,108,116,95,115,0,105,51,50,46,108,116,95,117,0,105,51,50,46,103,116,95,115,0,105,51,50,46,103,116,95,117,0,105,51,50,46,108,101,95,115,0,105,51,50,46,108,101,95,117,0,105,51,50,46,103,101,95,115,0,105,51,50,46,103,101,95,117,0,105,54,52,46,101,113,122,0,105,54,52,46,101,113,0,105,54,52,46,110,101,0,105,54,52,46,108,116,95,115,0,105,54,52,46,108,116,95,117,0,105,54,52,46,103,116,95,115,0,105,54,52,46,103,116,95,117,0,105,54,52,46,108,101,95,115,0,105,54,52,46,108,101,95,117,0,105,54,52,46,103,101,95,115,0,105,54,52,46,103,101,95,117,0,102,51,50,46,101,113,0,102,51,50,46,110,101,0,102,51,50,46,108,116,0,102,51,50,46,103,116,0,102,51,50,46,108,101,0,102,51,50,46,103,101,0,102,54,52,46,101,113,0,102,54,52,46,110,101,0,102,54,52,46,108,116,0,102,54,52,46,103,116,0,102,54,52,46,108,101,0,102,54,52,46,103,101,0,105,51,50,46,99,108,122,0,105,51,50,46,99,116,122,0,105,51,50,46,112,111,112,99,110,116,0,105,51,50,46,97,100,100,0,105,51,50,46,115,117,98,0,105,51,50,46,109,117,108,0,105,51,50,46,100,105,118,95,115,0,105,51,50,46,100,105,118,95,117,0,105,51,50,46,114,101,109,95,115,0,105,51,50,46,114,101,109,95,117,0,105,51,50,46,97,110,100,0,105,51,50,46,111,114,0,105,51,50,46,120,111,114,0,105,51,50,46,115,104,108,0,105,51,50,46,115,104,114,95,115,0,105,51,50,46,115,104,114,95,117,0,105,51,50,46,114,111,116,108,0,105,51,50,46,114,111,116,114,0,105,54,52,46,99,108,122,0,105,54,52,46,99,116,122,0,105,54,52,46,112,111,112,99,110,116,0,105,54,52,46,97,100,100,0,105,54,52,46,115,117,98,0,105,54,52,46,109,117,108,0,105,54,52,46,100,105,118,95,115,0,105,54,52,46,100,105,118,95,117,0,105,54,52,46,114,101,109,95,115,0,105,54,52,46,114,101,109,95,117,0,105,54,52,46,97,110,100,0,105,54,52,46,111,114,0,105,54,52,46,120,111,114,0,105,54,52,46,115,104,108,0,105,54,52,46,115,104,114,95,115,0,105,54,52,46,115,104,114,95,117,0,105,54,52,46,114,111,116,108,0,105,54,52,46,114,111,116,114,0,102,51,50,46,97,98,115,0,102,51,50,46,110,101,103,0,102,51,50,46,99,101,105,108,0,102,51,50,46,102,108,111,111,114,0,102,51,50,46,116,114,117,110,99,0,102,51,50,46,110,101,97,114,101,115,116,0,102,51,50,46,115,113,114,116,0,102,51,50,46,97,100,100,0,102,51,50,46,115,117,98,0,102,51,50,46,109,117,108,0,102,51,50,46,100,105,118,0,102,51,50,46,109,105,110,0,102,51,50,46,109,97,120,0,102,51,50,46,99,111,112,121,115,105,103,110,0,102,54,52,46,97,98,115,0,102,54,52,46,110,101,103,0,102,54,52,46,99,101,105,108,0,102,54,52,46,102,108,111,111,114,0,102,54,52,46,116,114,117,110,99,0,102,54,52,46,110,101,97,114,101,115,116,0,102,54,52,46,115,113,114,116,0,102,54,52,46,97,100,100,0,102,54,52,46,115,117,98,0,102,54,52,46,109,117,108,0,102,54,52,46,100,105,118,0,102,54,52,46,109,105,110,0,102,54,52,46,109,97,120,0,102,54,52,46,99,111,112,121,115,105,103,110,0,105,51,50,46,119,114,97,112,47,105,54,52,0,105,51,50,46,116,114,117,110,99,95,115,47,102,51,50,0,105,51,50,46,116,114,117,110,99,95,117,47,102,51,50,0,105,51,50,46,116,114,117,110,99,95,115,47,102,54,52,0,105,51,50,46,116,114,117,110,99,95,117,47,102,54,52,0,105,54,52,46,101,120,116,101,110,100,95,115,47,105,51,50,0,105,54,52,46,101,120,116,101,110,100,95,117,47,105,51,50,0,105,54,52,46,116,114,117,110,99,95,115,47,102,51,50,0,105,54,52,46,116,114,117,110,99,95,117,47,102,51,50,0,105,54,52,46,116,114,117,110,99,95,115,47,102,54,52,0,105,54,52,46,116,114,117,110,99,95,117,47,102,54,52,0,102,51,50,46,99,111,110,118,101,114,116,95,115,47,105,51,50,0,102,51,50,46,99,111,110,118,101,114,116,95,117,47,105,51,50,0,102,51,50,46,99,111,110,118,101,114,116,95,115,47,105,54,52,0,102,51,50,46,99,111,110,118,101,114,116,95,117,47,105,54,52,0,102,51,50,46,100,101,109,111,116,101,47,102,54,52,0,102,54,52,46,99,111,110,118,101,114,116,95,115,47,105,51,50,0,102,54,52,46,99,111,110,118,101,114,116,95,117,47,105,51,50,0,102,54,52,46,99,111,110,118,101,114,116,95,115,47,105,54,52,0,102,54,52,46,99,111,110,118,101,114,116,95,117,47,105,54,52,0,102,54,52,46,112,114,111,109,111,116,101,47,102,51,50,0,105,51,50,46,114,101,105,110,116,101,114,112,114,101,116,47,102,51,50,0,105,54,52,46,114,101,105,110,116,101,114,112,114,101,116,47,102,54,52,0,102,51,50,46,114,101,105,110,116,101,114,112,114,101,116,47,105,51,50,0,102,54,52,46,114,101,105,110,116,101,114,112,114,101,116,47,105,54,52,0,101,114,114,111,114,32,103,101,116,116,105,110,103,32,116,104,101,32,115,111,117,114,99,101,32,108,105,110,101,46,10,0,105,110,118,97,108,105,100,32,100,101,112,116,104,58,32,37,122,100,32,40,109,97,120,32,37,122,100,41,0,116,121,112,101,32,115,116,97,99,107,32,115,105,122,101,32,116,111,111,32,115,109,97,108,108,32,97,116,32,37,115,46,32,103,111,116,32,37,122,100,44,32,101,120,112,101,99,116,101,100,32,97,116,32,108,101,97,115,116,32,37,122,100,0,116,121,112,101,32,109,105,115,109,97,116,99,104,32,105,110,32,37,115,44,32,101,120,112,101,99,116,101,100,32,37,115,32,98,117,116,32,103,111,116,32,37,115,46,0,98,114,0,98,114,95,105,102,0,98,114,95,116,97,98,108,101,0,99,97,108,108,0,99,97,108,108,95,105,110,100,105,114,101,99,116,0,100,114,111,112,0,105,102,32,116,114,117,101,32,98,114,97,110,99,104,0,116,121,112,101,32,115,116,97,99,107,32,97,116,32,101,110,100,32,111,102,32,37,115,32,105,115,32,37,122,100,44,32,101,120,112,101,99,116,101,100,32,37,122,100,0,105,102,32,119,105,116,104,111,117,116,32,101,108,115,101,32,99,97,110,110,111,116,32,104,97,118,101,32,116,121,112,101,32,115,105,103,110,97,116,117,114,101,46,0,102,117,110,99,116,105,111,110,0,98,108,111,99,107,0,108,111,111,112,0,105,102,0,105,102,32,102,97,108,115,101,32,98,114,97,110,99,104,0,114,101,116,117,114,110,0,115,101,108,101,99,116,0,115,101,116,95,103,108,111,98,97,108,0,115,101,116,95,108,111,99,97,108,0,116,101,101,95,108,111,99,97,108,0,105,109,112,108,105,99,105,116,32],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([114,101,116,117,114,110,0,109,97,103,105,99,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,117,105,110,116,51,50,95,116,58,32,37,115,0,42,69,82,82,79,82,42,58,32,64,48,120,37,48,56,122,120,58,32,37,115,10,0,98,97,100,32,109,97,103,105,99,32,118,97,108,117,101,0,118,101,114,115,105,111,110,0,98,97,100,32,119,97,115,109,32,102,105,108,101,32,118,101,114,115,105,111,110,58,32,37,35,120,32,40,101,120,112,101,99,116,101,100,32,37,35,120,41,0,66,101,103,105,110,77,111,100,117,108,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,101,99,116,105,111,110,32,99,111,100,101,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,117,51,50,32,108,101,98,49,50,56,58,32,37,115,0,115,101,99,116,105,111,110,32,115,105,122,101,0,105,110,118,97,108,105,100,32,115,101,99,116,105,111,110,32,99,111,100,101,58,32,37,117,59,32,109,97,120,32,105,115,32,37,117,0,105,110,118,97,108,105,100,32,115,101,99,116,105,111,110,32,115,105,122,101,58,32,101,120,116,101,110,100,115,32,112,97,115,116,32,101,110,100,0,115,101,99,116,105,111,110,32,37,115,32,111,117,116,32,111,102,32,111,114,100,101,114,0,66,101,103,105,110,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,101,99,116,105,111,110,32,110,97,109,101,0,115,116,114,105,110,103,32,108,101,110,103,116,104,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,115,116,114,105,110,103,58,32,37,115,0,66,101,103,105,110,67,117,115,116,111,109,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,110,97,109,101,0,66,101,103,105,110,78,97,109,101,115,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,110,97,109,101,32,116,121,112,101,0,100,117,112,108,105,99,97,116,101,32,115,117,98,45,115,101,99,116,105,111,110,0,111,117,116,45,111,102,45,111,114,100,101,114,32,115,117,98,45,115,101,99,116,105,111,110,0,115,117,98,115,101,99,116,105,111,110,32,115,105,122,101,0,105,110,118,97,108,105,100,32,115,117,98,45,115,101,99,116,105,111,110,32,115,105,122,101,58,32,101,120,116,101,110,100,115,32,112,97,115,116,32,101,110,100,0,79,110,70,117,110,99,116,105,111,110,78,97,109,101,83,117,98,115,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,110,97,109,101,32,99,111,117,110,116,0,79,110,70,117,110,99,116,105,111,110,78,97,109,101,115,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,58,32,37,117,0,102,117,110,99,116,105,111,110,32,110,97,109,101,0,79,110,70,117,110,99,116,105,111,110,78,97,109,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,76,111,99,97,108,78,97,109,101,83,117,98,115,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,117,110,99,116,105,111,110,32,99,111,117,110,116,0,79,110,76,111,99,97,108,78,97,109,101,70,117,110,99,116,105,111,110,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,108,111,99,97,108,32,99,111,117,110,116,0,79,110,76,111,99,97,108,78,97,109,101,76,111,99,97,108,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,110,97,109,101,100,32,105,110,100,101,120,0,79,110,76,111,99,97,108,78,97,109,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,117,110,102,105,110,105,115,104,101,100,32,115,117,98,45,115,101,99,116,105,111,110,32,40,101,120,112,101,99,116,101,100,32,101,110,100,58,32,48,120,37,122,120,41,0,69,110,100,78,97,109,101,115,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,114,101,108,111,99,0,66,101,103,105,110,82,101,108,111,99,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,101,99,116,105,111,110,0,114,101,108,111,99,97,116,105,111,110,32,99,111,117,110,116,0,79,110,82,101,108,111,99,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,114,101,108,111,99,97,116,105,111,110,32,116,121,112,101,0,111,102,102,115,101,116,0,105,110,100,101,120,0,97,100,100,101,110,100,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,105,51,50,32,108,101,98,49,50,56,58,32,37,115,0,79,110,82,101,108,111,99,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,82,101,108,111,99,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,67,117,115,116,111,109,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,84,121,112,101,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,116,121,112,101,32,99,111,117,110,116,0,79,110,84,121,112,101,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,116,121,112,101,32,102,111,114,109,0,105,110,118,97,108,105,100,32,116,121,112,101,58,32,37,100,0,117,110,101,120,112,101,99,116,101,100,32,116,121,112,101,32,102,111,114,109,58,32,37,100,0,102,117,110,99,116,105,111,110,32,112,97,114,97,109,32,99,111,117,110,116,0,102,117,110,99,116,105,111,110,32,114,101,115,117,108,116,32,99,111,117,110,116,0,102,117,110,99,116,105,111,110,32,112,97,114,97,109,32,116,121,112,101,0,101,120,112,101,99,116,101,100,32,118,97,108,105,100,32,112,97,114,97,109,32,116,121,112,101,32,40,103,111,116,32,37,100,41,0,114,101,115,117,108,116,32,99,111,117,110,116,32,109,117,115,116,32,98,101,32,48,32,111,114,32,49,0,102,117,110,99,116,105,111,110,32,114,101,115,117,108,116,32,116,121,112,101,0,101,120,112,101,99,116,101,100,32,118,97,108,105,100,32,114,101,115,117,108,116,32,116,121,112,101,58,32,37,100,0,79,110,84,121,112,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,84,121,112,101,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,73,109,112,111,114,116,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,109,112,111,114,116,32,99,111,117,110,116,0,79,110,73,109,112,111,114,116,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,109,112,111,114,116,32,109,111,100,117,108,101,32,110,97,109,101,0,105,109,112,111,114,116,32,102,105,101,108,100,32,110,97,109,101,0,105,109,112,111,114,116,32,107,105,110,100,0,105,109,112,111,114,116,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,105,109,112,111,114,116,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,79,110,73,109,112,111,114,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,73,109,112,111,114,116,70,117,110,99,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,116,97,98,108,101,32,101,108,101,109,32,116,121,112,101,0,116,97,98,108,101,32,101,108,101,109,32,116,121,112,101,32,109,117,115,116,32,98,121,32,97,110,121,102,117,110,99,0,116,97,98,108,101,32,102,108,97,103,115,0,116,97,98,108,101,32,105,110,105,116,105,97,108,32,101,108,101,109,32,99,111,117,110,116,0,116,97,98,108,101,32,109,97,120,32,101,108,101,109,32,99,111,117,110,116,0,116,97,98,108,101,32,105,110,105,116,105,97,108,32,101,108,101,109,32,99,111,117,110,116,32,109,117,115,116,32,98,101,32,60,61,32,109,97,120,32,101,108,101,109,32,99,111,117,110,116,0,79,110,73,109,112,111,114,116,84,97,98,108,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,109,101,109,111,114,121,32,102,108,97,103,115,0,109,101,109,111,114,121,32,105,110,105,116,105,97,108,32,112,97,103,101,32,99,111,117,110,116,0,105,110,118,97,108,105,100,32,109,101,109,111,114,121,32,105,110,105,116,105,97,108,32,115,105,122,101,0,109,101,109,111,114,121,32,109,97,120,32,112,97,103,101,32,99,111,117,110,116,0,105,110,118,97,108,105,100,32,109,101,109,111,114,121,32,109,97,120,32,115,105,122,101,0,109,101,109,111,114,121,32,105,110,105,116,105,97,108,32,115,105,122,101,32,109,117,115,116,32,98,101,32,60,61,32,109,97,120,32,115,105,122,101,0,79,110,73,109,112,111,114,116,77,101,109,111,114,121,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,103,108,111,98,97,108,32,116,121,112,101,0,105,110,118,97,108,105,100,32,103,108,111,98,97,108,32,116,121,112,101,58,32,37,35,120,0,103,108,111,98,97,108,32,109,117,116,97,98,105,108,105,116,121,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,117,105,110,116,56,95,116,58,32,37,115,0,103,108,111,98,97,108,32,109,117,116,97,98,105,108,105,116,121,32,109,117,115,116,32,98,101,32,48,32,111,114,32,49,0,79,110,73,109,112,111,114,116,71,108,111,98,97,108,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,110,118,97,108,105,100,32,105,109,112,111,114,116,32,107,105,110,100,58,32,37,100,0,69,110,100,73,109,112,111,114,116,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,70,117,110,99,116,105,111,110,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,117,110,99,116,105,111,110,32,115,105,103,110,97,116,117,114,101,32,99,111,117,110,116,0,79,110,70,117,110,99,116,105,111,110,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,117,110,99,116,105,111,110,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,102,117,110,99,116,105,111,110,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,58,32,37,100,0,79,110,70,117,110,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,70,117,110,99,116,105,111,110,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,84,97,98,108,101,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,116,97,98,108,101,32,99,111,117,110,116,0,116,97,98,108,101,32,99,111,117,110,116,32,40,37,100,41,32,109,117,115,116,32,98,101,32,48,32,111,114,32,49,0,79,110,84,97,98,108,101,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,84,97,98,108,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,84,97,98,108,101,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,77,101,109,111,114,121,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,109,101,109,111,114,121,32,99,111,117,110,116,0,109,101,109,111,114,121,32,99,111,117,110,116,32,109,117,115,116,32,98,101,32,48,32,111,114,32,49,0,79,110,77,101,109,111,114,121,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,77,101,109,111,114,121,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,77,101,109,111,114,121,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,71,108,111,98,97,108,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,103,108,111,98,97,108,32,99,111,117,110,116,0,79,110,71,108,111,98,97,108,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,71,108,111,98,97,108,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,71,108,111,98,97,108,73,110,105,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,111,112,99,111,100,101,0,105,110,105,116,95,101,120,112,114,32,105,51,50,46,99,111,110,115,116,32,118,97,108,117,101,0,79,110,73,110,105,116,69,120,112,114,73,51,50,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,110,105,116,95,101,120,112,114,32,105,54,52,46,99,111,110,115,116,32,118,97,108,117,101,0,105,110,118,97,108,105,100,32,105,54,52,32,108,101,98,49,50,56,58,32,37,115,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,105,54,52,32,108,101,98,49,50,56,58,32,37,115,0,79,110,73,110,105,116,69,120,112,114,73,54,52,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,110,105,116,95,101,120,112,114,32,102,51,50,46,99,111,110,115,116,32,118,97,108,117,101,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,102,108,111,97,116,58,32,37,115,0,79,110,73,110,105,116,69,120,112,114,70,51,50,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,110,105,116,95,101,120,112,114,32,102,54,52,46,99,111,110,115,116,32,118,97,108,117,101,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,100,111,117,98,108,101,58,32,37,115,0,79,110,73,110,105,116,69,120,112,114,70,54,52,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,110,105,116,95,101,120,112,114,32,103,101,116,95,103,108,111,98,97,108,32,105,110,100,101,120,0,79,110,73,110,105,116,69,120,112,114,71,101,116,71,108,111,98,97,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,117,110,101,120,112,101,99,116,101,100,32,111,112,99,111,100,101,32,105,110,32,105,110,105,116,105,97,108,105,122,101,114,32,101,120,112,114,101,115,115,105,111,110,58,32,37,100,32,40,48,120,37,120,41,0,101,120,112,101,99,116,101,100,32,69,78,68,32,111,112,99,111,100,101,32,97,102,116,101,114,32,105,110,105,116,105,97,108,105,122,101,114,32,101,120,112,114,101,115,115,105,111,110,0,69,110,100,71,108,111,98,97,108,73,110,105,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,71,108,111,98,97,108,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,71,108,111,98,97,108,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,69,120,112,111,114,116,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,101,120,112,111,114,116,32,99,111,117,110,116,0,79,110,69,120,112,111,114,116,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,101,120,112,111,114,116,32,105,116,101,109,32,110,97,109,101,0,101,120,112,111,114,116,32,101,120,116,101,114,110,97,108,32,107,105,110,100,0,105,110,118,97,108,105,100,32,101,120,112,111,114,116,32,101,120,116,101,114,110,97,108,32,107,105,110,100,0,101,120,112,111,114,116,32,105,116,101,109,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,101,120,112,111,114,116,32,102,117,110,99,32,105,110,100,101,120,58,32,37,100,0,105,110,118,97,108,105,100,32,101,120,112,111,114,116,32,116,97,98,108,101,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,101,120,112,111,114,116,32,109,101,109,111,114,121,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,101,120,112,111,114,116,32,103,108,111,98,97,108,32,105,110,100,101,120,0,79,110,69,120,112,111,114,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,69,120,112,111,114,116,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,83,116,97,114,116,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,116,97,114,116,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,115,116,97,114,116,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,79,110,83,116,97,114,116,70,117,110,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,83,116,97,114,116,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,69,108,101,109,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,101,108,101,109,32,115,101,103,109,101,110,116,32,99,111,117,110,116,0,79,110,69,108,101,109,83,101,103,109,101,110,116,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,101,108,101,109,32,115,101,99,116,105,111,110,32,119,105,116,104,111,117,116,32,116,97,98,108,101,32,115,101,99,116,105,111,110,0,101,108,101,109,32,115,101,103,109,101,110,116,32,116,97,98,108,101,32,105,110,100,101,120,0,66,101,103,105,110,69,108,101,109,83,101,103,109,101,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,69,108,101,109,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,69,108,101,109,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,101,108,101,109,32,115,101,103,109,101,110,116,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,32,99,111,117,110,116,0,79,110,69,108,101,109,83,101,103,109,101,110,116,70,117,110,99,116,105,111,110,73,110,100,101,120,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,101,108,101,109,32,115,101,103,109,101,110,116,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,79,110,69,108,101,109,83,101,103,109,101,110,116,70,117,110,99,116,105,111,110,73,110,100,101,120,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,69,108,101,109,83,101,103,109,101,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,69,108,101,109,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,67,111,100,101,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,117,110,99,116,105,111,110,32,98,111,100,121,32,99,111,117,110,116,0,102,117,110,99,116,105,111,110,32,115,105,103,110,97,116,117,114,101,32,99,111,117,110,116,32,33,61,32,102,117,110,99,116,105,111,110,32,98,111,100,121,32,99,111,117,110,116,0,79,110,70,117,110,99,116,105,111,110,66,111,100,121,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,70,117,110,99,116,105,111,110,66,111,100,121,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,117,110,99,116,105,111,110,32,98,111,100,121,32,115,105,122,101,0,108,111,99,97,108,32,100,101,99,108,97,114,97,116,105,111,110,32,99,111,117,110,116,0,79,110,76,111,99,97,108,68,101,99,108,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,85,110,114,101,97,99,104,97,98,108,101,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,66,97,114,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,98,108,111,99,107,32,115,105,103,110,97,116,117,114,101,32,116,121,112,101,0,101,120,112,101,99,116,101,100,32,118,97,108,105,100,32,98,108,111,99,107,32,115,105,103,110,97,116,117,114,101,32,116,121,112,101,0,79,110,66,108,111,99,107,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,66,108,111,99,107,83,105,103,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,108,111,111,112,32,115,105,103,110,97,116,117,114,101,32,116,121,112,101,0,79,110,76,111,111,112,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,102,32,115,105,103,110,97,116,117,114,101,32,116,121,112,101,0,79,110,73,102,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,69,108,115,101,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,83,101,108,101,99,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,98,114,32,100,101,112,116,104,0,79,110,66,114,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,85,105,110,116,51,50,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,98,114,95,105,102,32,100,101,112,116,104,0,79,110,66,114,73,102,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,98,114,95,116,97,98,108,101,32,116,97,114,103,101,116,32,99,111,117,110,116,0,98,114,95,116,97,98,108,101,32,100,101,102,97,117,108,116,32,116,97,114,103,101,116,32,100,101,112,116,104,0,98,114,95,116,97,98,108,101,32,116,97,114,103,101,116,32,100,101,112,116,104,0,79,110,66,114,84,97,98,108,101,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,82,101,116,117,114,110,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,78,111,112,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,68,114,111,112,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,69,110,100,70,117,110,99,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,69,110,100,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,51,50,46,99,111,110,115,116,32,118,97,108,117,101,0,79,110,73,51,50,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,105,54,52,46,99,111,110,115,116,32,118,97,108,117,101,0,79,110,73,54,52,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,85,105,110,116,54,52,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,51,50,46,99,111,110,115,116,32,118,97,108,117,101,0,79,110,70,51,50,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,70,51,50,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,102,54,52,46,99,111,110,115,116,32,118,97,108,117,101,0,79,110,70,54,52,67,111,110,115,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,70,54,52,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,103,101,116,95,103,108,111,98,97,108,32,103,108,111,98,97,108,32,105,110,100,101,120,0,79,110,71,101,116,71,108,111,98,97,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,103,101,116,95,108,111,99,97,108,32,108,111,99,97,108,32,105,110,100,101,120,0,79,110,71,101,116,76,111,99,97,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,101,116,95,103,108,111,98,97,108,32,103,108,111,98,97,108,32,105,110,100,101,120,0,79,110,83,101,116,71,108,111,98,97,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,101,116,95,108,111,99,97,108,32,108,111,99,97,108,32,105,110,100,101,120,0,79,110,83,101,116,76,111,99,97,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,99,97,108,108,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,105,110,100,101,120,0,79,110,67,97,108,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,99,97,108,108,95,105,110,100,105,114,101,99,116,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,105,110,118,97,108,105,100,32,99,97,108,108,95,105,110,100,105,114,101,99,116,32,115,105,103,110,97,116,117,114,101,32,105,110,100,101,120,0,99,97,108,108,95,105,110,100,105,114,101,99,116,32,114,101,115,101,114,118,101,100,0,99,97,108,108,95,105,110,100,105,114,101,99,116,32,114,101,115,101,114,118,101,100,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,48,0,79,110,67,97,108,108,73,110,100,105,114,101,99,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,79,112,99,111,100,101,85,105,110,116,51,50,85,105,110,116,51,50,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,116,101,101,95,108,111,99,97,108,32,108,111,99,97,108,32,105,110,100,101,120,0,79,110,84,101,101,76,111,99,97,108,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,108,111,97,100,32,97,108,105,103,110,109,101,110,116,0,108,111,97,100,32,111,102,102,115,101,116,0,79,110,76,111,97,100,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,115,116,111,114,101,32,97,108,105,103,110,109,101,110,116,0,115,116,111,114,101,32,111,102,102,115,101,116,0,79,110,83,116,111,114,101,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,99,117,114,114,101,110,116,95,109,101,109,111,114,121,32,114,101,115,101,114,118,101,100,0,99,117,114,114,101,110,116,95,109,101,109,111,114,121,32,114,101,115,101,114,118,101,100,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,48,0,79,110,67,117,114,114,101,110,116,77,101,109,111,114,121,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,103,114,111,119,95,109,101,109,111,114,121,32,114,101,115,101,114,118,101,100,0,103,114,111,119,95,109,101,109,111,114,121,32,114,101,115,101,114,118,101,100,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,48,0,79,110,71,114,111,119,77,101,109,111,114,121,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,66,105,110,97,114,121,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,67,111,109,112,97,114,101,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,85,110,97,114,121,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,79,110,67,111,110,118,101,114,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,117,110,101,120,112,101,99,116,101,100,32,111,112,99,111,100,101,58,32,37,100,32,40,48,120,37,120,41,0,102,117,110,99,116,105,111,110,32,98,111,100,121,32,108,111,110,103,101,114,32,116,104,97,110,32,103,105,118,101,110,32,115,105,122,101,0,102,117,110,99,116,105,111,110,32,98,111,100,121,32,109,117,115,116,32,101,110,100,32,119,105,116,104,32,69,78,68,32,111,112,99,111,100,101,0,108,111,99,97,108,32,116,121,112,101,32,99,111,117,110,116,0,108,111,99,97,108,32,116,121,112,101,0,101,120,112,101,99,116,101,100,32,118,97,108,105,100,32,108,111,99,97,108,32,116,121,112,101,0,79,110,76,111,99,97,108,68,101,99,108,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,70,117,110,99,116,105,111,110,66,111,100,121,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,67,111,100,101,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,68,97,116,97,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,100,97,116,97,32,115,101,103,109,101,110,116,32,99,111,117,110,116,0,79,110,68,97,116,97,83,101,103,109,101,110,116,67,111,117,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,100,97,116,97,32,115,101,99,116,105,111,110,32,119,105,116,104,111,117,116,32,109,101,109,111,114,121,32,115,101,99,116,105,111,110,0,100,97,116,97,32,115,101,103,109,101,110,116,32,109,101,109,111,114,121,32,105,110,100,101,120,0,66,101,103,105,110,68,97,116,97,83,101,103,109,101,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,66,101,103,105,110,68,97,116,97,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,68,97,116,97,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,100,97,116,97,32,115,101,103,109,101,110,116,32,100,97,116,97,0,100,97,116,97,32,115,105,122,101,0,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,100,97,116,97,58,32,37,115,0,79,110,68,97,116,97,83,101,103,109,101,110,116,68,97,116,97,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,68,97,116,97,83,101,103,109,101,110,116,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,69,110,100,68,97,116,97,83,101,99,116,105,111,110,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,117,110,102,105,110,105,115,104,101,100,32,115,101,99,116,105,111,110,32,40,101,120,112,101,99,116,101,100,32,101,110,100,58,32,48,120,37,122,120,41,0,69,110,100,77,111,100,117,108,101,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,0,78,52,119,97,98,116,49,57,66,105,110,97,114,121,82,101,97,100,101,114,76,111,103,103,105,110,103,69,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,66,101,103,105,110,77,111,100,117,108,101,40,118,101,114,115,105,111,110,58,32,37,117,41,10,0,69,110,100,77,111,100,117,108,101,10,0,66,101,103,105,110,67,117,115,116,111,109,83,101,99,116,105,111,110,40,39,37,46,42,115,39,44,32,115,105,122,101,58,32,37,100,41,10,0,69,110,100,67,117,115,116,111,109,83,101,99,116,105,111,110,10,0,66,101,103,105,110,84,121,112,101,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,84,121,112,101,67,111,117,110,116,40,37,117,41,10,0,79,110,84,121,112,101,40,105,110,100,101,120,58,32,37,117,44,32,112,97,114,97,109,115,58,32,0,91,0,97,110,121,0,118,111,105,100,0,102,117,110,99,0,97,110,121,102,117,110,99,0,102,54,52,0,102,51,50,0,105,54,52,0,105,51,50,0,37,115,0,44,32,0,93,0,44,32,114,101,115,117,108,116,115,58,32,0,41,10,0,69,110,100,84,121,112,101,83,101,99,116,105,111,110,10,0,66,101,103,105,110,73,109,112,111,114,116,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,73,109,112,111,114,116,67,111,117,110,116,40,37,117,41,10,0,79,110,73,109,112,111,114,116,40,105,110,100,101,120,58,32,37,117,44,32,109,111,100,117,108,101,58,32,34,37,46,42,115,34,44,32,102,105,101,108,100,58,32,34,37,46,42,115,34,41,10,0,79,110,73,109,112,111,114,116,70,117,110,99,40,105,109,112,111,114,116,95,105,110,100,101,120,58,32,37,117,44,32,102,117,110,99,95,105,110,100,101,120,58,32,37,117,44,32,115,105,103,95,105,110,100,101,120,58,32,37,117,41,10,0,105,110,105,116,105,97,108,58,32,37,108,108,117,44,32,109,97,120,58,32,37,108,108,117,0,105,110,105,116,105,97,108,58,32,37,108,108,117,0,79,110,73,109,112,111,114,116,84,97,98,108,101,40,105,109,112,111,114,116,95,105,110,100,101,120,58,32,37,117,44,32,116,97,98,108,101,95,105,110,100,101,120,58,32,37,117,44,32,101,108,101,109,95,116,121,112,101,58,32,37,115,44,32,37,115,41,10,0,79,110,73,109,112,111,114,116,77,101,109,111,114,121,40,105,109,112,111,114,116,95,105,110,100,101,120,58,32,37,117,44,32,109,101,109,111,114,121,95,105,110,100,101,120,58,32,37,117,44,32,37,115,41,10,0,116,114,117,101,0,102,97,108,115,101,0,79,110,73,109,112,111,114,116,71,108,111,98,97,108,40,105,109,112,111,114,116,95,105,110,100,101,120,58,32,37,117,44,32,103,108,111,98,97,108,95,105,110,100,101,120,58,32,37,117,44,32,116,121,112,101,58,32,37,115,44,32,109,117,116,97,98,108,101,58,32,37,115,41,10,0,69,110,100,73,109,112,111,114,116,83,101,99,116,105,111,110,10,0,66,101,103,105,110,70,117,110,99,116,105,111,110,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,70,117,110,99,116,105,111,110,67,111,117,110,116,40,37,117,41,10,0,79,110,70,117,110,99,116,105,111,110,40,105,110,100,101,120,58,32,37,117,44,32,115,105,103,95,105,110,100,101,120,58,32,37,117,41,10,0,69,110,100,70,117,110,99,116,105,111,110,83,101,99,116,105,111,110,10,0,66,101,103,105,110,84,97,98,108,101,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,84,97,98,108,101,67,111,117,110,116,40,37,117,41,10,0,79,110,84,97,98,108,101,40,105,110,100,101,120,58,32,37,117,44,32,101,108,101,109,95,116,121,112,101,58,32,37,115,44,32,37,115,41,10,0,69,110,100,84,97,98,108,101,83,101,99,116,105,111,110,10,0,66,101,103,105,110,77,101,109,111,114,121,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,77,101,109,111,114,121,67,111,117,110,116,40,37,117,41,10,0,79,110,77,101,109,111,114,121,40,105,110,100,101,120,58,32,37,117,44,32,37,115,41,10,0,69,110,100,77,101,109,111,114,121,83,101,99,116,105,111,110,10,0,66,101,103,105,110,71,108,111,98,97,108,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,71,108,111,98,97,108,67,111,117,110,116,40,37,117,41,10,0,66,101,103,105,110,71,108,111,98,97,108,40,105,110,100,101,120,58,32,37,117,44,32,116,121,112,101,58,32,37,115,44,32,109,117,116,97,98,108,101,58,32,37,115,41,10,0,66,101,103,105,110,71,108,111,98,97,108,73,110,105,116,69,120,112,114,40,37,117,41,10,0,69,110,100,71,108,111,98,97,108,73,110,105,116,69,120,112,114,40,37,117,41,10,0,69,110,100,71,108,111,98,97,108,40,37,117,41,10,0,69,110,100,71,108,111,98,97,108,83,101,99,116,105,111,110,10,0,66,101,103,105,110,69,120,112,111,114,116,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,69,120,112,111,114,116,67,111,117,110,116,40,37,117,41,10,0,79,110,69,120,112,111,114,116,40,105,110,100,101,120,58,32,37,117,44,32,107,105,110,100,58,32,37,115,44,32,105,116,101,109,95,105,110,100,101,120,58,32,37,117,44,32,110,97,109,101,58,32,34,37,46,42,115,34,41,10,0,69,110,100,69,120,112,111,114,116,83,101,99,116,105,111,110,10,0,66,101,103,105,110,83,116,97,114,116,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,83,116,97,114,116,70,117,110,99,116,105,111,110,40,37,117,41,10,0,69,110,100,83,116,97,114,116,83,101,99,116,105,111,110,10,0,66,101,103,105,110,67,111,100,101,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,70,117,110,99,116,105,111,110,66,111,100,121,67,111,117,110,116,40,37,117,41,10,0,66,101,103,105,110,70,117,110,99,116,105,111,110,66,111,100,121,40,37,117,41,10,0,79,110,76,111,99,97,108,68,101,99,108,67,111,117,110,116,40,37,117,41,10,0,79,110,76,111,99,97,108,68,101,99,108,40,105,110,100,101,120,58,32,37,117,44,32,99,111,117,110,116,58,32,37,117,44,32,116,121,112,101,58,32,37,115,41,10,0,79,110,66,105,110,97,114,121,69,120,112,114,40,34,37,115,34,32,40,37,117,41,41,10,0,79,110,66,108,111,99,107,69,120,112,114,40,115,105,103,58,32,0,79,110,66,114,69,120,112,114,40,100,101,112,116,104,58,32,37,117,41,10,0,79,110,66,114,73,102,69,120,112,114,40,100,101,112,116,104,58,32,37,117,41,10,0,79,110,66,114,84,97,98,108,101,69,120,112,114,40,110,117,109,95,116,97,114,103,101,116,115,58,32,37,117,44,32,100,101,112,116,104,115,58,32,91,0,93,44,32,100,101,102,97,117,108,116,58,32,37,117,41,10,0,37,117,0,79,110,67,97,108,108,69,120,112,114,40,102,117,110,99,95,105,110,100,101,120,58,32,37,117,41,10,0,79,110,67,97,108,108,73,110,100,105,114,101,99,116,69,120,112,114,40,115,105,103,95,105,110,100,101,120,58,32,37,117,41,10,0,79,110,67,111,109,112,97,114,101,69,120,112,114,40,34,37,115,34,32,40,37,117,41,41,10,0,79,110,67,111,110,118,101,114,116,69,120,112,114,40,34,37,115,34,32,40,37,117,41,41,10,0,79,110,67,117,114,114,101,110,116,77,101,109,111,114,121,69,120,112,114,10,0,79,110,68,114,111,112,69,120,112,114,10,0,79,110,69,108,115,101,69,120,112,114,10,0,79,110,69,110,100,69,120,112,114,10,0,79,110,70,51,50,67,111,110,115,116,69,120,112,114,40,37,103,32,40,48,120,48,52,37,120,41,41,10,0,79,110,70,54,52,67,111,110,115,116,69,120,112,114,40,37,103,32,40,48,120,48,56,37,108,108,120,41,41,10,0,79,110,71,101,116,71,108,111,98,97,108,69,120,112,114,40,105,110,100,101,120,58,32,37,117,41,10,0,79,110,71,101,116,76,111,99,97,108,69,120,112,114,40,105,110,100,101,120,58,32,37,117,41,10,0,79,110,71,114,111,119,77,101,109,111,114,121,69,120,112,114,10,0,79,110,73,51,50,67,111,110,115,116,69,120,112,114,40,37,117,32,40,48,120,37,120,41,41,10,0,79,110,73,54,52,67,111,110,115,116,69,120,112,114,40,37,108,108,117,32,40,48,120,37,108,108,120,41,41,10,0,79,110,73,102,69,120,112,114,40,115,105,103,58,32,0,79,110,76,111,97,100,69,120,112,114,40,111,112,99,111,100,101,58,32,34,37,115,34,32,40,37,117,41,44,32,97,108,105,103,110,32,108,111,103,50,58,32,37,117,44,32,111,102,102,115,101,116,58,32,37,117,41,10,0,79,110,76,111,111,112,69,120,112,114,40,115,105,103,58,32,0,79,110,78,111,112,69,120,112,114,10,0,79,110,82,101,116,117,114,110,69,120,112,114,10,0,79,110,83,101,108,101,99,116,69,120,112,114,10,0,79,110,83,101,116,71,108,111,98,97,108,69,120,112,114,40,105,110,100,101,120,58,32,37,117,41,10,0,79,110,83,101,116,76,111,99,97,108,69,120,112,114,40,105,110,100,101,120,58,32,37,117,41,10,0,79,110,83,116,111,114,101,69,120,112,114,40,111,112,99,111,100,101,58,32,34,37,115,34,32,40,37,117,41,44,32,97,108,105,103,110,32,108,111,103,50,58,32,37,117,44,32,111,102,102,115,101,116,58,32,37,117,41,10,0,79,110,84,101,101,76,111,99,97,108,69,120,112,114,40,105,110,100,101,120,58,32,37,117,41,10,0,79,110,85,110,97,114,121,69,120,112,114,40,34,37,115,34,32,40,37,117,41,41,10,0,79,110,85,110,114,101,97,99,104,97,98,108,101,69,120,112,114,10,0,69,110,100,70,117,110,99,116,105,111,110,66,111,100,121,40,37,117,41,10,0,69,110,100,67,111,100,101,83,101,99,116,105,111,110,10,0,66,101,103,105,110,69,108,101,109,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,69,108,101,109,83,101,103,109,101,110,116,67,111,117,110,116,40,37,117,41,10,0,66,101,103,105,110,69,108,101,109,83,101,103,109,101,110,116,40,105,110,100,101,120,58,32,37,117,44,32,116,97,98,108,101,95,105,110,100,101,120,58,32,37,117,41,10,0,66,101,103,105,110,69,108,101,109,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,40,37,117,41,10,0,69,110,100,69,108,101,109,83,101,103,109,101,110,116,73,110],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);allocate([105,116,69,120,112,114,40,37,117,41,10,0,79,110,69,108,101,109,83,101,103,109,101,110,116,70,117,110,99,116,105,111,110,73,110,100,101,120,67,111,117,110,116,40,105,110,100,101,120,58,32,37,117,44,32,99,111,117,110,116,58,32,37,117,41,10,0,79,110,69,108,101,109,83,101,103,109,101,110,116,70,117,110,99,116,105,111,110,73,110,100,101,120,40,105,110,100,101,120,58,32,37,117,44,32,102,117,110,99,95,105,110,100,101,120,58,32,37,117,41,10,0,69,110,100,69,108,101,109,83,101,103,109,101,110,116,40,37,117,41,10,0,69,110,100,69,108,101,109,83,101,99,116,105,111,110,10,0,66,101,103,105,110,68,97,116,97,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,68,97,116,97,83,101,103,109,101,110,116,67,111,117,110,116,40,37,117,41,10,0,66,101,103,105,110,68,97,116,97,83,101,103,109,101,110,116,40,105,110,100,101,120,58,32,37,117,44,32,109,101,109,111,114,121,95,105,110,100,101,120,58,32,37,117,41,10,0,66,101,103,105,110,68,97,116,97,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,40,37,117,41,10,0,69,110,100,68,97,116,97,83,101,103,109,101,110,116,73,110,105,116,69,120,112,114,40,37,117,41,10,0,79,110,68,97,116,97,83,101,103,109,101,110,116,68,97,116,97,40,105,110,100,101,120,58,37,117,44,32,115,105,122,101,58,37,117,41,10,0,69,110,100,68,97,116,97,83,101,103,109,101,110,116,40,37,117,41,10,0,69,110,100,68,97,116,97,83,101,99,116,105,111,110,10,0,66,101,103,105,110,78,97,109,101,115,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,70,117,110,99,116,105,111,110,78,97,109,101,83,117,98,115,101,99,116,105,111,110,40,105,110,100,101,120,58,37,117,44,32,110,97,109,101,116,121,112,101,58,37,117,44,32,115,105,122,101,58,37,117,41,10,0,79,110,70,117,110,99,116,105,111,110,78,97,109,101,115,67,111,117,110,116,40,37,117,41,10,0,79,110,70,117,110,99,116,105,111,110,78,97,109,101,40,105,110,100,101,120,58,32,37,117,44,32,110,97,109,101,58,32,34,37,46,42,115,34,41,10,0,79,110,76,111,99,97,108,78,97,109,101,83,117,98,115,101,99,116,105,111,110,40,105,110,100,101,120,58,37,117,44,32,110,97,109,101,116,121,112,101,58,37,117,44,32,115,105,122,101,58,37,117,41,10,0,79,110,76,111,99,97,108,78,97,109,101,70,117,110,99,116,105,111,110,67,111,117,110,116,40,37,117,41,10,0,79,110,76,111,99,97,108,78,97,109,101,76,111,99,97,108,67,111,117,110,116,40,105,110,100,101,120,58,32,37,117,44,32,99,111,117,110,116,58,32,37,117,41,10,0,79,110,76,111,99,97,108,78,97,109,101,40,102,117,110,99,95,105,110,100,101,120,58,32,37,117,44,32,108,111,99,97,108,95,105,110,100,101,120,58,32,37,117,44,32,110,97,109,101,58,32,34,37,46,42,115,34,41,10,0,69,110,100,78,97,109,101,115,83,101,99,116,105,111,110,10,0,66,101,103,105,110,82,101,108,111,99,83,101,99,116,105,111,110,40,37,117,41,10,0,79,110,82,101,108,111,99,67,111,117,110,116,40,99,111,117,110,116,58,32,37,100,44,32,115,101,99,116,105,111,110,58,32,37,115,44,32,115,101,99,116,105,111,110,95,110,97,109,101,58,32,37,46,42,115,41,10,0,79,110,82,101,108,111,99,40,116,121,112,101,58,32,37,115,44,32,111,102,102,115,101,116,58,32,37,117,44,32,105,110,100,101,120,58,32,37,117,44,32,97,100,100,101,110,100,58,32,37,100,41,10,0,69,110,100,82,101,108,111,99,83,101,99,116,105,111,110,10,0,79,110,73,110,105,116,69,120,112,114,70,51,50,67,111,110,115,116,69,120,112,114,40,105,110,100,101,120,58,32,37,117,44,32,118,97,108,117,101,58,32,37,103,32,40,48,120,48,52,37,120,41,41,10,0,79,110,73,110,105,116,69,120,112,114,70,54,52,67,111,110,115,116,69,120,112,114,40,105,110,100,101,120,58,32,37,117,32,118,97,108,117,101,58,32,37,103,32,40,48,120,48,56,37,108,108,120,41,41,10,0,79,110,73,110,105,116,69,120,112,114,71,101,116,71,108,111,98,97,108,69,120,112,114,40,105,110,100,101,120,58,32,37,117,44,32,103,108,111,98,97,108,95,105,110,100,101,120,58,32,37,117,41,10,0,79,110,73,110,105,116,69,120,112,114,73,51,50,67,111,110,115,116,69,120,112,114,40,105,110,100,101,120,58,32,37,117,44,32,118,97,108,117,101,58,32,37,117,41,10,0,79,110,73,110,105,116,69,120,112,114,73,54,52,67,111,110,115,116,69,120,112,114,40,105,110,100,101,120,58,32,37,117,44,32,118,97,108,117,101,58,32,37,108,108,117,41,10,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,78,65,78,0,46,0,105,110,102,105,110,105,116,121,0,110,97,110,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,117,115,114,47,108,111,99,97,108,47,103,111,111,103,108,101,47,104,111,109,101,47,98,105,110,106,105,47,100,101,118,47,101,109,115,99,114,105,112,116,101,110,47,101,109,115,99,114,105,112,116,101,110,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,117,115,114,47,108,111,99,97,108,47,103,111,111,103,108,101,47,104,111,109,101,47,98,105,110,106,105,47,100,101,118,47,101,109,115,99,114,105,112,116,101,110,47,101,109,115,99,114,105,112,116,101,110,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,101,120,99,101,112,116,105,111,110,0,117,110,99,97,117,103,104,116,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,83,116,57,98,97,100,95,97,108,108,111,99,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+30720);var tempDoublePtr=STATICTOP;STATICTOP+=16;Module["_i64Subtract"]=_i64Subtract;function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0){if(info.destructor){Runtime.dynCall("vi",info.destructor,[ptr])}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(asm["setTempRet0"](0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(asm["setTempRet0"](0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(asm["setTempRet0"](typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(asm["setTempRet0"](throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}Module["_memset"]=_memset;Module["_bitshift64Shl"]=_bitshift64Shl;function _abort(){Module["abort"]()}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Runtime.dynCall("v",func);_pthread_once.seen[ptr]=1}function ___lock(){}function ___unlock(){}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var _llvm_fabs_f64=Math_abs;function ___assert_fail(condition,filename,line,func){ABORT=true;throw"Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"]+" at "+stackTrace()}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _realloc(){throw"bad"}Module["_realloc"]=_realloc;Module["_saveSetjmp"]=_saveSetjmp;function __exit(status){Module["exit"](status)}function _exit(status){__exit(status)}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function _malloc(bytes){var ptr=Runtime.dynamicAlloc(bytes+8);return ptr+8&4294967288}Module["_malloc"]=_malloc;function ___cxa_allocate_exception(size){return _malloc(size)}var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module["_bitshift64Ashr"]=_bitshift64Ashr;Module["_bitshift64Lshr"]=_bitshift64Lshr;Module["_testSetjmp"]=_testSetjmp;function _longjmp(env,value){asm["setThrew"](env,value||1);throw"longjmp"}function _pthread_cleanup_push(routine,arg){__ATEXIT__.push((function(){Runtime.dynCall("vi",routine,[arg])}));_pthread_cleanup_push.level=__ATEXIT__.length}function _pthread_cleanup_pop(){assert(_pthread_cleanup_push.level==__ATEXIT__.length,"cannot pop if something else added meanwhile!");__ATEXIT__.pop();_pthread_cleanup_push.level=__ATEXIT__.length}Module["_i64Add"]=_i64Add;function ___cxa_begin_catch(ptr){__ZSt18uncaught_exceptionv.uncaught_exception--;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort("cannot dynamically allocate, sbrk now has control")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}Module["_memmove"]=_memmove;function ___gxx_personality_v0(){}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _pthread_self(){return 0}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffer){___syscall146.buffers=[null,[],[]];___syscall146.printChar=(function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?Module["print"]:Module["printErr"])(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}})}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}Module["_llvm_ctlz_i64"]=_llvm_ctlz_i64;__ATEXIT__.push((function(){var fflush=Module["_fflush"];if(fflush)fflush(0);var printChar=___syscall146.printChar;if(!printChar)return;var buffers=___syscall146.buffers;if(buffers[1].length)printChar(1,10);if(buffers[2].length)printChar(2,10)}));STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){return Runtime.functionPointers[index](a1,a2,a3,a4,a5,a6,a7)}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiii(index,a1,a2,a3){return Runtime.functionPointers[index](a1,a2,a3)}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_viiiii(index,a1,a2,a3,a4,a5){Runtime.functionPointers[index](a1,a2,a3,a4,a5)}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_vi(index,a1){Runtime.functionPointers[index](a1)}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_vii(index,a1,a2){Runtime.functionPointers[index](a1,a2)}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiiiiii(index,a1,a2,a3,a4,a5,a6){return Runtime.functionPointers[index](a1,a2,a3,a4,a5,a6)}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_ii(index,a1){return Runtime.functionPointers[index](a1)}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_viii(index,a1,a2,a3){Runtime.functionPointers[index](a1,a2,a3)}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_v(index){Runtime.functionPointers[index]()}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module["dynCall_iiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiiii(index,a1,a2,a3,a4){return Runtime.functionPointers[index](a1,a2,a3,a4)}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_viiiiii(index,a1,a2,a3,a4,a5,a6){Runtime.functionPointers[index](a1,a2,a3,a4,a5,a6)}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iii(index,a1,a2){return Runtime.functionPointers[index](a1,a2)}function invoke_iiiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_iiiiii(index,a1,a2,a3,a4,a5){return Runtime.functionPointers[index](a1,a2,a3,a4,a5)}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function jsCall_viiii(index,a1,a2,a3,a4){Runtime.functionPointers[index](a1,a2,a3,a4)}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"invoke_iiiiiiii":invoke_iiiiiiii,"jsCall_iiiiiiii":jsCall_iiiiiiii,"invoke_iiii":invoke_iiii,"jsCall_iiii":jsCall_iiii,"invoke_viiiii":invoke_viiiii,"jsCall_viiiii":jsCall_viiiii,"invoke_vi":invoke_vi,"jsCall_vi":jsCall_vi,"invoke_vii":invoke_vii,"jsCall_vii":jsCall_vii,"invoke_iiiiiii":invoke_iiiiiii,"jsCall_iiiiiii":jsCall_iiiiiii,"invoke_ii":invoke_ii,"jsCall_ii":jsCall_ii,"invoke_viii":invoke_viii,"jsCall_viii":jsCall_viii,"invoke_v":invoke_v,"jsCall_v":jsCall_v,"invoke_iiiii":invoke_iiiii,"jsCall_iiiii":jsCall_iiiii,"invoke_viiiiii":invoke_viiiiii,"jsCall_viiiiii":jsCall_viiiiii,"invoke_iii":invoke_iii,"jsCall_iii":jsCall_iii,"invoke_iiiiii":invoke_iiiiii,"jsCall_iiiiii":jsCall_iiiiii,"invoke_viiii":invoke_viiii,"jsCall_viiii":jsCall_viiii,"_pthread_cleanup_pop":_pthread_cleanup_pop,"___syscall54":___syscall54,"_abort":_abort,"_llvm_fabs_f64":_llvm_fabs_f64,"___gxx_personality_v0":___gxx_personality_v0,"___assert_fail":___assert_fail,"___cxa_allocate_exception":___cxa_allocate_exception,"__ZSt18uncaught_exceptionv":__ZSt18uncaught_exceptionv,"_longjmp":_longjmp,"___setErrNo":___setErrNo,"_sbrk":_sbrk,"___cxa_begin_catch":___cxa_begin_catch,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___resumeException":___resumeException,"___cxa_find_matching_catch":___cxa_find_matching_catch,"__exit":__exit,"_pthread_getspecific":_pthread_getspecific,"_pthread_self":_pthread_self,"_pthread_once":_pthread_once,"_pthread_key_create":_pthread_key_create,"___unlock":___unlock,"_pthread_setspecific":_pthread_setspecific,"___cxa_throw":___cxa_throw,"_sysconf":_sysconf,"___lock":___lock,"___syscall6":___syscall6,"_pthread_cleanup_push":_pthread_cleanup_push,"_time":_time,"___syscall140":___syscall140,"_exit":_exit,"___syscall146":___syscall146,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"cttz_i8":cttz_i8};// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=0;var o=0;var p=0;var q=0;var r=global.NaN,s=global.Infinity;var t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0.0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=global.Math.floor;var N=global.Math.abs;var O=global.Math.sqrt;var P=global.Math.pow;var Q=global.Math.cos;var R=global.Math.sin;var S=global.Math.tan;var T=global.Math.acos;var U=global.Math.asin;var V=global.Math.atan;var W=global.Math.atan2;var X=global.Math.exp;var Y=global.Math.log;var Z=global.Math.ceil;var _=global.Math.imul;var $=global.Math.min;var aa=global.Math.clz32;var ba=env.abort;var ca=env.assert;var da=env.invoke_iiiiiiii;var ea=env.jsCall_iiiiiiii;var fa=env.invoke_iiii;var ga=env.jsCall_iiii;var ha=env.invoke_viiiii;var ia=env.jsCall_viiiii;var ja=env.invoke_vi;var ka=env.jsCall_vi;var la=env.invoke_vii;var ma=env.jsCall_vii;var na=env.invoke_iiiiiii;var oa=env.jsCall_iiiiiii;var pa=env.invoke_ii;var qa=env.jsCall_ii;var ra=env.invoke_viii;var sa=env.jsCall_viii;var ta=env.invoke_v;var ua=env.jsCall_v;var va=env.invoke_iiiii;var wa=env.jsCall_iiiii;var xa=env.invoke_viiiiii;var ya=env.jsCall_viiiiii;var za=env.invoke_iii;var Aa=env.jsCall_iii;var Ba=env.invoke_iiiiii;var Ca=env.jsCall_iiiiii;var Da=env.invoke_viiii;var Ea=env.jsCall_viiii;var Fa=env._pthread_cleanup_pop;var Ga=env.___syscall54;var Ha=env._abort;var Ia=env._llvm_fabs_f64;var Ja=env.___gxx_personality_v0;var Ka=env.___assert_fail;var La=env.___cxa_allocate_exception;var Ma=env.__ZSt18uncaught_exceptionv;var Na=env._longjmp;var Oa=env.___setErrNo;var Pa=env._sbrk;var Qa=env.___cxa_begin_catch;var Ra=env._emscripten_memcpy_big;var Sa=env.___resumeException;var Ta=env.___cxa_find_matching_catch;var Ua=env.__exit;var Va=env._pthread_getspecific;var Wa=env._pthread_self;var Xa=env._pthread_once;var Ya=env._pthread_key_create;var Za=env.___unlock;var _a=env._pthread_setspecific;var $a=env.___cxa_throw;var ab=env._sysconf;var bb=env.___lock;var cb=env.___syscall6;var db=env._pthread_cleanup_push;var eb=env._time;var fb=env.___syscall140;var gb=env._exit;var hb=env.___syscall146;var ib=0.0;
// EMSCRIPTEN_START_FUNCS
function Ud(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0,he=0,ie=0,je=0,ke=0,le=0,me=0,ne=0,oe=0,pe=0,qe=0,re=0,se=0,te=0,ue=0,ve=0,we=0,xe=0,ye=0,ze=0,Ae=0,Be=0,Ce=0,De=0,Ee=0,Fe=0,Ge=0,He=0,Ie=0,Je=0,Ke=0,Le=0,Me=0,Ne=0,Oe=0,Pe=0,Qe=0,Re=0,Se=0,Te=0,Ue=0,Ve=0,We=0,Xe=0,Ye=0,Ze=0,_e=0,$e=0,af=0,bf=0,cf=0,df=0,ef=0,ff=0,gf=0,hf=0,jf=0,kf=0,lf=0,mf=0,nf=0,of=0,pf=0,qf=0,rf=0,sf=0,tf=0,uf=0,vf=0,wf=0,xf=0,yf=0,zf=0,Af=0,Bf=0,Cf=0,Df=0,Ef=0,Ff=0,Gf=0,Hf=0,If=0,Jf=0,Kf=0,Lf=0,Mf=0,Nf=0,Of=0,Pf=0,Qf=0,Rf=0,Sf=0,Tf=0,Uf=0,Vf=0,Wf=0,Xf=0,Yf=0,Zf=0,_f=0,$f=0,ag=0,bg=0,cg=0,dg=0,eg=0,fg=0,gg=0,hg=0,ig=0,jg=0,kg=0,lg=0,mg=0,ng=0,og=0,pg=0,qg=0,rg=0,sg=0,tg=0,ug=0,vg=0,wg=0,xg=0,yg=0,zg=0,Ag=0,Bg=0,Cg=0,Dg=0,Eg=0,Fg=0,Gg=0,Hg=0,Ig=0,Jg=0,Kg=0,Lg=0,Mg=0,Ng=0,Og=0,Pg=0,Qg=0,Rg=0,Sg=0,Tg=0,Ug=0,Vg=0,Wg=0,Xg=0,Yg=0,Zg=0,_g=0,$g=0,ah=0;h=i;i=i+64|0;j=h+48|0;k=h+40|0;l=h+32|0;m=h+24|0;n=h+16|0;o=h+8|0;p=h;q=f+56|0;r=f+52|0;s=f+60|0;t=f+16|0;u=f+20|0;v=e+4|0;w=f+40|0;x=f+28|0;y=f+32|0;z=e+8|0;A=e+12|0;B=f+48|0;C=f+24|0;D=0;a:while(1){E=c[q>>2]|0;c[r>>2]=E;F=E;if((D|0)>=2){G=c[s>>2]|0;if((D|0)<3){if(G>>>0>F>>>0)H=F;else{if((Vd(f,1)|0)==1){I=62;break}H=c[q>>2]|0}if((a[H>>0]|0)==10){J=H+1|0;c[q>>2]=J;c[u>>2]=(c[u>>2]|0)+1;c[y>>2]=J-(c[w>>2]|0)+(c[x>>2]|0);D=0;continue}else K=H;while(1){J=K+1|0;c[q>>2]=J;if((c[s>>2]|0)>>>0>J>>>0)L=J;else{if((Vd(f,1)|0)==1){I=67;break a}L=c[q>>2]|0}if((a[L>>0]|0)==10){M=D;D=M;continue a}else K=L}}if((G-E|0)<2){if((Vd(f,2)|0)==1){I=47;break}N=c[q>>2]|0}else N=F;J=a[N>>0]|0;b:do if((J&255)>=40){if((J&255)<41){O=N+1|0;c[q>>2]=O;if((a[O>>0]|0)!=59){M=D;D=M;continue a}c[q>>2]=N+2;c[C>>2]=(c[C>>2]|0)+1;M=D;D=M;continue a}if(J<<24>>24==59){O=N+1|0;c[q>>2]=O;if((a[O>>0]|0)!=41){M=D;D=M;continue a}c[q>>2]=N+2;O=(c[C>>2]|0)+-1|0;c[C>>2]=O;D=(O|0)==0?0:D;continue a}}else{switch(J<<24>>24){case 0:{P=N;I=52;break a;break}case 10:break;default:break b}O=N+1|0;c[q>>2]=O;c[u>>2]=(c[u>>2]|0)+1;c[y>>2]=O-(c[w>>2]|0)+(c[x>>2]|0);M=D;D=M;continue a}while(0);c[q>>2]=N+1;M=D;D=M;continue}J=(c[s>>2]|0)-E|0;if((D|0)>=1){if((J|0)<3){if((Vd(f,3)|0)==1){I=8;break}Q=c[q>>2]|0}else Q=F;G=a[Q>>0]|0;c:do if((G&255)<34){if((G&255)<10)if(!(G<<24>>24)){R=Q;I=18;break a}else{I=19;break}if((G&255)>=11)if((G&255)<32){I=19;break}else{S=Q;I=22;break}else{O=Q+1|0;c[q>>2]=O;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];T=c[w>>2]|0;U=c[x>>2]|0;V=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-T+U-V;c[A>>2]=O+1-T+U-V;wi(e,f,g,11161,n);c[u>>2]=(c[u>>2]|0)+1;c[y>>2]=(c[q>>2]|0)-(c[w>>2]|0)+(c[x>>2]|0);D=0;continue a}}else{if((G&255)>=93)if(G<<24>>24==127){I=19;break}else{S=Q;I=22;break}if((G&255)<35){W=Q;I=23;break a}if((G&255)<92){S=Q;I=22}else{V=Q+1|0;c[q>>2]=V;U=a[V>>0]|0;do if((U&255)<65){if((U&255)<35){if(U<<24>>24==10){X=V;break c}if((U&255)>33){S=V;I=22;break c}else{I=39;break}}if((U&255)<40)if((U&255)>38){S=V;I=22;break c}else{I=39;break}else if((U+-48&255)<10){I=41;break}else{I=39;break}}else{if((U&255)>=103)if((U&255)<111)if((U&255)>109){S=V;I=22;break c}else{I=39;break}else if(U<<24>>24==116){S=V;I=22;break c}else{I=39;break}if((U&255)<92)if((U&255)<71){I=41;break}else{I=39;break}if((U&255)<93){S=V;I=22;break c}if((U&255)>96)I=41;else I=39}while(0);do if((I|0)==39){I=0;U=Q+2|0;c[q>>2]=U;Y=U}else if((I|0)==41){I=0;U=Q+2|0;c[q>>2]=U;V=a[U>>0]|0;T=U;if((V&255)<65)if((V+-48&255)<10){S=U;I=22;break c}else{Y=T;break}else if((V&255)<71|(V+-97&255)<6){S=U;I=22;break c}else{Y=T;break}}while(0);c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];T=c[r>>2]|0;U=c[w>>2]|0;V=c[x>>2]|0;O=c[y>>2]|0;c[z>>2]=T+1-U+V-O;c[A>>2]=Y+1-U+V-O;c[m>>2]=Y-T;c[m+4>>2]=T;wi(e,f,g,11179,m);D=1;continue a}}while(0);if((I|0)==19){I=0;G=Q+1|0;c[q>>2]=G;X=G}else if((I|0)==22){I=0;c[q>>2]=S+1;D=1;continue}c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];G=c[w>>2]|0;E=c[x>>2]|0;T=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-G+E-T;c[A>>2]=X+1-G+E-T;wi(e,f,g,11133,o);D=1;continue}if((J|0)<29){if((Vd(f,29)|0)==1){I=73;break}Z=c[q>>2]|0}else Z=F;T=d[Z>>0]|0;if(a[11197+T>>0]&8){E=Z;while(1){G=E+1|0;c[q>>2]=G;if((c[s>>2]|0)>>>0>G>>>0)_=G;else{if((Vd(f,1)|0)==1){I=82;break a}_=c[q>>2]|0}if(!(a[11197+(d[_>>0]|0)>>0]&8)){M=D;D=M;continue a}else E=_}}d:do switch(T|0){case 0:{$=Z;I=76;break a;break}case 41:{aa=Z;I=108;break a;break}case 10:case 9:{E=Z+1|0;c[q>>2]=E;c[u>>2]=(c[u>>2]|0)+1;c[y>>2]=E-(c[w>>2]|0)+(c[x>>2]|0);M=D;D=M;continue a;break}case 126:case 124:case 122:case 121:case 120:case 119:case 118:case 113:case 107:case 106:case 104:case 96:case 95:case 94:case 92:case 90:case 89:case 88:case 87:case 86:case 85:case 84:case 83:case 82:case 81:case 80:case 79:case 78:case 77:case 76:case 75:case 74:case 73:case 72:case 71:case 70:case 69:case 68:case 67:case 66:case 65:case 64:case 63:case 62:case 61:case 60:case 58:case 47:case 46:case 42:case 39:case 38:case 37:case 35:case 33:case 32:{I=85;break}case 34:{E=Z+1|0;c[q>>2]=E;c[B>>2]=E;F=a[E>>0]|0;if((F&255)<32|F<<24>>24==127){D=1;continue a}else{ba=E;ca=F}e:while(1){f:do if(!(a[11197+(ca&255)>>0]&64)){if((ca&255)<32)break e;if((ca&255)<35){da=ba;I=214;break a}if((ca&255)>=93)break e;F=ba+1|0;c[q>>2]=F;if((c[s>>2]|0)>>>0>F>>>0)ea=F;else{if((Vd(f,1)|0)==1){I=218;break a}ea=c[q>>2]|0}F=a[ea>>0]|0;do if((F&255)<71)if((F&255)<40)if(F<<24>>24!=34&(F&255)<39)break e;else{fa=ea;break f}else if((F&255)<48|(F+-58&255)<7)break e;else break;else{if((F&255)<103){if(F<<24>>24==92){fa=ea;break f}if((F&255)<97)break e;else break}if((F&255)<111)if((F&255)<110)break e;else{fa=ea;break f}else if(F<<24>>24==116){fa=ea;break f}else break e}while(0);F=ea+1|0;c[q>>2]=F;if((c[s>>2]|0)>>>0>F>>>0)ga=F;else{if((Vd(f,1)|0)==1){I=403;break a}ga=c[q>>2]|0}F=a[ga>>0]|0;if((F&255)<65)if((F+-48&255)<10){fa=ga;break}else break e;else if((F&255)<71|(F+-97&255)<6){fa=ga;break}else break e}else fa=ba;while(0);F=fa+1|0;c[q>>2]=F;if((c[s>>2]|0)>>>0>F>>>0)ha=F;else{if((Vd(f,1)|0)==1){I=207;break a}ha=c[q>>2]|0}ba=ha;ca=a[ha>>0]|0}c[q>>2]=c[B>>2];D=1;continue a;break}case 36:{F=Z+1|0;c[q>>2]=F;E=a[F>>0]|0;if((E&255)<60){if((E&255)<40)if(E<<24>>24!=33&(E&255)<35){I=91;break d}else{ia=F;I=229;break a}if((E&255)<44)if((E&255)<42){I=91;break d}else{ia=F;I=229;break a}else if((E+-45&255)<14){ia=F;I=229;break a}else{I=91;break d}}if((E&255)<123)if((E&255)<92)if((E&255)<91){ia=F;I=229;break a}else{I=91;break d}else if(E<<24>>24==93){I=91;break d}else{ia=F;I=229;break a}else if((E&255)<125)if((E&255)<124){I=91;break d}else{ia=F;I=229;break a}else if(E<<24>>24==126){ia=F;I=229;break a}else{I=91;break d}break}case 40:{F=Z+1|0;c[q>>2]=F;if((a[F>>0]|0)!=59){ja=F;I=107;break a}c[q>>2]=Z+2;c[C>>2]=1;D=3;continue a;break}case 45:case 43:{F=Z+1|0;c[q>>2]=F;E=a[F>>0]|0;if((E&255)>=105)if((E&255)<106){J=Z+2|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=110){ka=G;I=90;break d}G=Z+3|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24==102){la=G;I=553;break d}else{ka=J;I=90;break d}}else{if(E<<24>>24!=110){ka=E;I=90;break d}J=Z+2|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24==97){ma=J;I=384;break d}else{ka=G;I=90;break d}}if((E&255)>=48){do if((E&255)<49){G=Z+2|0;c[q>>2]=G;J=a[G>>0]|0;O=G;if((J&255)<69){if((J&255)<45)if((J&255)<35)if(J<<24>>24==33){I=85;break d}else{na=O;I=267;break a}else if((J&255)<40|(J&-2)<<24>>24==42){I=85;break d}else{na=O;I=267;break a}if((J&255)<48)if(J<<24>>24==46){oa=G;I=293;break d}else{I=85;break d}if((J&255)<58){pa=G;break}if(J<<24>>24==59){na=O;I=267;break a}else{I=85;break d}}if((J&255)<102)if((J&255)<92){if((J&255)<70){qa=G;I=316;break d}if((J&255)<91){I=85;break d}else{na=O;I=267;break a}}else{if(J<<24>>24==93){na=O;I=267;break a}if((J&255)<101){I=85;break d}else{qa=G;I=316;break d}}if((J&255)>=124)if(J<<24>>24!=125&(J&255)<127){I=85;break d}else{na=O;I=267;break a}if(J<<24>>24!=120)if((J&255)<123){I=85;break d}else{na=O;I=267;break a}O=Z+3|0;c[q>>2]=O;J=a[O>>0]|0;if((J&255)<65)if((J+-48&255)<10)ra=O;else{ka=J;I=90;break d}else if((J&255)<71|(J+-97&255)<6)ra=O;else{ka=J;I=90;break d}while(1){J=ra+1|0;c[q>>2]=J;O=J;if(((c[s>>2]|0)-O|0)<3){if((Vd(f,3)|0)==1){I=615;break a}G=c[q>>2]|0;sa=G;ta=G}else{sa=J;ta=O}O=a[sa>>0]|0;if((O&255)<65){if((O&255)<45){ua=ta;va=O;I=618;break}if((O&255)<48){wa=sa;xa=O;I=622;break}if((O&255)<58){ra=sa;continue}else{ya=ta;za=O;I=624;break}}if((O&255)>=103){Aa=ta;Ba=sa;Ca=O;I=631;break}if((O&255)<92)if((O&255)<71){ra=sa;continue}else{Da=ta;Ea=O;I=628;break}if(O<<24>>24==93){na=ta;I=267;break a}if((O&255)<97){I=85;break d}else ra=sa}if((I|0)==618){I=0;if((va&255)<35)if(va<<24>>24==33){I=85;break d}else{na=ua;I=267;break a}else if((va&255)<40|(va&-2)<<24>>24==42){I=85;break d}else{na=ua;I=267;break a}}else if((I|0)==622){I=0;if(xa<<24>>24==46){Fa=wa;I=635;break d}else{I=85;break d}}else if((I|0)==624){I=0;if(za<<24>>24==59){na=ya;I=267;break a}else{I=85;break d}}else if((I|0)==628){I=0;if((Ea&255)<91){I=85;break d}else{na=Da;I=267;break a}}else if((I|0)==631){I=0;if((Ca&255)>=124)if(Ca<<24>>24!=125&(Ca&255)<127){I=85;break d}else{na=Aa;I=267;break a}if(Ca<<24>>24==112){Ga=Ba;I=658;break d}if((Ca&255)<123){I=85;break d}else{na=Aa;I=267;break a}}}else if((E&255)<58)pa=F;else{ka=E;I=90;break d}while(0);while(1){F=pa+1|0;c[q>>2]=F;O=F;if(((c[s>>2]|0)-O|0)<3){if((Vd(f,3)|0)==1){I=271;break a}J=c[q>>2]|0;Ha=J;Ia=J}else{Ha=O;Ia=F}F=a[Ia>>0]|0;if((F&255)>=60){Ja=Ha;Ka=Ia;La=F;I=283;break}if((F&255)<44){Ma=Ha;Na=F;I=274;break}if((F&255)<47){Oa=Ha;Pa=Ia;Qa=F;I=278;break}if((F&255)<48){I=85;break d}if((F&255)<58)pa=Ia;else{Ra=Ha;Sa=F;I=282;break}}if((I|0)==274){I=0;if((Na&255)<35)if(Na<<24>>24==33){I=85;break d}else{na=Ma;I=267;break a}else if((Na&-2)<<24>>24==40){na=Ma;I=267;break a}else{I=85;break d}}else if((I|0)==278){I=0;if((Qa&255)<45){na=Oa;I=267;break a}if((Qa&255)<46){I=85;break d}else{oa=Pa;I=293;break d}}else if((I|0)==282){I=0;if((Sa&255)<59){I=85;break d}else{na=Ra;I=267;break a}}else if((I|0)==283){I=0;if((La&255)<101)if((La&255)<91)if(La<<24>>24==69){qa=Ka;I=316;break d}else{I=85;break d}else if(La<<24>>24!=92&(La&255)<94){na=Ja;I=267;break a}else{I=85;break d}if((La&255)>=124)if(La<<24>>24!=125&(La&255)<127){I=85;break d}else{na=Ja;I=267;break a}if((La&255)<102){qa=Ka;I=316;break d}if((La&255)<123){I=85;break d}else{na=Ja;I=267;break a}}}else{ka=E;I=90}break}case 48:{F=Z+1|0;c[q>>2]=F;O=a[F>>0]|0;J=F;if(((O&255)+-48|0)>>>0>=10){if((O&255)<70){if((O&255)<44)if((O&255)<35)if(O<<24>>24==33){I=85;break d}else{Ta=J;I=135;break a}else if((O&-2)<<24>>24==40){Ta=J;I=135;break a}else{I=85;break d}if((O&255)<47){if((O&255)<45){Ta=J;I=135;break a}if((O&255)<46){I=85;break d}else{oa=F;I=293;break d}}else{if(O<<24>>24==59){Ta=J;I=135;break a}if((O&255)<69){I=85;break d}else{qa=F;I=316;break d}}}if((O&255)<120){if((O&255)<93)if(O<<24>>24==91){Ta=J;I=135;break a}else{I=85;break d}if((O&255)<94){Ta=J;I=135;break a}if(O<<24>>24==101){qa=F;I=316;break d}else{I=85;break d}}if((O&255)>=124)if(O<<24>>24!=125&(O&255)<127){I=85;break d}else{Ta=J;I=135;break a}if((O&255)>=121)if((O&255)<123){I=85;break d}else{Ta=J;I=135;break a}J=Z+2|0;c[q>>2]=J;O=a[J>>0]|0;if((a[11197+(O&255)>>0]|0)<0){G=J;while(1){J=G+1|0;c[q>>2]=J;V=J;if(((c[s>>2]|0)-V|0)<3){if((Vd(f,3)|0)==1){I=434;break a}U=c[q>>2]|0;Ua=U;Va=U}else{Ua=J;Va=V}V=a[Ua>>0]|0;if((a[11197+(V&255)>>0]|0)<0)G=Ua;else{Wa=Va;Xa=Ua;Ya=V;break}}if((Ya&255)<60){if((Ya&255)<42)if((Ya&255)<34)if((Ya&255)<33){Ta=Wa;I=135;break a}else{I=85;break d}else if((Ya+-35&255)<5){I=85;break d}else{Ta=Wa;I=135;break a}if((Ya&255)<46)if(Ya<<24>>24==44){Ta=Wa;I=135;break a}else{I=85;break d}if((Ya&255)<47){Fa=Xa;I=635;break d}if((Ya&255)<59){I=85;break d}else{Ta=Wa;I=135;break a}}else{if((Ya&255)>=113)if((Ya&255)<125)if(Ya<<24>>24==123){Ta=Wa;I=135;break a}else{I=85;break d}else if(Ya<<24>>24==126){I=85;break d}else{Ta=Wa;I=135;break a}if((Ya&255)<93)if(Ya<<24>>24==91){Ta=Wa;I=135;break a}else{I=85;break d}if((Ya&255)<94){Ta=Wa;I=135;break a}if((Ya&255)<112){I=85;break d}else{Ga=Xa;I=658;break d}}}else{ka=O;I=90}}else{Za=F;I=136}break}case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:{Za=Z;I=136;break}case 59:{G=Z+1|0;c[q>>2]=G;if((a[G>>0]|0)==59){c[q>>2]=Z+2;D=2;continue a}else{_a=G;I=78}break}case 97:{G=Z+1|0;c[q>>2]=G;E=a[G>>0]|0;if((E&255)<110){if(E<<24>>24!=108){ka=E;I=90;break d}G=Z+2|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+3|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=103){ka=G;I=90;break d}G=Z+4|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+5|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=61){ka=G;I=90;break d}G=Z+6|0;c[q>>2]=G;V=a[G>>0]|0;if((V&255)<48){ka=V;I=90;break d}do if((V&255)<49){J=Z+7|0;c[q>>2]=J;U=a[J>>0]|0;$a=J;if((U&255)<60){if((U&255)<42)if((U&255)<34)if((U&255)>32){I=85;break d}else{ab=$a;I=1131;break a}else if((U+-35&255)<5){I=85;break d}else{ab=$a;I=1131;break a}if((U&255)<48)if(U<<24>>24==44){ab=$a;I=1131;break a}else{I=85;break d}if((U&255)<58){bb=J;break}if((U&255)<59){I=85;break d}else{ab=$a;I=1131;break a}}if((U&255)>=121)if((U&255)<125)if(U<<24>>24==123){ab=$a;I=1131;break a}else{I=85;break d}else if(U<<24>>24==126){I=85;break d}else{ab=$a;I=1131;break a}if((U&255)<93)if(U<<24>>24==91){ab=$a;I=1131;break a}else{I=85;break d}if((U&255)<94){ab=$a;I=1131;break a}if((U&255)<120){I=85;break d}U=Z+8|0;c[q>>2]=U;$a=a[U>>0]|0;if(($a&255)<65)if(($a+-48&255)<10)cb=U;else{ka=$a;I=90;break d}else if(($a&255)<71|($a+-97&255)<6)cb=U;else{ka=$a;I=90;break d}while(1){$a=cb+1|0;c[q>>2]=$a;if((c[s>>2]|0)>>>0>$a>>>0)db=$a;else{if((Vd(f,1)|0)==1){I=1502;break a}db=c[q>>2]|0}$a=a[db>>0]|0;if(($a&255)<65){if(($a&255)<44){eb=db;fb=$a;I=1505;break}if(($a&255)>=58){gb=db;hb=$a;I=1511;break}if(($a&255)<45){ib=db;I=1130;break a}if(($a&255)<48){I=85;break d}else{cb=db;continue}}if(($a&255)<97){if(($a&255)>=92){jb=db;kb=$a;I=1516;break}if(($a&255)<71){cb=db;continue}else{lb=db;mb=$a;I=1515;break}}else{if(($a&255)>=124){nb=db;ob=$a;I=1520;break}if(($a&255)<103){cb=db;continue}else{pb=db;qb=$a;I=1519;break}}}if((I|0)==1505){I=0;$a=eb;if((fb&255)<35)if(fb<<24>>24==33){I=85;break d}else{ab=$a;I=1131;break a}else if((fb&-2)<<24>>24==40){ab=$a;I=1131;break a}else{I=85;break d}}else if((I|0)==1511){I=0;if(hb<<24>>24==59){ab=gb;I=1131;break a}else{I=85;break d}}else if((I|0)==1515){I=0;if((mb&255)<91){I=85;break d}else{ab=lb;I=1131;break a}}else if((I|0)==1516){I=0;if(kb<<24>>24==93){ab=jb;I=1131;break a}else{I=85;break d}}else if((I|0)==1519){I=0;if((qb&255)<123){I=85;break d}else{ab=pb;I=1131;break a}}else if((I|0)==1520){I=0;if(ob<<24>>24!=125&(ob&255)<127){I=85;break d}else{ab=nb;I=1131;break a}}}else if((V&255)<58)bb=G;else{ka=V;I=90;break d}while(0);while(1){V=bb+1|0;c[q>>2]=V;if((c[s>>2]|0)>>>0>V>>>0)rb=V;else{if((Vd(f,1)|0)==1){I=1135;break a}rb=c[q>>2]|0}V=a[rb>>0]|0;if((V&255)>=59){sb=rb;tb=V;I=1144;break}if((V&255)<42){ub=rb;vb=V;I=1138;break}if((V&255)<45){wb=rb;xb=V;I=1142;break}if((V+-48&255)<10)bb=rb;else{I=85;break d}}if((I|0)==1138){I=0;V=ub;if((vb&255)<34)if((vb&255)<33){ab=V;I=1131;break a}else{I=85;break d}else if((vb+-35&255)<5){I=85;break d}else{ab=V;I=1131;break a}}else if((I|0)==1142){I=0;if((xb&255)<44){I=85;break d}else{ab=wb;I=1131;break a}}else if((I|0)==1144){I=0;V=sb;if((tb&255)<94)if((tb&255)<91)if((tb&255)<60){ab=V;I=1131;break a}else{I=85;break d}else if(tb<<24>>24==92){I=85;break d}else{ab=V;I=1131;break a}else if((tb&255)<125)if(tb<<24>>24==123){ab=V;I=1131;break a}else{I=85;break d}else if(tb<<24>>24==126){I=85;break d}else{ab=V;I=1131;break a}}}if((E&255)<111){V=Z+2|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=121){ka=G;I=90;break d}G=Z+3|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=102){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=117){ka=G;I=90;break d}G=Z+5|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=99){ka=G;I=90;break d}G=Z+7|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){yb=G;I=1152;break a}else{I=85;break d}}if(E<<24>>24==115){G=Z+2|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24==115){G=Z+3|0;c[q>>2]=G;F=a[G>>0]|0;if(F<<24>>24==101){G=Z+4|0;c[q>>2]=G;O=a[G>>0]|0;if(O<<24>>24==114){G=Z+5|0;c[q>>2]=G;$a=a[G>>0]|0;if($a<<24>>24==116){G=Z+6|0;c[q>>2]=G;U=a[G>>0]|0;if(U<<24>>24==95){G=Z+7|0;c[q>>2]=G;J=a[G>>0]|0;switch(J&255|0){case 101:{G=Z+8|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=120){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=104){ka=G;I=90;break d}G=Z+10|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=97){ka=zb;I=90;break d}zb=Z+11|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=117){ka=G;I=90;break d}G=Z+12|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=115){ka=zb;I=90;break d}zb=Z+13|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=116){ka=G;I=90;break d}G=Z+14|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=105){ka=zb;I=90;break d}zb=Z+15|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=111){ka=G;I=90;break d}G=Z+16|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+17|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Ab=zb;I=1930;break a}else{I=85;break d}break}case 105:{zb=Z+8|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=110){ka=G;I=90;break d}G=Z+9|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=118){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=97){ka=G;I=90;break d}G=Z+11|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=108){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=105){ka=G;I=90;break d}G=Z+13|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=100){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Bb=zb;I=1847;break a}else{I=85;break d}break}case 109:{zb=Z+8|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=97){ka=G;I=90;break d}G=Z+9|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=108){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=102){ka=G;I=90;break d}G=Z+11|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=114){ka=G;I=90;break d}G=Z+13|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=109){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=101){ka=G;I=90;break d}G=Z+15|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=100){ka=zb;I=90;break d}zb=Z+16|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Cb=zb;I=1909;break a}else{I=85;break d}break}case 114:{zb=Z+8|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=101){ka=G;I=90;break d}G=Z+9|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=116){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=117){ka=G;I=90;break d}G=Z+11|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=114){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=110){ka=G;I=90;break d}G=Z+13|0;c[q>>2]=G;zb=a[G>>0]|0;if((zb&255)<91)if((zb&255)<42)if((zb&255)<34)if((zb&255)>32){I=85;break d}else{Db=G;I=1824;break a}else if((zb+-35&255)<5){I=85;break d}else{Db=G;I=1824;break a}else if((zb&255)<45)if((zb&255)<44){I=85;break d}else{Db=G;I=1824;break a}else if(zb<<24>>24==59){Db=G;I=1824;break a}else{I=85;break d}if((zb&255)>=96)if((zb&255)<125)if(zb<<24>>24==123){Db=G;I=1824;break a}else{I=85;break d}else if(zb<<24>>24==126){I=85;break d}else{Db=G;I=1824;break a}if((zb&255)<93)if((zb&255)>91){I=85;break d}else{Db=G;I=1824;break a}if((zb&255)<94){Db=G;I=1824;break a}if((zb&255)<95){I=85;break d}zb=Z+14|0;c[q>>2]=zb;G=a[zb>>0]|0;switch(G<<24>>24){case 97:break;case 99:{zb=Z+15|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24!=97){ka=Eb;I=90;break d}Eb=Z+16|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+17|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24!=111){ka=Eb;I=90;break d}Eb=Z+18|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+19|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24!=105){ka=Eb;I=90;break d}Eb=Z+20|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24!=99){ka=zb;I=90;break d}zb=Z+21|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24!=97){ka=Eb;I=90;break d}Eb=Z+22|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24!=108){ka=zb;I=90;break d}zb=Z+23|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24!=95){ka=Eb;I=90;break d}Eb=Z+24|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+25|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24!=97){ka=Eb;I=90;break d}Eb=Z+26|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+27|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Fb=zb;I=1987;break a}else{I=85;break d}break}default:{ka=G;I=90;break d}}G=Z+15|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=114){ka=zb;I=90;break d}zb=Z+16|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=105){ka=G;I=90;break d}G=Z+17|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=116){ka=zb;I=90;break d}zb=Z+18|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=104){ka=G;I=90;break d}G=Z+19|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=109){ka=zb;I=90;break d}zb=Z+20|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=101){ka=G;I=90;break d}G=Z+21|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=116){ka=zb;I=90;break d}zb=Z+22|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=105){ka=G;I=90;break d}G=Z+23|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=99){ka=zb;I=90;break d}zb=Z+24|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=95){ka=G;I=90;break d}G=Z+25|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+26|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=97){ka=G;I=90;break d}G=Z+27|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+28|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Gb=zb;I=1989;break a}else{I=85;break d}break}case 116:{zb=Z+8|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=114){ka=G;I=90;break d}G=Z+9|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=97){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=112){ka=G;I=90;break d}G=Z+11|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Hb=G;I=1719;break a}else{I=85;break d}break}case 117:{G=Z+8|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=108){ka=G;I=90;break d}G=Z+10|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=105){ka=zb;I=90;break d}zb=Z+11|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=110){ka=G;I=90;break d}G=Z+12|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=107){ka=zb;I=90;break d}zb=Z+13|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=97){ka=G;I=90;break d}G=Z+14|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=98){ka=zb;I=90;break d}zb=Z+15|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24!=108){ka=G;I=90;break d}G=Z+16|0;c[q>>2]=G;zb=a[G>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+17|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Ib=zb;I=1934;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}}else{ka=U;I=90}}else{ka=$a;I=90}}else{ka=O;I=90}}else{ka=F;I=90}}else{ka=V;I=90}}else{ka=E;I=90}break}case 98:{V=Z+1|0;c[q>>2]=V;F=a[V>>0]|0;switch(F<<24>>24){case 108:{V=Z+2|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=111){ka=O;I=90;break d}O=Z+3|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=99){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=107){ka=O;I=90;break d}O=Z+5|0;c[q>>2]=O;if(!(a[11197+(d[O>>0]|0)>>0]&16)){Jb=O;I=756;break a}else{I=85;break d}break}case 114:break;default:{ka=F;I=90;break d}}F=Z+2|0;c[q>>2]=F;O=a[F>>0]|0;if((O&255)<91)if((O&255)<42)if((O&255)<34)if((O&255)>32){I=85;break d}else{Kb=F;I=342;break a}else if((O+-35&255)<5){I=85;break d}else{Kb=F;I=342;break a}else if((O&255)<45)if((O&255)<44){I=85;break d}else{Kb=F;I=342;break a}else if(O<<24>>24==59){Kb=F;I=342;break a}else{I=85;break d}if((O&255)>=96)if((O&255)<125)if(O<<24>>24==123){Kb=F;I=342;break a}else{I=85;break d}else if(O<<24>>24==126){I=85;break d}else{Kb=F;I=342;break a}if((O&255)<93)if((O&255)>91){I=85;break d}else{Kb=F;I=342;break a}if((O&255)<94){Kb=F;I=342;break a}if((O&255)>=95){O=Z+3|0;c[q>>2]=O;F=a[O>>0]|0;switch(F<<24>>24){case 105:{O=Z+4|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=102){ka=V;I=90;break d}V=Z+5|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Lb=V;I=758;break a}else{I=85;break d}break}case 116:break;default:{ka=F;I=90;break d}}F=Z+4|0;c[q>>2]=F;V=a[F>>0]|0;if(V<<24>>24==97){F=Z+5|0;c[q>>2]=F;O=a[F>>0]|0;if(O<<24>>24==98){F=Z+6|0;c[q>>2]=F;$a=a[F>>0]|0;if($a<<24>>24==108){F=Z+7|0;c[q>>2]=F;U=a[F>>0]|0;if(U<<24>>24==101){F=Z+8|0;c[q>>2]=F;if(!(a[11197+(d[F>>0]|0)>>0]&16)){Mb=F;I=1324;break a}else I=85}else{ka=U;I=90}}else{ka=$a;I=90}}else{ka=O;I=90}}else{ka=V;I=90}}else I=85;break}case 99:{V=Z+1|0;c[q>>2]=V;O=a[V>>0]|0;switch(O<<24>>24){case 97:break;case 117:{V=Z+2|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=114){ka=$a;I=90;break d}$a=Z+3|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=101){ka=$a;I=90;break d}$a=Z+5|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=116){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=109){ka=$a;I=90;break d}$a=Z+9|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=101){ka=V;I=90;break d}V=Z+10|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=109){ka=$a;I=90;break d}$a=Z+11|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=111){ka=V;I=90;break d}V=Z+12|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=114){ka=$a;I=90;break d}$a=Z+13|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=121){ka=V;I=90;break d}V=Z+14|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Nb=V;I=1852;break a}else{I=85;break d}break}default:{ka=O;I=90;break d}}O=Z+2|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24==108){O=Z+3|0;c[q>>2]=O;$a=a[O>>0]|0;if($a<<24>>24==108){O=Z+4|0;c[q>>2]=O;U=a[O>>0]|0;if((U&255)<91)if((U&255)<42)if((U&255)<34)if((U&255)>32){I=85;break d}else{Ob=O;I=684;break a}else if((U+-35&255)<5){I=85;break d}else{Ob=O;I=684;break a}else if((U&255)<45)if((U&255)<44){I=85;break d}else{Ob=O;I=684;break a}else if(U<<24>>24==59){Ob=O;I=684;break a}else{I=85;break d}if((U&255)>=96)if((U&255)<125)if(U<<24>>24==123){Ob=O;I=684;break a}else{I=85;break d}else if(U<<24>>24==126){I=85;break d}else{Ob=O;I=684;break a}if((U&255)<93)if((U&255)>91){I=85;break d}else{Ob=O;I=684;break a}if((U&255)<94){Ob=O;I=684;break a}if((U&255)>=95){U=Z+5|0;c[q>>2]=U;O=a[U>>0]|0;if(O<<24>>24==105){U=Z+6|0;c[q>>2]=U;F=a[U>>0]|0;if((F&255)>=109){if((F&255)<110){U=Z+7|0;c[q>>2]=U;J=a[U>>0]|0;if(J<<24>>24!=112){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;U=a[J>>0]|0;if(U<<24>>24!=111){ka=U;I=90;break d}U=Z+9|0;c[q>>2]=U;J=a[U>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;U=a[J>>0]|0;if(U<<24>>24!=116){ka=U;I=90;break d}U=Z+11|0;c[q>>2]=U;if(!(a[11197+(d[U>>0]|0)>>0]&16)){Pb=U;I=1722;break a}else{I=85;break d}}if((F&255)<111){U=Z+7|0;c[q>>2]=U;J=a[U>>0]|0;if(J<<24>>24==100){U=Z+8|0;c[q>>2]=U;zb=a[U>>0]|0;if(zb<<24>>24==105){U=Z+9|0;c[q>>2]=U;G=a[U>>0]|0;if(G<<24>>24==114){U=Z+10|0;c[q>>2]=U;Eb=a[U>>0]|0;if(Eb<<24>>24!=101){ka=Eb;I=90;break d}Eb=Z+11|0;c[q>>2]=Eb;U=a[Eb>>0]|0;if(U<<24>>24!=99){ka=U;I=90;break d}U=Z+12|0;c[q>>2]=U;Eb=a[U>>0]|0;if(Eb<<24>>24!=116){ka=Eb;I=90;break d}Eb=Z+13|0;c[q>>2]=Eb;if(!(a[11197+(d[Eb>>0]|0)>>0]&16)){Qb=Eb;I=1827;break a}else I=85}else{ka=G;I=90}}else{ka=zb;I=90}}else{ka=J;I=90}}else{ka=F;I=90}}else{ka=F;I=90}}else{ka=O;I=90}}else I=85}else{ka=$a;I=90}}else{ka=V;I=90}break}case 100:{V=Z+1|0;c[q>>2]=V;$a=a[V>>0]|0;switch($a<<24>>24){case 97:{V=Z+2|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=116){ka=O;I=90;break d}O=Z+3|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=97){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Rb=V;I=687;break a}else{I=85;break d}break}case 114:{V=Z+2|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=111){ka=O;I=90;break d}O=Z+3|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=112){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Sb=V;I=689;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}break}case 101:{$a=Z+1|0;c[q>>2]=$a;V=a[$a>>0]|0;if((V&255)<110){if(V<<24>>24!=108){ka=V;I=90;break d}$a=Z+2|0;c[q>>2]=$a;O=a[$a>>0]|0;switch(O<<24>>24){case 101:{$a=Z+3|0;c[q>>2]=$a;F=a[$a>>0]|0;if(F<<24>>24!=109){ka=F;I=90;break d}F=Z+4|0;c[q>>2]=F;if(!(a[11197+(d[F>>0]|0)>>0]&16)){Tb=F;I=691;break a}else{I=85;break d}break}case 115:{F=Z+3|0;c[q>>2]=F;$a=a[F>>0]|0;if($a<<24>>24!=101){ka=$a;I=90;break d}$a=Z+4|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ub=$a;I=693;break a}else{I=85;break d}break}default:{ka=O;I=90;break d}}}if((V&255)<111){O=Z+2|0;c[q>>2]=O;$a=a[O>>0]|0;if($a<<24>>24!=100){ka=$a;I=90;break d}$a=Z+3|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Vb=$a;I=465;break a}else{I=85;break d}}if(V<<24>>24==120){$a=Z+2|0;c[q>>2]=$a;O=a[$a>>0]|0;if(O<<24>>24==112){$a=Z+3|0;c[q>>2]=$a;F=a[$a>>0]|0;if(F<<24>>24==111){$a=Z+4|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24==114){$a=Z+5|0;c[q>>2]=$a;zb=a[$a>>0]|0;if(zb<<24>>24==116){$a=Z+6|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Wb=$a;I=895;break a}else I=85}else{ka=zb;I=90}}else{ka=J;I=90}}else{ka=F;I=90}}else{ka=O;I=90}}else{ka=V;I=90}break}case 102:{V=Z+1|0;c[q>>2]=V;O=a[V>>0]|0;if((O&255)<54){if(O<<24>>24!=51){ka=O;I=90;break d}V=Z+2|0;c[q>>2]=V;F=a[V>>0]|0;if(F<<24>>24!=50){ka=F;I=90;break d}F=Z+3|0;c[q>>2]=F;V=a[F>>0]|0;if((V&255)>=59)if((V&255)<94)if((V&255)<91)if((V&255)>59){I=85;break d}else{Xb=F;I=482;break a}else if(V<<24>>24==92){I=85;break d}else{Xb=F;I=482;break a}else if((V&255)<125)if(V<<24>>24==123){Xb=F;I=482;break a}else{I=85;break d}else if(V<<24>>24==126){I=85;break d}else{Xb=F;I=482;break a}if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{Xb=F;I=482;break a}else if((V+-35&255)<5){I=85;break d}else{Xb=F;I=482;break a}if((V&255)<45)if((V&255)<44){I=85;break d}else{Xb=F;I=482;break a}if(V<<24>>24!=46){I=85;break d}V=Z+4|0;c[q>>2]=V;F=a[V>>0]|0;do switch(F&255|0){case 97:{V=Z+5|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 98:{V=Z+6|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=115){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Yb=zb;I=1159;break a}else{I=85;break d}break}case 100:{zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=100){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Zb=V;I=1161;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 99:{J=Z+5|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 101:{J=Z+6|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=105){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=108){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){_b=J;I=1329;break a}else{I=85;break d}break}case 111:break;default:{ka=V;I=90;break d}}V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 110:break;case 112:{V=Z+7|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=121){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=115){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=105){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=103){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){$b=zb;I=1775;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}J=Z+7|0;c[q>>2]=J;zb=a[J>>0]|0;switch(zb<<24>>24){case 115:{J=Z+8|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){ac=V;I=1531;break a}else{I=85;break d}break}case 118:break;default:{ka=zb;I=90;break d}}zb=Z+8|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=101){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=114){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=95){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;V=a[zb>>0]|0;switch(V<<24>>24){case 115:{zb=Z+13|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=47){ka=J;I=90;break d}J=Z+14|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=105){ka=zb;I=90;break d}zb=Z+15|0;c[q>>2]=zb;J=a[zb>>0]|0;switch(J<<24>>24){case 51:{zb=Z+16|0;c[q>>2]=zb;$a=a[zb>>0]|0;if($a<<24>>24!=50){ka=$a;I=90;break d}$a=Z+17|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){bc=$a;I=1936;break a}else{I=85;break d}break}case 54:{$a=Z+16|0;c[q>>2]=$a;zb=a[$a>>0]|0;if(zb<<24>>24!=52){ka=zb;I=90;break d}zb=Z+17|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){cc=zb;I=1938;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 117:{J=Z+13|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=47){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=105){ka=J;I=90;break d}J=Z+15|0;c[q>>2]=J;zb=a[J>>0]|0;switch(zb<<24>>24){case 51:{J=Z+16|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=50){ka=$a;I=90;break d}$a=Z+17|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){dc=$a;I=1940;break a}else{I=85;break d}break}case 54:{$a=Z+16|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=52){ka=J;I=90;break d}J=Z+17|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){ec=J;I=1942;break a}else{I=85;break d}break}default:{ka=zb;I=90;break d}}break}default:{ka=V;I=90;break d}}break}case 100:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;switch(zb<<24>>24){case 101:break;case 105:{V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=118){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){fc=J;I=1167;break a}else{I=85;break d}break}default:{ka=zb;I=90;break d}}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=109){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=47){ka=J;I=90;break d}J=Z+11|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=102){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=54){ka=J;I=90;break d}J=Z+13|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=52){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){gc=zb;I=1856;break a}else{I=85;break d}break}case 101:{zb=Z+5|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=113){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){hc=J;I=903;break a}else{I=85;break d}break}case 102:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=108){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=111){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){ic=J;I=1536;break a}else{I=85;break d}break}case 103:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;switch(zb<<24>>24){case 101:{J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){jc=J;I=906;break a}else{I=85;break d}break}case 116:{J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){kc=J;I=908;break a}else{I=85;break d}break}default:{ka=zb;I=90;break d}}break}case 108:{zb=Z+5|0;c[q>>2]=zb;J=a[zb>>0]|0;if((J&255)<111){if(J<<24>>24!=101){ka=J;I=90;break d}zb=Z+6|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){lc=zb;I=910;break a}else{I=85;break d}}if((J&255)>=112){if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){mc=J;I=913;break a}else{I=85;break d}}J=Z+6|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=97){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=100){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){nc=J;I=1336;break a}else{I=85;break d}break}case 109:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;if((zb&255)<105){if(zb<<24>>24!=97){ka=zb;I=90;break d}J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=120){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){oc=V;I=1171;break a}else{I=85;break d}}if((zb&255)<106){V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=110){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){pc=J;I=1173;break a}else{I=85;break d}}if(zb<<24>>24!=117){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=108){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){qc=J;I=1175;break a}else{I=85;break d}break}case 110:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if((J&255)<92)if((J&255)<42)if((J&255)<34)if((J&255)>32){I=85;break d}else{rc=zb;I=933;break a}else if((J+-35&255)<5){I=85;break d}else{rc=zb;I=933;break a}else if((J&255)<59)if(J<<24>>24==44){rc=zb;I=933;break a}else{I=85;break d}else if((J+-60&255)<31){I=85;break d}else{rc=zb;I=933;break a}if((J&255)>=104)if((J&255)<125)if(J<<24>>24==123){rc=zb;I=933;break a}else{I=85;break d}else if(J<<24>>24==126){I=85;break d}else{rc=zb;I=933;break a}if((J&255)<97)if(J<<24>>24==93){rc=zb;I=933;break a}else{I=85;break d}if((J&255)>=98){if((J&255)<103){I=85;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){sc=J;I=1178;break a}else{I=85;break d}}J=Z+7|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=114){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=101){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=115){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+11|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){tc=J;I=1729;break a}else{I=85;break d}break}case 114:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=105){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+11|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=112){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+13|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+15|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=47){ka=zb;I=90;break d}zb=Z+16|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=105){ka=J;I=90;break d}J=Z+17|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=51){ka=zb;I=90;break d}zb=Z+18|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=50){ka=J;I=90;break d}J=Z+19|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){uc=J;I=1964;break a}else{I=85;break d}break}case 115:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;if((zb&255)<116){if(zb<<24>>24!=113){ka=zb;I=90;break d}J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){vc=J;I=1340;break a}else{I=85;break d}}if((zb&255)>=117){if((zb&255)>=118){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=98){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){wc=J;I=1183;break a}else{I=85;break d}}J=Z+6|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){xc=zb;I=1540;break a}else{I=85;break d}break}case 116:{zb=Z+5|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=117){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24!=110){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=99){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){yc=zb;I=1542;break a}else{I=85;break d}break}default:{ka=F;I=90;break d}}while(0)}if((O&255)>=55){if(O<<24>>24!=117){ka=O;I=90;break d}F=Z+2|0;c[q>>2]=F;E=a[F>>0]|0;if(E<<24>>24!=110){ka=E;I=90;break d}E=Z+3|0;c[q>>2]=E;F=a[E>>0]|0;if(F<<24>>24!=99){ka=F;I=90;break d}F=Z+4|0;c[q>>2]=F;if(!(a[11197+(d[F>>0]|0)>>0]&16)){zc=F;I=698;break a}else{I=85;break d}}F=Z+2|0;c[q>>2]=F;E=a[F>>0]|0;if(E<<24>>24==52){F=Z+3|0;c[q>>2]=F;zb=a[F>>0]|0;if((zb&255)>=59)if((zb&255)<94)if((zb&255)<91)if((zb&255)>59){I=85;break d}else{Ac=F;I=498;break a}else if(zb<<24>>24==92){I=85;break d}else{Ac=F;I=498;break a}else if((zb&255)<125)if(zb<<24>>24==123){Ac=F;I=498;break a}else{I=85;break d}else if(zb<<24>>24==126){I=85;break d}else{Ac=F;I=498;break a}if((zb&255)<42)if((zb&255)<34)if((zb&255)>32){I=85;break d}else{Ac=F;I=498;break a}else if((zb+-35&255)<5){I=85;break d}else{Ac=F;I=498;break a}if((zb&255)<45)if((zb&255)<44){I=85;break d}else{Ac=F;I=498;break a}if(zb<<24>>24==46){zb=Z+4|0;c[q>>2]=zb;F=a[zb>>0]|0;do switch(F&255|0){case 97:{zb=Z+5|0;c[q>>2]=zb;J=a[zb>>0]|0;switch(J<<24>>24){case 98:{zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=115){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Bc=V;I=1186;break a}else{I=85;break d}break}case 100:{V=Z+6|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=100){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Cc=zb;I=1188;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 99:{J=Z+5|0;c[q>>2]=J;zb=a[J>>0]|0;switch(zb<<24>>24){case 101:{J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=108){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Dc=J;I=1344;break a}else{I=85;break d}break}case 111:break;default:{ka=zb;I=90;break d}}zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;switch(J<<24>>24){case 110:break;case 112:{zb=Z+7|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=121){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=115){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+10|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=103){ka=zb;I=90;break d}zb=Z+11|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+12|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Ec=V;I=1780;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}J=Z+7|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 115:{J=Z+8|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24!=116){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Fc=zb;I=1544;break a}else{I=85;break d}break}case 118:break;default:{ka=V;I=90;break d}}V=Z+8|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+10|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=116){ka=zb;I=90;break d}zb=Z+11|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+12|0;c[q>>2]=V;zb=a[V>>0]|0;switch(zb<<24>>24){case 115:{V=Z+13|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=47){ka=J;I=90;break d}J=Z+14|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+15|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 51:{V=Z+16|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=50){ka=$a;I=90;break d}$a=Z+17|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Gc=$a;I=1945;break a}else{I=85;break d}break}case 54:{$a=Z+16|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=52){ka=V;I=90;break d}V=Z+17|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Hc=V;I=1947;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 117:{J=Z+13|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=47){ka=V;I=90;break d}V=Z+14|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=105){ka=J;I=90;break d}J=Z+15|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 51:{J=Z+16|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=50){ka=$a;I=90;break d}$a=Z+17|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ic=$a;I=1949;break a}else{I=85;break d}break}case 54:{$a=Z+16|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=52){ka=J;I=90;break d}J=Z+17|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Jc=J;I=1951;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}break}default:{ka=zb;I=90;break d}}break}case 100:{zb=Z+5|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=118){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Kc=zb;I=1193;break a}else{I=85;break d}break}case 101:{zb=Z+5|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=113){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Lc=V;I=945;break a}else{I=85;break d}break}case 102:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=108){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=111){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Mc=V;I=1548;break a}else{I=85;break d}break}case 103:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;switch(zb<<24>>24){case 101:{V=Z+6|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Nc=V;I=948;break a}else{I=85;break d}break}case 116:{V=Z+6|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Oc=V;I=950;break a}else{I=85;break d}break}default:{ka=zb;I=90;break d}}break}case 108:{zb=Z+5|0;c[q>>2]=zb;V=a[zb>>0]|0;if((V&255)<111){if(V<<24>>24!=101){ka=V;I=90;break d}zb=Z+6|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){Pc=zb;I=952;break a}else{I=85;break d}}if((V&255)>=112){if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Qc=V;I=955;break a}else{I=85;break d}}V=Z+6|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=97){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=100){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Rc=V;I=1350;break a}else{I=85;break d}break}case 109:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;if((zb&255)<105){if(zb<<24>>24!=97){ka=zb;I=90;break d}V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=120){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Sc=J;I=1197;break a}else{I=85;break d}}if((zb&255)<106){J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Tc=V;I=1199;break a}else{I=85;break d}}if(zb<<24>>24!=117){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=108){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Uc=V;I=1201;break a}else{I=85;break d}break}case 110:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if((V&255)<92)if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{Vc=zb;I=975;break a}else if((V+-35&255)<5){I=85;break d}else{Vc=zb;I=975;break a}else if((V&255)<59)if(V<<24>>24==44){Vc=zb;I=975;break a}else{I=85;break d}else if((V+-60&255)<31){I=85;break d}else{Vc=zb;I=975;break a}if((V&255)>=104)if((V&255)<125)if(V<<24>>24==123){Vc=zb;I=975;break a}else{I=85;break d}else if(V<<24>>24==126){I=85;break d}else{Vc=zb;I=975;break a}if((V&255)<97)if(V<<24>>24==93){Vc=zb;I=975;break a}else{I=85;break d}if((V&255)>=98){if((V&255)<103){I=85;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Wc=V;I=1204;break a}else{I=85;break d}}V=Z+7|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=114){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=101){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=115){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Xc=V;I=1734;break a}else{I=85;break d}break}case 112:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=114){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=111){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=109){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=111){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=116){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=101){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=47){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=102){ka=V;I=90;break d}V=Z+13|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=51){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=50){ka=V;I=90;break d}V=Z+15|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Yc=V;I=1885;break a}else{I=85;break d}break}case 114:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=110){ka=zb;I=90;break d}zb=Z+8|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+10|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=112){ka=zb;I=90;break d}zb=Z+12|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+13|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+14|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+15|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=47){ka=zb;I=90;break d}zb=Z+16|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+17|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=54){ka=zb;I=90;break d}zb=Z+18|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=52){ka=V;I=90;break d}V=Z+19|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Zc=V;I=1966;break a}else{I=85;break d}break}case 115:{V=Z+5|0;c[q>>2]=V;zb=a[V>>0]|0;if((zb&255)<116){if(zb<<24>>24!=113){ka=zb;I=90;break d}V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){_c=V;I=1355;break a}else{I=85;break d}}if((zb&255)>=117){if((zb&255)>=118){ka=zb;I=90;break d}zb=Z+6|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=98){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){$c=V;I=1210;break a}else{I=85;break d}}V=Z+6|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){ad=zb;I=1553;break a}else{I=85;break d}break}case 116:{zb=Z+5|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=117){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;zb=a[V>>0]|0;if(zb<<24>>24!=99){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){bd=zb;I=1555;break a}else{I=85;break d}break}default:{ka=F;I=90;break d}}while(0)}else I=85}else{ka=E;I=90}break}case 103:{F=Z+1|0;c[q>>2]=F;O=a[F>>0]|0;if((O&255)>=108){if((O&255)<109){F=Z+2|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+3|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24!=98){ka=F;I=90;break d}F=Z+4|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=97){ka=zb;I=90;break d}zb=Z+5|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24!=108){ka=F;I=90;break d}F=Z+6|0;c[q>>2]=F;if(!(a[11197+(d[F>>0]|0)>>0]&16)){cd=F;I=985;break a}else{I=85;break d}}if(O<<24>>24!=114){ka=O;I=90;break d}F=Z+2|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+3|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24!=119){ka=F;I=90;break d}F=Z+4|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=95){ka=zb;I=90;break d}zb=Z+5|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24!=109){ka=F;I=90;break d}F=Z+6|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=101){ka=zb;I=90;break d}zb=Z+7|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24!=109){ka=F;I=90;break d}F=Z+8|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=111){ka=zb;I=90;break d}zb=Z+9|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24!=114){ka=F;I=90;break d}F=Z+10|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24!=121){ka=zb;I=90;break d}zb=Z+11|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){dd=zb;I=1738;break a}else{I=85;break d}}if(O<<24>>24==101){zb=Z+2|0;c[q>>2]=zb;F=a[zb>>0]|0;if(F<<24>>24==116){zb=Z+3|0;c[q>>2]=zb;V=a[zb>>0]|0;if((V&255)<91)if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{ed=zb;I=516;break a}else if((V+-35&255)<5){I=85;break d}else{ed=zb;I=516;break a}else if((V&255)<45)if((V&255)<44){I=85;break d}else{ed=zb;I=516;break a}else if(V<<24>>24==59){ed=zb;I=516;break a}else{I=85;break d}if((V&255)>=96)if((V&255)<125)if(V<<24>>24==123){ed=zb;I=516;break a}else{I=85;break d}else if(V<<24>>24==126){I=85;break d}else{ed=zb;I=516;break a}if((V&255)<93)if((V&255)>91){I=85;break d}else{ed=zb;I=516;break a}if((V&255)<94){ed=zb;I=516;break a}if((V&255)>=95){V=Z+4|0;c[q>>2]=V;zb=a[V>>0]|0;switch(zb<<24>>24){case 103:break;case 108:{V=Z+5|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=111){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=99){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=97){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=108){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){fd=V;I=1558;break a}else{I=85;break d}break}default:{ka=zb;I=90;break d}}zb=Z+5|0;c[q>>2]=zb;V=a[zb>>0]|0;if(V<<24>>24==108){zb=Z+6|0;c[q>>2]=zb;J=a[zb>>0]|0;if(J<<24>>24==111){zb=Z+7|0;c[q>>2]=zb;$a=a[zb>>0]|0;if($a<<24>>24==98){zb=Z+8|0;c[q>>2]=zb;G=a[zb>>0]|0;if(G<<24>>24==97){zb=Z+9|0;c[q>>2]=zb;Eb=a[zb>>0]|0;if(Eb<<24>>24==108){zb=Z+10|0;c[q>>2]=zb;if(!(a[11197+(d[zb>>0]|0)>>0]&16)){gd=zb;I=1665;break a}else I=85}else{ka=Eb;I=90}}else{ka=G;I=90}}else{ka=$a;I=90}}else{ka=J;I=90}}else{ka=V;I=90}}else I=85}else{ka=F;I=90}}else{ka=O;I=90}break}case 105:{O=Z+1|0;c[q>>2]=O;F=a[O>>0]|0;if((F&255)>=102){if((F&255)>=109){if((F&255)<110){O=Z+2|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=112){ka=V;I=90;break d}V=Z+3|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=111){ka=O;I=90;break d}O=Z+4|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+5|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=116){ka=O;I=90;break d}O=Z+6|0;c[q>>2]=O;if(!(a[11197+(d[O>>0]|0)>>0]&16)){hd=O;I=1073;break a}else{I=85;break d}}if((F&255)>=111){ka=F;I=90;break d}O=Z+2|0;c[q>>2]=O;V=a[O>>0]|0;if((V&255)<112)if(V<<24>>24==102){la=O;I=553;break d}else{ka=V;I=90;break d}if((V&255)<113){O=Z+3|0;c[q>>2]=O;J=a[O>>0]|0;if(J<<24>>24!=117){ka=J;I=90;break d}J=Z+4|0;c[q>>2]=J;O=a[J>>0]|0;if(O<<24>>24!=116){ka=O;I=90;break d}O=Z+5|0;c[q>>2]=O;if(!(a[11197+(d[O>>0]|0)>>0]&16)){id=O;I=861;break a}else{I=85;break d}}if(V<<24>>24!=118){ka=V;I=90;break d}V=Z+3|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=111){ka=O;I=90;break d}O=Z+4|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=107){ka=V;I=90;break d}V=Z+5|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=101){ka=O;I=90;break d}O=Z+6|0;c[q>>2]=O;if(!(a[11197+(d[O>>0]|0)>>0]&16)){jd=O;I=1076;break a}else{I=85;break d}}if((F&255)>=103){ka=F;I=90;break d}O=Z+2|0;c[q>>2]=O;V=a[O>>0]|0;if((V&255)<91)if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{kd=O;I=374;break a}else if((V+-35&255)<5){I=85;break d}else{kd=O;I=374;break a}else if((V&255)<45)if((V&255)<44){I=85;break d}else{kd=O;I=374;break a}else if(V<<24>>24==59){kd=O;I=374;break a}else{I=85;break d}if((V&255)>=96)if((V&255)<125)if(V<<24>>24==123){kd=O;I=374;break a}else{I=85;break d}else if(V<<24>>24==126){I=85;break d}else{kd=O;I=374;break a}if((V&255)<93)if((V&255)>91){I=85;break d}else{kd=O;I=374;break a}if((V&255)<94){kd=O;I=374;break a}if((V&255)<95){I=85;break d}V=Z+3|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=101){ka=O;I=90;break d}O=Z+4|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=108){ka=V;I=90;break d}V=Z+5|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=115){ka=O;I=90;break d}O=Z+6|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=101){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){ld=V;I=1282;break a}else{I=85;break d}}if((F&255)<52){if((F&255)<51){ka=F;I=90;break d}V=Z+2|0;c[q>>2]=V;O=a[V>>0]|0;if(O<<24>>24!=50){ka=O;I=90;break d}O=Z+3|0;c[q>>2]=O;V=a[O>>0]|0;if((V&255)>=59)if((V&255)<94)if((V&255)<91)if((V&255)>59){I=85;break d}else{md=O;I=534;break a}else if(V<<24>>24==92){I=85;break d}else{md=O;I=534;break a}else if((V&255)<125)if(V<<24>>24==123){md=O;I=534;break a}else{I=85;break d}else if(V<<24>>24==126){I=85;break d}else{md=O;I=534;break a}if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{md=O;I=534;break a}else if((V+-35&255)<5){I=85;break d}else{md=O;I=534;break a}if((V&255)<45)if((V&255)<44){I=85;break d}else{md=O;I=534;break a}if(V<<24>>24!=46){I=85;break d}V=Z+4|0;c[q>>2]=V;O=a[V>>0]|0;do switch(O&255|0){case 97:{V=Z+5|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 100:{V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=100){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){nd=$a;I=1216;break a}else{I=85;break d}break}case 110:{$a=Z+6|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=100){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){od=V;I=1218;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 99:{J=Z+5|0;c[q>>2]=J;V=a[J>>0]|0;if((V&255)<111){if(V<<24>>24!=108){ka=V;I=90;break d}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=122){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){pd=$a;I=1220;break a}else{I=85;break d}}if((V&255)>=112){if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=122){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){qd=$a;I=1223;break a}else{I=85;break d}}$a=Z+6|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=115){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){rd=V;I=1561;break a}else{I=85;break d}break}case 100:{V=Z+5|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=105){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=118){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=95){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;V=a[$a>>0]|0;switch(V<<24>>24){case 115:{$a=Z+9|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){sd=$a;I=1563;break a}else{I=85;break d}break}case 117:{$a=Z+9|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){td=$a;I=1565;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}break}case 101:{V=Z+5|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=113){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;V=a[$a>>0]|0;if((V&255)<91)if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{ud=$a;I=1009;break a}else if((V+-35&255)<5){I=85;break d}else{ud=$a;I=1009;break a}else if((V&255)<45)if((V&255)<44){I=85;break d}else{ud=$a;I=1009;break a}else if(V<<24>>24==59){ud=$a;I=1009;break a}else{I=85;break d}if((V&255)>=123)if((V&255)<125)if((V&255)>123){I=85;break d}else{ud=$a;I=1009;break a}else if(V<<24>>24==126){I=85;break d}else{ud=$a;I=1009;break a}if((V&255)<93)if((V&255)>91){I=85;break d}else{ud=$a;I=1009;break a}if((V&255)<94){ud=$a;I=1009;break a}if((V&255)<122){I=85;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){vd=V;I=1226;break a}else{I=85;break d}break}case 103:{V=Z+5|0;c[q>>2]=V;$a=a[V>>0]|0;switch($a<<24>>24){case 101:{V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=95){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 115:{J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){wd=J;I=1364;break a}else{I=85;break d}break}case 117:{J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){xd=J;I=1366;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}break}case 116:{V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=95){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 115:{J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){yd=J;I=1368;break a}else{I=85;break d}break}case 117:{J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){zd=J;I=1370;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}break}default:{ka=$a;I=90;break d}}break}case 108:{$a=Z+5|0;c[q>>2]=$a;V=a[$a>>0]|0;if((V&255)<111){if(V<<24>>24!=101){ka=V;I=90;break d}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=95){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 115:{J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Ad=J;I=1372;break a}else{I=85;break d}break}case 117:{J=Z+8|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Bd=J;I=1374;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}}if((V&255)>=112){if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=95){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;V=a[$a>>0]|0;switch(V<<24>>24){case 115:{$a=Z+8|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Cd=$a;I=1393;break a}else{I=85;break d}break}case 117:{$a=Z+8|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Dd=$a;I=1395;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}}V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=97){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=100){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;$a=a[V>>0]|0;if(($a&255)>=57)if(($a&255)<94)if(($a&255)<91)if($a<<24>>24==59){Ed=V;I=1391;break a}else{I=85;break d}else if($a<<24>>24==92){I=85;break d}else{Ed=V;I=1391;break a}else if(($a&255)<125)if($a<<24>>24==123){Ed=V;I=1391;break a}else{I=85;break d}else if($a<<24>>24==126){I=85;break d}else{Ed=V;I=1391;break a}if(($a&255)<42)if(($a&255)<34)if(($a&255)>32){I=85;break d}else{Ed=V;I=1391;break a}else if(($a+-35&255)<5){I=85;break d}else{Ed=V;I=1391;break a}if(($a&255)<49)if($a<<24>>24==44){Ed=V;I=1391;break a}else{I=85;break d}if(($a&255)<50){V=Z+9|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=54){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 115:{V=Z+12|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Fd=V;I=1784;break a}else{I=85;break d}break}case 117:{V=Z+12|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Gd=V;I=1786;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}}else{if(($a&255)<56){I=85;break d}$a=Z+9|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=95){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 115:{J=Z+11|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Hd=J;I=1741;break a}else{I=85;break d}break}case 117:{J=Z+11|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Id=J;I=1743;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}}break}case 109:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=117){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=108){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Jd=$a;I=1233;break a}else{I=85;break d}break}case 110:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=101){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Kd=J;I=1017;break a}else{I=85;break d}break}case 111:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=114){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ld=$a;I=1019;break a}else{I=85;break d}break}case 112:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=111){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=112){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=99){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=110){ka=$a;I=90;break d}$a=Z+9|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Md=J;I=1670;break a}else{I=85;break d}break}case 114:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 101:break;case 111:{J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 108:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Nd=V;I=1400;break a}else{I=85;break d}break}case 114:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Od=V;I=1402;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}default:{ka=$a;I=90;break d}}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;switch(J<<24>>24){case 105:break;case 109:{$a=Z+7|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;$a=a[V>>0]|0;switch($a<<24>>24){case 115:{V=Z+9|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Pd=V;I=1571;break a}else{I=85;break d}break}case 117:{V=Z+9|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Qd=V;I=1573;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}break}default:{ka=J;I=90;break d}}J=Z+7|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=110){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=101){ka=$a;I=90;break d}$a=Z+10|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+11|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=112){ka=$a;I=90;break d}$a=Z+12|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+13|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=101){ka=$a;I=90;break d}$a=Z+14|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+15|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=47){ka=$a;I=90;break d}$a=Z+16|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=102){ka=J;I=90;break d}J=Z+17|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=51){ka=$a;I=90;break d}$a=Z+18|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=50){ka=J;I=90;break d}J=Z+19|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Rd=J;I=1968;break a}else{I=85;break d}break}case 115:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if(($a&255)<116){if($a<<24>>24!=104){ka=$a;I=90;break d}J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 108:{J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Sd=J;I=1239;break a}else{I=85;break d}break}case 114:break;default:{ka=V;I=90;break d}}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=95){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 115:{J=Z+9|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Td=J;I=1575;break a}else{I=85;break d}break}case 117:{J=Z+9|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Ud=J;I=1577;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}}if(($a&255)>=117){if(($a&255)>=118){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=98){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Wd=V;I=1243;break a}else{I=85;break d}}V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=111){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=114){ka=V;I=90;break d}V=Z+8|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=101){ka=$a;I=90;break d}$a=Z+9|0;c[q>>2]=$a;V=a[$a>>0]|0;if((V&255)>=57)if((V&255)<94)if((V&255)<91)if(V<<24>>24==59){Xd=$a;I=1594;break a}else{I=85;break d}else if(V<<24>>24==92){I=85;break d}else{Xd=$a;I=1594;break a}else if((V&255)<125)if(V<<24>>24==123){Xd=$a;I=1594;break a}else{I=85;break d}else if(V<<24>>24==126){I=85;break d}else{Xd=$a;I=1594;break a}if((V&255)<42)if((V&255)<34)if((V&255)>32){I=85;break d}else{Xd=$a;I=1594;break a}else if((V+-35&255)<5){I=85;break d}else{Xd=$a;I=1594;break a}if((V&255)<49)if(V<<24>>24==44){Xd=$a;I=1594;break a}else{I=85;break d}if((V&255)<50){$a=Z+10|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=54){ka=J;I=90;break d}J=Z+11|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Yd=J;I=1746;break a}else{I=85;break d}}else{if((V&255)<56){I=85;break d}V=Z+10|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Zd=V;I=1674;break a}else{I=85;break d}}break}case 116:{V=Z+5|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=117){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=110){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=99){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=95){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 115:{J=Z+11|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=47){ka=$a;I=90;break d}$a=Z+12|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=102){ka=J;I=90;break d}J=Z+13|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 51:{J=Z+14|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=50){ka=G;I=90;break d}G=Z+15|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){_d=G;I=1889;break a}else{I=85;break d}break}case 54:{G=Z+14|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=52){ka=J;I=90;break d}J=Z+15|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){$d=J;I=1891;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}break}case 117:{$a=Z+11|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=47){ka=J;I=90;break d}J=Z+12|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=102){ka=$a;I=90;break d}$a=Z+13|0;c[q>>2]=$a;J=a[$a>>0]|0;switch(J<<24>>24){case 51:{$a=Z+14|0;c[q>>2]=$a;G=a[$a>>0]|0;if(G<<24>>24!=50){ka=G;I=90;break d}G=Z+15|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){ae=G;I=1893;break a}else{I=85;break d}break}case 54:{G=Z+14|0;c[q>>2]=G;$a=a[G>>0]|0;if($a<<24>>24!=52){ka=$a;I=90;break d}$a=Z+15|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){be=$a;I=1895;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}default:{ka=V;I=90;break d}}break}case 119:{V=Z+5|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=97){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=112){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=47){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=105){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=54){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=52){ka=J;I=90;break d}J=Z+12|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){ce=J;I=1791;break a}else{I=85;break d}break}case 120:{J=Z+5|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=111){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){de=J;I=1247;break a}else{I=85;break d}break}default:{ka=O;I=90;break d}}while(0)}if(F<<24>>24==54){O=Z+2|0;c[q>>2]=O;E=a[O>>0]|0;if(E<<24>>24==52){O=Z+3|0;c[q>>2]=O;J=a[O>>0]|0;if((J&255)>=59)if((J&255)<94)if((J&255)<91)if((J&255)>59){I=85;break d}else{ee=O;I=550;break a}else if(J<<24>>24==92){I=85;break d}else{ee=O;I=550;break a}else if((J&255)<125)if(J<<24>>24==123){ee=O;I=550;break a}else{I=85;break d}else if(J<<24>>24==126){I=85;break d}else{ee=O;I=550;break a}if((J&255)<42)if((J&255)<34)if((J&255)>32){I=85;break d}else{ee=O;I=550;break a}else if((J+-35&255)<5){I=85;break d}else{ee=O;I=550;break a}if((J&255)<45)if((J&255)<44){I=85;break d}else{ee=O;I=550;break a}if(J<<24>>24==46){J=Z+4|0;c[q>>2]=J;O=a[J>>0]|0;do switch(O&255|0){case 97:{J=Z+5|0;c[q>>2]=J;V=a[J>>0]|0;switch(V<<24>>24){case 100:{J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=100){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){fe=$a;I=1249;break a}else{I=85;break d}break}case 110:{$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=100){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){ge=J;I=1251;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}break}case 99:{V=Z+5|0;c[q>>2]=V;J=a[V>>0]|0;if((J&255)<111){if(J<<24>>24!=108){ka=J;I=90;break d}V=Z+6|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=122){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){he=$a;I=1253;break a}else{I=85;break d}}if((J&255)>=112){if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=122){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){ie=$a;I=1256;break a}else{I=85;break d}}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=110){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=115){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){je=J;I=1598;break a}else{I=85;break d}break}case 100:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=105){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=118){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=95){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;J=a[$a>>0]|0;switch(J<<24>>24){case 115:{$a=Z+9|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){ke=$a;I=1600;break a}else{I=85;break d}break}case 117:{$a=Z+9|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){le=$a;I=1602;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 101:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 113:break;case 120:{J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=101){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=110){ka=V;I=90;break d}V=Z+9|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=100){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 115:{V=Z+12|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=47){ka=G;I=90;break d}G=Z+13|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+14|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=51){ka=G;I=90;break d}G=Z+15|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=50){ka=V;I=90;break d}V=Z+16|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){me=V;I=1925;break a}else{I=85;break d}break}case 117:{V=Z+12|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=47){ka=G;I=90;break d}G=Z+13|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=105){ka=V;I=90;break d}V=Z+14|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=51){ka=G;I=90;break d}G=Z+15|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=50){ka=V;I=90;break d}V=Z+16|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){ne=V;I=1927;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}default:{ka=$a;I=90;break d}}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if((J&255)<91)if((J&255)<42)if((J&255)<34)if((J&255)>32){I=85;break d}else{oe=$a;I=1051;break a}else if((J+-35&255)<5){I=85;break d}else{oe=$a;I=1051;break a}else if((J&255)<45)if((J&255)<44){I=85;break d}else{oe=$a;I=1051;break a}else if(J<<24>>24==59){oe=$a;I=1051;break a}else{I=85;break d}if((J&255)>=123)if((J&255)<125)if((J&255)>123){I=85;break d}else{oe=$a;I=1051;break a}else if(J<<24>>24==126){I=85;break d}else{oe=$a;I=1051;break a}if((J&255)<93)if((J&255)>91){I=85;break d}else{oe=$a;I=1051;break a}if((J&255)<94){oe=$a;I=1051;break a}if((J&255)<122){I=85;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){pe=J;I=1259;break a}else{I=85;break d}break}case 103:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 101:{J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 115:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){qe=V;I=1411;break a}else{I=85;break d}break}case 117:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){re=V;I=1413;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 116:{J=Z+6|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;J=a[V>>0]|0;switch(J<<24>>24){case 115:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){se=V;I=1415;break a}else{I=85;break d}break}case 117:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){te=V;I=1417;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}default:{ka=$a;I=90;break d}}break}case 108:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;if((J&255)<111){if(J<<24>>24!=101){ka=J;I=90;break d}$a=Z+6|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+7|0;c[q>>2]=V;$a=a[V>>0]|0;switch($a<<24>>24){case 115:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){ue=V;I=1419;break a}else{I=85;break d}break}case 117:{V=Z+8|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){ve=V;I=1421;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}}if((J&255)>=112){if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=95){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;J=a[$a>>0]|0;switch(J<<24>>24){case 115:{$a=Z+8|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){we=$a;I=1441;break a}else{I=85;break d}break}case 117:{$a=Z+8|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){xe=$a;I=1443;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=97){ka=$a;I=90;break d}$a=Z+7|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=100){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;$a=a[J>>0]|0;if(($a&255)>=56){if(($a&255)>=93)if(($a&255)<124)if(($a+-94&255)<29){I=85;break d}else{ye=J;I=1439;break a}else if($a<<24>>24!=125&($a&255)<127){I=85;break d}else{ye=J;I=1439;break a}if(($a&255)>=60)if($a<<24>>24==91){ye=J;I=1439;break a}else{I=85;break d}if(($a&255)>=57)if(($a&255)<59){I=85;break d}else{ye=J;I=1439;break a}V=Z+9|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=95){ka=G;I=90;break d}G=Z+10|0;c[q>>2]=G;V=a[G>>0]|0;switch(V<<24>>24){case 115:{G=Z+11|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){ze=G;I=1754;break a}else{I=85;break d}break}case 117:{G=Z+11|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Ae=G;I=1756;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}}if(($a&255)<44)if(($a&255)<35)if($a<<24>>24==33){I=85;break d}else{ye=J;I=1439;break a}else if(($a&-2)<<24>>24==40){ye=J;I=1439;break a}else{I=85;break d}if(($a&255)>=50){if($a<<24>>24!=51){I=85;break d}V=Z+9|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=50){ka=G;I=90;break d}G=Z+10|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=95){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;G=a[V>>0]|0;switch(G<<24>>24){case 115:{V=Z+12|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Be=V;I=1799;break a}else{I=85;break d}break}case 117:{V=Z+12|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Ce=V;I=1801;break a}else{I=85;break d}break}default:{ka=G;I=90;break d}}}if(($a&255)<45){ye=J;I=1439;break a}if(($a&255)<49){I=85;break d}$a=Z+9|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=54){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=95){ka=$a;I=90;break d}$a=Z+11|0;c[q>>2]=$a;J=a[$a>>0]|0;switch(J<<24>>24){case 115:{$a=Z+12|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){De=$a;I=1795;break a}else{I=85;break d}break}case 117:{$a=Z+12|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ee=$a;I=1797;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}case 109:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=117){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=108){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Fe=J;I=1267;break a}else{I=85;break d}break}case 110:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=101){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ge=$a;I=1060;break a}else{I=85;break d}break}case 111:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){He=J;I=1062;break a}else{I=85;break d}break}case 112:{J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=111){ka=$a;I=90;break d}$a=Z+6|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=112){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=99){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=110){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=116){ka=$a;I=90;break d}$a=Z+10|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ie=$a;I=1682;break a}else{I=85;break d}break}case 114:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;switch(J<<24>>24){case 101:break;case 111:{$a=Z+6|0;c[q>>2]=$a;G=a[$a>>0]|0;if(G<<24>>24!=116){ka=G;I=90;break d}G=Z+7|0;c[q>>2]=G;$a=a[G>>0]|0;switch($a<<24>>24){case 108:{G=Z+8|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Je=G;I=1448;break a}else{I=85;break d}break}case 114:{G=Z+8|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Ke=G;I=1450;break a}else{I=85;break d}break}default:{ka=$a;I=90;break d}}break}default:{ka=J;I=90;break d}}J=Z+6|0;c[q>>2]=J;$a=a[J>>0]|0;switch($a<<24>>24){case 105:break;case 109:{J=Z+7|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=95){ka=G;I=90;break d}G=Z+8|0;c[q>>2]=G;J=a[G>>0]|0;switch(J<<24>>24){case 115:{G=Z+9|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Le=G;I=1610;break a}else{I=85;break d}break}case 117:{G=Z+9|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Me=G;I=1612;break a}else{I=85;break d}break}default:{ka=J;I=90;break d}}break}default:{ka=$a;I=90;break d}}$a=Z+7|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=110){ka=J;I=90;break d}J=Z+8|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=116){ka=$a;I=90;break d}$a=Z+9|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=101){ka=J;I=90;break d}J=Z+10|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=114){ka=$a;I=90;break d}$a=Z+11|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=112){ka=J;I=90;break d}J=Z+12|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=114){ka=$a;I=90;break d}$a=Z+13|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=101){ka=J;I=90;break d}J=Z+14|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=116){ka=$a;I=90;break d}$a=Z+15|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=47){ka=J;I=90;break d}J=Z+16|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=102){ka=$a;I=90;break d}$a=Z+17|0;c[q>>2]=$a;J=a[$a>>0]|0;if(J<<24>>24!=54){ka=J;I=90;break d}J=Z+18|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24!=52){ka=$a;I=90;break d}$a=Z+19|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ne=$a;I=1970;break a}else{I=85;break d}break}case 115:{$a=Z+5|0;c[q>>2]=$a;J=a[$a>>0]|0;if((J&255)<116){if(J<<24>>24!=104){ka=J;I=90;break d}$a=Z+6|0;c[q>>2]=$a;G=a[$a>>0]|0;switch(G<<24>>24){case 108:{$a=Z+7|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Oe=$a;I=1273;break a}else{I=85;break d}break}case 114:break;default:{ka=G;I=90;break d}}G=Z+7|0;c[q>>2]=G;$a=a[G>>0]|0;if($a<<24>>24!=95){ka=$a;I=90;break d}$a=Z+8|0;c[q>>2]=$a;G=a[$a>>0]|0;switch(G<<24>>24){case 115:{$a=Z+9|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Pe=$a;I=1614;break a}else{I=85;break d}break}case 117:{$a=Z+9|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Qe=$a;I=1616;break a}else{I=85;break d}break}default:{ka=G;I=90;break d}}}if((J&255)>=117){if((J&255)>=118){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=98){ka=G;I=90;break d}G=Z+7|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Re=G;I=1277;break a}else{I=85;break d}}G=Z+6|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=111){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=114){ka=G;I=90;break d}G=Z+8|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=101){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;G=a[J>>0]|0;if((G&255)>=56){if((G&255)>=93)if((G&255)<124)if((G+-94&255)<29){I=85;break d}else{Se=J;I=1634;break a}else if(G<<24>>24!=125&(G&255)<127){I=85;break d}else{Se=J;I=1634;break a}if((G&255)>=60)if(G<<24>>24==91){Se=J;I=1634;break a}else{I=85;break d}if((G&255)<57){$a=Z+10|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Te=$a;I=1687;break a}else{I=85;break d}}else if((G&255)<59){I=85;break d}else{Se=J;I=1634;break a}}if((G&255)<44)if((G&255)<35)if(G<<24>>24==33){I=85;break d}else{Se=J;I=1634;break a}else if((G&-2)<<24>>24==40){Se=J;I=1634;break a}else{I=85;break d}if((G&255)>=50){if(G<<24>>24!=51){I=85;break d}$a=Z+10|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=50){ka=V;I=90;break d}V=Z+11|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Ue=V;I=1761;break a}else{I=85;break d}}if((G&255)<45){Se=J;I=1634;break a}if((G&255)<49){I=85;break d}G=Z+10|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=54){ka=J;I=90;break d}J=Z+11|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){Ve=J;I=1759;break a}else{I=85;break d}break}case 116:{J=Z+5|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=114){ka=G;I=90;break d}G=Z+6|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=117){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=110){ka=G;I=90;break d}G=Z+8|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=99){ka=J;I=90;break d}J=Z+9|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=95){ka=G;I=90;break d}G=Z+10|0;c[q>>2]=G;J=a[G>>0]|0;switch(J<<24>>24){case 115:{G=Z+11|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=47){ka=V;I=90;break d}V=Z+12|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=102){ka=G;I=90;break d}G=Z+13|0;c[q>>2]=G;V=a[G>>0]|0;switch(V<<24>>24){case 51:{G=Z+14|0;c[q>>2]=G;$a=a[G>>0]|0;if($a<<24>>24!=50){ka=$a;I=90;break d}$a=Z+15|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){We=$a;I=1900;break a}else{I=85;break d}break}case 54:{$a=Z+14|0;c[q>>2]=$a;G=a[$a>>0]|0;if(G<<24>>24!=52){ka=G;I=90;break d}G=Z+15|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){Xe=G;I=1902;break a}else{I=85;break d}break}default:{ka=V;I=90;break d}}break}case 117:{V=Z+11|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=47){ka=G;I=90;break d}G=Z+12|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=102){ka=V;I=90;break d}V=Z+13|0;c[q>>2]=V;G=a[V>>0]|0;switch(G<<24>>24){case 51:{V=Z+14|0;c[q>>2]=V;$a=a[V>>0]|0;if($a<<24>>24!=50){ka=$a;I=90;break d}$a=Z+15|0;c[q>>2]=$a;if(!(a[11197+(d[$a>>0]|0)>>0]&16)){Ye=$a;I=1904;break a}else{I=85;break d}break}case 54:{$a=Z+14|0;c[q>>2]=$a;V=a[$a>>0]|0;if(V<<24>>24!=52){ka=V;I=90;break d}V=Z+15|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){Ze=V;I=1906;break a}else{I=85;break d}break}default:{ka=G;I=90;break d}}break}default:{ka=J;I=90;break d}}break}case 120:{J=Z+5|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24!=111){ka=G;I=90;break d}G=Z+6|0;c[q>>2]=G;J=a[G>>0]|0;if(J<<24>>24!=114){ka=J;I=90;break d}J=Z+7|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){_e=J;I=1280;break a}else{I=85;break d}break}default:{ka=O;I=90;break d}}while(0)}else I=85}else{ka=E;I=90}}else{ka=F;I=90}break}case 108:{O=Z+1|0;c[q>>2]=O;J=a[O>>0]|0;if(J<<24>>24==111){O=Z+2|0;c[q>>2]=O;G=a[O>>0]|0;switch(G<<24>>24){case 99:break;case 111:{O=Z+3|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24!=112){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){$e=V;I=711;break a}else{I=85;break d}break}default:{ka=G;I=90;break d}}G=Z+3|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24==97){G=Z+4|0;c[q>>2]=G;O=a[G>>0]|0;if(O<<24>>24==108){G=Z+5|0;c[q>>2]=G;if(!(a[11197+(d[G>>0]|0)>>0]&16)){af=G;I=864;break a}else I=85}else{ka=O;I=90}}else{ka=V;I=90}}else{ka=J;I=90}break}case 109:{J=Z+1|0;c[q>>2]=J;V=a[J>>0]|0;if((V&255)<111){if(V<<24>>24!=101){ka=V;I=90;break d}J=Z+2|0;c[q>>2]=J;O=a[J>>0]|0;if(O<<24>>24!=109){ka=O;I=90;break d}O=Z+3|0;c[q>>2]=O;J=a[O>>0]|0;if(J<<24>>24!=111){ka=J;I=90;break d}J=Z+4|0;c[q>>2]=J;O=a[J>>0]|0;if(O<<24>>24!=114){ka=O;I=90;break d}O=Z+5|0;c[q>>2]=O;J=a[O>>0]|0;if(J<<24>>24!=121){ka=J;I=90;break d}J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){bf=J;I=1078;break a}else{I=85;break d}}if((V&255)>=112){if(V<<24>>24!=117){ka=V;I=90;break d}V=Z+2|0;c[q>>2]=V;J=a[V>>0]|0;if(J<<24>>24!=116){ka=J;I=90;break d}J=Z+3|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){cf=J;I=577;break a}else{I=85;break d}}J=Z+2|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24==100){J=Z+3|0;c[q>>2]=J;O=a[J>>0]|0;if(O<<24>>24==117){J=Z+4|0;c[q>>2]=J;G=a[J>>0]|0;if(G<<24>>24==108){J=Z+5|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24==101){J=Z+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){df=J;I=1080;break a}else I=85}else{ka=$a;I=90}}else{ka=G;I=90}}else{ka=O;I=90}}else{ka=V;I=90}break}case 110:{V=Z+1|0;c[q>>2]=V;O=a[V>>0]|0;switch(O<<24>>24){case 97:{ma=V;I=384;break d;break}case 111:break;default:{ka=O;I=90;break d}}O=Z+2|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24==112){O=Z+3|0;c[q>>2]=O;if(!(a[11197+(d[O>>0]|0)>>0]&16)){ef=O;I=597;break a}else I=85}else{ka=V;I=90}break}case 111:{V=Z+1|0;c[q>>2]=V;O=a[V>>0]|0;switch(O<<24>>24){case 102:break;case 117:{V=Z+2|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=116){ka=G;I=90;break d}G=Z+3|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=112){ka=V;I=90;break d}V=Z+4|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24!=117){ka=G;I=90;break d}G=Z+5|0;c[q>>2]=G;V=a[G>>0]|0;if(V<<24>>24!=116){ka=V;I=90;break d}V=Z+6|0;c[q>>2]=V;if(!(a[11197+(d[V>>0]|0)>>0]&16)){ff=V;I=1101;break a}else{I=85;break d}break}default:{ka=O;I=90;break d}}O=Z+2|0;c[q>>2]=O;V=a[O>>0]|0;if(V<<24>>24==102){O=Z+3|0;c[q>>2]=O;G=a[O>>0]|0;if(G<<24>>24==115){O=Z+4|0;c[q>>2]=O;$a=a[O>>0]|0;if($a<<24>>24==101){O=Z+5|0;c[q>>2]=O;J=a[O>>0]|0;if(J<<24>>24==116){O=Z+6|0;c[q>>2]=O;Eb=a[O>>0]|0;if((Eb&255)<61)if((Eb&255)<42)if((Eb&255)<34)if((Eb&255)>32){I=85;break d}else{gf=O;I=1099;break a}else if((Eb+-35&255)<5){I=85;break d}else{gf=O;I=1099;break a}else if((Eb&255)<45)if((Eb&255)<44){I=85;break d}else{gf=O;I=1099;break a}else if(Eb<<24>>24==59){gf=O;I=1099;break a}else{I=85;break d}if((Eb&255)>=94)if((Eb&255)<125)if(Eb<<24>>24==123){gf=O;I=1099;break a}else{I=85;break d}else if(Eb<<24>>24==126){I=85;break d}else{gf=O;I=1099;break a}if((Eb&255)>=91)if(Eb<<24>>24==92){I=85;break d}else{gf=O;I=1099;break a}if((Eb&255)<62){Eb=Z+7|0;c[q>>2]=Eb;O=a[Eb>>0]|0;if((O&255)>=48){do if((O&255)<49){zb=Z+8|0;c[q>>2]=zb;U=a[zb>>0]|0;hf=zb;if((U&255)<60){if((U&255)<42)if((U&255)<34)if((U&255)>32){I=85;break d}else{jf=hf;I=1473;break a}else if((U+-35&255)<5){I=85;break d}else{jf=hf;I=1473;break a}if((U&255)<48)if(U<<24>>24==44){jf=hf;I=1473;break a}else{I=85;break d}if((U&255)<58){kf=zb;break}if((U&255)<59){I=85;break d}else{jf=hf;I=1473;break a}}if((U&255)>=121)if((U&255)<125)if(U<<24>>24==123){jf=hf;I=1473;break a}else{I=85;break d}else if(U<<24>>24==126){I=85;break d}else{jf=hf;I=1473;break a}if((U&255)<93)if(U<<24>>24==91){jf=hf;I=1473;break a}else{I=85;break d}if((U&255)<94){jf=hf;I=1473;break a}if((U&255)<120){I=85;break d}U=Z+9|0;c[q>>2]=U;hf=a[U>>0]|0;if((hf&255)<65)if((hf+-48&255)<10)lf=U;else{ka=hf;I=90;break d}else if((hf&255)<71|(hf+-97&255)<6)lf=U;else{ka=hf;I=90;break d}while(1){hf=lf+1|0;c[q>>2]=hf;if((c[s>>2]|0)>>>0>hf>>>0)mf=hf;else{if((Vd(f,1)|0)==1){I=1692;break a}mf=c[q>>2]|0}hf=a[mf>>0]|0;if((hf&255)<65){if((hf&255)<44){nf=mf;of=hf;I=1695;break}if((hf&255)>=58){pf=mf;qf=hf;I=1701;break}if((hf&255)<45){rf=mf;I=1472;break a}if((hf&255)<48){I=85;break d}else{lf=mf;continue}}if((hf&255)<97){if((hf&255)>=92){sf=mf;tf=hf;I=1706;break}if((hf&255)<71){lf=mf;continue}else{uf=mf;vf=hf;I=1705;break}}else{if((hf&255)>=124){wf=mf;xf=hf;I=1710;break}if((hf&255)<103){lf=mf;continue}else{yf=mf;zf=hf;I=1709;break}}}if((I|0)==1695){I=0;hf=nf;if((of&255)<35)if(of<<24>>24==33){I=85;break d}else{jf=hf;I=1473;break a}else if((of&-2)<<24>>24==40){jf=hf;I=1473;break a}else{I=85;break d}}else if((I|0)==1701){I=0;if(qf<<24>>24==59){jf=pf;I=1473;break a}else{I=85;break d}}else if((I|0)==1705){I=0;if((vf&255)<91){I=85;break d}else{jf=uf;I=1473;break a}}else if((I|0)==1706){I=0;if(tf<<24>>24==93){jf=sf;I=1473;break a}else{I=85;break d}}else if((I|0)==1709){I=0;if((zf&255)<123){I=85;break d}else{jf=yf;I=1473;break a}}else if((I|0)==1710){I=0;if(xf<<24>>24!=125&(xf&255)<127){I=85;break d}else{jf=wf;I=1473;break a}}}else if((O&255)<58)kf=Eb;else{ka=O;I=90;break d}while(0);while(1){Eb=kf+1|0;c[q>>2]=Eb;if((c[s>>2]|0)>>>0>Eb>>>0)Af=Eb;else{if((Vd(f,1)|0)==1){I=1477;break a}Af=c[q>>2]|0}Eb=a[Af>>0]|0;if((Eb&255)>=59){Bf=Af;Cf=Eb;I=1486;break}if((Eb&255)<42){Df=Af;Ef=Eb;I=1480;break}if((Eb&255)<45){Ff=Af;Gf=Eb;I=1484;break}if((Eb+-48&255)<10)kf=Af;else{I=85;break d}}if((I|0)==1480){I=0;Eb=Df;if((Ef&255)<34)if((Ef&255)<33){jf=Eb;I=1473;break a}else{I=85;break d}else if((Ef+-35&255)<5){I=85;break d}else{jf=Eb;I=1473;break a}}else if((I|0)==1484){I=0;if((Gf&255)<44){I=85;break d}else{jf=Ff;I=1473;break a}}else if((I|0)==1486){I=0;Eb=Bf;if((Cf&255)<94)if((Cf&255)<91)if((Cf&255)<60){jf=Eb;I=1473;break a}else{I=85;break d}else if(Cf<<24>>24==92){I=85;break d}else{jf=Eb;I=1473;break a}else if((Cf&255)<125)if(Cf<<24>>24==123){jf=Eb;I=1473;break a}else{I=85;break d}else if(Cf<<24>>24==126){I=85;break d}else{jf=Eb;I=1473;break a}}}else{ka=O;I=90}}else I=85}else{ka=J;I=90}}else{ka=$a;I=90}}else{ka=G;I=90}}else{ka=V;I=90}break}case 112:{Eb=Z+1|0;c[q>>2]=Eb;F=a[Eb>>0]|0;if(F<<24>>24==97){Eb=Z+2|0;c[q>>2]=Eb;E=a[Eb>>0]|0;if(E<<24>>24==114){Eb=Z+3|0;c[q>>2]=Eb;hf=a[Eb>>0]|0;if(hf<<24>>24==97){Eb=Z+4|0;c[q>>2]=Eb;U=a[Eb>>0]|0;if(U<<24>>24==109){Eb=Z+5|0;c[q>>2]=Eb;if(!(a[11197+(d[Eb>>0]|0)>>0]&16)){Hf=Eb;I=871;break a}else I=85}else{ka=U;I=90}}else{ka=hf;I=90}}else{ka=E;I=90}}else{ka=F;I=90}break}case 114:{F=Z+1|0;c[q>>2]=F;E=a[F>>0]|0;if(E<<24>>24==101){F=Z+2|0;c[q>>2]=F;hf=a[F>>0]|0;if((hf&255)<115){if(hf<<24>>24!=103){ka=hf;I=90;break d}F=Z+3|0;c[q>>2]=F;U=a[F>>0]|0;if(U<<24>>24!=105){ka=U;I=90;break d}U=Z+4|0;c[q>>2]=U;F=a[U>>0]|0;if(F<<24>>24!=115){ka=F;I=90;break d}F=Z+5|0;c[q>>2]=F;U=a[F>>0]|0;if(U<<24>>24!=116){ka=U;I=90;break d}U=Z+6|0;c[q>>2]=U;F=a[U>>0]|0;if(F<<24>>24!=101){ka=F;I=90;break d}F=Z+7|0;c[q>>2]=F;U=a[F>>0]|0;if(U<<24>>24!=114){ka=U;I=90;break d}U=Z+8|0;c[q>>2]=U;if(!(a[11197+(d[U>>0]|0)>>0]&16)){If=U;I=1494;break a}else{I=85;break d}}if((hf&255)<116){U=Z+3|0;c[q>>2]=U;F=a[U>>0]|0;if(F<<24>>24!=117){ka=F;I=90;break d}F=Z+4|0;c[q>>2]=F;U=a[F>>0]|0;if(U<<24>>24!=108){ka=U;I=90;break d}U=Z+5|0;c[q>>2]=U;F=a[U>>0]|0;if(F<<24>>24!=116){ka=F;I=90;break d}F=Z+6|0;c[q>>2]=F;if(!(a[11197+(d[F>>0]|0)>>0]&16)){Jf=F;I=1104;break a}else{I=85;break d}}if((hf&255)<117){F=Z+3|0;c[q>>2]=F;U=a[F>>0]|0;if(U<<24>>24==117){F=Z+4|0;c[q>>2]=F;Eb=a[F>>0]|0;if(Eb<<24>>24==114){F=Z+5|0;c[q>>2]=F;zb=a[F>>0]|0;if(zb<<24>>24==110){F=Z+6|0;c[q>>2]=F;if(!(a[11197+(d[F>>0]|0)>>0]&16)){Kf=F;I=1106;break a}else I=85}else{ka=zb;I=90}}else{ka=Eb;I=90}}else{ka=U;I=90}}else{ka=hf;I=90}}else{ka=E;I=90}break}case 115:{E=Z+1|0;c[q>>2]=E;hf=a[E>>0]|0;switch(hf<<24>>24){case 101:break;case 116:{E=Z+2|0;c[q>>2]=E;U=a[E>>0]|0;if(U<<24>>24!=97){ka=U;I=90;break d}U=Z+3|0;c[q>>2]=U;E=a[U>>0]|0;if(E<<24>>24!=114){ka=E;I=90;break d}E=Z+4|0;c[q>>2]=E;U=a[E>>0]|0;if(U<<24>>24!=116){ka=U;I=90;break d}U=Z+5|0;c[q>>2]=U;if(!(a[11197+(d[U>>0]|0)>>0]&16)){Lf=U;I=879;break a}else{I=85;break d}break}default:{ka=hf;I=90;break d}}hf=Z+2|0;c[q>>2]=hf;U=a[hf>>0]|0;switch(U<<24>>24){case 108:{hf=Z+3|0;c[q>>2]=hf;E=a[hf>>0]|0;if(E<<24>>24!=101){ka=E;I=90;break d}E=Z+4|0;c[q>>2]=E;hf=a[E>>0]|0;if(hf<<24>>24!=99){ka=hf;I=90;break d}hf=Z+5|0;c[q>>2]=hf;E=a[hf>>0]|0;if(E<<24>>24!=116){ka=E;I=90;break d}E=Z+6|0;c[q>>2]=E;if(!(a[11197+(d[E>>0]|0)>>0]&16)){Mf=E;I=1108;break a}else{I=85;break d}break}case 116:break;default:{ka=U;I=90;break d}}U=Z+3|0;c[q>>2]=U;E=a[U>>0]|0;if(E<<24>>24==95){U=Z+4|0;c[q>>2]=U;hf=a[U>>0]|0;switch(hf<<24>>24){case 103:break;case 108:{U=Z+5|0;c[q>>2]=U;Eb=a[U>>0]|0;if(Eb<<24>>24!=111){ka=Eb;I=90;break d}Eb=Z+6|0;c[q>>2]=Eb;U=a[Eb>>0]|0;if(U<<24>>24!=99){ka=U;I=90;break d}U=Z+7|0;c[q>>2]=U;Eb=a[U>>0]|0;if(Eb<<24>>24!=97){ka=Eb;I=90;break d}Eb=Z+8|0;c[q>>2]=Eb;U=a[Eb>>0]|0;if(U<<24>>24!=108){ka=U;I=90;break d}U=Z+9|0;c[q>>2]=U;if(!(a[11197+(d[U>>0]|0)>>0]&16)){Nf=U;I=1641;break a}else{I=85;break d}break}default:{ka=hf;I=90;break d}}hf=Z+5|0;c[q>>2]=hf;U=a[hf>>0]|0;if(U<<24>>24==108){hf=Z+6|0;c[q>>2]=hf;Eb=a[hf>>0]|0;if(Eb<<24>>24==111){hf=Z+7|0;c[q>>2]=hf;zb=a[hf>>0]|0;if(zb<<24>>24==98){hf=Z+8|0;c[q>>2]=hf;F=a[hf>>0]|0;if(F<<24>>24==97){hf=Z+9|0;c[q>>2]=hf;Of=a[hf>>0]|0;if(Of<<24>>24==108){hf=Z+10|0;c[q>>2]=hf;if(!(a[11197+(d[hf>>0]|0)>>0]&16)){Pf=hf;I=1712;break a}else I=85}else{ka=Of;I=90}}else{ka=F;I=90}}else{ka=zb;I=90}}else{ka=Eb;I=90}}else{ka=U;I=90}}else{ka=E;I=90}break}case 116:{E=Z+1|0;c[q>>2]=E;U=a[E>>0]|0;if((U&255)>=102)if((U&255)<105){if((U&255)<104){ka=U;I=90;break d}E=Z+2|0;c[q>>2]=E;Eb=a[E>>0]|0;if(Eb<<24>>24!=101){ka=Eb;I=90;break d}Eb=Z+3|0;c[q>>2]=Eb;E=a[Eb>>0]|0;if(E<<24>>24!=110){ka=E;I=90;break d}E=Z+4|0;c[q>>2]=E;if(!(a[11197+(d[E>>0]|0)>>0]&16)){Qf=E;I=727;break a}else{I=85;break d}}else{if(U<<24>>24!=121){ka=U;I=90;break d}E=Z+2|0;c[q>>2]=E;Eb=a[E>>0]|0;if(Eb<<24>>24!=112){ka=Eb;I=90;break d}Eb=Z+3|0;c[q>>2]=Eb;E=a[Eb>>0]|0;if(E<<24>>24!=101){ka=E;I=90;break d}E=Z+4|0;c[q>>2]=E;if(!(a[11197+(d[E>>0]|0)>>0]&16)){Rf=E;I=729;break a}else{I=85;break d}}if(U<<24>>24==97){E=Z+2|0;c[q>>2]=E;Eb=a[E>>0]|0;if(Eb<<24>>24!=98){ka=Eb;I=90;break d}Eb=Z+3|0;c[q>>2]=Eb;E=a[Eb>>0]|0;if(E<<24>>24!=108){ka=E;I=90;break d}E=Z+4|0;c[q>>2]=E;Eb=a[E>>0]|0;if(Eb<<24>>24!=101){ka=Eb;I=90;break d}Eb=Z+5|0;c[q>>2]=Eb;if(!(a[11197+(d[Eb>>0]|0)>>0]&16)){Sf=Eb;I=881;break a}else{I=85;break d}}if((U&255)>=101){Eb=Z+2|0;c[q>>2]=Eb;E=a[Eb>>0]|0;if(E<<24>>24==101){Eb=Z+3|0;c[q>>2]=Eb;zb=a[Eb>>0]|0;if(zb<<24>>24==95){Eb=Z+4|0;c[q>>2]=Eb;F=a[Eb>>0]|0;if(F<<24>>24==108){Eb=Z+5|0;c[q>>2]=Eb;Of=a[Eb>>0]|0;if(Of<<24>>24==111){Eb=Z+6|0;c[q>>2]=Eb;hf=a[Eb>>0]|0;if(hf<<24>>24==99){Eb=Z+7|0;c[q>>2]=Eb;Tf=a[Eb>>0]|0;if(Tf<<24>>24==97){Eb=Z+8|0;c[q>>2]=Eb;Uf=a[Eb>>0]|0;if(Uf<<24>>24==108){Eb=Z+9|0;c[q>>2]=Eb;if(!(a[11197+(d[Eb>>0]|0)>>0]&16)){Vf=Eb;I=1643;break a}else I=85}else{ka=Uf;I=90}}else{ka=Tf;I=90}}else{ka=hf;I=90}}else{ka=Of;I=90}}else{ka=F;I=90}}else{ka=zb;I=90}}else{ka=E;I=90}}else{ka=U;I=90}break}case 117:{U=Z+1|0;c[q>>2]=U;E=a[U>>0]|0;if(E<<24>>24==110){U=Z+2|0;c[q>>2]=U;zb=a[U>>0]|0;if(zb<<24>>24==114){U=Z+3|0;c[q>>2]=U;F=a[U>>0]|0;if(F<<24>>24==101){U=Z+4|0;c[q>>2]=U;Of=a[U>>0]|0;if(Of<<24>>24==97){U=Z+5|0;c[q>>2]=U;hf=a[U>>0]|0;if(hf<<24>>24==99){U=Z+6|0;c[q>>2]=U;Tf=a[U>>0]|0;if(Tf<<24>>24==104){U=Z+7|0;c[q>>2]=U;Uf=a[U>>0]|0;if(Uf<<24>>24==97){U=Z+8|0;c[q>>2]=U;Eb=a[U>>0]|0;if(Eb<<24>>24==98){U=Z+9|0;c[q>>2]=U;Wf=a[U>>0]|0;if(Wf<<24>>24==108){U=Z+10|0;c[q>>2]=U;Xf=a[U>>0]|0;if(Xf<<24>>24==101){U=Z+11|0;c[q>>2]=U;if(!(a[11197+(d[U>>0]|0)>>0]&16)){Yf=U;I=1765;break a}else I=85}else{ka=Xf;I=90}}else{ka=Wf;I=90}}else{ka=Eb;I=90}}else{ka=Uf;I=90}}else{ka=Tf;I=90}}else{ka=hf;I=90}}else{ka=Of;I=90}}else{ka=F;I=90}}else{ka=zb;I=90}}else{ka=E;I=90}break}default:{E=Z+1|0;c[q>>2]=E;_a=E;I=78}}while(0);g:do if((I|0)==78){I=0;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];T=c[w>>2]|0;E=c[x>>2]|0;zb=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-T+E-zb;c[A>>2]=_a+1-T+E-zb;wi(e,f,g,11453,k);M=D;D=M;continue a}else if((I|0)==136){while(1){I=0;zb=Za+1|0;c[q>>2]=zb;E=zb;if(((c[s>>2]|0)-E|0)<3){if((Vd(f,3)|0)==1){I=139;break a}T=c[q>>2]|0;Zf=T;_f=T}else{Zf=zb;_f=E}E=a[Zf>>0]|0;if(((E&255)+-48|0)>>>0<10){Za=Zf;I=136}else{$f=_f;ag=Zf;bg=E;break}}if((bg&255)<69){if((bg&255)<44)if((bg&255)<35)if(bg<<24>>24==33){I=85;break}else{Ta=$f;I=135;break a}else if((bg&-2)<<24>>24==40){Ta=$f;I=135;break a}else{I=85;break}if((bg&255)>=47)if(bg<<24>>24==59){Ta=$f;I=135;break a}else{I=85;break}if((bg&255)<45){Ta=$f;I=135;break a}if((bg&255)<46){I=85;break}else{oa=ag;I=293;break}}if((bg&255)<101){if((bg&255)>=92)if(bg<<24>>24==93){Ta=$f;I=135;break a}else{I=85;break}if((bg&255)<70){qa=ag;I=316;break}if((bg&255)<91){I=85;break}else{Ta=$f;I=135;break a}}else{if((bg&255)>=124)if(bg<<24>>24!=125&(bg&255)<127){I=85;break}else{Ta=$f;I=135;break a}if((bg&255)<102){qa=ag;I=316;break}if((bg&255)<123){I=85;break}else{Ta=$f;I=135;break a}}}else if((I|0)==384){I=0;V=ma+1|0;c[q>>2]=V;G=a[V>>0]|0;if(G<<24>>24==110){V=ma+2|0;c[q>>2]=V;$a=a[V>>0]|0;J=V;if(($a&255)>=60)if(($a&255)<123)if(($a&255)<92)if(($a&255)<91){I=85;break}else{cg=J;I=595;break a}else if($a<<24>>24==93){cg=J;I=595;break a}else{I=85;break}else if(($a&255)<125)if(($a&255)>123){I=85;break}else{cg=J;I=595;break a}else if($a<<24>>24==126){I=85;break}else{cg=J;I=595;break a}if(($a&255)<42)if(($a&255)<34)if(($a&255)>32){I=85;break}else{cg=J;I=595;break a}else if(($a+-35&255)<5){I=85;break}else{cg=J;I=595;break a}if(($a&255)<45)if(($a&255)<44){I=85;break}else{cg=J;I=595;break a}if(($a&255)>=58){if(($a&255)>=59){cg=J;I=595;break a}J=ma+3|0;c[q>>2]=J;$a=a[J>>0]|0;if($a<<24>>24==48){J=ma+4|0;c[q>>2]=J;V=a[J>>0]|0;if(V<<24>>24==120){J=ma+5|0;c[q>>2]=J;O=a[J>>0]|0;if((O&255)<65)if((O+-48&255)<10)dg=J;else{ka=O;I=90;break}else if((O&255)<71|(O+-97&255)<6)dg=J;else{ka=O;I=90;break}while(1){O=dg+1|0;c[q>>2]=O;if((c[s>>2]|0)>>>0>O>>>0)eg=O;else{if((Vd(f,1)|0)==1){I=1287;break a}eg=c[q>>2]|0}O=a[eg>>0]|0;if((O&255)<65){if((O&255)<44){fg=eg;gg=O;I=1290;break}if((O&255)>=58){hg=eg;ig=O;I=1296;break}if((O&255)<45){jg=eg;I=594;break a}if((O&255)<48){I=85;break g}else{dg=eg;continue}}if((O&255)<97){if((O&255)>=92){kg=eg;lg=O;I=1301;break}if((O&255)<71){dg=eg;continue}else{mg=eg;ng=O;I=1300;break}}else{if((O&255)>=124){og=eg;pg=O;I=1305;break}if((O&255)<103){dg=eg;continue}else{qg=eg;rg=O;I=1304;break}}}if((I|0)==1290){I=0;O=fg;if((gg&255)<35)if(gg<<24>>24==33){I=85;break}else{cg=O;I=595;break a}else if((gg&-2)<<24>>24==40){cg=O;I=595;break a}else{I=85;break}}else if((I|0)==1296){I=0;if(ig<<24>>24==59){cg=hg;I=595;break a}else{I=85;break}}else if((I|0)==1300){I=0;if((ng&255)<91){I=85;break}else{cg=mg;I=595;break a}}else if((I|0)==1301){I=0;if(lg<<24>>24==93){cg=kg;I=595;break a}else{I=85;break}}else if((I|0)==1304){I=0;if((rg&255)<123){I=85;break}else{cg=qg;I=595;break a}}else if((I|0)==1305){I=0;if(pg<<24>>24!=125&(pg&255)<127){I=85;break}else{cg=og;I=595;break a}}}else{ka=V;I=90}}else{ka=$a;I=90}}else I=85}else{ka=G;I=90}}else if((I|0)==553){I=0;O=la+1|0;c[q>>2]=O;J=a[O>>0]|0;E=O;if((J&255)<91)if((J&255)<42)if((J&255)<34)if((J&255)>32){I=85;break}else{sg=E;I=569;break a}else if((J+-35&255)<5){I=85;break}else{sg=E;I=569;break a}else if((J&255)<45)if((J&255)<44){I=85;break}else{sg=E;I=569;break a}else if(J<<24>>24==59){sg=E;I=569;break a}else{I=85;break}if((J&255)>=106)if((J&255)<125)if(J<<24>>24==123){sg=E;I=569;break a}else{I=85;break}else if(J<<24>>24==126){I=85;break}else{sg=E;I=569;break a}if((J&255)<93)if((J&255)>91){I=85;break}else{sg=E;I=569;break a}if((J&255)<94){sg=E;I=569;break a}if((J&255)>=105){J=la+2|0;c[q>>2]=J;E=a[J>>0]|0;if(E<<24>>24==110){J=la+3|0;c[q>>2]=J;O=a[J>>0]|0;if(O<<24>>24==105){J=la+4|0;c[q>>2]=J;zb=a[J>>0]|0;if(zb<<24>>24==116){J=la+5|0;c[q>>2]=J;T=a[J>>0]|0;if(T<<24>>24==121){J=la+6|0;c[q>>2]=J;if(!(a[11197+(d[J>>0]|0)>>0]&16)){sg=J;I=569;break a}else I=85}else{ka=T;I=90}}else{ka=zb;I=90}}else{ka=O;I=90}}else{ka=E;I=90}}else I=85}else if((I|0)==635){while(1){I=0;E=Fa+1|0;c[q>>2]=E;if(((c[s>>2]|0)-E|0)<3){if((Vd(f,3)|0)==1){I=638;break a}tg=c[q>>2]|0}else tg=E;E=a[tg>>0]|0;if((E&255)>=71){if((E&255)>=112){ug=tg;vg=E;I=654;break}if((E&255)<93){wg=E;I=651;break}if((E&255)<94){I=91;break g}if((E+-97&255)<6){Fa=tg;I=635;continue}else{I=85;break g}}if((E&255)<44){xg=E;I=641;break}if((E&255)<58){if((E&255)<45){I=91;break g}if((E&255)<48){I=85;break g}else{Fa=tg;I=635;continue}}else{if(E<<24>>24==59){I=91;break g}if((E&255)<65){I=85;break g}else{Fa=tg;I=635;continue}}}if((I|0)==641){I=0;if((xg&255)<35)if(xg<<24>>24==33){I=85;break}else{I=91;break}else if((xg&-2)<<24>>24==40){I=91;break}else{I=85;break}}else if((I|0)==651){I=0;if(wg<<24>>24==91){I=91;break}else{I=85;break}}else if((I|0)==654){I=0;if((vg&255)>=124)if(vg<<24>>24!=125&(vg&255)<127){I=85;break}else{I=91;break}if((vg&255)<113){Ga=ug;I=658;break}if((vg&255)<123){I=85;break}else{I=91;break}}}while(0);h:do if((I|0)==293){while(1){I=0;G=oa+1|0;c[q>>2]=G;$a=G;if(((c[s>>2]|0)-$a|0)<3){if((Vd(f,3)|0)==1){I=296;break a}V=c[q>>2]|0;yg=V;zg=V}else{yg=$a;zg=G}G=a[zg>>0]|0;if((G&255)>=69){Ag=yg;Bg=zg;Cg=G;I=306;break}if((G&255)<44){Dg=yg;Eg=G;I=299;break}if((G&255)>=58){Fg=yg;Gg=G;I=305;break}if((G&255)<45){Hg=yg;I=315;break a}if((G&255)<48){I=85;break h}else{oa=zg;I=293}}if((I|0)==299){I=0;if((Eg&255)<35)if(Eg<<24>>24==33){I=85;break}else{Hg=Dg;I=315;break a}else if((Eg&-2)<<24>>24==40){Hg=Dg;I=315;break a}else{I=85;break}}else if((I|0)==305){I=0;if(Gg<<24>>24==59){Hg=Fg;I=315;break a}else{I=85;break}}else if((I|0)==306){I=0;if((Cg&255)<101){if((Cg&255)>=92)if(Cg<<24>>24==93){Hg=Ag;I=315;break a}else{I=85;break}if((Cg&255)<70){qa=Bg;I=316;break}if((Cg&255)<91){I=85;break}else{Hg=Ag;I=315;break a}}else{if((Cg&255)>=124)if(Cg<<24>>24!=125&(Cg&255)<127){I=85;break}else{Hg=Ag;I=315;break a}if((Cg&255)<102){qa=Bg;I=316;break}if((Cg&255)<123){I=85;break}else{Hg=Ag;I=315;break a}}}}else if((I|0)==658){I=0;G=Ga+1|0;c[q>>2]=G;$a=a[G>>0]|0;if(($a&255)<45)if($a<<24>>24==43)I=731;else{ka=$a;I=90;break}else if(($a&255)>=46)if(($a+-48&255)<10)Ig=G;else{ka=$a;I=90;break}else I=731;if((I|0)==731){I=0;$a=Ga+2|0;c[q>>2]=$a;G=a[$a>>0]|0;if((G+-48&255)>9){ka=G;I=90;break}else Ig=$a}while(1){$a=Ig+1|0;c[q>>2]=$a;if((c[s>>2]|0)>>>0>$a>>>0)Jg=$a;else{if((Vd(f,1)|0)==1){I=735;break a}Jg=c[q>>2]|0}$a=a[Jg>>0]|0;if(($a&255)>=59){Kg=Jg;Lg=$a;I=744;break}if(($a&255)<42){Mg=Jg;Ng=$a;I=738;break}if(($a&255)<45){Og=Jg;Pg=$a;I=742;break}if(($a+-48&255)<10)Ig=Jg;else{I=85;break h}}if((I|0)==738){I=0;$a=Mg;if((Ng&255)<34)if((Ng&255)>32){I=85;break}else{Qg=$a;I=751;break a}else if((Ng+-35&255)<5){I=85;break}else{Qg=$a;I=751;break a}}else if((I|0)==742){I=0;if((Pg&255)<44){I=85;break}else{Qg=Og;I=751;break a}}else if((I|0)==744){I=0;$a=Kg;if((Lg&255)<94)if((Lg&255)<91)if((Lg&255)>59){I=85;break}else{Qg=$a;I=751;break a}else if(Lg<<24>>24==92){I=85;break}else{Qg=$a;I=751;break a}else if((Lg&255)<125)if(Lg<<24>>24==123){Qg=$a;I=751;break a}else{I=85;break}else if(Lg<<24>>24==126){I=85;break}else{Qg=$a;I=751;break a}}}while(0);i:do if((I|0)==316){I=0;$a=qa+1|0;c[q>>2]=$a;G=a[$a>>0]|0;if((G&255)<45)if(G<<24>>24==43)I=411;else{ka=G;I=90;break}else if((G&255)>=46)if((G+-48&255)<10)Rg=$a;else{ka=G;I=90;break}else I=411;if((I|0)==411){I=0;G=qa+2|0;c[q>>2]=G;$a=a[G>>0]|0;if(($a+-48&255)>9){ka=$a;I=90;break}else Rg=G}while(1){G=Rg+1|0;c[q>>2]=G;if((c[s>>2]|0)>>>0>G>>>0)Sg=G;else{if((Vd(f,1)|0)==1){I=415;break a}Sg=c[q>>2]|0}G=a[Sg>>0]|0;if((G&255)>=59){Tg=Sg;Ug=G;I=424;break}if((G&255)<42){Vg=Sg;Wg=G;I=418;break}if((G&255)<45){Xg=Sg;Yg=G;I=422;break}if((G+-48&255)<10)Rg=Sg;else{I=85;break i}}if((I|0)==418){I=0;G=Vg;if((Wg&255)<34)if((Wg&255)<33){Hg=G;I=315;break a}else{I=85;break}else if((Wg+-35&255)<5){I=85;break}else{Hg=G;I=315;break a}}else if((I|0)==422){I=0;if((Yg&255)<44){I=85;break}else{Hg=Xg;I=315;break a}}else if((I|0)==424){I=0;G=Tg;if((Ug&255)<94)if((Ug&255)<91)if((Ug&255)<60){Hg=G;I=315;break a}else{I=85;break}else if(Ug<<24>>24==92){I=85;break}else{Hg=G;I=315;break a}else if((Ug&255)<125)if(Ug<<24>>24==123){Hg=G;I=315;break a}else{I=85;break}else if(Ug<<24>>24==126){I=85;break}else{Hg=G;I=315;break a}}}while(0);while(1)if((I|0)==85){I=0;G=(c[q>>2]|0)+1|0;c[q>>2]=G;if((c[s>>2]|0)>>>0>G>>>0)Zg=G;else{if((Vd(f,1)|0)==1){I=88;break a}Zg=c[q>>2]|0}ka=a[Zg>>0]|0;I=90;continue}else if((I|0)==90){I=0;if(!(a[11197+(ka&255)>>0]&16)){I=91;continue}else{I=85;continue}}else if((I|0)==91){I=0;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];G=c[r>>2]|0;$a=c[w>>2]|0;V=c[x>>2]|0;E=c[y>>2]|0;c[z>>2]=G+1-$a+V-E;O=c[q>>2]|0;c[A>>2]=O+1-$a+V-E;c[j>>2]=O-G;c[j+4>>2]=G;wi(e,f,g,11469,j);M=D;D=M;continue a}}switch(I|0){case 8:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];M=c[w>>2]|0;D=c[x>>2]|0;j=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-M+D-j;c[A>>2]=(c[q>>2]|0)+1-M+D-j;_g=0;i=h;return _g|0}case 18:{j=R+1|0;c[q>>2]=j;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];R=c[w>>2]|0;D=c[x>>2]|0;M=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-R+D-M;c[A>>2]=j+1-R+D-M;wi(e,f,g,11118,p);c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];p=c[w>>2]|0;M=c[x>>2]|0;D=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-p+M-D;c[A>>2]=(c[q>>2]|0)+1-p+M-D;_g=0;i=h;return _g|0}case 23:{D=W+1|0;c[q>>2]=D;W=c[r>>2]|0;c[b>>2]=W;M=D;c[b+4>>2]=M-W;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];D=c[w>>2]|0;p=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=W+1-D+p-R;c[A>>2]=M+1-D+p-R;_g=263;i=h;return _g|0}case 47:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];R=c[w>>2]|0;p=c[x>>2]|0;D=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-R+p-D;c[A>>2]=(c[q>>2]|0)+1-R+p-D;_g=0;i=h;return _g|0}case 52:{D=P+1|0;c[q>>2]=D;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];P=c[w>>2]|0;p=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-P+p-R;c[A>>2]=D+1-P+p-R;wi(e,f,g,11118,l);c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];l=c[w>>2]|0;g=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-l+g-R;c[A>>2]=(c[q>>2]|0)+1-l+g-R;_g=0;i=h;return _g|0}case 62:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];R=c[w>>2]|0;g=c[x>>2]|0;l=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-R+g-l;c[A>>2]=(c[q>>2]|0)+1-R+g-l;_g=0;i=h;return _g|0}case 67:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];l=c[w>>2]|0;g=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-l+g-R;c[A>>2]=(c[q>>2]|0)+1-l+g-R;_g=0;i=h;return _g|0}case 73:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];R=c[w>>2]|0;g=c[x>>2]|0;l=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-R+g-l;c[A>>2]=(c[q>>2]|0)+1-R+g-l;_g=0;i=h;return _g|0}case 76:{l=$+1|0;c[q>>2]=l;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$=c[w>>2]|0;g=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$+g-R;c[A>>2]=l+1-$+g-R;_g=0;i=h;return _g|0}case 82:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];R=c[w>>2]|0;g=c[x>>2]|0;$=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-R+g-$;c[A>>2]=(c[q>>2]|0)+1-R+g-$;_g=0;i=h;return _g|0}case 88:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$=c[w>>2]|0;g=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$+g-R;c[A>>2]=(c[q>>2]|0)+1-$+g-R;_g=0;i=h;return _g|0}case 107:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];R=c[w>>2]|0;g=c[x>>2]|0;$=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-R+g-$;c[A>>2]=ja+1-R+g-$;_g=258;i=h;return _g|0}case 108:{$=aa+1|0;c[q>>2]=$;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];aa=c[w>>2]|0;g=c[x>>2]|0;R=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-aa+g-R;c[A>>2]=$+1-aa+g-R;_g=259;i=h;return _g|0}case 135:{c[b>>2]=0;R=c[r>>2]|0;g=b+4|0;c[g>>2]=R;c[g+4>>2]=Ta-R;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];g=c[w>>2]|0;aa=c[x>>2]|0;$=c[y>>2]|0;c[z>>2]=R+1-g+aa-$;c[A>>2]=Ta+1-g+aa-$;_g=260;i=h;return _g|0}case 139:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$=c[w>>2]|0;aa=c[x>>2]|0;g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$+aa-g;c[A>>2]=(c[q>>2]|0)+1-$+aa-g;_g=0;i=h;return _g|0}case 207:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];g=c[w>>2]|0;aa=c[x>>2]|0;$=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-g+aa-$;c[A>>2]=(c[q>>2]|0)+1-g+aa-$;_g=0;i=h;return _g|0}case 214:{$=da+1|0;c[q>>2]=$;da=c[r>>2]|0;c[b>>2]=da;aa=$;c[b+4>>2]=aa-da;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$=c[w>>2]|0;g=c[x>>2]|0;Ta=c[y>>2]|0;c[z>>2]=da+1-$+g-Ta;c[A>>2]=aa+1-$+g-Ta;_g=263;i=h;return _g|0}case 218:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Ta=c[w>>2]|0;g=c[x>>2]|0;$=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Ta+g-$;c[A>>2]=(c[q>>2]|0)+1-Ta+g-$;_g=0;i=h;return _g|0}case 229:{while(1){I=0;$=ia+1|0;c[q>>2]=$;if((c[s>>2]|0)>>>0>$>>>0)$g=$;else{if((Vd(f,1)|0)==1){I=232;break}$g=c[q>>2]|0}$=a[$g>>0]|0;if(($&255)<60){if(($&255)<40)if($<<24>>24==33|($&255)>34){ia=$g;I=229;continue}else{ah=$g;I=246;break}if(($&255)<44)if(($&255)>41){ia=$g;I=229;continue}else{ah=$g;I=246;break}else if(($+-45&255)<14){ia=$g;I=229;continue}else{ah=$g;I=246;break}}if(($&255)<123)if(($&255)<92)if(($&255)<91){ia=$g;I=229;continue}else{ah=$g;I=246;break}else if($<<24>>24==93){ah=$g;I=246;break}else{ia=$g;I=229;continue}else if(($&255)<125)if(($&255)>123){ia=$g;I=229;continue}else{ah=$g;I=246;break}else if($<<24>>24==126){ia=$g;I=229;continue}else{ah=$g;I=246;break}}if((I|0)==232){c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;ia=c[x>>2]|0;f=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+ia-f;c[A>>2]=(c[q>>2]|0)+1-$g+ia-f;_g=0;i=h;return _g|0}else if((I|0)==246){f=ah;ah=c[r>>2]|0;c[b>>2]=ah;c[b+4>>2]=f-ah;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;s=c[y>>2]|0;c[z>>2]=ah+1-ia+$g-s;c[A>>2]=f+1-ia+$g-s;_g=264;i=h;return _g|0}break}case 267:{c[b>>2]=0;s=c[r>>2]|0;$g=b+4|0;c[$g>>2]=s;c[$g+4>>2]=na-s;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;ia=c[x>>2]|0;f=c[y>>2]|0;c[z>>2]=s+1-$g+ia-f;c[A>>2]=na+1-$g+ia-f;_g=261;i=h;return _g|0}case 271:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];f=c[w>>2]|0;ia=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-f+ia-$g;c[A>>2]=(c[q>>2]|0)+1-f+ia-$g;_g=0;i=h;return _g|0}case 296:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;ia=c[x>>2]|0;f=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+ia-f;c[A>>2]=(c[q>>2]|0)+1-$g+ia-f;_g=0;i=h;return _g|0}case 315:{c[b>>2]=1;f=c[r>>2]|0;ia=b+4|0;c[ia>>2]=f;c[ia+4>>2]=Hg-f;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=f+1-ia+$g-na;c[A>>2]=Hg+1-ia+$g-na;_g=262;i=h;return _g|0}case 342:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;ia=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-ia;c[A>>2]=Kb+1-na+$g-ia;_g=276;i=h;return _g|0}case 374:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ia+$g-na;c[A>>2]=kd+1-ia+$g-na;_g=272;i=h;return _g|0}case 403:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;ia=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-ia;c[A>>2]=(c[q>>2]|0)+1-na+$g-ia;_g=0;i=h;return _g|0}case 415:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ia+$g-na;c[A>>2]=(c[q>>2]|0)+1-ia+$g-na;_g=0;i=h;return _g|0}case 434:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;ia=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-ia;c[A>>2]=(c[q>>2]|0)+1-na+$g-ia;_g=0;i=h;return _g|0}case 465:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ia+$g-na;c[A>>2]=Vb+1-ia+$g-na;_g=271;i=h;return _g|0}case 482:{c[b>>2]=-3;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;ia=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-ia;c[A>>2]=Xb+1-na+$g-ia;_g=265;i=h;return _g|0}case 498:{c[b>>2]=-4;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ia+$g-na;c[A>>2]=Ac+1-ia+$g-na;_g=265;i=h;return _g|0}case 516:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;ia=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-ia;c[A>>2]=ed+1-na+$g-ia;_g=318;i=h;return _g|0}case 534:{c[b>>2]=-1;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ia=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ia+$g-na;c[A>>2]=md+1-ia+$g-na;_g=265;i=h;return _g|0}case 550:{c[b>>2]=-2;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;ia=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-ia;c[A>>2]=ee+1-na+$g-ia;_g=265;i=h;return _g|0}case 569:{c[b>>2]=3;ia=c[r>>2]|0;$g=b+4|0;c[$g>>2]=ia;c[$g+4>>2]=sg-ia;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;na=c[x>>2]|0;ee=c[y>>2]|0;c[z>>2]=ia+1-$g+na-ee;c[A>>2]=sg+1-$g+na-ee;_g=262;i=h;return _g|0}case 577:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ee=c[w>>2]|0;na=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ee+na-$g;c[A>>2]=cf+1-ee+na-$g;_g=267;i=h;return _g|0}case 594:{cg=jg;I=595;break}case 597:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=ef+1-jg+$g-na;_g=268;i=h;return _g|0}case 615:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-jg;c[A>>2]=(c[q>>2]|0)+1-na+$g-jg;_g=0;i=h;return _g|0}case 638:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=(c[q>>2]|0)+1-jg+$g-na;_g=0;i=h;return _g|0}case 684:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-jg;c[A>>2]=Ob+1-na+$g-jg;_g=279;i=h;return _g|0}case 687:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=Rb+1-jg+$g-na;_g=312;i=h;return _g|0}case 689:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-jg;c[A>>2]=Sb+1-na+$g-jg;_g=269;i=h;return _g|0}case 691:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=Tb+1-jg+$g-na;_g=310;i=h;return _g|0}case 693:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-jg;c[A>>2]=Ub+1-na+$g-jg;_g=274;i=h;return _g|0}case 698:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=zc+1-jg+$g-na;_g=301;i=h;return _g|0}case 711:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-jg;c[A>>2]=$e+1-na+$g-jg;_g=275;i=h;return _g|0}case 727:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=Qf+1-jg+$g-na;_g=273;i=h;return _g|0}case 729:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];na=c[w>>2]|0;$g=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-na+$g-jg;c[A>>2]=Rf+1-na+$g-jg;_g=303;i=h;return _g|0}case 735:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;$g=c[x>>2]|0;na=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+$g-na;c[A>>2]=(c[q>>2]|0)+1-jg+$g-na;_g=0;i=h;return _g|0}case 751:{c[b>>2]=2;na=c[r>>2]|0;$g=b+4|0;c[$g>>2]=na;c[$g+4>>2]=Qg-na;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=na+1-$g+jg-Rf;c[A>>2]=Qg+1-$g+jg-Rf;_g=262;i=h;return _g|0}case 756:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Jb+1-Rf+jg-$g;_g=270;i=h;return _g|0}case 758:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Lb+1-$g+jg-Rf;_g=277;i=h;return _g|0}case 861:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=id+1-Rf+jg-$g;_g=327;i=h;return _g|0}case 864:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=af+1-$g+jg-Rf;_g=306;i=h;return _g|0}case 871:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Hf+1-Rf+jg-$g;_g=304;i=h;return _g|0}case 879:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Lf+1-$g+jg-Rf;_g=302;i=h;return _g|0}case 881:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Sf+1-Rf+jg-$g;_g=309;i=h;return _g|0}case 895:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Wb+1-$g+jg-Rf;_g=315;i=h;return _g|0}case 903:{c[b>>2]=91;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=hc+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 906:{c[b>>2]=96;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=jc+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 908:{c[b>>2]=94;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=kc+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 910:{c[b>>2]=95;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=lc+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 913:{c[b>>2]=93;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=mc+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 933:{c[b>>2]=92;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=rc+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 945:{c[b>>2]=97;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Lc+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 948:{c[b>>2]=102;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Nc+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 950:{c[b>>2]=100;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Oc+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 952:{c[b>>2]=101;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Pc+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 955:{c[b>>2]=99;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Qc+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 975:{c[b>>2]=98;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Vc+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 985:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=cd+1-Rf+jg-$g;_g=307;i=h;return _g|0}case 1009:{c[b>>2]=70;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=ud+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 1017:{c[b>>2]=71;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Kd+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 1019:{c[b>>2]=114;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Ld+1-$g+jg-Rf;_g=294;i=h;return _g|0}case 1051:{c[b>>2]=81;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=oe+1-Rf+jg-$g;_g=295;i=h;return _g|0}case 1060:{c[b>>2]=82;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Ge+1-$g+jg-Rf;_g=295;i=h;return _g|0}case 1062:{c[b>>2]=132;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=He+1-Rf+jg-$g;_g=294;i=h;return _g|0}case 1073:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=hd+1-$g+jg-Rf;_g=314;i=h;return _g|0}case 1076:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=jd+1-Rf+jg-$g;_g=317;i=h;return _g|0}case 1078:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=bf+1-$g+jg-Rf;_g=311;i=h;return _g|0}case 1080:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=df+1-Rf+jg-$g;_g=308;i=h;return _g|0}case 1099:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=gf+1-$g+jg-Rf;_g=313;i=h;return _g|0}case 1101:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=ff+1-Rf+jg-$g;_g=328;i=h;return _g|0}case 1104:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Jf+1-$g+jg-Rf;_g=305;i=h;return _g|0}case 1106:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;$g=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-$g;c[A>>2]=Kf+1-Rf+jg-$g;_g=282;i=h;return _g|0}case 1108:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];$g=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-$g+jg-Rf;c[A>>2]=Mf+1-$g+jg-Rf;_g=297;i=h;return _g|0}case 1130:{ab=ib;I=1131;break}case 1135:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=(c[q>>2]|0)+1-ib+Rf-jg;_g=0;i=h;return _g|0}case 1152:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=yb+1-jg+Rf-ib;_g=266;i=h;return _g|0}case 1159:{c[b>>2]=139;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Yb+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1161:{c[b>>2]=146;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Zb+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1167:{c[b>>2]=149;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=fc+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1171:{c[b>>2]=151;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=oc+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1173:{c[b>>2]=150;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=pc+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1175:{c[b>>2]=148;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=qc+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1178:{c[b>>2]=140;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=sc+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1183:{c[b>>2]=147;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=wc+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1186:{c[b>>2]=153;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Bc+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1188:{c[b>>2]=160;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Cc+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1193:{c[b>>2]=163;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Kc+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1197:{c[b>>2]=165;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Sc+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1199:{c[b>>2]=164;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Tc+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1201:{c[b>>2]=162;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Uc+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1204:{c[b>>2]=154;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Wc+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1210:{c[b>>2]=161;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=$c+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1216:{c[b>>2]=106;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=nd+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1218:{c[b>>2]=113;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=od+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1220:{c[b>>2]=103;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=pd+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1223:{c[b>>2]=104;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=qd+1-jg+Rf-ib;_g=293;i=h;return _g|0}case 1226:{c[b>>2]=69;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=vd+1-ib+Rf-jg;_g=296;i=h;return _g|0}case 1233:{c[b>>2]=108;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Jd+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1239:{c[b>>2]=116;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Sd+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1243:{c[b>>2]=107;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Wd+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1247:{c[b>>2]=115;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=de+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1249:{c[b>>2]=124;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=fe+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1251:{c[b>>2]=131;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=ge+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1253:{c[b>>2]=121;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=he+1-jg+Rf-ib;_g=293;i=h;return _g|0}case 1256:{c[b>>2]=122;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=ie+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1259:{c[b>>2]=80;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=pe+1-jg+Rf-ib;_g=296;i=h;return _g|0}case 1267:{c[b>>2]=126;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Fe+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1273:{c[b>>2]=134;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Oe+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1277:{c[b>>2]=125;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Re+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1280:{c[b>>2]=133;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=_e+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1282:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=ld+1-ib+Rf-jg;_g=272;i=h;return _g|0}case 1287:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=(c[q>>2]|0)+1-jg+Rf-ib;_g=0;i=h;return _g|0}case 1324:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Mb+1-ib+Rf-jg;_g=278;i=h;return _g|0}case 1329:{c[b>>2]=141;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=_b+1-jg+Rf-ib;_g=293;i=h;return _g|0}case 1336:{c[b>>2]=42;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=nc+1-ib+Rf-jg;_g=288;i=h;return _g|0}case 1340:{c[b>>2]=145;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=vc+1-jg+Rf-ib;_g=293;i=h;return _g|0}case 1344:{c[b>>2]=155;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Dc+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1350:{c[b>>2]=43;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Rc+1-jg+Rf-ib;_g=288;i=h;return _g|0}case 1355:{c[b>>2]=159;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=_c+1-ib+Rf-jg;_g=293;i=h;return _g|0}case 1364:{c[b>>2]=78;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=wd+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1366:{c[b>>2]=79;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=xd+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1368:{c[b>>2]=74;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=yd+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1370:{c[b>>2]=75;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=zd+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1372:{c[b>>2]=76;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Ad+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1374:{c[b>>2]=77;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Bd+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1391:{c[b>>2]=40;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Ed+1-jg+Rf-ib;_g=288;i=h;return _g|0}case 1393:{c[b>>2]=72;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Cd+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1395:{c[b>>2]=73;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Dd+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1400:{c[b>>2]=119;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Nd+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1402:{c[b>>2]=120;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Od+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1411:{c[b>>2]=89;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=qe+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1413:{c[b>>2]=90;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=re+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1415:{c[b>>2]=85;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=se+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1417:{c[b>>2]=86;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=te+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1419:{c[b>>2]=87;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=ue+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1421:{c[b>>2]=88;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=ve+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1439:{c[b>>2]=41;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=ye+1-ib+Rf-jg;_g=288;i=h;return _g|0}case 1441:{c[b>>2]=83;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=we+1-jg+Rf-ib;_g=295;i=h;return _g|0}case 1443:{c[b>>2]=84;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=xe+1-ib+Rf-jg;_g=295;i=h;return _g|0}case 1448:{c[b>>2]=137;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;ib=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-jg+Rf-ib;c[A>>2]=Je+1-jg+Rf-ib;_g=294;i=h;return _g|0}case 1450:{c[b>>2]=138;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];ib=c[w>>2]|0;Rf=c[x>>2]|0;jg=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-ib+Rf-jg;c[A>>2]=Ke+1-ib+Rf-jg;_g=294;i=h;return _g|0}case 1472:{jf=rf;I=1473;break}case 1477:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=(c[q>>2]|0)+1-rf+jg-Rf;_g=0;i=h;return _g|0}case 1494:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=If+1-Rf+jg-rf;_g=316;i=h;return _g|0}case 1502:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=(c[q>>2]|0)+1-rf+jg-Rf;_g=0;i=h;return _g|0}case 1531:{c[b>>2]=-3;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ac+1-Rf+jg-rf;_g=292;i=h;return _g|0}case 1536:{c[b>>2]=142;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=ic+1-rf+jg-Rf;_g=293;i=h;return _g|0}case 1540:{c[b>>2]=56;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=xc+1-Rf+jg-rf;_g=289;i=h;return _g|0}case 1542:{c[b>>2]=143;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=yc+1-rf+jg-Rf;_g=293;i=h;return _g|0}case 1544:{c[b>>2]=-4;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Fc+1-Rf+jg-rf;_g=292;i=h;return _g|0}case 1548:{c[b>>2]=156;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Mc+1-rf+jg-Rf;_g=293;i=h;return _g|0}case 1553:{c[b>>2]=57;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ad+1-Rf+jg-rf;_g=289;i=h;return _g|0}case 1555:{c[b>>2]=157;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=bd+1-rf+jg-Rf;_g=293;i=h;return _g|0}case 1558:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=fd+1-Rf+jg-rf;_g=283;i=h;return _g|0}case 1561:{c[b>>2]=-1;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=rd+1-rf+jg-Rf;_g=292;i=h;return _g|0}case 1563:{c[b>>2]=109;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=sd+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1565:{c[b>>2]=110;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=td+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1571:{c[b>>2]=111;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Pd+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1573:{c[b>>2]=112;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Qd+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1575:{c[b>>2]=117;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Td+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1577:{c[b>>2]=118;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ud+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1594:{c[b>>2]=54;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Xd+1-Rf+jg-rf;_g=289;i=h;return _g|0}case 1598:{c[b>>2]=-2;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=je+1-rf+jg-Rf;_g=292;i=h;return _g|0}case 1600:{c[b>>2]=127;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ke+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1602:{c[b>>2]=128;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=le+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1610:{c[b>>2]=129;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Le+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1612:{c[b>>2]=130;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Me+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1614:{c[b>>2]=135;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Pe+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1616:{c[b>>2]=136;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Qe+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1634:{c[b>>2]=55;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Se+1-Rf+jg-rf;_g=289;i=h;return _g|0}case 1641:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Nf+1-rf+jg-Rf;_g=284;i=h;return _g|0}case 1643:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Vf+1-Rf+jg-rf;_g=285;i=h;return _g|0}case 1665:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=gd+1-rf+jg-Rf;_g=286;i=h;return _g|0}case 1670:{c[b>>2]=105;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Md+1-Rf+jg-rf;_g=293;i=h;return _g|0}case 1674:{c[b>>2]=58;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Zd+1-rf+jg-Rf;_g=289;i=h;return _g|0}case 1682:{c[b>>2]=123;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Ie+1-Rf+jg-rf;_g=293;i=h;return _g|0}case 1687:{c[b>>2]=60;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Te+1-rf+jg-Rf;_g=289;i=h;return _g|0}case 1692:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=(c[q>>2]|0)+1-Rf+jg-rf;_g=0;i=h;return _g|0}case 1712:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Pf+1-rf+jg-Rf;_g=287;i=h;return _g|0}case 1719:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Hb+1-Rf+jg-rf;_g=325;i=h;return _g|0}case 1722:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Pb+1-rf+jg-Rf;_g=280;i=h;return _g|0}case 1729:{c[b>>2]=144;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=tc+1-Rf+jg-rf;_g=293;i=h;return _g|0}case 1734:{c[b>>2]=158;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Xc+1-rf+jg-Rf;_g=293;i=h;return _g|0}case 1738:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=dd+1-Rf+jg-rf;_g=300;i=h;return _g|0}case 1741:{c[b>>2]=44;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Hd+1-rf+jg-Rf;_g=288;i=h;return _g|0}case 1743:{c[b>>2]=45;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Id+1-Rf+jg-rf;_g=288;i=h;return _g|0}case 1746:{c[b>>2]=59;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Yd+1-rf+jg-Rf;_g=289;i=h;return _g|0}case 1754:{c[b>>2]=48;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ze+1-Rf+jg-rf;_g=288;i=h;return _g|0}case 1756:{c[b>>2]=49;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ae+1-rf+jg-Rf;_g=288;i=h;return _g|0}case 1759:{c[b>>2]=61;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Ve+1-Rf+jg-rf;_g=289;i=h;return _g|0}case 1761:{c[b>>2]=62;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ue+1-rf+jg-Rf;_g=289;i=h;return _g|0}case 1765:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Yf+1-Rf+jg-rf;_g=298;i=h;return _g|0}case 1775:{c[b>>2]=152;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=$b+1-rf+jg-Rf;_g=294;i=h;return _g|0}case 1780:{c[b>>2]=166;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Ec+1-Rf+jg-rf;_g=294;i=h;return _g|0}case 1784:{c[b>>2]=46;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Fd+1-rf+jg-Rf;_g=288;i=h;return _g|0}case 1786:{c[b>>2]=47;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Gd+1-Rf+jg-rf;_g=288;i=h;return _g|0}case 1791:{c[b>>2]=167;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=ce+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1795:{c[b>>2]=50;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=De+1-Rf+jg-rf;_g=288;i=h;return _g|0}case 1797:{c[b>>2]=51;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ee+1-rf+jg-Rf;_g=288;i=h;return _g|0}case 1799:{c[b>>2]=52;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Be+1-Rf+jg-rf;_g=288;i=h;return _g|0}case 1801:{c[b>>2]=53;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ce+1-rf+jg-Rf;_g=288;i=h;return _g|0}case 1824:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Db+1-Rf+jg-rf;_g=322;i=h;return _g|0}case 1827:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Qb+1-rf+jg-Rf;_g=281;i=h;return _g|0}case 1847:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Bb+1-Rf+jg-rf;_g=320;i=h;return _g|0}case 1852:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Nb+1-rf+jg-Rf;_g=299;i=h;return _g|0}case 1856:{c[b>>2]=182;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=gc+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1885:{c[b>>2]=187;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Yc+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1889:{c[b>>2]=168;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=_d+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1891:{c[b>>2]=170;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=$d+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1893:{c[b>>2]=169;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ae+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1895:{c[b>>2]=171;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=be+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1900:{c[b>>2]=174;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=We+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1902:{c[b>>2]=176;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Xe+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1904:{c[b>>2]=175;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Ye+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1906:{c[b>>2]=177;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ze+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1909:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Cb+1-Rf+jg-rf;_g=319;i=h;return _g|0}case 1925:{c[b>>2]=172;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=me+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1927:{c[b>>2]=173;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ne+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1930:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ab+1-rf+jg-Rf;_g=326;i=h;return _g|0}case 1934:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Ib+1-Rf+jg-rf;_g=321;i=h;return _g|0}case 1936:{c[b>>2]=178;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=bc+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1938:{c[b>>2]=180;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=cc+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1940:{c[b>>2]=179;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=dc+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1942:{c[b>>2]=181;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=ec+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1945:{c[b>>2]=183;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Gc+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1947:{c[b>>2]=185;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Hc+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1949:{c[b>>2]=184;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Ic+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1951:{c[b>>2]=186;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Jc+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1964:{c[b>>2]=190;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=uc+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1966:{c[b>>2]=191;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Zc+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1968:{c[b>>2]=188;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Rd+1-rf+jg-Rf;_g=296;i=h;return _g|0}case 1970:{c[b>>2]=189;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Ne+1-Rf+jg-rf;_g=296;i=h;return _g|0}case 1987:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];rf=c[w>>2]|0;jg=c[x>>2]|0;Rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-rf+jg-Rf;c[A>>2]=Fb+1-rf+jg-Rf;_g=323;i=h;return _g|0}case 1989:{c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Rf=c[w>>2]|0;jg=c[x>>2]|0;rf=c[y>>2]|0;c[z>>2]=(c[r>>2]|0)+1-Rf+jg-rf;c[A>>2]=Gb+1-Rf+jg-rf;_g=324;i=h;return _g|0}}if((I|0)==595){c[b>>2]=4;rf=c[r>>2]|0;jg=b+4|0;c[jg>>2]=rf;c[jg+4>>2]=cg-rf;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];jg=c[w>>2]|0;Rf=c[x>>2]|0;Gb=c[y>>2]|0;c[z>>2]=rf+1-jg+Rf-Gb;c[A>>2]=cg+1-jg+Rf-Gb;_g=262;i=h;return _g|0}else if((I|0)==1131){Gb=c[r>>2]|0;c[b>>2]=Gb+6;Rf=Gb;c[b+4>>2]=ab+-6-Rf;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];Gb=c[w>>2]|0;jg=c[x>>2]|0;cg=c[y>>2]|0;c[z>>2]=Rf+1-Gb+jg-cg;c[A>>2]=ab+1-Gb+jg-cg;_g=291;i=h;return _g|0}else if((I|0)==1473){I=c[r>>2]|0;c[b>>2]=I+7;r=I;c[b+4>>2]=jf+-7-r;c[e>>2]=c[t>>2];c[v>>2]=c[u>>2];u=c[w>>2]|0;w=c[x>>2]|0;x=c[y>>2]|0;c[z>>2]=r+1-u+w-x;c[A>>2]=jf+1-u+w-x;_g=290;i=h;return _g|0}return 0}
function Li(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+8|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;if(e-g>>2>>>0>=b>>>0){$n(g|0,0,b<<2|0)|0;c[f>>2]=g+(b<<2);return}h=c[a>>2]|0;i=(g-h>>2)+b|0;if(i>>>0>1073741823)rn(a);g=e-h|0;if(g>>2>>>0<536870911){e=g>>1;g=e>>>0<i>>>0?i:e;e=c[f>>2]|0;i=e-h>>2;if(!g){j=0;k=0;l=i;m=e}else{n=g;o=e;p=i;q=8}}else{i=c[f>>2]|0;n=1073741823;o=i;p=i-h>>2;q=8}if((q|0)==8){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;$n(o|0,0,b<<2|0)|0;l=m-h|0;m=o+(0-(l>>2)<<2)|0;ho(m|0,h|0,l|0)|0;c[a>>2]=m;c[f>>2]=o+(b<<2);c[d>>2]=k+(j<<2);if(!h)return;An(h);return}function Mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;f=Ni(a,-1,20252)|0;g=c[a+16>>2]|0;h=((c[a+20>>2]|0)-g|0)/24|0;if(h>>>0<=b>>>0){c[e>>2]=b;c[e+4>>2]=h+-1;Di(a,20111,e);j=1;i=d;return j|0}e=g;g=h+~b|0;if((c[e+(g*24|0)>>2]|0)==2){j=f;i=d;return j|0}j=Ki(a,e+(g*24|0)+4|0,20252)|0|f;i=d;return j|0}function Ni(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+48|0;g=f+32|0;h=f+24|0;j=f+8|0;k=f;l=b+16|0;m=b+20|0;n=c[m>>2]|0;o=c[l>>2]|0;p=(n-o|0)/24|0;if((n|0)!=(o|0)){n=o;o=p+-1|0;if((a[n+(o*24|0)+20>>0]|0)==0?((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2|0)==(c[n+(o*24|0)+16>>2]|0):0){c[j>>2]=e;c[j+4>>2]=0;c[j+8>>2]=1;Di(b,20140,j);q=1}else q=0}else{c[k>>2]=0;c[k+4>>2]=p+-1;Di(b,20111,k);q=1}k=c[m>>2]|0;m=c[l>>2]|0;l=(k-m|0)/24|0;if((k|0)==(m|0)){c[h>>2]=0;c[h+4>>2]=l+-1;Di(b,20111,h);r=0;s=1;t=r|s;i=f;return t|0}h=m;m=l+-1|0;l=b+8|0;k=c[l>>2]|0;p=c[b+4>>2]|0;j=k-p>>2;if((c[h+(m*24|0)+16>>2]|0)>>>0>=j>>>0){r=0;s=(a[h+(m*24|0)+20>>0]^1)&255|q;t=r|s;i=f;return t|0}m=c[p+(j+-1<<2)>>2]|0;c[l>>2]=k+-4;if(!((m|0)!=0&((d|0)!=0&(m|0)!=(d|0)))){r=0;s=q;t=r|s;i=f;return t|0}switch(d|0){case -1:{u=28480;break}case -2:{u=28476;break}case -3:{u=28472;break}case -4:{u=28468;break}case -16:{u=28460;break}case -32:{u=28455;break}case -64:{u=28450;break}case 0:{u=28446;break}default:u=0}switch(m|0){case -1:{v=28480;break}case -2:{v=28476;break}case -3:{v=28472;break}case -4:{v=28468;break}case -16:{v=28460;break}case -32:{v=28455;break}case -64:{v=28450;break}case 0:{v=28446;break}default:v=0}c[g>>2]=e;c[g+4>>2]=u;c[g+8>>2]=v;Di(b,20204,g);r=1;s=q;t=r|s;i=f;return t|0}function Oi(a){a=a|0;c[a+28>>2]=0;return Ni(a,-1,20258)|0}function Pi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+32|0;e=d+8|0;f=d;g=c[a+16>>2]|0;h=((c[a+20>>2]|0)-g|0)/24|0;if(h>>>0<=b>>>0){c[f>>2]=b;c[f+4>>2]=h+-1;Di(a,20111,f);j=1;i=d;return j|0}f=g;g=h+~b|0;b=f+(g*24|0)|0;h=c[b>>2]|0;if((h|0)!=2?(k=c[f+(g*24|0)+4>>2]|0,(c[f+(g*24|0)+8>>2]|0)!=(k|0)):0)l=c[k>>2]|0;else l=-64;k=a+28|0;m=c[k>>2]|0;if((m|0)!=0&((l|0)!=0&(l|0)!=(m|0))){switch(l|0){case -1:{n=28480;break}case -2:{n=28476;break}case -3:{n=28472;break}case -4:{n=28468;break}case -16:{n=28460;break}case -32:{n=28455;break}case -64:{n=28450;break}case 0:{n=28446;break}default:n=0}switch(m|0){case -1:{o=28480;break}case -2:{o=28476;break}case -3:{o=28472;break}case -4:{o=28468;break}case -16:{o=28460;break}case -32:{o=28455;break}case -64:{o=28450;break}case 0:{o=28446;break}default:o=0}c[e>>2]=20258;c[e+4>>2]=n;c[e+8>>2]=o;Di(a,20204,e);p=1;q=c[b>>2]|0}else{p=0;q=h}c[k>>2]=l;if((q|0)==2){j=p;i=d;return j|0}j=Ki(a,f+(g*24|0)+4|0,20258)|0|p;i=d;return j|0}function Qi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=c[b+20>>2]|0;g=c[b+16>>2]|0;h=(f-g|0)/24|0;if((f|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h+-1;Di(b,20111,e);j=1;i=d;return j|0}e=g;g=h+-1|0;a[e+(g*24|0)+20>>0]=1;h=c[e+(g*24|0)+16>>2]|0;g=b+4|0;e=b+8|0;b=c[e>>2]|0;f=c[g>>2]|0;k=b-f>>2;l=b;if(h>>>0>k>>>0){Li(g,h-k|0);j=0;i=d;return j|0}if(h>>>0>=k>>>0){j=0;i=d;return j|0}k=f+(h<<2)|0;if((l|0)==(k|0)){j=0;i=d;return j|0}c[e>>2]=l+(~((l+-4-k|0)>>>2)<<2);j=0;i=d;return j|0}function Ri(a,b,c){a=a|0;b=b|0;c=c|0;return Si(a,b,c,20267)|0}function Si(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=i;i=i+48|0;h=g+32|0;j=g+24|0;k=g+8|0;l=g;m=g+44|0;n=d+4|0;o=(c[n>>2]|0)-(c[d>>2]|0)>>2;p=b+16|0;q=b+20|0;r=c[q>>2]|0;s=c[p>>2]|0;t=(r-s|0)/24|0;if((r|0)!=(s|0)){r=s;s=t+-1|0;u=((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2)-(c[r+(s*24|0)+16>>2]|0)|0;if(u>>>0<o>>>0?(a[r+(s*24|0)+20>>0]|0)==0:0){c[k>>2]=f;c[k+4>>2]=u;c[k+8>>2]=o;Di(b,20140,k);v=1}else v=0}else{c[l>>2]=0;c[l+4>>2]=t+-1;Di(b,20111,l);v=1}l=c[d>>2]|0;t=(c[n>>2]|0)-l>>2;if(!t){w=0;x=v}else{k=b+4|0;o=b+8|0;u=l;l=t;t=0;s=v;while(1){v=u;r=l-t|0;y=c[q>>2]|0;z=c[p>>2]|0;A=(y-z|0)/24|0;do if((y|0)!=(z|0)){B=z;C=A+-1|0;D=c[k>>2]|0;E=(c[o>>2]|0)-D>>2;if((r+-1+(c[B+(C*24|0)+16>>2]|0)|0)>>>0<E>>>0){F=0;G=v;H=u;I=c[D+(E-r<<2)>>2]|0;break}else{F=(a[B+(C*24|0)+20>>0]^1)&255;G=v;H=u;I=0;break}}else{c[j>>2]=0;c[j+4>>2]=A+-1;Di(b,20111,j);C=c[d>>2]|0;F=1;G=C;H=C;I=0}while(0);A=F|s;v=c[G+(t<<2)>>2]|0;if((I|0)!=0&((v|0)!=(I|0)&(v|0)!=0)){switch(v|0){case -1:{J=28480;break}case -2:{J=28476;break}case -3:{J=28472;break}case -4:{J=28468;break}case -16:{J=28460;break}case -32:{J=28455;break}case -64:{J=28450;break}case 0:{J=28446;break}default:J=0}switch(I|0){case -1:{K=28480;break}case -2:{K=28476;break}case -3:{K=28472;break}case -4:{K=28468;break}case -16:{K=28460;break}case -32:{K=28455;break}case -64:{K=28450;break}case 0:{K=28446;break}default:K=0}c[h>>2]=f;c[h+4>>2]=J;c[h+8>>2]=K;Di(b,20204,h);L=1;M=c[d>>2]|0}else{L=0;M=H}v=A|L;t=t+1|0;A=(c[n>>2]|0)-M>>2;if(A>>>0<=t>>>0){w=A;x=v;break}else{u=M;l=A;s=v}}}s=Ti(b,w)|0|x;x=c[e>>2]|0;w=c[e+4>>2]|0;if((x|0)==(w|0)){i=g;return s|0}e=b+8|0;l=b+12|0;M=b+4|0;b=x;do{x=c[b>>2]|0;c[m>>2]=x;do if((x|0)!=-64){u=c[e>>2]|0;if((u|0)==(c[l>>2]|0)){de(M,m);break}else{c[u>>2]=x;c[e>>2]=u+4;break}}while(0);b=b+4|0}while((b|0)!=(w|0));i=g;return s|0}function Ti(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;f=e;g=c[b+20>>2]|0;h=c[b+16>>2]|0;j=(g-h|0)/24|0;if((g|0)==(h|0)){c[f>>2]=0;c[f+4>>2]=j+-1;Di(b,20111,f);k=1;i=e;return k|0}f=h;h=j+-1|0;j=c[f+(h*24|0)+16>>2]|0;g=b+4|0;l=b+8|0;b=c[l>>2]|0;m=c[g>>2]|0;n=b-m>>2;o=b;if((j+d|0)>>>0<=n>>>0){if(!d){k=0;i=e;return k|0}b=o+(0-d<<2)|0;d=c[l>>2]|0;if((d|0)==(b|0)){k=0;i=e;return k|0}c[l>>2]=d+(~((d+-4-b|0)>>>2)<<2);k=0;i=e;return k|0}if(!(a[f+(h*24|0)+20>>0]|0)){k=1;i=e;return k|0}if(j>>>0>n>>>0){Li(g,j-n|0);k=0;i=e;return k|0}if(j>>>0>=n>>>0){k=0;i=e;return k|0}n=m+(j<<2)|0;if((o|0)==(n|0)){k=0;i=e;return k|0}c[l>>2]=o+(~((o+-4-n|0)>>>2)<<2);k=0;i=e;return k|0}function Ui(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Ni(a,-1,20272)|0;return Si(a,b,c,20272)|0|d|0}function Vi(a,b){a=a|0;b=b|0;return Hi(a,b)|0}function Wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;c[e>>2]=b;if((b|0)==-64){i=d;return 0}f=a+8|0;g=c[f>>2]|0;if((g|0)==(c[a+12>>2]|0)){de(a+4|0,e);i=d;return 0}else{c[g>>2]=b;c[f>>2]=g+4;i=d;return 0}return 0}function Xi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=Ni(a,c[1536+(b*20|0)+8>>2]|0,c[1536+(b*20|0)>>2]|0)|0;g=c[1536+(b*20|0)+4>>2]|0;c[e>>2]=g;if((g|0)==-64){i=d;return f|0}b=a+8|0;h=c[b>>2]|0;if((h|0)==(c[a+12>>2]|0)){de(a+4|0,e);i=d;return f|0}else{c[h>>2]=g;c[b>>2]=h+4;i=d;return f|0}return 0}function Yi(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b;c[d>>2]=-1;e=a+8|0;f=c[e>>2]|0;if((f|0)==(c[a+12>>2]|0)){de(a+4|0,d);i=b;return 0}else{c[f>>2]=-1;c[e>>2]=f+4;i=b;return 0}return 0}function Zi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+32|0;e=d+24|0;f=d+8|0;g=d;h=b+16|0;j=b+20|0;k=c[j>>2]|0;l=c[h>>2]|0;m=(k-l|0)/24|0;if((k|0)!=(l|0)){k=l;l=m+-1|0;if((a[k+(l*24|0)+20>>0]|0)==0?((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2|0)==(c[k+(l*24|0)+16>>2]|0):0){c[f>>2]=20286;c[f+4>>2]=0;c[f+8>>2]=1;Di(b,20140,f);n=1}else n=0}else{c[g>>2]=0;c[g+4>>2]=m+-1;Di(b,20111,g);n=1}g=c[j>>2]|0;j=c[h>>2]|0;h=(g-j|0)/24|0;if((g|0)==(j|0)){c[e>>2]=0;c[e+4>>2]=h+-1;Di(b,20111,e);o=1;p=o|n;i=d;return p|0}e=j;j=h+-1|0;h=b+8|0;g=c[h>>2]|0;if((c[e+(j*24|0)+16>>2]|0)>>>0<g-(c[b+4>>2]|0)>>2>>>0){c[h>>2]=g+-4;o=0;p=o|n;i=d;return p|0}else{o=(a[e+(j*24|0)+20>>0]^1)&255;p=o|n;i=d;return p|0}return 0}function _i(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+32|0;e=d+16|0;f=d+8|0;g=d;h=b+16|0;j=b+20|0;k=c[j>>2]|0;l=c[h>>2]|0;m=(k-l|0)/24|0;if((k|0)==(l|0)){c[g>>2]=0;c[g+4>>2]=m+-1;Di(b,20111,g);n=1;i=d;return n|0}g=l;l=m+-1|0;m=g+(l*24|0)|0;k=(c[m>>2]|0)!=3&1;o=g+(l*24|0)+4|0;p=Ki(b,o,20291)|0;q=Ti(b,(c[g+(l*24|0)+8>>2]|0)-(c[o>>2]|0)>>2)|0;o=c[j>>2]|0;j=c[h>>2]|0;h=(o-j|0)/24|0;if((o|0)!=(j|0)){o=b+4|0;r=b+8|0;s=(c[r>>2]|0)-(c[o>>2]|0)>>2;t=c[j+((h+-1|0)*24|0)+16>>2]|0;if((s|0)==(t|0)){u=0;v=r;w=r;x=o;y=o}else{c[e>>2]=20291;c[e+4>>2]=s;c[e+8>>2]=t;Di(b,20306,e);u=1;v=r;w=r;x=o;y=o}}else{c[f>>2]=0;c[f+4>>2]=h+-1;Di(b,20111,f);f=b+4|0;h=b+8|0;u=1;v=h;w=h;x=f;y=f}f=k|p|q|u;u=c[g+(l*24|0)+16>>2]|0;q=c[w>>2]|0;w=c[x>>2]|0;x=q-w>>2;p=w;w=q;if(u>>>0<=x>>>0){if(u>>>0<x>>>0?(q=p+(u<<2)|0,(w|0)!=(q|0)):0)c[v>>2]=w+(~((w+-4-q|0)>>>2)<<2)}else Li(y,u-x|0);c[m>>2]=4;a[g+(l*24|0)+20>>0]=0;n=f;i=d;return n|0}function $i(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;d=b+8|0;e=b;f=c[a+20>>2]|0;g=c[a+16>>2]|0;h=(f-g|0)/24|0;if((f|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h+-1;Di(a,20111,e);j=1;i=b;return j|0}e=g;g=h+-1|0;h=e+(g*24|0)|0;f=c[h>>2]|0;if((f|0)==3)if((c[e+(g*24|0)+8>>2]|0)==(c[e+(g*24|0)+4>>2]|0)){k=3;l=0}else{Di(a,20351,d);k=c[h>>2]|0;l=1}else{k=f;l=0}f=c[5376+(k<<2)>>2]|0;j=aj(a,h,f,f)|0|l;i=b;return j|0}function aj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+32|0;g=f+8|0;h=f;j=f+20|0;k=b+4|0;l=Ki(a,k,d)|0;d=b+8|0;m=Ti(a,(c[d>>2]|0)-(c[k>>2]|0)>>2)|0|l;l=a+20|0;n=c[l>>2]|0;o=c[a+16>>2]|0;p=(n-o|0)/24|0;if((n|0)!=(o|0)){n=a+4|0;q=a+8|0;r=(c[q>>2]|0)-(c[n>>2]|0)>>2;s=c[o+((p+-1|0)*24|0)+16>>2]|0;if((r|0)==(s|0)){t=0;u=q;v=q;w=n;x=n}else{c[g>>2]=e;c[g+4>>2]=r;c[g+8>>2]=s;Di(a,20306,g);t=1;u=q;v=q;w=n;x=n}}else{c[h>>2]=0;c[h+4>>2]=p+-1;Di(a,20111,h);h=a+4|0;p=a+8|0;t=1;u=p;v=p;w=h;x=h}h=m|t;t=c[b+16>>2]|0;b=c[v>>2]|0;v=c[w>>2]|0;w=b-v>>2;m=v;v=b;if(t>>>0<=w>>>0){if(t>>>0<w>>>0?(b=m+(t<<2)|0,(v|0)!=(b|0)):0)c[u>>2]=v+(~((v+-4-b|0)>>>2)<<2)}else Li(x,t-w|0);w=c[k>>2]|0;k=c[d>>2]|0;if((w|0)!=(k|0)){d=a+12|0;a=w;do{w=c[a>>2]|0;c[j>>2]=w;do if((w|0)!=-64){t=c[u>>2]|0;if((t|0)==(c[d>>2]|0)){de(x,j);break}else{c[t>>2]=w;c[u>>2]=t+4;break}}while(0);a=a+4|0}while((a|0)!=(k|0))}k=c[l>>2]|0;a=k+-24|0;u=k;while(1){k=u+-24|0;c[l>>2]=k;j=c[u+-20>>2]|0;x=j;if(!j)y=k;else{k=u+-16|0;d=c[k>>2]|0;if((d|0)!=(j|0))c[k>>2]=d+(~((d+-4-x|0)>>>2)<<2);An(j);y=c[l>>2]|0}if((y|0)==(a|0))break;else u=y}i=f;return h|0}function bj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;d=b;e=Ni(a,-1,18751)|0;c[d>>2]=-1;if(-1==-64){i=b;return e|0}f=a+8|0;g=c[f>>2]|0;if((g|0)==(c[a+12>>2]|0)){de(a+4|0,d);i=b;return e|0}else{c[g>>2]=-1;c[f>>2]=g+4;i=b;return e|0}return 0}function cj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e+4|0;g=e;h=Ni(b,-1,20415)|0;c[f>>2]=3;j=(c[b+8>>2]|0)-(c[b+4>>2]|0)>>2;c[g>>2]=j;k=b+20|0;l=c[k>>2]|0;if(l>>>0<(c[b+24>>2]|0)>>>0){c[l>>2]=3;Ci(l+4|0,d);c[l+16>>2]=j;a[l+20>>0]=0;c[k>>2]=(c[k>>2]|0)+24;i=e;return h|0}else{Fi(b+16|0,f,d,g);i=e;return h|0}return 0}function dj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;c[e>>2]=b;if((b|0)==-64){i=d;return 0}f=a+8|0;g=c[f>>2]|0;if((g|0)==(c[a+12>>2]|0)){de(a+4|0,e);i=d;return 0}else{c[g>>2]=b;c[f>>2]=g+4;i=d;return 0}return 0}function ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;c[e>>2]=b;if((b|0)==-64){i=d;return 0}f=a+8|0;g=c[f>>2]|0;if((g|0)==(c[a+12>>2]|0)){de(a+4|0,e);i=d;return 0}else{c[g>>2]=b;c[f>>2]=g+4;i=d;return 0}return 0}function fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=Ni(a,c[1536+(b*20|0)+8>>2]|0,c[1536+(b*20|0)>>2]|0)|0;g=c[1536+(b*20|0)+4>>2]|0;c[e>>2]=g;if((g|0)==-64){i=d;return f|0}b=a+8|0;h=c[b>>2]|0;if((h|0)==(c[a+12>>2]|0)){de(a+4|0,e);i=d;return f|0}else{c[h>>2]=g;c[b>>2]=h+4;i=d;return f|0}return 0}function gj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=2;h=(c[b+8>>2]|0)-(c[b+4>>2]|0)>>2;c[g>>2]=h;j=b+20|0;k=c[j>>2]|0;if(k>>>0<(c[b+24>>2]|0)>>>0){c[k>>2]=2;Ci(k+4|0,d);c[k+16>>2]=h;a[k+20>>0]=0;c[j>>2]=(c[j>>2]|0)+24;i=e;return 0}else{Fi(b+16|0,f,d,g);i=e;return 0}return 0}function hj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+16|0;e=d+8|0;f=d;g=b+16|0;h=b+20|0;j=c[h>>2]|0;k=c[g>>2]|0;l=((j-k|0)/24|0)+-1|0;if((j|0)==(k|0)){c[f>>2]=l;c[f+4>>2]=l;Di(b,20111,f);m=1;i=d;return m|0}f=k;k=f+4|0;l=Ki(b,k,20434)|0;j=Ti(b,(c[f+8>>2]|0)-(c[k>>2]|0)>>2)|0|l;l=c[h>>2]|0;h=c[g>>2]|0;g=(l-h|0)/24|0;if((l|0)==(h|0)){c[e>>2]=0;c[e+4>>2]=g+-1;Di(b,20111,e);m=1;i=d;return m|0}e=h;h=g+-1|0;a[e+(h*24|0)+20>>0]=1;g=c[e+(h*24|0)+16>>2]|0;h=b+4|0;e=b+8|0;b=c[e>>2]|0;l=c[h>>2]|0;k=b-l>>2;f=b;if(g>>>0>k>>>0){Li(h,g-k|0);m=j;i=d;return m|0}if(g>>>0>=k>>>0){m=j;i=d;return m|0}k=l+(g<<2)|0;if((f|0)==(k|0)){m=j;i=d;return m|0}c[e>>2]=f+(~((f+-4-k|0)>>>2)<<2);m=j;i=d;return m|0}function ij(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+64|0;e=d+40|0;f=d+32|0;g=d+24|0;h=d+8|0;j=d;k=d+52|0;l=Ni(b,-1,20441)|0;m=b+16|0;n=b+20|0;o=c[n>>2]|0;p=c[m>>2]|0;q=(o-p|0)/24|0;if((o|0)!=(p|0)){o=p;p=q+-1|0;r=((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2)-(c[o+(p*24|0)+16>>2]|0)|0;if(r>>>0<2?(a[o+(p*24|0)+20>>0]|0)==0:0){c[h>>2]=20441;c[h+4>>2]=r;c[h+8>>2]=2;Di(b,20140,h);s=1}else s=0}else{c[j>>2]=0;c[j+4>>2]=q+-1;Di(b,20111,j);s=1}j=c[n>>2]|0;q=c[m>>2]|0;h=(j-q|0)/24|0;do if((j|0)!=(q|0)){r=q;p=h+-1|0;o=b+8|0;t=c[o>>2]|0;u=c[b+4>>2]|0;v=t-u>>2;if((c[r+(p*24|0)+16>>2]|0)>>>0<v>>>0){w=c[u+(v+-1<<2)>>2]|0;c[o>>2]=t+-4;x=0;y=q;z=j;A=w;break}else{x=(a[r+(p*24|0)+20>>0]^1)&255;y=q;z=j;A=0;break}}else{c[g>>2]=0;c[g+4>>2]=h+-1;Di(b,20111,g);x=1;y=c[m>>2]|0;z=c[n>>2]|0;A=0}while(0);n=x|s;s=(z-y|0)/24|0;do if((z|0)!=(y|0)){m=y;g=s+-1|0;h=b+8|0;j=c[h>>2]|0;q=c[b+4>>2]|0;p=j-q>>2;if((c[m+(g*24|0)+16>>2]|0)>>>0>=p>>>0){B=0;C=(a[m+(g*24|0)+20>>0]^1)&255|n;break}g=c[q+(p+-1<<2)>>2]|0;c[h>>2]=j+-4;if((g|0)!=0&((A|0)!=0&(A|0)!=(g|0))){switch(A|0){case -1:{D=28480;break}case -2:{D=28476;break}case -3:{D=28472;break}case -4:{D=28468;break}case -16:{D=28460;break}case -32:{D=28455;break}case -64:{D=28450;break}case 0:{D=28446;break}default:D=0}switch(g|0){case -1:{E=28480;break}case -2:{E=28476;break}case -3:{E=28472;break}case -4:{E=28468;break}case -16:{E=28460;break}case -32:{E=28455;break}case -64:{E=28450;break}case 0:{E=28446;break}default:E=0}c[e>>2]=20441;c[e+4>>2]=D;c[e+8>>2]=E;Di(b,20204,e);B=1;C=n}else{B=0;C=n}}else{c[f>>2]=0;c[f+4>>2]=s+-1;Di(b,20111,f);B=0;C=x|1}while(0);x=C|l|B;c[k>>2]=A;if((A|0)==-64){i=d;return x|0}B=b+8|0;l=c[B>>2]|0;if((l|0)==(c[b+12>>2]|0)){de(b+4|0,k);i=d;return x|0}else{c[l>>2]=A;c[B>>2]=l+4;i=d;return x|0}return 0}function jj(a,b){a=a|0;b=b|0;return Ni(a,b,20448)|0}function kj(a,b){a=a|0;b=b|0;return Ni(a,b,20459)|0}function lj(a,b){a=a|0;b=b|0;return Hi(a,b)|0}function mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+48|0;f=e+32|0;g=e+24|0;h=e+8|0;j=e;k=b+16|0;l=b+20|0;m=c[l>>2]|0;n=c[k>>2]|0;o=(m-n|0)/24|0;if((m|0)!=(n|0)){m=n;n=o+-1|0;if((a[m+(n*24|0)+20>>0]|0)==0?((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2|0)==(c[m+(n*24|0)+16>>2]|0):0){c[h>>2]=20469;c[h+4>>2]=0;c[h+8>>2]=1;Di(b,20140,h);p=1}else p=0}else{c[j>>2]=0;c[j+4>>2]=o+-1;Di(b,20111,j);p=1}j=c[l>>2]|0;l=c[k>>2]|0;k=(j-l|0)/24|0;do if((j|0)==(l|0)){c[g>>2]=0;c[g+4>>2]=k+-1;Di(b,20111,g);q=1}else{o=l;h=k+-1|0;n=c[b+4>>2]|0;m=(c[b+8>>2]|0)-n>>2;if((c[o+(h*24|0)+16>>2]|0)>>>0>=m>>>0){q=(a[o+(h*24|0)+20>>0]^1)&255;break}h=c[n+(m+-1<<2)>>2]|0;if(!((h|0)!=0&((d|0)!=0&(h|0)!=(d|0)))){r=0;s=p;t=r|s;i=e;return t|0}switch(d|0){case -1:{u=28480;break}case -2:{u=28476;break}case -3:{u=28472;break}case -4:{u=28468;break}case -16:{u=28460;break}case -32:{u=28455;break}case -64:{u=28450;break}case 0:{u=28446;break}default:u=0}switch(h|0){case -1:{v=28480;break}case -2:{v=28476;break}case -3:{v=28472;break}case -4:{v=28468;break}case -16:{v=28460;break}case -32:{v=28455;break}case -64:{v=28450;break}case 0:{v=28446;break}default:v=0}c[f>>2]=20469;c[f+4>>2]=u;c[f+8>>2]=v;Di(b,20204,f);r=1;s=p;t=r|s;i=e;return t|0}while(0);r=0;s=q|p;t=r|s;i=e;return t|0}function nj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=Ni(a,c[1536+(b*20|0)+8>>2]|0,c[1536+(b*20|0)>>2]|0)|0;g=c[1536+(b*20|0)+4>>2]|0;c[e>>2]=g;if((g|0)==-64){i=d;return f|0}b=a+8|0;h=c[b>>2]|0;if((h|0)==(c[a+12>>2]|0)){de(a+4|0,e);i=d;return f|0}else{c[h>>2]=g;c[b>>2]=h+4;i=d;return f|0}return 0}function oj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=c[b+20>>2]|0;g=c[b+16>>2]|0;h=(f-g|0)/24|0;if((f|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h+-1;Di(b,20111,e);j=1;i=d;return j|0}e=g;g=h+-1|0;a[e+(g*24|0)+20>>0]=1;h=c[e+(g*24|0)+16>>2]|0;g=b+4|0;e=b+8|0;b=c[e>>2]|0;f=c[g>>2]|0;k=b-f>>2;l=b;if(h>>>0>k>>>0){Li(g,h-k|0);j=0;i=d;return j|0}if(h>>>0>=k>>>0){j=0;i=d;return j|0}k=f+(h<<2)|0;if((l|0)==(k|0)){j=0;i=d;return j|0}c[e>>2]=l+(~((l+-4-k|0)>>>2)<<2);j=0;i=d;return j|0}function pj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b;e=c[a+20>>2]|0;f=c[a+16>>2]|0;g=(e-f|0)/24|0;if((e|0)==(f|0)){c[d>>2]=0;c[d+4>>2]=g+-1;Di(a,20111,d);h=1;i=b;return h|0}else{d=f+((g+-1|0)*24|0)|0;g=(c[d>>2]|0)!=0&1;h=g|(aj(a,d,20479,20395)|0);i=b;return h|0}return 0}function qj(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(a>>>0<b>>>0?(f=d[a>>0]|0,(f&128|0)==0):0){c[e>>2]=f&127;g=1;return g|0}f=a+1|0;if(f>>>0<b>>>0?(h=d[f>>0]|0,(h&128|0)==0):0){c[e>>2]=(d[a>>0]|0)&127|h<<7&16256;g=2;return g|0}h=a+2|0;if(h>>>0<b>>>0?(i=d[h>>0]|0,(i&128|0)==0):0){c[e>>2]=(d[a>>0]|0)&127|i<<14&2080768|(d[f>>0]|0)<<7&16256;g=3;return g|0}i=a+3|0;if(i>>>0<b>>>0?(j=d[i>>0]|0,(j&128|0)==0):0){c[e>>2]=(d[h>>0]|0)<<14&2080768|j<<21&266338304|(d[a>>0]|0)&127|(d[f>>0]|0)<<7&16256;g=4;return g|0}j=a+4|0;if(j>>>0<b>>>0?(b=d[j>>0]|0,(b&128|0)==0):0){if(b&240|0){g=0;return g|0}c[e>>2]=(d[i>>0]|0)<<21&266338304|b<<28|(d[h>>0]|0)<<14&2080768|(d[a>>0]|0)&127|(d[f>>0]|0)<<7&16256;g=5;return g|0}c[e>>2]=0;g=0;return g|0}function rj(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(a>>>0<b>>>0?(f=d[a>>0]|0,(f&128|0)==0):0){c[e>>2]=f<<25>>25;g=1;return g|0}f=a+1|0;if(f>>>0<b>>>0?(h=d[f>>0]|0,(h&128|0)==0):0){c[e>>2]=((d[a>>0]|0)&127|h<<7)<<18>>18;g=2;return g|0}h=a+2|0;if(h>>>0<b>>>0?(i=d[h>>0]|0,(i&128|0)==0):0){c[e>>2]=((d[a>>0]|0)&127|i<<14|(d[f>>0]|0)<<7&16256)<<11>>11;g=3;return g|0}i=a+3|0;if(i>>>0<b>>>0?(j=d[i>>0]|0,(j&128|0)==0):0){c[e>>2]=((d[h>>0]|0)<<14&2080768|j<<21|(d[a>>0]|0)&127|(d[f>>0]|0)<<7&16256)<<4>>4;g=4;return g|0}j=a+4|0;if(j>>>0>=b>>>0){g=0;return g|0}b=d[j>>0]|0;if(b&128|0){g=0;return g|0}j=(b&8|0)!=0;k=b&240;if(j&(k|0)!=112){g=0;return g|0}if((k|0)!=0&(j^1)){g=0;return g|0}c[e>>2]=(d[i>>0]|0)<<21&266338304|b<<28|(d[h>>0]|0)<<14&2080768|(d[a>>0]|0)&127|(d[f>>0]|0)<<7&16256;g=5;return g|0}function sj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;g=i;i=i+336|0;h=g+40|0;j=g+32|0;k=g+24|0;l=g+16|0;m=g+8|0;p=g;q=4;r=an(40)|0;c[r>>2]=0;s=g+304|0;t=g+48|0;n=0;ra(24,s|0,c[f>>2]|0,e|0);u=n;n=0;if((u|0)!=0&(o|0)!=0){v=fo(c[u>>2]|0,r|0,q|0)|0;if(!v)Na(u|0,o|0);C=o}else v=-1;if((v|0)!=1){v=t+4|0;u=t+176|0;w=t+204|0;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;c[u+20>>2]=0;x=t+208|0;y=x+48|0;do{c[x>>2]=0;x=x+4|0}while((x|0)<(y|0));x=t+8|0;c[x>>2]=a;c[t>>2]=b;c[t+12>>2]=b;b=t+16|0;c[b>>2]=0;c[v>>2]=c[f>>2]|0?s:e;c[t+200>>2]=f;c[w>>2]=12;r=bo(t+20|0,1,r|0,q|0)|0;q=C;n=0;w=n;n=0;if((w|0)!=0&(o|0)!=0){z=fo(c[w>>2]|0,r|0,q|0)|0;if(!z)Na(w|0,o|0);C=o}else z=-1;if((z|0)==1){A=u;B=v;D=t;E=t;F=C;G=b;H=x}else{A=u;B=v;D=t;E=t;F=0;G=b;H=x}}else{A=0;B=0;D=0;E=0;F=C;G=0;H=0}while(1){if((F|0)!=1){x=c[B>>2]|0;n=0;la(c[(c[x>>2]|0)+12>>2]|0,x|0,H|0);x=n;n=0;if((x|0)!=0&(o|0)!=0){I=fo(c[x>>2]|0,r|0,q|0)|0;if(!I)Na(x|0,o|0);C=o}else I=-1;if((I|0)==1){J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}x=c[G>>2]|0;b=x+4|0;v=c[D>>2]|0;if(b>>>0>v>>>0){n=0;c[p>>2]=20495;ra(25,t|0,20501,p|0);u=n;n=0;if((u|0)!=0&(o|0)!=0){P=fo(c[u>>2]|0,r|0,q|0)|0;if(!P)Na(u|0,o|0);C=o}else P=-1;J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}u=t+8|0;z=(c[u>>2]|0)+x|0;x=d[z>>0]|d[z+1>>0]<<8|d[z+2>>0]<<16|d[z+3>>0]<<24;c[G>>2]=b;if((x|0)!=1836278016){n=0;ra(25,t|0,20552,m|0);x=n;n=0;if((x|0)!=0&(o|0)!=0){Q=fo(c[x>>2]|0,r|0,q|0)|0;if(!Q)Na(x|0,o|0);C=o}else Q=-1;J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}x=b+4|0;if(x>>>0>v>>>0){n=0;c[l>>2]=20568;ra(25,t|0,20501,l|0);v=n;n=0;if((v|0)!=0&(o|0)!=0){R=fo(c[v>>2]|0,r|0,q|0)|0;if(!R)Na(v|0,o|0);C=o}else R=-1;J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}v=(c[u>>2]|0)+b|0;b=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[G>>2]=x;if((b|0)!=1){n=0;c[k>>2]=b;c[k+4>>2]=1;ra(25,t|0,20576,k|0);x=n;n=0;if((x|0)!=0&(o|0)!=0){S=fo(c[x>>2]|0,r|0,q|0)|0;if(!S)Na(x|0,o|0);C=o}else S=-1;J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}x=c[B>>2]|0;n=0;v=za(c[(c[x>>2]|0)+16>>2]|0,x|0,b|0)|0;b=n;n=0;if((b|0)!=0&(o|0)!=0){T=fo(c[b>>2]|0,r|0,q|0)|0;if(!T)Na(b|0,o|0);C=o}else T=-1;if((T|0)==1){J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}if(v|0){n=0;ra(25,t|0,20618,j|0);v=n;n=0;if((v|0)!=0&(o|0)!=0){U=fo(c[v>>2]|0,r|0,q|0)|0;if(!U)Na(v|0,o|0);C=o}else U=-1;J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}n=0;ja(41,t|0);v=n;n=0;if((v|0)!=0&(o|0)!=0){V=fo(c[v>>2]|0,r|0,q|0)|0;if(!V)Na(v|0,o|0);C=o}else V=-1;if((V|0)==1){J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}v=c[B>>2]|0;n=0;b=pa(c[(c[v>>2]|0)+20>>2]|0,v|0)|0;v=n;n=0;if((v|0)!=0&(o|0)!=0){W=fo(c[v>>2]|0,r|0,q|0)|0;if(!W)Na(v|0,o|0);C=o}else W=-1;if((W|0)==1){J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}if(!b)X=0;else{n=0;ra(25,t|0,28087,h|0);b=n;n=0;if((b|0)!=0&(o|0)!=0){Y=fo(c[b>>2]|0,r|0,q|0)|0;if(!Y)Na(b|0,o|0);C=o}else Y=-1;J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}}else X=1;b=c[t+188>>2]|0;v=b;if(b|0){x=t+192|0;u=c[x>>2]|0;if((u|0)!=(b|0))c[x>>2]=u+(~((u+-4-v|0)>>>2)<<2);n=0;ja(42,b|0);b=n;n=0;if((b|0)!=0&(o|0)!=0){Z=fo(c[b>>2]|0,r|0,q|0)|0;if(!Z)Na(b|0,o|0);C=o}else Z=-1;if((Z|0)==1){J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O;continue}}b=c[A>>2]|0;if(!b){_=31;break}v=t+180|0;u=c[v>>2]|0;if((u|0)!=(b|0))c[v>>2]=u+(~((u+-4-b|0)>>>2)<<2);n=0;ja(42,b|0);b=n;n=0;if((b|0)!=0&(o|0)!=0){$=fo(c[b>>2]|0,r|0,q|0)|0;if(!$)Na(b|0,o|0);C=o}else $=-1;if(($|0)==1){J=H;K=G;L=E;M=D;N=B;O=A;F=C;H=J;G=K;E=L;D=M;B=N;A=O}else break}if((_|0)==31){bn(r|0);i=g;return X|0}bn(r|0);i=g;return X|0}function tj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+176|0;f=e;g=e+24|0;h=e+8|0;j=e+40|0;c[g>>2]=d;c[h>>2]=c[g>>2];d=(em(j,128,b,g)|0)+1|0;if(d>>>0>128){g=i;i=i+((1*d|0)+15&-16)|0;em(g,d,b,h)|0;k=g}else k=j;j=c[a+4>>2]|0;if(ub[c[(c[j>>2]|0)+8>>2]&255](j,k)|0){l=a+20|0;Na(l|0,1)}j=c[1510]|0;c[f>>2]=c[a+16>>2];c[f+4>>2]=k;Mm(j,20529,f)|0;l=a+20|0;Na(l|0,1)}function uj(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,lb=0,mb=0,nb=0,qb=0,rb=0,tb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0,he=0,ie=0,je=0,ke=0,le=0,me=0,ne=0,oe=0,pe=0,qe=0,re=0,se=0,te=0,ue=0,ve=0,we=0,xe=0,ye=0,ze=0,Ae=0,Be=0,Ce=0,De=0,Ee=0,Fe=0,Ge=0,He=0,Ie=0,Je=0,Ke=0,Le=0,Me=0,Ne=0,Oe=0,Pe=0,Qe=0,Re=0,Se=0,Te=0,Ue=0,Ve=0,We=0,Xe=0,Ye=0,Ze=0,_e=0,$e=0,af=0,bf=0,cf=0,df=0,ef=0,ff=0,gf=0,hf=0,jf=0,kf=0,lf=0,mf=0,nf=0,of=0,pf=0,qf=0,rf=0,sf=0,tf=0,uf=0,vf=0,wf=0,xf=0,yf=0,zf=0,Af=0,Bf=0,Cf=0,Df=0,Ef=0,Ff=0,Gf=0,Hf=0,If=0,Jf=0,Kf=0,Lf=0,Mf=0,Nf=0,Of=0,Pf=0,Qf=0,Rf=0,Sf=0,Tf=0,Uf=0,Vf=0,Wf=0,Xf=0,Yf=0,Zf=0,_f=0,$f=0,ag=0,bg=0,cg=0,dg=0,eg=0,fg=0,gg=0,hg=0,ig=0,jg=0,kg=0,lg=0,mg=0,ng=0,og=0,pg=0,qg=0,rg=0,sg=0,tg=0,ug=0,vg=0,wg=0,xg=0,yg=0,zg=0,Ag=0,Bg=0,Cg=0,Dg=0,Eg=0,Fg=0,Gg=0,Hg=0,Ig=0,Jg=0,Kg=0,Lg=0,Mg=0,Ng=0,Og=0,Pg=0,Qg=0,Rg=0,Sg=0,Tg=0,Ug=0,Vg=0,Wg=0,Xg=0,Yg=0,Zg=0,_g=0;e=i;i=i+2544|0;f=e+2512|0;g=e+2488|0;h=e+2480|0;j=e+2472|0;k=e+2464|0;l=e+2456|0;m=e+2448|0;n=e+2440|0;o=e+2432|0;p=e+2424|0;q=e+2416|0;r=e+2408|0;s=e+2400|0;t=e+2392|0;u=e+2384|0;v=e+2376|0;w=e+2368|0;x=e+2360|0;y=e+2352|0;z=e+2344|0;A=e+2336|0;B=e+2328|0;C=e+2320|0;D=e+2312|0;E=e+2304|0;F=e+2296|0;G=e+2288|0;H=e+2280|0;I=e+2272|0;J=e+2264|0;K=e+2256|0;L=e+2248|0;M=e+2240|0;N=e+2232|0;O=e+2224|0;P=e+2216|0;Q=e+2208|0;R=e+2200|0;S=e+2192|0;T=e+2184|0;U=e+2176|0;V=e+2168|0;W=e+2160|0;X=e+2152|0;Y=e+2144|0;Z=e+2136|0;_=e+2128|0;$=e+2120|0;aa=e+2112|0;ba=e+2104|0;ca=e+2096|0;da=e+2088|0;ea=e+2080|0;fa=e+2072|0;ga=e+2064|0;ha=e+2056|0;ia=e+2048|0;ja=e+2040|0;ka=e+2032|0;la=e+2024|0;ma=e+2016|0;na=e+2008|0;oa=e+2e3|0;pa=e+1992|0;qa=e+1984|0;ra=e+1976|0;sa=e+1968|0;ta=e+1960|0;ua=e+1952|0;va=e+1944|0;wa=e+1936|0;xa=e+1928|0;ya=e+1920|0;za=e+1912|0;Aa=e+1904|0;Ba=e+1896|0;Ca=e+1888|0;Da=e+1880|0;Ea=e+1872|0;Fa=e+1864|0;Ga=e+1856|0;Ha=e+1848|0;Ia=e+1840|0;Ja=e+1832|0;Ka=e+1824|0;La=e+1816|0;Ma=e+1808|0;Na=e+1800|0;Oa=e+1792|0;Pa=e+1784|0;Qa=e+1776|0;Ra=e+1768|0;Sa=e+1760|0;Ta=e+1752|0;Ua=e+1744|0;Va=e+1736|0;Wa=e+1728|0;Xa=e+1720|0;Ya=e+1712|0;Za=e+1704|0;_a=e+1696|0;$a=e+1688|0;ab=e+1680|0;bb=e+1672|0;cb=e+1664|0;db=e+1656|0;eb=e+1648|0;fb=e+1640|0;gb=e+1632|0;hb=e+1624|0;ib=e+1616|0;lb=e+1608|0;mb=e+1600|0;nb=e+1592|0;qb=e+1584|0;rb=e+1576|0;tb=e+1568|0;wb=e+1560|0;xb=e+1552|0;yb=e+1544|0;zb=e+1536|0;Ab=e+1528|0;Bb=e+1520|0;Cb=e+1512|0;Db=e+1504|0;Eb=e+1496|0;Fb=e+1488|0;Gb=e+1480|0;Hb=e+1472|0;Ib=e+1464|0;Jb=e+1456|0;Kb=e+1448|0;Lb=e+1440|0;Mb=e+1432|0;Nb=e+1424|0;Ob=e+1416|0;Pb=e+1408|0;Qb=e+1400|0;Rb=e+1392|0;Sb=e+1384|0;Tb=e+1376|0;Ub=e+1368|0;Vb=e+1360|0;Wb=e+1352|0;Xb=e+1344|0;Yb=e+1336|0;Zb=e+1328|0;_b=e+1320|0;$b=e+1312|0;ac=e+1304|0;bc=e+1296|0;cc=e+1288|0;dc=e+1280|0;ec=e+1272|0;fc=e+1264|0;gc=e+1256|0;hc=e+1248|0;ic=e+1240|0;jc=e+1232|0;kc=e+1224|0;lc=e+1216|0;mc=e+1208|0;nc=e+1200|0;oc=e+1192|0;pc=e+1184|0;qc=e+1176|0;rc=e+1168|0;sc=e+1160|0;tc=e+1152|0;uc=e+1144|0;vc=e+1136|0;wc=e+1128|0;xc=e+1120|0;yc=e+1112|0;zc=e+1104|0;Ac=e+1096|0;Bc=e+1088|0;Cc=e+1080|0;Dc=e+1072|0;Ec=e+1064|0;Fc=e+1056|0;Gc=e+1048|0;Hc=e+1040|0;Ic=e+1032|0;Jc=e+1024|0;Kc=e+1016|0;Lc=e+1008|0;Mc=e+1e3|0;Nc=e+992|0;Oc=e+984|0;Pc=e+976|0;Qc=e+968|0;Rc=e+960|0;Sc=e+952|0;Tc=e+944|0;Uc=e+936|0;Vc=e+928|0;Wc=e+920|0;Xc=e+912|0;Yc=e+904|0;Zc=e+896|0;_c=e+888|0;$c=e+880|0;ad=e+872|0;bd=e+864|0;cd=e+856|0;dd=e+848|0;ed=e+840|0;fd=e+832|0;gd=e+824|0;hd=e+816|0;id=e+808|0;jd=e+800|0;kd=e+792|0;ld=e+784|0;md=e+776|0;nd=e+768|0;od=e+760|0;pd=e+752|0;qd=e+744|0;rd=e+736|0;sd=e+728|0;td=e+720|0;ud=e+712|0;vd=e+704|0;wd=e+696|0;xd=e+688|0;yd=e+680|0;zd=e+672|0;Ad=e+664|0;Bd=e+656|0;Cd=e+648|0;Dd=e+640|0;Ed=e+632|0;Fd=e+624|0;Gd=e+616|0;Hd=e+608|0;Id=e+600|0;Jd=e+592|0;Kd=e+584|0;Ld=e+576|0;Md=e+568|0;Nd=e+560|0;Od=e+552|0;Pd=e+544|0;Qd=e+536|0;Rd=e+528|0;Sd=e+520|0;Td=e+512|0;Ud=e+504|0;Vd=e+496|0;Wd=e+488|0;Xd=e+480|0;Yd=e+472|0;Zd=e+464|0;_d=e+456|0;$d=e+448|0;ae=e+440|0;be=e+432|0;ce=e+424|0;de=e+416|0;ee=e+408|0;fe=e+400|0;ge=e+392|0;he=e+384|0;ie=e+376|0;je=e+368|0;ke=e+360|0;le=e+352|0;me=e+344|0;ne=e+336|0;oe=e+328|0;pe=e+320|0;qe=e+312|0;re=e+304|0;se=e+296|0;te=e+288|0;ue=e+280|0;ve=e+272|0;we=e+264|0;xe=e+256|0;ye=e+248|0;ze=e+240|0;Ae=e+232|0;Be=e+224|0;Ce=e+216|0;De=e+208|0;Ee=e+200|0;Fe=e+192|0;Ge=e+184|0;He=e+176|0;Ie=e+152|0;Je=e+144|0;Ke=e+136|0;Le=e+128|0;Me=e+120|0;Ne=e+96|0;Oe=e+88|0;Pe=e+80|0;Qe=e+72|0;Re=e+64|0;Se=e+56|0;Te=e+48|0;Ue=e+40|0;Ve=e+32|0;We=e+24|0;Xe=e+16|0;Ye=e+8|0;Ze=e;_e=e+2540|0;$e=e+2536|0;af=b+16|0;bf=b+12|0;if((c[af>>2]|0)>>>0>=(c[bf>>2]|0)>>>0){i=e;return}cf=b+8|0;df=b+204|0;ef=b+4|0;ff=Oe+4|0;gf=b+200|0;hf=Ie+4|0;jf=b+216|0;kf=b+232|0;lf=Ke+4|0;mf=Ne+4|0;nf=b+208|0;of=b+176|0;pf=b+180|0;qf=b+212|0;rf=Je+4|0;sf=Ke+4|0;tf=Le+4|0;uf=Me+4|0;vf=Oe+4|0;wf=Pe+4|0;xf=Qe+4|0;yf=Re+4|0;zf=b+220|0;Af=Se+4|0;Bf=Te+4|0;Cf=Ue+4|0;Df=Ve+4|0;Ef=b+224|0;Ff=We+4|0;Gf=Xe+4|0;Hf=Ye+4|0;If=Ze+4|0;Jf=b+228|0;Kf=b+236|0;Lf=b+240|0;Mf=b+244|0;Nf=b+248|0;Of=He+4|0;Pf=b+252|0;Qf=b+188|0;Rf=b+192|0;Sf=c[bf>>2]|0;Tf=c[af>>2]|0;a:while(1){c[b>>2]=Sf;Uf=c[cf>>2]|0;Vf=qj(Uf+Tf|0,Uf+Sf|0,_e)|0;if(!Vf){Wf=4;break}Uf=(c[af>>2]|0)+Vf|0;c[af>>2]=Uf;Vf=c[cf>>2]|0;Xf=qj(Vf+Uf|0,Vf+(c[b>>2]|0)|0,$e)|0;if(!Xf){Wf=6;break}Vf=(c[af>>2]|0)+Xf|0;c[af>>2]=Vf;Xf=c[$e>>2]|0;Uf=Xf+Vf|0;c[b>>2]=Uf;Vf=c[_e>>2]|0;if(Vf>>>0>11){Yf=Vf;Wf=8;break}if(Uf>>>0>(c[bf>>2]|0)>>>0){Wf=10;break}Uf=c[df>>2]|0;Zf=(Vf|0)!=0;if(!((Vf|0)>(Uf|0)|Zf&(Uf|0)!=12^1)){_f=Vf;Wf=12;break}Uf=c[ef>>2]|0;if(kb[c[(c[Uf>>2]|0)+24>>2]&127](Uf,Vf,Xf)|0){Wf=14;break}do switch(Vf|0){case 0:{c[f>>2]=0;Uf=c[cf>>2]|0;$f=qj(Uf+(c[af>>2]|0)|0,Uf+(c[b>>2]|0)|0,f)|0;if(!$f){Wf=17;break a}Uf=(c[af>>2]|0)+$f|0;c[af>>2]=Uf;$f=c[f>>2]|0;ag=$f+Uf|0;if(ag>>>0>(c[b>>2]|0)>>>0){Wf=19;break a}bg=(c[cf>>2]|0)+Uf|0;c[af>>2]=ag;ag=c[ef>>2]|0;Uf=c[(c[ag>>2]|0)+28>>2]|0;c[Oe>>2]=bg;c[ff>>2]=$f;c[f>>2]=c[Oe>>2];c[f+4>>2]=c[Oe+4>>2];if(kb[Uf&127](ag,Xf,f)|0){Wf=21;break a}if(((a[(c[gf>>2]|0)+4>>0]|0)!=0?(c[df>>2]|0)>1:0)?(Nm(bg,20918,$f)|0)==0:0){$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+448>>2]&255]($f,Xf)|0){Wf=26;break a}$f=c[b>>2]|0;ag=c[af>>2]|0;b:do if(ag>>>0<$f>>>0){Uf=ag;cg=0;dg=0;while(1){eg=c[cf>>2]|0;fg=qj(eg+Uf|0,eg+$f|0,g)|0;if(!fg){Wf=29;break a}eg=(c[af>>2]|0)+fg|0;c[af>>2]=eg;fg=dg;dg=c[g>>2]|0;if(cg|0){if((dg|0)==(fg|0)){Wf=32;break a}if(dg>>>0<fg>>>0){Wf=34;break a}}fg=c[cf>>2]|0;gg=qj(fg+eg|0,fg+(c[b>>2]|0)|0,He)|0;if(!gg){Wf=36;break a}fg=(c[af>>2]|0)+gg|0;c[af>>2]=fg;gg=c[He>>2]|0;Uf=gg+fg|0;if(Uf>>>0>(c[b>>2]|0)>>>0){Wf=38;break a}c[b>>2]=Uf;c:do switch(dg|0){case 1:{fg=c[ef>>2]|0;if(sb[c[(c[fg>>2]|0)+452>>2]&63](fg,cg,1,gg)|0){Wf=41;break a}if(!gg)break c;fg=c[cf>>2]|0;eg=qj(fg+(c[af>>2]|0)|0,fg+(c[b>>2]|0)|0,Ie)|0;if(!eg){Wf=44;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;fg=c[Ie>>2]|0;if(ub[c[(c[eg>>2]|0)+456>>2]&255](eg,fg)|0){Wf=47;break a}if(fg|0){eg=0;do{hg=c[cf>>2]|0;ig=qj(hg+(c[af>>2]|0)|0,hg+(c[b>>2]|0)|0,Je)|0;if(!ig){Wf=50;break a}hg=(c[af>>2]|0)+ig|0;c[af>>2]=hg;ig=c[Je>>2]|0;if(ig>>>0>=((c[kf>>2]|0)+(c[jf>>2]|0)|0)>>>0){jg=ig;Wf=52;break a}c[f>>2]=0;kg=c[cf>>2]|0;lg=qj(kg+hg|0,kg+(c[b>>2]|0)|0,f)|0;if(!lg){Wf=54;break a}kg=(c[af>>2]|0)+lg|0;c[af>>2]=kg;lg=c[f>>2]|0;hg=lg+kg|0;if(hg>>>0>(c[b>>2]|0)>>>0){Wf=56;break a}mg=(c[cf>>2]|0)+kg|0;c[af>>2]=hg;hg=c[ef>>2]|0;kg=c[(c[hg>>2]|0)+460>>2]|0;c[Ke>>2]=mg;c[lf>>2]=lg;c[f>>2]=c[Ke>>2];c[f+4>>2]=c[Ke+4>>2];if(kb[kg&127](hg,ig,f)|0){Wf=58;break a}eg=eg+1|0}while(eg>>>0<fg>>>0)}break}case 2:{fg=c[ef>>2]|0;if(sb[c[(c[fg>>2]|0)+464>>2]&63](fg,cg,2,gg)|0){Wf=61;break a}if(!gg)break c;fg=c[cf>>2]|0;eg=qj(fg+(c[af>>2]|0)|0,fg+(c[b>>2]|0)|0,Ie)|0;if(!eg){Wf=64;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;fg=c[Ie>>2]|0;if(ub[c[(c[eg>>2]|0)+468>>2]&255](eg,fg)|0){Wf=67;break a}if(fg|0){eg=0;do{ig=c[cf>>2]|0;hg=qj(ig+(c[af>>2]|0)|0,ig+(c[b>>2]|0)|0,Je)|0;if(!hg){Wf=70;break a}ig=(c[af>>2]|0)+hg|0;c[af>>2]=ig;hg=c[cf>>2]|0;kg=qj(hg+ig|0,hg+(c[b>>2]|0)|0,Le)|0;if(!kg){Wf=72;break a}c[af>>2]=(c[af>>2]|0)+kg;kg=c[ef>>2]|0;hg=c[Je>>2]|0;ig=c[Le>>2]|0;if(kb[c[(c[kg>>2]|0)+472>>2]&127](kg,hg,ig)|0){Wf=75;break a}if(ig|0){kg=0;do{lg=c[cf>>2]|0;mg=qj(lg+(c[af>>2]|0)|0,lg+(c[b>>2]|0)|0,Me)|0;if(!mg){Wf=78;break a}lg=(c[af>>2]|0)+mg|0;c[af>>2]=lg;c[f>>2]=0;mg=c[cf>>2]|0;ng=qj(mg+lg|0,mg+(c[b>>2]|0)|0,f)|0;if(!ng){Wf=80;break a}mg=(c[af>>2]|0)+ng|0;c[af>>2]=mg;ng=c[f>>2]|0;lg=ng+mg|0;if(lg>>>0>(c[b>>2]|0)>>>0){Wf=82;break a}og=(c[cf>>2]|0)+mg|0;c[af>>2]=lg;lg=c[ef>>2]|0;mg=c[(c[lg>>2]|0)+476>>2]|0;pg=c[Me>>2]|0;c[Ne>>2]=og;c[mf>>2]=ng;c[f>>2]=c[Ne>>2];c[f+4>>2]=c[Ne+4>>2];if(sb[mg&63](lg,hg,pg,f)|0){Wf=84;break a}kg=kg+1|0}while(kg>>>0<ig>>>0)}eg=eg+1|0}while(eg>>>0<fg>>>0)}break}default:c[af>>2]=Uf}while(0);if((c[af>>2]|0)!=(Uf|0)){qg=Uf;Wf=88;break a}c[b>>2]=$f;if(Uf>>>0>=$f>>>0)break b;else cg=cg+1|0}}while(0);$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+480>>2]&127]($f)|0){Wf=91;break a}}else Wf=93;do if((Wf|0)==93){Wf=0;if(Nm(bg,21510,5)|0){c[af>>2]=c[b>>2];break}$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+484>>2]&255]($f,Xf)|0){Wf=95;break a}$f=c[cf>>2]|0;ag=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,He)|0;if(!ag){Wf=97;break a}$f=(c[af>>2]|0)+ag|0;c[af>>2]=$f;ag=c[He>>2]|0;if(!ag){c[f>>2]=0;cg=c[cf>>2]|0;Uf=qj(cg+$f|0,cg+(c[b>>2]|0)|0,f)|0;if(!Uf){Wf=101;break a}cg=(c[af>>2]|0)+Uf|0;c[af>>2]=cg;Uf=c[f>>2]|0;dg=Uf+cg|0;gg=c[b>>2]|0;if(dg>>>0>gg>>>0){Wf=103;break a}fg=c[cf>>2]|0;c[af>>2]=dg;rg=fg;sg=dg;tg=gg;ug=fg+cg|0;vg=Uf}else{rg=c[cf>>2]|0;sg=$f;tg=c[b>>2]|0;ug=0;vg=0}$f=qj(rg+sg|0,rg+tg|0,g)|0;if(!$f){Wf=106;break a}c[af>>2]=(c[af>>2]|0)+$f;$f=c[ef>>2]|0;Uf=c[(c[$f>>2]|0)+488>>2]|0;cg=c[g>>2]|0;c[Ie>>2]=ug;c[hf>>2]=vg;c[f>>2]=c[Ie>>2];c[f+4>>2]=c[Ie+4>>2];if(sb[Uf&63]($f,cg,ag,f)|0){Wf=109;break a}if(cg|0){ag=0;do{c[Le>>2]=0;$f=c[cf>>2]|0;Uf=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!Uf){Wf=112;break a}$f=(c[af>>2]|0)+Uf|0;c[af>>2]=$f;Uf=c[cf>>2]|0;fg=qj(Uf+$f|0,Uf+(c[b>>2]|0)|0,Je)|0;if(!fg){Wf=114;break a}Uf=(c[af>>2]|0)+fg|0;c[af>>2]=Uf;fg=c[cf>>2]|0;$f=qj(fg+Uf|0,fg+(c[b>>2]|0)|0,Ke)|0;if(!$f){Wf=116;break a}fg=(c[af>>2]|0)+$f|0;c[af>>2]=fg;$f=c[f>>2]|0;if(($f+-3|0)>>>0<3){Uf=c[cf>>2]|0;gg=rj(Uf+fg|0,Uf+(c[b>>2]|0)|0,Le)|0;if(!gg){Wf=119;break a}c[af>>2]=(c[af>>2]|0)+gg;wg=c[Le>>2]|0}else wg=0;gg=c[ef>>2]|0;if(vb[c[(c[gg>>2]|0)+492>>2]&31](gg,$f,c[Je>>2]|0,c[Ke>>2]|0,wg)|0){Wf=122;break a}ag=ag+1|0}while(ag>>>0<cg>>>0)}cg=c[ef>>2]|0;if(pb[c[(c[cg>>2]|0)+496>>2]&127](cg)|0){Wf=124;break a}}while(0);bg=c[ef>>2]|0;if(pb[c[(c[bg>>2]|0)+32>>2]&127](bg)|0){Wf=128;break a}break}case 1:{bg=c[ef>>2]|0;if(ub[c[(c[bg>>2]|0)+36>>2]&255](bg,Xf)|0){Wf=131;break a}bg=c[cf>>2]|0;cg=qj(bg+(c[af>>2]|0)|0,bg+(c[b>>2]|0)|0,nf)|0;if(!cg){Wf=133;break a}c[af>>2]=(c[af>>2]|0)+cg;cg=c[ef>>2]|0;if(ub[c[(c[cg>>2]|0)+40>>2]&255](cg,c[nf>>2]|0)|0){Wf=136;break a}if(c[nf>>2]|0){cg=0;do{c[f>>2]=0;bg=c[cf>>2]|0;ag=rj(bg+(c[af>>2]|0)|0,bg+(c[b>>2]|0)|0,f)|0;if(!ag){Wf=139;break a}bg=(c[af>>2]|0)+ag|0;c[af>>2]=bg;ag=c[f>>2]|0;if((ag+128|0)>>>0>255){xg=ag;Wf=141;break a}if((ag|0)!=-32){yg=ag;Wf=143;break a}ag=c[cf>>2]|0;$f=qj(ag+bg|0,ag+(c[b>>2]|0)|0,g)|0;if(!$f){Wf=145;break a}ag=(c[af>>2]|0)+$f|0;c[af>>2]=ag;$f=c[g>>2]|0;bg=c[pf>>2]|0;gg=c[of>>2]|0;Uf=bg-gg>>2;fg=gg;gg=bg;do if($f>>>0>Uf>>>0){Li(of,$f-Uf|0);zg=c[af>>2]|0}else{if($f>>>0>=Uf>>>0){zg=ag;break}bg=fg+($f<<2)|0;if((gg|0)==(bg|0)){zg=ag;break}c[pf>>2]=gg+(~((gg+-4-bg|0)>>>2)<<2);zg=ag}while(0);ag=($f|0)==0;if(ag)Ag=zg;else{gg=zg;fg=0;while(1){c[f>>2]=0;Uf=c[cf>>2]|0;bg=rj(Uf+gg|0,Uf+(c[b>>2]|0)|0,f)|0;if(!bg){Wf=156;break a}Uf=(c[af>>2]|0)+bg|0;c[af>>2]=Uf;bg=c[f>>2]|0;if((bg+128|0)>>>0>255){Bg=bg;Wf=158;break a}if(bg>>>0<=4294967291){Cg=bg;Wf=160;break a}c[(c[of>>2]|0)+(fg<<2)>>2]=bg;fg=fg+1|0;if(fg>>>0>=$f>>>0){Ag=Uf;break}else gg=Uf}}gg=c[cf>>2]|0;fg=qj(gg+Ag|0,gg+(c[b>>2]|0)|0,He)|0;if(!fg){Wf=153;break a}gg=(c[af>>2]|0)+fg|0;c[af>>2]=gg;fg=c[He>>2]|0;if(fg>>>0>=2){Wf=162;break a}c[Ie>>2]=-64;if(fg|0){c[f>>2]=0;Uf=c[cf>>2]|0;bg=rj(Uf+gg|0,Uf+(c[b>>2]|0)|0,f)|0;if(!bg){Wf=165;break a}c[af>>2]=(c[af>>2]|0)+bg;bg=c[f>>2]|0;if((bg+128|0)>>>0>255){Dg=bg;Wf=167;break a}c[Ie>>2]=bg;if(bg>>>0<=4294967291){Eg=bg;Wf=169;break a}}if(ag)Fg=0;else Fg=c[of>>2]|0;bg=c[ef>>2]|0;if(ob[c[(c[bg>>2]|0)+44>>2]&31](bg,cg,$f,Fg,fg,Ie)|0){Wf=173;break a}cg=cg+1|0}while(cg>>>0<(c[nf>>2]|0)>>>0)}cg=c[ef>>2]|0;if(pb[c[(c[cg>>2]|0)+48>>2]&127](cg)|0){Wf=175;break a}break}case 2:{cg=c[ef>>2]|0;if(ub[c[(c[cg>>2]|0)+52>>2]&255](cg,Xf)|0){Wf=177;break a}cg=c[cf>>2]|0;fg=qj(cg+(c[af>>2]|0)|0,cg+(c[b>>2]|0)|0,qf)|0;if(!fg){Wf=179;break a}c[af>>2]=(c[af>>2]|0)+fg;fg=c[ef>>2]|0;if(ub[c[(c[fg>>2]|0)+56>>2]&255](fg,c[qf>>2]|0)|0){Wf=182;break a}d:do if(c[qf>>2]|0){fg=0;while(1){c[f>>2]=0;cg=c[cf>>2]|0;bg=qj(cg+(c[af>>2]|0)|0,cg+(c[b>>2]|0)|0,f)|0;if(!bg){Wf=185;break a}cg=(c[af>>2]|0)+bg|0;c[af>>2]=cg;bg=c[f>>2]|0;Uf=bg+cg|0;gg=c[b>>2]|0;if(Uf>>>0>gg>>>0){Wf=187;break a}dg=c[cf>>2]|0;eg=dg+cg|0;c[af>>2]=Uf;c[f>>2]=0;cg=qj(dg+Uf|0,dg+gg|0,f)|0;if(!cg){Wf=189;break a}gg=(c[af>>2]|0)+cg|0;c[af>>2]=gg;cg=c[f>>2]|0;dg=cg+gg|0;Uf=c[b>>2]|0;if(dg>>>0>Uf>>>0){Wf=191;break a}ig=c[cf>>2]|0;kg=ig+gg|0;c[af>>2]=dg;gg=qj(ig+dg|0,ig+Uf|0,He)|0;if(!gg){Wf=193;break a}Uf=(c[af>>2]|0)+gg|0;c[af>>2]=Uf;gg=c[He>>2]|0;switch(gg|0){case 0:{ig=c[cf>>2]|0;dg=qj(ig+Uf|0,ig+(c[b>>2]|0)|0,Ie)|0;if(!dg){Wf=196;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[Ie>>2]|0;if(dg>>>0>=(c[nf>>2]|0)>>>0){Wf=198;break a}ig=c[ef>>2]|0;hg=c[(c[ig>>2]|0)+60>>2]|0;c[Je>>2]=eg;c[rf>>2]=bg;c[Ke>>2]=kg;c[sf>>2]=cg;c[g>>2]=c[Je>>2];c[g+4>>2]=c[Je+4>>2];c[f>>2]=c[Ke>>2];c[f+4>>2]=c[Ke+4>>2];if(sb[hg&63](ig,fg,g,f)|0){Wf=200;break a}ig=c[ef>>2]|0;hg=c[(c[ig>>2]|0)+64>>2]|0;c[Le>>2]=eg;c[tf>>2]=bg;c[Me>>2]=kg;c[uf>>2]=cg;pg=c[jf>>2]|0;c[g>>2]=c[Le>>2];c[g+4>>2]=c[Le+4>>2];c[f>>2]=c[Me>>2];c[f+4>>2]=c[Me+4>>2];if(ob[hg&31](ig,fg,g,f,pg,dg)|0){Wf=202;break a}c[jf>>2]=(c[jf>>2]|0)+1;break}case 1:{vj(b,Ie,Ne);dg=c[ef>>2]|0;pg=c[(c[dg>>2]|0)+60>>2]|0;c[Oe>>2]=eg;c[vf>>2]=bg;c[Pe>>2]=kg;c[wf>>2]=cg;c[g>>2]=c[Oe>>2];c[g+4>>2]=c[Oe+4>>2];c[f>>2]=c[Pe>>2];c[f+4>>2]=c[Pe+4>>2];if(sb[pg&63](dg,fg,g,f)|0){Wf=205;break a}dg=c[ef>>2]|0;pg=c[(c[dg>>2]|0)+68>>2]|0;c[Qe>>2]=eg;c[xf>>2]=bg;c[Re>>2]=kg;c[yf>>2]=cg;ig=c[zf>>2]|0;hg=c[Ie>>2]|0;c[g>>2]=c[Qe>>2];c[g+4>>2]=c[Qe+4>>2];c[f>>2]=c[Re>>2];c[f+4>>2]=c[Re+4>>2];if(jb[pg&31](dg,fg,g,f,ig,hg,Ne)|0){Wf=207;break a}c[zf>>2]=(c[zf>>2]|0)+1;break}case 2:{wj(b,Ie);hg=c[ef>>2]|0;ig=c[(c[hg>>2]|0)+60>>2]|0;c[Se>>2]=eg;c[Af>>2]=bg;c[Te>>2]=kg;c[Bf>>2]=cg;c[g>>2]=c[Se>>2];c[g+4>>2]=c[Se+4>>2];c[f>>2]=c[Te>>2];c[f+4>>2]=c[Te+4>>2];if(sb[ig&63](hg,fg,g,f)|0){Wf=210;break a}hg=c[ef>>2]|0;ig=c[(c[hg>>2]|0)+72>>2]|0;c[Ue>>2]=eg;c[Cf>>2]=bg;c[Ve>>2]=kg;c[Df>>2]=cg;dg=c[Ef>>2]|0;c[g>>2]=c[Ue>>2];c[g+4>>2]=c[Ue+4>>2];c[f>>2]=c[Ve>>2];c[f+4>>2]=c[Ve+4>>2];if(ob[ig&31](hg,fg,g,f,dg,Ie)|0){Wf=212;break a}c[Ef>>2]=(c[Ef>>2]|0)+1;break}case 3:{c[f>>2]=0;dg=c[cf>>2]|0;hg=rj(dg+Uf|0,dg+(c[b>>2]|0)|0,f)|0;if(!hg){Wf=215;break a}dg=(c[af>>2]|0)+hg|0;c[af>>2]=dg;hg=c[f>>2]|0;if((hg+128|0)>>>0>255){Gg=hg;Wf=217;break a}if(hg>>>0<=4294967291){Hg=hg;Wf=219;break a}Uf=dg+1|0;if(Uf>>>0>(c[b>>2]|0)>>>0){Wf=221;break a}ig=a[(c[cf>>2]|0)+dg>>0]|0;c[af>>2]=Uf;if((ig&255)>=2){Wf=223;break a}Uf=c[ef>>2]|0;dg=c[(c[Uf>>2]|0)+60>>2]|0;c[We>>2]=eg;c[Ff>>2]=bg;c[Xe>>2]=kg;c[Gf>>2]=cg;c[g>>2]=c[We>>2];c[g+4>>2]=c[We+4>>2];c[f>>2]=c[Xe>>2];c[f+4>>2]=c[Xe+4>>2];if(sb[dg&63](Uf,fg,g,f)|0){Wf=225;break a}Uf=c[ef>>2]|0;dg=c[(c[Uf>>2]|0)+76>>2]|0;c[Ye>>2]=eg;c[Hf>>2]=bg;c[Ze>>2]=kg;c[If>>2]=cg;cg=c[Jf>>2]|0;c[g>>2]=c[Ye>>2];c[g+4>>2]=c[Ye+4>>2];c[f>>2]=c[Ze>>2];c[f+4>>2]=c[Ze+4>>2];if(jb[dg&31](Uf,fg,g,f,cg,hg,ig<<24>>24!=0)|0){Wf=227;break a}c[Jf>>2]=(c[Jf>>2]|0)+1;break}default:{Ig=gg;Wf=229;break a}}fg=fg+1|0;if(fg>>>0>=(c[qf>>2]|0)>>>0)break d}}while(0);fg=c[ef>>2]|0;if(pb[c[(c[fg>>2]|0)+80>>2]&127](fg)|0){Wf=231;break a}break}case 3:{fg=c[ef>>2]|0;if(ub[c[(c[fg>>2]|0)+84>>2]&255](fg,Xf)|0){Wf=234;break a}fg=c[cf>>2]|0;$f=qj(fg+(c[af>>2]|0)|0,fg+(c[b>>2]|0)|0,kf)|0;if(!$f){Wf=236;break a}c[af>>2]=(c[af>>2]|0)+$f;$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+88>>2]&255]($f,c[kf>>2]|0)|0){Wf=239;break a}if(c[kf>>2]|0){$f=0;do{fg=(c[jf>>2]|0)+$f|0;ag=c[cf>>2]|0;gg=qj(ag+(c[af>>2]|0)|0,ag+(c[b>>2]|0)|0,f)|0;if(!gg){Wf=242;break a}c[af>>2]=(c[af>>2]|0)+gg;gg=c[f>>2]|0;if(gg>>>0>=(c[nf>>2]|0)>>>0){Jg=gg;Wf=244;break a}ag=c[ef>>2]|0;if(kb[c[(c[ag>>2]|0)+92>>2]&127](ag,fg,gg)|0){Wf=246;break a}$f=$f+1|0}while($f>>>0<(c[kf>>2]|0)>>>0)}$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+96>>2]&127]($f)|0){Wf=248;break a}break}case 4:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+100>>2]&255]($f,Xf)|0){Wf=250;break a}$f=c[cf>>2]|0;gg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,Kf)|0;if(!gg){Wf=252;break a}c[af>>2]=(c[af>>2]|0)+gg;gg=c[Kf>>2]|0;if(gg>>>0>=2){Kg=gg;Wf=254;break a}$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+104>>2]&255]($f,gg)|0){Wf=257;break a}if(c[Kf>>2]|0){gg=0;do{$f=(c[zf>>2]|0)+gg|0;vj(b,f,g);fg=c[ef>>2]|0;if(sb[c[(c[fg>>2]|0)+108>>2]&63](fg,$f,c[f>>2]|0,g)|0){Wf=260;break a}gg=gg+1|0}while(gg>>>0<(c[Kf>>2]|0)>>>0)}gg=c[ef>>2]|0;if(pb[c[(c[gg>>2]|0)+112>>2]&127](gg)|0){Wf=262;break a}break}case 5:{gg=c[ef>>2]|0;if(ub[c[(c[gg>>2]|0)+116>>2]&255](gg,Xf)|0){Wf=264;break a}gg=c[cf>>2]|0;$f=qj(gg+(c[af>>2]|0)|0,gg+(c[b>>2]|0)|0,Lf)|0;if(!$f){Wf=266;break a}c[af>>2]=(c[af>>2]|0)+$f;$f=c[Lf>>2]|0;if($f>>>0>=2){Wf=268;break a}gg=c[ef>>2]|0;if(ub[c[(c[gg>>2]|0)+120>>2]&255](gg,$f)|0){Wf=271;break a}if(c[Lf>>2]|0){$f=0;do{gg=(c[Ef>>2]|0)+$f|0;wj(b,f);fg=c[ef>>2]|0;if(kb[c[(c[fg>>2]|0)+124>>2]&127](fg,gg,f)|0){Wf=274;break a}$f=$f+1|0}while($f>>>0<(c[Lf>>2]|0)>>>0)}$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+128>>2]&127]($f)|0){Wf=276;break a}break}case 6:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+132>>2]&255]($f,Xf)|0){Wf=278;break a}$f=c[cf>>2]|0;gg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,Mf)|0;if(!gg){Wf=280;break a}c[af>>2]=(c[af>>2]|0)+gg;gg=c[ef>>2]|0;if(ub[c[(c[gg>>2]|0)+136>>2]&255](gg,c[Mf>>2]|0)|0){Wf=283;break a}if(c[Mf>>2]|0){gg=0;do{$f=(c[Jf>>2]|0)+gg|0;c[f>>2]=0;fg=c[cf>>2]|0;ag=rj(fg+(c[af>>2]|0)|0,fg+(c[b>>2]|0)|0,f)|0;if(!ag){Wf=287;break a}fg=(c[af>>2]|0)+ag|0;c[af>>2]=fg;ag=c[f>>2]|0;if((ag+128|0)>>>0>255){Lg=ag;Wf=289;break a}if(ag>>>0<=4294967291){Mg=ag;Wf=291;break a}ig=fg+1|0;if(ig>>>0>(c[b>>2]|0)>>>0){Wf=293;break a}hg=a[(c[cf>>2]|0)+fg>>0]|0;c[af>>2]=ig;if((hg&255)>=2){Wf=295;break a}ig=c[ef>>2]|0;if(sb[c[(c[ig>>2]|0)+140>>2]&63](ig,$f,ag,hg<<24>>24!=0)|0){Wf=297;break a}hg=c[ef>>2]|0;if(ub[c[(c[hg>>2]|0)+144>>2]&255](hg,$f)|0){Wf=299;break a}xj(b,$f);hg=c[ef>>2]|0;if(ub[c[(c[hg>>2]|0)+148>>2]&255](hg,$f)|0){Wf=301;break a}hg=c[ef>>2]|0;gg=gg+1|0;if(ub[c[(c[hg>>2]|0)+152>>2]&255](hg,$f)|0){Wf=303;break a}}while(gg>>>0<(c[Mf>>2]|0)>>>0)}gg=c[ef>>2]|0;if(pb[c[(c[gg>>2]|0)+156>>2]&127](gg)|0){Wf=304;break a}break}case 7:{gg=c[ef>>2]|0;if(ub[c[(c[gg>>2]|0)+160>>2]&255](gg,Xf)|0){Wf=306;break a}gg=c[cf>>2]|0;$f=qj(gg+(c[af>>2]|0)|0,gg+(c[b>>2]|0)|0,Nf)|0;if(!$f){Wf=308;break a}c[af>>2]=(c[af>>2]|0)+$f;$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+164>>2]&255]($f,c[Nf>>2]|0)|0){Wf=311;break a}e:do if(c[Nf>>2]|0){$f=0;while(1){c[f>>2]=0;gg=c[cf>>2]|0;hg=qj(gg+(c[af>>2]|0)|0,gg+(c[b>>2]|0)|0,f)|0;if(!hg){Wf=314;break a}gg=(c[af>>2]|0)+hg|0;c[af>>2]=gg;hg=c[f>>2]|0;ag=hg+gg|0;ig=c[b>>2]|0;if(ag>>>0>ig>>>0){Wf=316;break a}fg=c[cf>>2]|0;cg=fg+gg|0;c[af>>2]=ag;gg=ag+1|0;if(gg>>>0>ig>>>0){Wf=318;break a}Uf=a[fg+ag>>0]|0;c[af>>2]=gg;if((Uf&255)>=4){Wf=320;break a}ag=qj(fg+gg|0,fg+ig|0,g)|0;if(!ag){Wf=322;break a}c[af>>2]=(c[af>>2]|0)+ag;ag=Uf&255;switch(ag|0){case 0:{Uf=c[g>>2]|0;if(Uf>>>0<((c[kf>>2]|0)+(c[jf>>2]|0)|0)>>>0)Ng=Uf;else{Og=Uf;Wf=326;break a}break}case 1:{Uf=c[g>>2]|0;if(Uf>>>0<((c[Kf>>2]|0)+(c[zf>>2]|0)|0)>>>0)Ng=Uf;else{Wf=328;break a}break}case 2:{Uf=c[g>>2]|0;if(Uf>>>0<((c[Lf>>2]|0)+(c[Ef>>2]|0)|0)>>>0)Ng=Uf;else{Wf=330;break a}break}case 3:{Uf=c[g>>2]|0;if(Uf>>>0<((c[Mf>>2]|0)+(c[Jf>>2]|0)|0)>>>0)Ng=Uf;else{Wf=332;break a}break}default:Ng=c[g>>2]|0}Uf=c[ef>>2]|0;ig=c[(c[Uf>>2]|0)+168>>2]|0;c[He>>2]=cg;c[Of>>2]=hg;c[f>>2]=c[He>>2];c[f+4>>2]=c[He+4>>2];if(vb[ig&31](Uf,$f,ag,Ng,f)|0){Wf=334;break a}$f=$f+1|0;if($f>>>0>=(c[Nf>>2]|0)>>>0)break e}}while(0);$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+172>>2]&127]($f)|0){Wf=336;break a}break}case 8:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+176>>2]&255]($f,Xf)|0){Wf=339;break a}$f=c[cf>>2]|0;ag=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!ag){Wf=341;break a}c[af>>2]=(c[af>>2]|0)+ag;ag=c[f>>2]|0;if(ag>>>0>=((c[kf>>2]|0)+(c[jf>>2]|0)|0)>>>0){Wf=343;break a}$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+180>>2]&255]($f,ag)|0){Wf=345;break a}ag=c[ef>>2]|0;if(pb[c[(c[ag>>2]|0)+184>>2]&127](ag)|0){Wf=347;break a}break}case 9:{ag=c[ef>>2]|0;if(ub[c[(c[ag>>2]|0)+380>>2]&255](ag,Xf)|0){Wf=350;break a}ag=c[cf>>2]|0;$f=qj(ag+(c[af>>2]|0)|0,ag+(c[b>>2]|0)|0,f)|0;if(!$f){Wf=352;break a}c[af>>2]=(c[af>>2]|0)+$f;$f=c[ef>>2]|0;ag=c[f>>2]|0;if(ub[c[(c[$f>>2]|0)+384>>2]&255]($f,ag)|0){Wf=354;break a}if(ag|0){if((c[Kf>>2]|0)==(0-(c[zf>>2]|0)|0)){Wf=357;break a}else Pg=0;do{$f=c[cf>>2]|0;Uf=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,g)|0;if(!Uf){Wf=360;break a}c[af>>2]=(c[af>>2]|0)+Uf;Uf=c[ef>>2]|0;if(kb[c[(c[Uf>>2]|0)+388>>2]&127](Uf,Pg,c[g>>2]|0)|0){Wf=362;break a}Uf=c[ef>>2]|0;if(ub[c[(c[Uf>>2]|0)+392>>2]&255](Uf,Pg)|0){Wf=364;break a}xj(b,Pg);Uf=c[ef>>2]|0;if(ub[c[(c[Uf>>2]|0)+396>>2]&255](Uf,Pg)|0){Wf=366;break a}Uf=c[cf>>2]|0;$f=qj(Uf+(c[af>>2]|0)|0,Uf+(c[b>>2]|0)|0,He)|0;if(!$f){Wf=368;break a}c[af>>2]=(c[af>>2]|0)+$f;$f=c[ef>>2]|0;Uf=c[He>>2]|0;if(kb[c[(c[$f>>2]|0)+400>>2]&127]($f,Pg,Uf)|0){Wf=371;break a}if(Uf|0){$f=0;do{ig=c[cf>>2]|0;hg=qj(ig+(c[af>>2]|0)|0,ig+(c[b>>2]|0)|0,Ie)|0;if(!hg){Wf=374;break a}c[af>>2]=(c[af>>2]|0)+hg;hg=c[ef>>2]|0;if(kb[c[(c[hg>>2]|0)+404>>2]&127](hg,Pg,c[Ie>>2]|0)|0){Wf=376;break a}$f=$f+1|0}while($f>>>0<Uf>>>0)}Uf=c[ef>>2]|0;if(ub[c[(c[Uf>>2]|0)+408>>2]&255](Uf,Pg)|0){Wf=378;break a}Pg=Pg+1|0}while(Pg>>>0<ag>>>0)}ag=c[ef>>2]|0;if(pb[c[(c[ag>>2]|0)+412>>2]&127](ag)|0){Wf=380;break a}break}case 10:{ag=c[ef>>2]|0;if(ub[c[(c[ag>>2]|0)+188>>2]&255](ag,Xf)|0){Wf=383;break a}ag=c[cf>>2]|0;Uf=qj(ag+(c[af>>2]|0)|0,ag+(c[b>>2]|0)|0,Pf)|0;if(!Uf){Wf=385;break a}c[af>>2]=(c[af>>2]|0)+Uf;Uf=c[kf>>2]|0;if((Uf|0)!=(c[Pf>>2]|0)){Wf=387;break a}ag=c[ef>>2]|0;if(ub[c[(c[ag>>2]|0)+192>>2]&255](ag,Uf)|0){Wf=390;break a}if(c[Pf>>2]|0){Uf=0;do{ag=(c[jf>>2]|0)+Uf|0;$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+196>>2]&255]($f,ag)|0){Wf=393;break a}$f=c[cf>>2]|0;hg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,He)|0;if(!hg){Wf=395;break a}$f=(c[af>>2]|0)+hg|0;c[af>>2]=$f;hg=(c[He>>2]|0)+$f|0;ig=c[cf>>2]|0;cg=qj(ig+$f|0,ig+(c[b>>2]|0)|0,Ie)|0;if(!cg){Wf=397;break a}c[af>>2]=(c[af>>2]|0)+cg;cg=c[ef>>2]|0;ig=c[Ie>>2]|0;if(ub[c[(c[cg>>2]|0)+200>>2]&255](cg,ig)|0){Wf=400;break a}if(ig|0){cg=0;do{$f=c[cf>>2]|0;fg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,g)|0;if(!fg){Wf=642;break a}$f=(c[af>>2]|0)+fg|0;c[af>>2]=$f;c[f>>2]=0;fg=c[cf>>2]|0;gg=rj(fg+$f|0,fg+(c[b>>2]|0)|0,f)|0;if(!gg){Wf=644;break a}c[af>>2]=(c[af>>2]|0)+gg;gg=c[f>>2]|0;if((gg+128|0)>>>0>255){Qg=gg;Wf=646;break a}if(gg>>>0<=4294967291){Wf=648;break a}fg=c[ef>>2]|0;if(sb[c[(c[fg>>2]|0)+204>>2]&63](fg,cg,c[g>>2]|0,gg)|0){Wf=650;break a}cg=cg+1|0}while(cg>>>0<ig>>>0)}ig=c[af>>2]|0;f:do if(ig>>>0<hg>>>0){cg=ig;gg=0;while(1){fg=cg+1|0;if(fg>>>0>(c[b>>2]|0)>>>0){Wf=403;break a}$f=a[(c[cf>>2]|0)+cg>>0]|0;c[af>>2]=fg;fg=$f&255;$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+208>>2]&255]($f,fg)|0){Wf=405;break a}g:do switch(fg|0){case 0:{$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+368>>2]&127]($f)|0){Wf=408;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=410;break a}break}case 2:{c[f>>2]=0;$f=c[cf>>2]|0;dg=rj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!dg){Wf=412;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[f>>2]|0;if((dg+128|0)>>>0>255){Sg=dg;Wf=414;break a}c[g>>2]=dg;switch(dg|0){case -64:case -4:case -3:case -2:case -1:break;default:{Wf=416;break a}}$f=(dg|0)!=-64&1;dg=c[ef>>2]|0;if(kb[c[(c[dg>>2]|0)+244>>2]&127](dg,$f,g)|0){Wf=418;break a}dg=c[ef>>2]|0;if(kb[c[(c[dg>>2]|0)+236>>2]&127](dg,$f,g)|0){Wf=420;break a}Rg=gg;break}case 3:{c[f>>2]=0;$f=c[cf>>2]|0;dg=rj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!dg){Wf=423;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[f>>2]|0;if((dg+128|0)>>>0>255){Tg=dg;Wf=425;break a}c[g>>2]=dg;switch(dg|0){case -64:case -4:case -3:case -2:case -1:break;default:{Wf=427;break a}}$f=(dg|0)!=-64&1;dg=c[ef>>2]|0;if(kb[c[(c[dg>>2]|0)+332>>2]&127](dg,$f,g)|0){Wf=429;break a}dg=c[ef>>2]|0;if(kb[c[(c[dg>>2]|0)+236>>2]&127](dg,$f,g)|0){Wf=431;break a}Rg=gg;break}case 4:{c[f>>2]=0;$f=c[cf>>2]|0;dg=rj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!dg){Wf=434;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[f>>2]|0;if((dg+128|0)>>>0>255){Ug=dg;Wf=436;break a}c[g>>2]=dg;switch(dg|0){case -64:case -4:case -3:case -2:case -1:break;default:{Wf=438;break a}}$f=(dg|0)!=-64&1;dg=c[ef>>2]|0;if(kb[c[(c[dg>>2]|0)+324>>2]&127](dg,$f,g)|0){Wf=440;break a}dg=c[ef>>2]|0;if(kb[c[(c[dg>>2]|0)+236>>2]&127](dg,$f,g)|0){Wf=442;break a}Rg=gg;break}case 5:{$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+284>>2]&127]($f)|0){Wf=445;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=447;break a}break}case 27:{$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+344>>2]&127]($f)|0){Wf=449;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=451;break a}break}case 12:{$f=c[cf>>2]|0;dg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!dg){Wf=453;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[dg>>2]|0)+248>>2]&255](dg,$f)|0){Wf=455;break a}dg=c[ef>>2]|0;if(ub[c[(c[dg>>2]|0)+216>>2]&255](dg,$f)|0){Wf=457;break a}Rg=gg;break}case 13:{$f=c[cf>>2]|0;dg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!dg){Wf=460;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[dg>>2]|0)+252>>2]&255](dg,$f)|0){Wf=462;break a}dg=c[ef>>2]|0;if(ub[c[(c[dg>>2]|0)+216>>2]&255](dg,$f)|0){Wf=464;break a}Rg=gg;break}case 14:{$f=c[cf>>2]|0;dg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!dg){Wf=467;break a}c[af>>2]=(c[af>>2]|0)+dg;dg=c[f>>2]|0;$f=c[Rf>>2]|0;kg=c[Qf>>2]|0;bg=$f-kg>>2;eg=kg;kg=$f;do if(dg>>>0>bg>>>0)zj(Qf,dg-bg|0);else{if(dg>>>0>=bg>>>0)break;$f=eg+(dg<<2)|0;if((kg|0)==($f|0))break;c[Rf>>2]=kg+(~((kg+-4-$f|0)>>>2)<<2)}while(0);kg=(dg|0)==0;if(!kg){eg=0;do{bg=c[cf>>2]|0;$f=qj(bg+(c[af>>2]|0)|0,bg+(c[b>>2]|0)|0,g)|0;if(!$f){Wf=478;break a}c[af>>2]=(c[af>>2]|0)+$f;c[(c[Qf>>2]|0)+(eg<<2)>>2]=c[g>>2];eg=eg+1|0}while(eg>>>0<dg>>>0)}eg=c[cf>>2]|0;$f=qj(eg+(c[af>>2]|0)|0,eg+(c[b>>2]|0)|0,g)|0;if(!$f){Wf=475;break a}c[af>>2]=(c[af>>2]|0)+$f;if(kg)Vg=0;else Vg=c[Qf>>2]|0;$f=c[ef>>2]|0;if(sb[c[(c[$f>>2]|0)+256>>2]&63]($f,dg,Vg,c[g>>2]|0)|0){Wf=482;break a}Rg=gg;break}case 15:{$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+340>>2]&127]($f)|0){Wf=485;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=487;break a}break}case 1:{$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+336>>2]&127]($f)|0){Wf=489;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=491;break a}break}case 26:{$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+280>>2]&127]($f)|0){Wf=493;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=495;break a}break}case 11:{$f=c[ef>>2]|0;eg=c[$f>>2]|0;if((c[af>>2]|0)==(hg|0))if(!(pb[c[eg+292>>2]&127]($f)|0)){Rg=1;break g}else{Wf=498;break a}else if(!(pb[c[eg+288>>2]&127]($f)|0)){Rg=gg;break g}else{Wf=500;break a}break}case 65:{c[f>>2]=0;$f=c[cf>>2]|0;eg=rj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!eg){Wf=502;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[eg>>2]|0)+316>>2]&255](eg,$f)|0){Wf=504;break a}eg=c[ef>>2]|0;if(ub[c[(c[eg>>2]|0)+216>>2]&255](eg,$f)|0){Wf=506;break a}Rg=gg;break}case 66:{$f=f;c[$f>>2]=0;c[$f+4>>2]=0;yj(b,f,26191);$f=c[ef>>2]|0;eg=f;bg=c[eg>>2]|0;pg=c[eg+4>>2]|0;if(kb[c[(c[$f>>2]|0)+320>>2]&127]($f,bg,pg)|0){Wf=509;break a}$f=c[ef>>2]|0;if(kb[c[(c[$f>>2]|0)+224>>2]&127]($f,bg,pg)|0){Wf=511;break a}Rg=gg;break}case 67:{pg=c[af>>2]|0;bg=pg+4|0;if(bg>>>0>(c[b>>2]|0)>>>0){Wf=514;break a}$f=(c[cf>>2]|0)+pg|0;pg=d[$f>>0]|d[$f+1>>0]<<8|d[$f+2>>0]<<16|d[$f+3>>0]<<24;c[af>>2]=bg;bg=c[ef>>2]|0;if(ub[c[(c[bg>>2]|0)+296>>2]&255](bg,pg)|0){Wf=516;break a}bg=c[ef>>2]|0;if(!(ub[c[(c[bg>>2]|0)+228>>2]&255](bg,pg)|0))Rg=gg;else{Wf=518;break a}break}case 68:{pg=c[af>>2]|0;bg=pg+8|0;if(bg>>>0>(c[b>>2]|0)>>>0){Wf=520;break a}$f=(c[cf>>2]|0)+pg|0;pg=$f;eg=d[pg>>0]|d[pg+1>>0]<<8|d[pg+2>>0]<<16|d[pg+3>>0]<<24;pg=$f+4|0;$f=d[pg>>0]|d[pg+1>>0]<<8|d[pg+2>>0]<<16|d[pg+3>>0]<<24;c[af>>2]=bg;bg=c[ef>>2]|0;if(kb[c[(c[bg>>2]|0)+300>>2]&127](bg,eg,$f)|0){Wf=522;break a}bg=c[ef>>2]|0;if(!(kb[c[(c[bg>>2]|0)+232>>2]&127](bg,eg,$f)|0))Rg=gg;else{Wf=525;break a}break}case 35:{$f=c[cf>>2]|0;eg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!eg){Wf=527;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[eg>>2]|0)+304>>2]&255](eg,$f)|0){Wf=529;break a}eg=c[ef>>2]|0;if(ub[c[(c[eg>>2]|0)+216>>2]&255](eg,$f)|0){Wf=531;break a}Rg=gg;break}case 32:{$f=c[cf>>2]|0;eg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!eg){Wf=534;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[eg>>2]|0)+308>>2]&255](eg,$f)|0){Wf=536;break a}eg=c[ef>>2]|0;if(ub[c[(c[eg>>2]|0)+216>>2]&255](eg,$f)|0){Wf=538;break a}Rg=gg;break}case 36:{$f=c[cf>>2]|0;eg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!eg){Wf=541;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[eg>>2]|0)+348>>2]&255](eg,$f)|0){Wf=543;break a}eg=c[ef>>2]|0;if(ub[c[(c[eg>>2]|0)+216>>2]&255](eg,$f)|0){Wf=545;break a}Rg=gg;break}case 33:{$f=c[cf>>2]|0;eg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!eg){Wf=548;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[eg>>2]|0)+352>>2]&255](eg,$f)|0){Wf=550;break a}eg=c[ef>>2]|0;if(ub[c[(c[eg>>2]|0)+216>>2]&255](eg,$f)|0){Wf=552;break a}Rg=gg;break}case 16:{$f=c[cf>>2]|0;eg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!eg){Wf=555;break a}c[af>>2]=(c[af>>2]|0)+eg;eg=c[f>>2]|0;if(eg>>>0>=((c[kf>>2]|0)+(c[jf>>2]|0)|0)>>>0){Wf=557;break a}$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+260>>2]&255]($f,eg)|0){Wf=559;break a}$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+216>>2]&255]($f,eg)|0){Wf=561;break a}Rg=gg;break}case 17:{eg=c[cf>>2]|0;$f=qj(eg+(c[af>>2]|0)|0,eg+(c[b>>2]|0)|0,f)|0;if(!$f){Wf=564;break a}eg=(c[af>>2]|0)+$f|0;c[af>>2]=eg;$f=c[f>>2]|0;if($f>>>0>=(c[nf>>2]|0)>>>0){Wf=566;break a}bg=c[cf>>2]|0;pg=qj(bg+eg|0,bg+(c[b>>2]|0)|0,g)|0;if(!pg){Wf=568;break a}c[af>>2]=(c[af>>2]|0)+pg;if(c[g>>2]|0){Wf=570;break a}pg=c[ef>>2]|0;if(ub[c[(c[pg>>2]|0)+264>>2]&255](pg,$f)|0){Wf=572;break a}pg=c[ef>>2]|0;if(kb[c[(c[pg>>2]|0)+220>>2]&127](pg,$f,0)|0){Wf=574;break a}Rg=gg;break}case 34:{$f=c[cf>>2]|0;pg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!pg){Wf=577;break a}c[af>>2]=(c[af>>2]|0)+pg;pg=c[ef>>2]|0;$f=c[f>>2]|0;if(ub[c[(c[pg>>2]|0)+360>>2]&255](pg,$f)|0){Wf=579;break a}pg=c[ef>>2]|0;if(ub[c[(c[pg>>2]|0)+216>>2]&255](pg,$f)|0){Wf=581;break a}Rg=gg;break}case 43:case 42:case 41:case 40:case 53:case 52:case 51:case 50:case 49:case 48:case 47:case 46:case 45:case 44:{$f=c[cf>>2]|0;pg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!pg){Wf=584;break a}$f=(c[af>>2]|0)+pg|0;c[af>>2]=$f;pg=c[cf>>2]|0;bg=qj(pg+$f|0,pg+(c[b>>2]|0)|0,g)|0;if(!bg){Wf=586;break a}c[af>>2]=(c[af>>2]|0)+bg;bg=c[ef>>2]|0;pg=c[f>>2]|0;$f=c[g>>2]|0;if(sb[c[(c[bg>>2]|0)+328>>2]&63](bg,fg,pg,$f)|0){Wf=588;break a}bg=c[ef>>2]|0;if(kb[c[(c[bg>>2]|0)+220>>2]&127](bg,pg,$f)|0){Wf=590;break a}Rg=gg;break}case 57:case 56:case 55:case 54:case 62:case 61:case 60:case 59:case 58:{$f=c[cf>>2]|0;pg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!pg){Wf=593;break a}$f=(c[af>>2]|0)+pg|0;c[af>>2]=$f;pg=c[cf>>2]|0;bg=qj(pg+$f|0,pg+(c[b>>2]|0)|0,g)|0;if(!bg){Wf=595;break a}c[af>>2]=(c[af>>2]|0)+bg;bg=c[ef>>2]|0;pg=c[f>>2]|0;$f=c[g>>2]|0;if(sb[c[(c[bg>>2]|0)+356>>2]&63](bg,fg,pg,$f)|0){Wf=597;break a}bg=c[ef>>2]|0;if(kb[c[(c[bg>>2]|0)+220>>2]&127](bg,pg,$f)|0){Wf=599;break a}Rg=gg;break}case 63:{$f=c[cf>>2]|0;pg=qj($f+(c[af>>2]|0)|0,$f+(c[b>>2]|0)|0,f)|0;if(!pg){Wf=602;break a}c[af>>2]=(c[af>>2]|0)+pg;if(c[f>>2]|0){Wf=604;break a}pg=c[ef>>2]|0;if(pb[c[(c[pg>>2]|0)+276>>2]&127](pg)|0){Wf=606;break a}pg=c[ef>>2]|0;if(ub[c[(c[pg>>2]|0)+216>>2]&255](pg,0)|0){Wf=608;break a}Rg=gg;break}case 64:{pg=c[cf>>2]|0;$f=qj(pg+(c[af>>2]|0)|0,pg+(c[b>>2]|0)|0,f)|0;if(!$f){Wf=611;break a}c[af>>2]=(c[af>>2]|0)+$f;if(c[f>>2]|0){Wf=613;break a}$f=c[ef>>2]|0;if(pb[c[(c[$f>>2]|0)+312>>2]&127]($f)|0){Wf=615;break a}$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+216>>2]&255]($f,0)|0){Wf=617;break a}Rg=gg;break}case 166:case 165:case 164:case 163:case 162:case 161:case 160:case 152:case 151:case 150:case 149:case 148:case 147:case 146:case 137:case 138:case 135:case 136:case 134:case 133:case 132:case 131:case 130:case 129:case 128:case 127:case 126:case 125:case 124:case 119:case 120:case 117:case 118:case 116:case 115:case 114:case 113:case 112:case 111:case 110:case 109:case 108:case 107:case 106:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+240>>2]&255]($f,fg)|0){Wf=620;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=622;break a}break}case 102:case 100:case 101:case 99:case 98:case 97:case 96:case 94:case 95:case 93:case 92:case 91:case 90:case 86:case 89:case 85:case 88:case 84:case 87:case 83:case 82:case 81:case 79:case 75:case 78:case 74:case 77:case 73:case 76:case 72:case 71:case 70:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+268>>2]&255]($f,fg)|0){Wf=624;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=626;break a}break}case 159:case 158:case 157:case 156:case 155:case 154:case 153:case 145:case 144:case 143:case 142:case 141:case 140:case 139:case 123:case 122:case 121:case 105:case 104:case 103:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+364>>2]&255]($f,fg)|0){Wf=628;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=630;break a}break}case 80:case 69:case 189:case 188:case 191:case 187:case 186:case 185:case 184:case 183:case 190:case 182:case 181:case 180:case 179:case 178:case 173:case 172:case 177:case 175:case 176:case 174:case 167:case 171:case 169:case 170:case 168:{$f=c[ef>>2]|0;if(ub[c[(c[$f>>2]|0)+272>>2]&255]($f,fg)|0){Wf=632;break a}$f=c[ef>>2]|0;if(!(pb[c[(c[$f>>2]|0)+212>>2]&127]($f)|0))Rg=gg;else{Wf=634;break a}break}default:{Wg=fg;Wf=635;break a}}while(0);fg=c[af>>2]|0;if(fg>>>0<hg>>>0){cg=fg;gg=Rg}else{Xg=fg;Yg=Rg;break f}}}else{Xg=ig;Yg=0}while(0);if((Xg|0)!=(hg|0)){Wf=637;break a}if(!Yg){Wf=639;break a}ig=c[ef>>2]|0;if(ub[c[(c[ig>>2]|0)+372>>2]&255](ig,ag)|0){Wf=652;break a}Uf=Uf+1|0}while(Uf>>>0<(c[Pf>>2]|0)>>>0)}Uf=c[ef>>2]|0;if(pb[c[(c[Uf>>2]|0)+376>>2]&127](Uf)|0){Wf=654;break a}break}case 11:{Uf=c[ef>>2]|0;if(ub[c[(c[Uf>>2]|0)+416>>2]&255](Uf,Xf)|0){Wf=656;break a}Uf=c[cf>>2]|0;ig=qj(Uf+(c[af>>2]|0)|0,Uf+(c[b>>2]|0)|0,g)|0;if(!ig){Wf=658;break a}c[af>>2]=(c[af>>2]|0)+ig;ig=c[ef>>2]|0;Uf=c[g>>2]|0;if(ub[c[(c[ig>>2]|0)+420>>2]&255](ig,Uf)|0){Wf=660;break a}if(Uf|0){if((c[Lf>>2]|0)==(0-(c[Ef>>2]|0)|0)){Wf=663;break a}else Zg=0;do{ig=c[cf>>2]|0;gg=qj(ig+(c[af>>2]|0)|0,ig+(c[b>>2]|0)|0,He)|0;if(!gg){Wf=666;break a}c[af>>2]=(c[af>>2]|0)+gg;gg=c[ef>>2]|0;if(kb[c[(c[gg>>2]|0)+424>>2]&127](gg,Zg,c[He>>2]|0)|0){Wf=668;break a}gg=c[ef>>2]|0;if(ub[c[(c[gg>>2]|0)+428>>2]&255](gg,Zg)|0){Wf=670;break a}xj(b,Zg);gg=c[ef>>2]|0;if(ub[c[(c[gg>>2]|0)+432>>2]&255](gg,Zg)|0){Wf=672;break a}c[f>>2]=0;gg=c[cf>>2]|0;ig=qj(gg+(c[af>>2]|0)|0,gg+(c[b>>2]|0)|0,f)|0;if(!ig){Wf=674;break a}gg=(c[af>>2]|0)+ig|0;c[af>>2]=gg;ig=c[f>>2]|0;cg=ig+gg|0;if(cg>>>0>(c[b>>2]|0)>>>0){Wf=676;break a}fg=(c[cf>>2]|0)+gg|0;c[af>>2]=cg;cg=c[ef>>2]|0;if(sb[c[(c[cg>>2]|0)+436>>2]&63](cg,Zg,fg,ig)|0){Wf=678;break a}ig=c[ef>>2]|0;if(ub[c[(c[ig>>2]|0)+440>>2]&255](ig,Zg)|0){Wf=680;break a}Zg=Zg+1|0}while(Zg>>>0<Uf>>>0)}Uf=c[ef>>2]|0;if(pb[c[(c[Uf>>2]|0)+444>>2]&127](Uf)|0){Wf=682;break a}break}default:{}}while(0);Tf=c[af>>2]|0;Xf=c[b>>2]|0;if((Tf|0)!=(Xf|0)){_g=Xf;Wf=685;break}if(Zf)c[df>>2]=Vf;Sf=c[bf>>2]|0;if(Tf>>>0>=Sf>>>0){Wf=689;break}}switch(Wf|0){case 4:{c[Ge>>2]=20646;tj(b,20659,Ge);break}case 6:{c[Fe>>2]=20689;tj(b,20659,Fe);break}case 8:{c[Ee>>2]=Yf;c[Ee+4>>2]=11;tj(b,20702,Ee);break}case 10:{tj(b,20738,De);break}case 12:{c[Ce>>2]=c[1416+(_f<<2)>>2];tj(b,20777,Ce);break}case 14:{tj(b,20801,Be);break}case 17:{c[Ae>>2]=20843;tj(b,20659,Ae);break}case 19:{c[ze>>2]=20830;tj(b,20857,ze);break}case 21:{tj(b,20883,ye);break}case 26:{tj(b,20923,xe);break}case 29:{c[we>>2]=20957;tj(b,20659,we);break}case 32:{tj(b,20967,ve);break}case 34:{tj(b,20989,ue);break}case 36:{c[te>>2]=21014;tj(b,20659,te);break}case 38:{tj(b,21030,se);break}case 41:{tj(b,21073,re);break}case 44:{c[qe>>2]=21114;tj(b,20659,qe);break}case 47:{tj(b,21125,pe);break}case 50:{c[oe>>2]=21162;tj(b,20659,oe);break}case 52:{c[ne>>2]=jg;tj(b,21177,ne);break}case 54:{c[me>>2]=20843;tj(b,20659,me);break}case 56:{c[le>>2]=21204;tj(b,20857,le);break}case 58:{tj(b,21218,ke);break}case 61:{tj(b,21249,je);break}case 64:{c[ie>>2]=21287;tj(b,20659,ie);break}case 67:{tj(b,21302,he);break}case 70:{c[ge>>2]=21162;tj(b,20659,ge);break}case 72:{c[fe>>2]=21343;tj(b,20659,fe);break}case 75:{tj(b,21355,ee);break}case 78:{c[de>>2]=21393;tj(b,20659,de);break}case 80:{c[ce>>2]=20843;tj(b,20659,ce);break}case 82:{c[be>>2]=20918;tj(b,20857,be);break}case 84:{tj(b,21405,ae);break}case 88:{c[$d>>2]=qg;tj(b,21433,$d);break}case 91:{tj(b,21478,_d);break}case 95:{tj(b,21516,Zd);break}case 97:{c[Yd>>2]=21550;tj(b,20659,Yd);break}case 101:{c[Xd>>2]=20843;tj(b,20659,Xd);break}case 103:{c[Wd>>2]=20830;tj(b,20857,Wd);break}case 106:{c[Vd>>2]=21558;tj(b,20659,Vd);break}case 109:{tj(b,21575,Ud);break}case 112:{c[Td>>2]=21604;tj(b,20659,Td);break}case 114:{c[Sd>>2]=21620;tj(b,20659,Sd);break}case 116:{c[Rd>>2]=21627;tj(b,20659,Rd);break}case 119:{c[Qd>>2]=21633;tj(b,21640,Qd);break}case 122:{tj(b,21670,Pd);break}case 124:{tj(b,21694,Od);break}case 128:{tj(b,21726,Nd);break}case 131:{tj(b,21759,Md);break}case 133:{c[Ld>>2]=21792;tj(b,20659,Ld);break}case 136:{tj(b,21803,Kd);break}case 139:{c[Jd>>2]=21831;tj(b,21640,Jd);break}case 141:{c[Id>>2]=xg;tj(b,21841,Id);break}case 143:{c[Hd>>2]=yg;tj(b,21858,Hd);break}case 145:{c[Gd>>2]=21883;tj(b,20659,Gd);break}case 153:{c[Fd>>2]=21904;tj(b,20659,Fd);break}case 156:{c[Ed>>2]=21926;tj(b,21640,Ed);break}case 158:{c[Dd>>2]=Bg;tj(b,21841,Dd);break}case 160:{c[Cd>>2]=Cg;tj(b,21946,Cd);break}case 162:{tj(b,21981,Bd);break}case 165:{c[Ad>>2]=22009;tj(b,21640,Ad);break}case 167:{c[zd>>2]=Dg;tj(b,21841,zd);break}case 169:{c[yd>>2]=Eg;tj(b,22030,yd);break}case 173:{tj(b,22061,xd);break}case 175:{tj(b,22084,wd);break}case 177:{tj(b,22115,vd);break}case 179:{c[ud>>2]=22150;tj(b,20659,ud);break}case 182:{tj(b,22163,td);break}case 185:{c[sd>>2]=20843;tj(b,20659,sd);break}case 187:{c[rd>>2]=22193;tj(b,20857,rd);break}case 189:{c[qd>>2]=20843;tj(b,20659,qd);break}case 191:{c[pd>>2]=22212;tj(b,20857,pd);break}case 193:{c[od>>2]=22230;tj(b,20659,od);break}case 196:{c[nd>>2]=22242;tj(b,20659,nd);break}case 198:{tj(b,22265,md);break}case 200:{tj(b,22296,ld);break}case 202:{tj(b,22321,kd);break}case 205:{tj(b,22296,jd);break}case 207:{tj(b,22507,id);break}case 210:{tj(b,22296,hd);break}case 212:{tj(b,22690,gd);break}case 215:{c[fd>>2]=22721;tj(b,21640,fd);break}case 217:{c[ed>>2]=Gg;tj(b,21841,ed);break}case 219:{c[dd>>2]=Hg;tj(b,22733,dd);break}case 221:{c[cd>>2]=22758;tj(b,22776,cd);break}case 223:{tj(b,22803,bd);break}case 225:{tj(b,22296,ad);break}case 227:{tj(b,22836,$c);break}case 229:{c[_c>>2]=Ig;tj(b,22867,_c);break}case 231:{tj(b,22891,Zc);break}case 234:{tj(b,22924,Yc);break}case 236:{c[Xc>>2]=22961;tj(b,20659,Xc);break}case 239:{tj(b,22986,Wc);break}case 242:{c[Vc>>2]=23018;tj(b,20659,Vc);break}case 244:{c[Uc>>2]=Jg;tj(b,23043,Uc);break}case 246:{tj(b,23080,Tc);break}case 248:{tj(b,23107,Sc);break}case 250:{tj(b,23142,Rc);break}case 252:{c[Qc>>2]=23176;tj(b,20659,Qc);break}case 254:{c[Pc>>2]=Kg;tj(b,23188,Pc);break}case 257:{tj(b,23220,Oc);break}case 260:{tj(b,23249,Nc);break}case 262:{tj(b,23273,Mc);break}case 264:{tj(b,23305,Lc);break}case 266:{c[Kc>>2]=23340;tj(b,20659,Kc);break}case 268:{tj(b,23353,Jc);break}case 271:{tj(b,23381,Ic);break}case 274:{tj(b,23411,Hc);break}case 276:{tj(b,23436,Gc);break}case 278:{tj(b,23469,Fc);break}case 280:{c[Ec>>2]=23504;tj(b,20659,Ec);break}case 283:{tj(b,23517,Dc);break}case 287:{c[Cc>>2]=22721;tj(b,21640,Cc);break}case 289:{c[Bc>>2]=Lg;tj(b,21841,Bc);break}case 291:{c[Ac>>2]=Mg;tj(b,22733,Ac);break}case 293:{c[zc>>2]=22758;tj(b,22776,zc);break}case 295:{tj(b,22803,yc);break}case 297:{tj(b,23547,xc);break}case 299:{tj(b,23575,wc);break}case 301:{tj(b,24153,vc);break}case 303:{tj(b,24187,uc);break}case 304:{tj(b,24213,tc);break}case 306:{tj(b,24246,sc);break}case 308:{c[rc>>2]=24281;tj(b,20659,rc);break}case 311:{tj(b,24294,qc);break}case 314:{c[pc>>2]=20843;tj(b,20659,pc);break}case 316:{c[oc>>2]=24324;tj(b,20857,oc);break}case 318:{c[nc>>2]=24341;tj(b,22776,nc);break}case 320:{tj(b,24362,mc);break}case 322:{c[lc>>2]=24391;tj(b,20659,lc);break}case 326:{c[kc>>2]=Og;tj(b,24409,kc);break}case 328:{tj(b,24439,jc);break}case 330:{tj(b,24466,ic);break}case 332:{tj(b,24494,hc);break}case 334:{tj(b,24522,gc);break}case 336:{tj(b,24547,fc);break}case 339:{tj(b,24580,ec);break}case 341:{c[dc>>2]=24614;tj(b,20659,dc);break}case 343:{tj(b,24635,cc);break}case 345:{tj(b,24664,bc);break}case 347:{tj(b,24696,ac);break}case 350:{tj(b,24728,$b);break}case 352:{c[_b>>2]=24761;tj(b,20659,_b);break}case 354:{tj(b,24780,Zb);break}case 357:{tj(b,24815,Yb);break}case 360:{c[Xb>>2]=24850;tj(b,20659,Xb);break}case 362:{tj(b,24875,Wb);break}case 364:{tj(b,24908,Vb);break}case 366:{tj(b,24949,Ub);break}case 368:{c[Tb>>2]=24988;tj(b,20659,Tb);break}case 371:{tj(b,25022,Sb);break}case 374:{c[Rb>>2]=25070;tj(b,20659,Rb);break}case 376:{tj(b,25098,Qb);break}case 378:{tj(b,25141,Pb);break}case 380:{tj(b,25172,Ob);break}case 383:{tj(b,25203,Nb);break}case 385:{c[Mb>>2]=25236;tj(b,20659,Mb);break}case 387:{tj(b,25256,Lb);break}case 390:{tj(b,25304,Kb);break}case 393:{tj(b,25340,Jb);break}case 395:{c[Ib>>2]=25374;tj(b,20659,Ib);break}case 397:{c[Hb>>2]=25393;tj(b,20659,Hb);break}case 400:{tj(b,25417,Gb);break}case 403:{c[Fb>>2]=23611;tj(b,22776,Fb);break}case 405:{tj(b,25450,Eb);break}case 408:{tj(b,25475,Db);break}case 410:{tj(b,25509,Cb);break}case 412:{c[Bb>>2]=25538;tj(b,21640,Bb);break}case 414:{c[Ab>>2]=Sg;tj(b,21841,Ab);break}case 416:{tj(b,25559,zb);break}case 418:{tj(b,25595,yb);break}case 420:{tj(b,25623,xb);break}case 423:{c[wb>>2]=25656;tj(b,21640,wb);break}case 425:{c[tb>>2]=Tg;tj(b,21841,tb);break}case 427:{tj(b,25559,rb);break}case 429:{tj(b,25676,qb);break}case 431:{tj(b,25623,nb);break}case 434:{c[mb>>2]=25703;tj(b,21640,mb);break}case 436:{c[lb>>2]=Ug;tj(b,21841,lb);break}case 438:{tj(b,25559,ib);break}case 440:{tj(b,25721,hb);break}case 442:{tj(b,25623,gb);break}case 445:{tj(b,25746,fb);break}case 447:{tj(b,25509,eb);break}case 449:{tj(b,25773,db);break}case 451:{tj(b,25509,cb);break}case 453:{c[bb>>2]=25802;tj(b,20659,bb);break}case 455:{tj(b,25811,ab);break}case 457:{tj(b,25836,$a);break}case 460:{c[_a>>2]=25867;tj(b,20659,_a);break}case 462:{tj(b,25879,Za);break}case 464:{tj(b,25836,Ya);break}case 467:{c[Xa>>2]=25906;tj(b,20659,Xa);break}case 475:{c[Wa>>2]=25928;tj(b,20659,Wa);break}case 478:{c[Va>>2]=25958;tj(b,20659,Va);break}case 482:{tj(b,25980,Ua);break}case 485:{tj(b,26010,Ta);break}case 487:{tj(b,25509,Sa);break}case 489:{tj(b,26039,Ra);break}case 491:{tj(b,25509,Qa);break}case 493:{tj(b,26065,Pa);break}case 495:{tj(b,25509,Oa);break}case 498:{tj(b,26092,Na);break}case 500:{tj(b,26118,Ma);break}case 502:{c[La>>2]=26144;tj(b,21640,La);break}case 504:{tj(b,26160,Ka);break}case 506:{tj(b,25836,Ja);break}case 509:{tj(b,26207,Ia);break}case 511:{tj(b,26238,Ha);break}case 514:{c[Ga>>2]=26269;tj(b,23827,Ga);break}case 516:{tj(b,26285,Fa);break}case 518:{tj(b,26316,Ea);break}case 520:{c[Da>>2]=26344;tj(b,23917,Da);break}case 522:{tj(b,26360,Ca);break}case 525:{tj(b,26391,Ba);break}case 527:{c[Aa>>2]=26419;tj(b,20659,Aa);break}case 529:{tj(b,26443,za);break}case 531:{tj(b,25836,ya);break}case 534:{c[xa>>2]=26475;tj(b,20659,xa);break}case 536:{tj(b,26497,wa);break}case 538:{tj(b,25836,va);break}case 541:{c[ua>>2]=26528;tj(b,20659,ua);break}case 543:{tj(b,26552,ta);break}case 545:{tj(b,25836,sa);break}case 548:{c[ra>>2]=26584;tj(b,20659,ra);break}case 550:{tj(b,26606,qa);break}case 552:{tj(b,25836,pa);break}case 555:{c[oa>>2]=26637;tj(b,20659,oa);break}case 557:{tj(b,26657,na);break}case 559:{tj(b,26685,ma);break}case 561:{tj(b,25836,la);break}case 564:{c[ka>>2]=26712;tj(b,20659,ka);break}case 566:{tj(b,26742,ja);break}case 568:{c[ia>>2]=26780;tj(b,20659,ia);break}case 570:{tj(b,26803,ha);break}case 572:{tj(b,26842,ga);break}case 574:{tj(b,26877,fa);break}case 577:{c[ea>>2]=26914;tj(b,20659,ea);break}case 579:{tj(b,26936,da);break}case 581:{tj(b,25836,ca);break}case 584:{c[ba>>2]=26967;tj(b,20659,ba);break}case 586:{c[aa>>2]=26982;tj(b,20659,aa);break}case 588:{tj(b,26994,$);break}case 590:{tj(b,26877,_);break}case 593:{c[Z>>2]=27021;tj(b,20659,Z);break}case 595:{c[Y>>2]=27037;tj(b,20659,Y);break}case 597:{tj(b,27050,X);break}case 599:{tj(b,26877,W);break}case 602:{c[V>>2]=27078;tj(b,20659,V);break}case 604:{tj(b,27102,U);break}case 606:{tj(b,27142,T);break}case 608:{tj(b,25836,S);break}case 611:{c[R>>2]=27178;tj(b,20659,R);break}case 613:{tj(b,27199,Q);break}case 615:{tj(b,27236,P);break}case 617:{tj(b,25836,O);break}case 620:{tj(b,27269,N);break}case 622:{tj(b,25509,M);break}case 624:{tj(b,27298,L);break}case 626:{tj(b,25509,K);break}case 628:{tj(b,27328,J);break}case 630:{tj(b,25509,I);break}case 632:{tj(b,27356,H);break}case 634:{tj(b,25509,G);break}case 635:{c[F>>2]=Wg;c[F+4>>2]=Wg;tj(b,27386,F);break}case 637:{tj(b,27415,E);break}case 639:{tj(b,27452,D);break}case 642:{c[C>>2]=27491;tj(b,20659,C);break}case 644:{c[B>>2]=27508;tj(b,21640,B);break}case 646:{c[A>>2]=Qg;tj(b,21841,A);break}case 648:{tj(b,27519,z);break}case 650:{tj(b,27545,y);break}case 652:{tj(b,27573,x);break}case 654:{tj(b,27605,w);break}case 656:{tj(b,27636,v);break}case 658:{c[u>>2]=27669;tj(b,20659,u);break}case 660:{tj(b,27688,t);break}case 663:{tj(b,27723,s);break}case 666:{c[r>>2]=27759;tj(b,20659,r);break}case 668:{tj(b,27785,q);break}case 670:{tj(b,27818,p);break}case 672:{tj(b,27859,o);break}case 674:{c[n>>2]=27916;tj(b,20659,n);break}case 676:{c[m>>2]=27898;tj(b,27926,m);break}case 678:{tj(b,27950,l);break}case 680:{tj(b,27984,k);break}case 682:{tj(b,28015,j);break}case 685:{c[h>>2]=_g;tj(b,28046,h);break}case 689:{i=e;return}}}function vj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;f=i;i=i+64|0;g=f+40|0;h=f+32|0;j=f+24|0;k=f+8|0;l=f;m=f+60|0;n=f+56|0;o=f+52|0;c[m>>2]=0;p=b+8|0;q=c[p>>2]|0;r=b+16|0;s=rj(q+(c[r>>2]|0)|0,q+(c[b>>2]|0)|0,m)|0;if(!s){c[l>>2]=22350;tj(b,21640,l)}l=(c[r>>2]|0)+s|0;c[r>>2]=l;s=c[m>>2]|0;if((s+128|0)>>>0>255){c[k>>2]=s;tj(b,21841,k)}c[d>>2]=s;if((s|0)!=-16)tj(b,22366,f+16|0);c[o>>2]=0;s=c[p>>2]|0;d=qj(s+l|0,s+(c[b>>2]|0)|0,m)|0;if(!d){c[j>>2]=22398;tj(b,20659,j)}j=(c[r>>2]|0)+d|0;c[r>>2]=j;d=c[p>>2]|0;s=qj(d+j|0,d+(c[b>>2]|0)|0,n)|0;if(!s){c[h>>2]=22410;tj(b,20659,h)}h=(c[r>>2]|0)+s|0;c[r>>2]=h;s=c[m>>2]&1;if(!s){t=c[n>>2]|0;u=0;v=e+16|0;w=s&255;a[v>>0]=w;x=e;y=x;c[y>>2]=t;z=x+4|0;A=z;c[A>>2]=0;B=e+8|0;C=B;D=C;c[D>>2]=u;E=C+4|0;F=E;c[F>>2]=0;i=f;return}m=c[p>>2]|0;p=qj(m+h|0,m+(c[b>>2]|0)|0,o)|0;if(!p){c[g>>2]=22435;tj(b,20659,g)}c[r>>2]=(c[r>>2]|0)+p;p=c[n>>2]|0;n=c[o>>2]|0;if(p>>>0>n>>>0)tj(b,22456,f+48|0);else{t=p;u=n;v=e+16|0;w=s&255;a[v>>0]=w;x=e;y=x;c[y>>2]=t;z=x+4|0;A=z;c[A>>2]=0;B=e+8|0;C=B;D=C;c[D>>2]=u;E=C+4|0;F=E;c[F>>2]=0;i=f;return}}function wj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+64|0;f=e+24|0;g=e+8|0;h=e;j=e+52|0;k=e+48|0;l=e+44|0;c[l>>2]=0;m=b+8|0;n=c[m>>2]|0;o=b+16|0;p=qj(n+(c[o>>2]|0)|0,n+(c[b>>2]|0)|0,j)|0;if(!p){c[h>>2]=22537;tj(b,20659,h)}h=(c[o>>2]|0)+p|0;c[o>>2]=h;p=c[m>>2]|0;n=qj(p+h|0,p+(c[b>>2]|0)|0,k)|0;if(!n){c[g>>2]=22550;tj(b,20659,g)}g=(c[o>>2]|0)+n|0;c[o>>2]=g;n=c[j>>2]&1;j=c[k>>2]|0;if(j>>>0>=65537)tj(b,22576,e+16|0);if(!n){q=0;r=d+16|0;s=n&255;a[r>>0]=s;t=d;u=t;c[u>>2]=j;v=t+4|0;w=v;c[w>>2]=0;x=d+8|0;y=x;z=y;c[z>>2]=q;A=y+4|0;B=A;c[B>>2]=0;i=e;return}k=c[m>>2]|0;m=qj(k+g|0,k+(c[b>>2]|0)|0,l)|0;if(!m){c[f>>2]=22604;tj(b,20659,f)}c[o>>2]=(c[o>>2]|0)+m;m=c[l>>2]|0;if(m>>>0>=65537)tj(b,22626,e+32|0);if(j>>>0>m>>>0)tj(b,22650,e+40|0);else{q=m;r=d+16|0;s=n&255;a[r>>0]=s;t=d;u=t;c[u>>2]=j;v=t+4|0;w=v;c[w>>2]=0;x=d+8|0;y=x;z=y;c[z>>2]=q;A=y+4|0;B=A;c[B>>2]=0;i=e;return}}function xj(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+112|0;g=f+104|0;h=f+96|0;j=f+88|0;k=f+72|0;l=f+56|0;m=f+40|0;n=f+16|0;o=f+8|0;p=f;q=b+16|0;r=c[q>>2]|0;s=r+1|0;t=c[b>>2]|0;if(s>>>0>t>>>0){c[o>>2]=23611;tj(b,22776,o)}o=b+8|0;u=c[o>>2]|0;v=a[u+r>>0]|0;c[q>>2]=s;w=v&255;a:do switch(w|0){case 65:{c[p>>2]=0;v=rj(u+s|0,u+t|0,p)|0;if(!v){c[n>>2]=23618;tj(b,21640,n)}c[q>>2]=(c[q>>2]|0)+v;v=c[b+4>>2]|0;if(!(kb[c[(c[v>>2]|0)+512>>2]&127](v,e,c[p>>2]|0)|0))break a;else tj(b,23644,f+24|0);break}case 66:{v=p;c[v>>2]=0;c[v+4>>2]=0;yj(b,p,23683);v=c[b+4>>2]|0;x=p;if(!(sb[c[(c[v>>2]|0)+516>>2]&63](v,e,c[x>>2]|0,c[x+4>>2]|0)|0))break a;else tj(b,23762,f+32|0);break}case 67:{x=r+5|0;if(x>>>0>t>>>0){c[m>>2]=23801;tj(b,23827,m)}v=u+s|0;y=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[q>>2]=x;x=c[b+4>>2]|0;if(kb[c[(c[x>>2]|0)+500>>2]&127](x,e,y)|0)tj(b,23852,f+48|0);break}case 68:{y=r+9|0;if(y>>>0>t>>>0){c[l>>2]=23891;tj(b,23917,l)}x=u+s|0;v=x;z=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=x+4|0;x=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;c[q>>2]=y;y=c[b+4>>2]|0;if(sb[c[(c[y>>2]|0)+504>>2]&63](y,e,z,x)|0)tj(b,23943,f+64|0);break}case 35:{x=qj(u+s|0,u+t|0,p)|0;if(!x){c[k>>2]=23982;tj(b,20659,k)}c[q>>2]=(c[q>>2]|0)+x;x=c[b+4>>2]|0;if(!(kb[c[(c[x>>2]|0)+508>>2]&127](x,e,c[p>>2]|0)|0))break a;else tj(b,24009,f+80|0);break}case 11:{i=f;return}default:{c[j>>2]=w;c[j+4>>2]=w;tj(b,24049,j)}}while(0);j=c[q>>2]|0;w=j+1|0;if(w>>>0>(c[b>>2]|0)>>>0){c[h>>2]=23611;tj(b,22776,h)}h=a[(c[o>>2]|0)+j>>0]|0;c[q>>2]=w;if(h<<24>>24==11){i=f;return}else tj(b,24104,g)}function yj(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0;g=i;i=i+16|0;h=g+8|0;j=g;k=c[b+8>>2]|0;l=b+16|0;m=c[l>>2]|0;n=k+m|0;o=c[b>>2]|0;p=k+o|0;if((m|0)<(o|0)?(o=a[n>>0]|0,o<<24>>24>-1):0){k=ao(o&255|0,0,57)|0;o=co(k|0,C|0,57)|0;k=e;c[k>>2]=o;c[k+4>>2]=C;c[l>>2]=m+1;i=g;return}k=n+1|0;if(k>>>0<p>>>0?(o=a[k>>0]|0,o<<24>>24>-1):0){q=ao(o&255|0,0,7)|0;o=ao((d[n>>0]|0)&127|q|0,C|0,50)|0;q=co(o|0,C|0,50)|0;o=e;c[o>>2]=q;c[o+4>>2]=C;c[l>>2]=m+2;i=g;return}o=n+2|0;if(o>>>0<p>>>0?(q=a[o>>0]|0,q<<24>>24>-1):0){r=ao(q&255|0,0,14)|0;q=C;s=ao(d[k>>0]|0|0,0,7)|0;t=ao((d[n>>0]|0)&127|r|s&16256|0,q|0,43)|0;q=co(t|0,C|0,43)|0;t=e;c[t>>2]=q;c[t+4>>2]=C;c[l>>2]=m+3;i=g;return}t=n+3|0;if(t>>>0<p>>>0?(q=a[t>>0]|0,q<<24>>24>-1):0){s=ao(q&255|0,0,21)|0;q=C;r=ao(d[o>>0]|0|0,0,14)|0;u=ao(d[k>>0]|0|0,0,7)|0;v=ao(r&2080768|s|(d[n>>0]|0)&127|u&16256|0,q|0,36)|0;q=co(v|0,C|0,36)|0;v=e;c[v>>2]=q;c[v+4>>2]=C;c[l>>2]=m+4;i=g;return}v=n+4|0;if(v>>>0<p>>>0?(q=a[v>>0]|0,q<<24>>24>-1):0){u=ao(q&255|0,0,28)|0;q=C;s=ao(d[t>>0]|0|0,0,21)|0;r=ao(d[o>>0]|0|0,0,14)|0;w=ao(d[k>>0]|0|0,0,7)|0;x=ao(s&266338304|u|r&2080768|(d[n>>0]|0)&127|w&16256|0,q|0,29)|0;q=co(x|0,C|0,29)|0;x=e;c[x>>2]=q;c[x+4>>2]=C;c[l>>2]=m+5;i=g;return}x=n+5|0;if(x>>>0<p>>>0?(q=a[x>>0]|0,q<<24>>24>-1):0){w=ao(q&255|0,0,35)|0;q=C;r=ao(d[v>>0]|0|0,0,28)|0;u=C&7;s=ao(d[t>>0]|0|0,0,21)|0;y=ao(d[o>>0]|0|0,0,14)|0;z=ao(d[k>>0]|0|0,0,7)|0;A=ao(r&-268435456|w|s&266338304|y&2080768|(d[n>>0]|0)&127|z&16256|0,u|q|0,22)|0;q=co(A|0,C|0,22)|0;A=e;c[A>>2]=q;c[A+4>>2]=C;c[l>>2]=m+6;i=g;return}A=n+6|0;if(A>>>0<p>>>0?(q=a[A>>0]|0,q<<24>>24>-1):0){u=ao(q&255|0,0,42)|0;q=C;ao(d[x>>0]|0|0,0,35)|0;z=C&1016;y=ao(d[v>>0]|0|0,0,28)|0;s=C&7;w=ao(d[t>>0]|0|0,0,21)|0;r=ao(d[o>>0]|0|0,0,14)|0;B=ao(d[k>>0]|0|0,0,7)|0;D=ao(u|y&-268435456|w&266338304|r&2080768|(d[n>>0]|0)&127|B&16256|0,z|q|s|0,15)|0;s=co(D|0,C|0,15)|0;D=e;c[D>>2]=s;c[D+4>>2]=C;c[l>>2]=m+7;i=g;return}D=n+7|0;if(D>>>0<p>>>0?(s=a[D>>0]|0,s<<24>>24>-1):0){q=ao(s&255|0,0,49)|0;s=C;ao(d[A>>0]|0|0,0,42)|0;z=C&130048;ao(d[x>>0]|0|0,0,35)|0;B=C&1016;r=ao(d[v>>0]|0|0,0,28)|0;w=C&7;y=ao(d[t>>0]|0|0,0,21)|0;u=ao(d[o>>0]|0|0,0,14)|0;E=ao(d[k>>0]|0|0,0,7)|0;F=ao(q|r&-268435456|y&266338304|u&2080768|(d[n>>0]|0)&127|E&16256|0,z|s|B|w|0,8)|0;w=co(F|0,C|0,8)|0;F=e;c[F>>2]=w;c[F+4>>2]=C;c[l>>2]=m+8;i=g;return}F=n+8|0;if(F>>>0<p>>>0?(w=a[F>>0]|0,w<<24>>24>-1):0){B=ao(w&255|0,0,56)|0;w=C;ao(d[D>>0]|0|0,0,49)|0;s=C&16646144;ao(d[A>>0]|0|0,0,42)|0;z=C&130048;ao(d[x>>0]|0|0,0,35)|0;E=C&1016;u=ao(d[v>>0]|0|0,0,28)|0;y=C&7;r=ao(d[t>>0]|0|0,0,21)|0;q=ao(d[o>>0]|0|0,0,14)|0;G=ao(d[k>>0]|0|0,0,7)|0;H=ao(B|u&-268435456|r&266338304|q&2080768|(d[n>>0]|0)&127|G&16256|0,s|w|z|E|y|0,1)|0;y=co(H|0,C|0,1)|0;H=e;c[H>>2]=y;c[H+4>>2]=C;c[l>>2]=m+9;i=g;return}H=n+9|0;if(H>>>0>=p>>>0){c[h>>2]=f;tj(b,23732,h)}p=a[H>>0]|0;H=p&255;if(H&128|0){c[h>>2]=f;tj(b,23732,h)}h=(H&1|0)!=0;y=H&254;if(h&(y|0)!=126){c[j>>2]=f;tj(b,23709,j)}if((y|0)!=0&(h^1)){c[j>>2]=f;tj(b,23709,j)}j=ao(p&255|0,0,63)|0;p=C;ao(d[F>>0]|0|0,0,56)|0;F=C&2130706432;ao(d[D>>0]|0|0,0,49)|0;D=C&16646144;ao(d[A>>0]|0|0,0,42)|0;A=C&130048;ao(d[x>>0]|0|0,0,35)|0;x=C&1016;b=ao(d[v>>0]|0|0,0,28)|0;v=C&7;f=ao(d[t>>0]|0|0,0,21)|0;t=ao(d[o>>0]|0|0,0,14)|0;o=ao(d[k>>0]|0|0,0,7)|0;k=e;c[k>>2]=j|b&-268435456|f&266338304|t&2080768|(d[n>>0]|0)&127|o&16256;c[k+4>>2]=F|p|D|A|x|v;c[l>>2]=m+10;i=g;return}function zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+8|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;if(e-g>>2>>>0>=b>>>0){$n(g|0,0,b<<2|0)|0;c[f>>2]=g+(b<<2);return}h=c[a>>2]|0;i=(g-h>>2)+b|0;if(i>>>0>1073741823)rn(a);g=e-h|0;if(g>>2>>>0<536870911){e=g>>1;g=e>>>0<i>>>0?i:e;e=c[f>>2]|0;i=e-h>>2;if(!g){j=0;k=0;l=i;m=e}else{n=g;o=e;p=i;q=8}}else{i=c[f>>2]|0;n=1073741823;o=i;p=i-h>>2;q=8}if((q|0)==8){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;$n(o|0,0,b<<2|0)|0;l=m-h|0;m=o+(0-(l>>2)<<2)|0;ho(m|0,h|0,l|0)|0;c[a>>2]=m;c[f>>2]=o+(b<<2);c[d>>2]=k+(j<<2);if(!h)return;An(h);return}function Aj(a){a=a|0;return}function Bj(a){a=a|0;An(a);return}function Cj(a,b){a=a|0;b=b|0;var d=0;d=c[a+12>>2]|0;return ub[c[(c[d>>2]|0)+8>>2]&255](d,b)|0}function Dj(a,b){a=a|0;b=b|0;var d=0;c[a+4>>2]=b;d=c[a+12>>2]|0;nb[c[(c[d>>2]|0)+12>>2]&31](d,b);return}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,28285,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+16>>2]&255](f,b)|0;i=d;return a|0}function Fj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,28311,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+20>>2]&127](d)|0;i=b;return a|0}function Gj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;return kb[c[(c[e>>2]|0)+24>>2]&127](e,b,d)|0}function Hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+8|0;g=e;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);n=c[j>>2]|0;j=c[d>>2]|0;c[f>>2]=c[d+4>>2];c[f+4>>2]=j;c[f+8>>2]=b;ki(n,28322,f);c[h>>2]=(c[h>>2]|0)+2;h=c[a+12>>2]|0;a=c[(c[h>>2]|0)+28>>2]|0;n=d;d=c[n+4>>2]|0;j=g;c[j>>2]=c[n>>2];c[j+4>>2]=d;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];g=kb[a&127](h,b,f)|0;i=e;return g|0}function Ij(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,28360,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+32>>2]&127](d)|0;i=b;return a|0}function Jj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,28378,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+36>>2]&255](f,b)|0;i=d;return a|0}function Kj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,28400,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+40>>2]&255](e,b)|0;i=d;return a|0}function Lj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;h=i;i=i+96|0;j=h+80|0;k=h+72|0;l=h+64|0;m=h+56|0;n=h+48|0;o=h+40|0;p=h+32|0;q=h+24|0;r=h+16|0;s=h+8|0;t=h;u=a+16|0;v=c[u>>2]|0;if(v>>>0>142){w=a+8|0;x=v;while(1){li(c[w>>2]|0,28142,142,0,0);y=x+-142|0;if(y>>>0>142)x=y;else{z=y;break}}}else z=v;v=a+8|0;if(z|0)li(c[v>>2]|0,28142,c[u>>2]|0,0,0);u=c[v>>2]|0;c[t>>2]=b;ki(u,28417,t);ki(c[v>>2]|0,28444,s);s=c[v>>2]|0;a:do if(!d)A=s;else{t=d+-1|0;u=s;z=0;while(1){switch(c[e+(z<<2)>>2]|0){case -1:{B=28480;break}case -2:{B=28476;break}case -3:{B=28472;break}case -4:{B=28468;break}case -16:{B=28460;break}case -32:{B=28455;break}case -64:{B=28450;break}case 0:{B=28446;break}default:B=0}c[r>>2]=B;ki(u,28484,r);if((z|0)!=(t|0))ki(c[v>>2]|0,28487,q);z=z+1|0;x=c[v>>2]|0;if((z|0)==(d|0)){A=x;break a}else u=x}}while(0);ki(A,28490,p);ki(c[v>>2]|0,28492,o);ki(c[v>>2]|0,28444,n);n=c[v>>2]|0;if(!f){C=n;ki(C,28490,k);D=c[v>>2]|0;ki(D,28504,j);E=a+12|0;F=c[E>>2]|0;G=c[F>>2]|0;H=G+44|0;I=c[H>>2]|0;J=ob[I&31](F,b,d,e,f,g)|0;i=h;return J|0}o=f+-1|0;p=n;n=0;while(1){switch(c[g+(n<<2)>>2]|0){case -1:{K=28480;break}case -2:{K=28476;break}case -3:{K=28472;break}case -4:{K=28468;break}case -16:{K=28460;break}case -32:{K=28455;break}case -64:{K=28450;break}case 0:{K=28446;break}default:K=0}c[m>>2]=K;ki(p,28484,m);if((n|0)!=(o|0))ki(c[v>>2]|0,28487,l);n=n+1|0;A=c[v>>2]|0;if((n|0)==(f|0)){C=A;break}else p=A}ki(C,28490,k);D=c[v>>2]|0;ki(D,28504,j);E=a+12|0;F=c[E>>2]|0;G=c[F>>2]|0;H=G+44|0;I=c[H>>2]|0;J=ob[I&31](F,b,d,e,f,g)|0;i=h;return J|0}function Mj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,28507,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+48>>2]&127](d)|0;i=b;return a|0}function Nj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,28523,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+52>>2]&255](f,b)|0;i=d;return a|0}function Oj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,28547,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+56>>2]&255](e,b)|0;i=d;return a|0}function Pj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;g=f+16|0;h=f+40|0;j=f+8|0;k=f;l=a+16|0;m=c[l>>2]|0;if(m>>>0>142){n=a+8|0;o=m;while(1){li(c[n>>2]|0,28142,142,0,0);p=o+-142|0;if(p>>>0>142)o=p;else{q=p;break}}}else q=m;m=a+8|0;if(q|0)li(c[m>>2]|0,28142,c[l>>2]|0,0,0);l=c[m>>2]|0;m=c[d+4>>2]|0;q=c[d>>2]|0;o=c[e+4>>2]|0;n=c[e>>2]|0;c[g>>2]=b;c[g+4>>2]=m;c[g+8>>2]=q;c[g+12>>2]=o;c[g+16>>2]=n;ki(l,28566,g);l=c[a+12>>2]|0;a=c[(c[l>>2]|0)+60>>2]|0;n=d;d=c[n+4>>2]|0;o=j;c[o>>2]=c[n>>2];c[o+4>>2]=d;d=e;e=c[d+4>>2]|0;o=k;c[o>>2]=c[d>>2];c[o+4>>2]=e;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];k=sb[a&63](l,b,h,g)|0;i=f;return k|0}function Qj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+48|0;j=h+16|0;k=h+32|0;l=h+8|0;m=h;n=a+16|0;o=c[n>>2]|0;if(o>>>0>142){p=a+8|0;q=o;while(1){li(c[p>>2]|0,28142,142,0,0);r=q+-142|0;if(r>>>0>142)q=r;else{s=r;break}}}else s=o;o=a+8|0;if(s|0)li(c[o>>2]|0,28142,c[n>>2]|0,0,0);n=c[o>>2]|0;c[j>>2]=b;c[j+4>>2]=f;c[j+8>>2]=g;ki(n,28618,j);n=c[a+12>>2]|0;a=c[(c[n>>2]|0)+64>>2]|0;o=d;d=c[o+4>>2]|0;s=l;c[s>>2]=c[o>>2];c[s+4>>2]=d;d=e;e=c[d+4>>2]|0;s=m;c[s>>2]=c[d>>2];c[s+4>>2]=e;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[j>>2]=c[m>>2];c[j+4>>2]=c[m+4>>2];m=ob[a&31](n,b,k,j,f,g)|0;i=h;return m|0}function Rj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+176|0;l=k+40|0;m=k+56|0;n=k+32|0;o=k+16|0;p=k+64|0;q=k+8|0;r=k;s=j;t=c[s>>2]|0;u=c[s+4>>2]|0;if(!(a[j+16>>0]|0)){s=n;c[s>>2]=t;c[s+4>>2]=u;dm(p,100,28706,n)|0}else{n=j+8|0;s=c[n>>2]|0;v=c[n+4>>2]|0;n=o;c[n>>2]=t;c[n+4>>2]=u;u=o+8|0;c[u>>2]=s;c[u+4>>2]=v;dm(p,100,28681,o)|0}o=b+16|0;v=c[o>>2]|0;if(v>>>0>142){u=b+8|0;s=v;while(1){li(c[u>>2]|0,28142,142,0,0);n=s+-142|0;if(n>>>0>142)s=n;else{w=n;break}}}else w=v;v=b+8|0;if(w|0)li(c[v>>2]|0,28142,c[o>>2]|0,0,0);o=c[v>>2]|0;switch(h|0){case -1:{x=28480;break}case -2:{x=28476;break}case -3:{x=28472;break}case -4:{x=28468;break}case -16:{x=28460;break}case -32:{x=28455;break}case -64:{x=28450;break}case 0:{x=28446;break}default:x=0}c[l>>2]=d;c[l+4>>2]=g;c[l+8>>2]=x;c[l+12>>2]=p;ki(o,28720,l);o=c[b+12>>2]|0;b=c[(c[o>>2]|0)+68>>2]|0;p=e;e=c[p+4>>2]|0;x=q;c[x>>2]=c[p>>2];c[x+4>>2]=e;e=f;f=c[e+4>>2]|0;x=r;c[x>>2]=c[e>>2];c[x+4>>2]=f;c[m>>2]=c[q>>2];c[m+4>>2]=c[q+4>>2];c[l>>2]=c[r>>2];c[l+4>>2]=c[r+4>>2];r=jb[b&31](o,d,m,l,g,h,j)|0;i=k;return r|0}function Sj(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+176|0;k=j+40|0;l=j+56|0;m=j+32|0;n=j+16|0;o=j+64|0;p=j+8|0;q=j;r=h;s=c[r>>2]|0;t=c[r+4>>2]|0;if(!(a[h+16>>0]|0)){r=m;c[r>>2]=s;c[r+4>>2]=t;dm(o,100,28706,m)|0}else{m=h+8|0;r=c[m>>2]|0;u=c[m+4>>2]|0;m=n;c[m>>2]=s;c[m+4>>2]=t;t=n+8|0;c[t>>2]=r;c[t+4>>2]=u;dm(o,100,28681,n)|0}n=b+16|0;u=c[n>>2]|0;if(u>>>0>142){t=b+8|0;r=u;while(1){li(c[t>>2]|0,28142,142,0,0);m=r+-142|0;if(m>>>0>142)r=m;else{v=m;break}}}else v=u;u=b+8|0;if(v|0)li(c[u>>2]|0,28142,c[n>>2]|0,0,0);n=c[u>>2]|0;c[k>>2]=d;c[k+4>>2]=g;c[k+8>>2]=o;ki(n,28789,k);n=c[b+12>>2]|0;b=c[(c[n>>2]|0)+72>>2]|0;o=e;e=c[o+4>>2]|0;u=p;c[u>>2]=c[o>>2];c[u+4>>2]=e;e=f;f=c[e+4>>2]|0;u=q;c[u>>2]=c[e>>2];c[u+4>>2]=f;c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];q=ob[b&31](n,d,l,k,g,h)|0;i=j;return q|0}function Tj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+48|0;k=j+16|0;l=j+32|0;m=j+8|0;n=j;o=a+16|0;p=c[o>>2]|0;if(p>>>0>142){q=a+8|0;r=p;while(1){li(c[q>>2]|0,28142,142,0,0);s=r+-142|0;if(s>>>0>142)r=s;else{t=s;break}}}else t=p;p=a+8|0;if(t|0)li(c[p>>2]|0,28142,c[o>>2]|0,0,0);o=c[p>>2]|0;switch(g|0){case -1:{u=28480;break}case -2:{u=28476;break}case -3:{u=28472;break}case -4:{u=28468;break}case -16:{u=28460;break}case -32:{u=28455;break}case -64:{u=28450;break}case 0:{u=28446;break}default:u=0}c[k>>2]=b;c[k+4>>2]=f;c[k+8>>2]=u;c[k+12>>2]=h?28845:28850;ki(o,28856,k);o=c[a+12>>2]|0;a=c[(c[o>>2]|0)+76>>2]|0;u=d;d=c[u+4>>2]|0;p=m;c[p>>2]=c[u>>2];c[p+4>>2]=d;d=e;e=c[d+4>>2]|0;p=n;c[p>>2]=c[d>>2];c[p+4>>2]=e;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];n=jb[a&31](o,b,l,k,f,g,h)|0;i=j;return n|0}function Uj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,28931,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+80>>2]&127](d)|0;i=b;return a|0}function Vj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,28949,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+84>>2]&255](f,b)|0;i=d;return a|0}function Wj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,28975,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+88>>2]&255](e,b)|0;i=d;return a|0}function Xj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,28996,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+92>>2]&127](f,b,d)|0;i=e;return a|0}function Yj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29034,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+96>>2]&127](d)|0;i=b;return a|0}function Zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,29054,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+100>>2]&255](f,b)|0;i=d;return a|0}function _j(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29077,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+104>>2]&255](e,b)|0;i=d;return a|0}function $j(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+144|0;h=g+24|0;j=g+16|0;k=g;l=g+36|0;m=f;n=c[m>>2]|0;o=c[m+4>>2]|0;if(!(a[f+16>>0]|0)){m=j;c[m>>2]=n;c[m+4>>2]=o;dm(l,100,28706,j)|0}else{j=f+8|0;m=c[j>>2]|0;p=c[j+4>>2]|0;j=k;c[j>>2]=n;c[j+4>>2]=o;o=k+8|0;c[o>>2]=m;c[o+4>>2]=p;dm(l,100,28681,k)|0}k=b+16|0;p=c[k>>2]|0;if(p>>>0>142){o=b+8|0;m=p;while(1){li(c[o>>2]|0,28142,142,0,0);j=m+-142|0;if(j>>>0>142)m=j;else{q=j;break}}}else q=p;p=b+8|0;if(q|0)li(c[p>>2]|0,28142,c[k>>2]|0,0,0);k=c[p>>2]|0;switch(e|0){case -1:{r=28480;break}case -2:{r=28476;break}case -3:{r=28472;break}case -4:{r=28468;break}case -16:{r=28460;break}case -32:{r=28455;break}case -64:{r=28450;break}case 0:{r=28446;break}default:r=0}c[h>>2]=d;c[h+4>>2]=r;c[h+8>>2]=l;ki(k,29095,h);h=c[b+12>>2]|0;b=sb[c[(c[h>>2]|0)+108>>2]&63](h,d,e,f)|0;i=g;return b|0}function ak(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29134,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+112>>2]&127](d)|0;i=b;return a|0}function bk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,29151,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+116>>2]&255](f,b)|0;i=d;return a|0}function ck(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29175,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+120>>2]&255](e,b)|0;i=d;return a|0}function dk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+144|0;g=f+24|0;h=f+16|0;j=f;k=f+32|0;l=e;m=c[l>>2]|0;n=c[l+4>>2]|0;if(!(a[e+16>>0]|0)){l=h;c[l>>2]=m;c[l+4>>2]=n;dm(k,100,28706,h)|0}else{h=e+8|0;l=c[h>>2]|0;o=c[h+4>>2]|0;h=j;c[h>>2]=m;c[h+4>>2]=n;n=j+8|0;c[n>>2]=l;c[n+4>>2]=o;dm(k,100,28681,j)|0}j=b+16|0;o=c[j>>2]|0;if(o>>>0>142){n=b+8|0;l=o;while(1){li(c[n>>2]|0,28142,142,0,0);h=l+-142|0;if(h>>>0>142)l=h;else{p=h;break}}}else p=o;o=b+8|0;if(p|0)li(c[o>>2]|0,28142,c[j>>2]|0,0,0);j=c[o>>2]|0;c[g>>2]=d;c[g+4>>2]=k;ki(j,29194,g);g=c[b+12>>2]|0;b=kb[c[(c[g>>2]|0)+124>>2]&127](g,d,e)|0;i=f;return b|0}function ek(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29219,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+128>>2]&127](d)|0;i=b;return a|0}function fk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,29237,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+132>>2]&255](f,b)|0;i=d;return a|0}function gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29261,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+136>>2]&255](e,b)|0;i=d;return a|0}function hk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;switch(d|0){case -1:{o=28480;break}case -2:{o=28476;break}case -3:{o=28472;break}case -4:{o=28468;break}case -16:{o=28460;break}case -32:{o=28455;break}case -64:{o=28450;break}case 0:{o=28446;break}default:o=0}c[g>>2]=b;c[g+4>>2]=o;c[g+8>>2]=e?28845:28850;ki(h,29280,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+140>>2]&63](g,b,d,e)|0;i=f;return a|0}function ik(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29327,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+144>>2]&255](e,b)|0;i=d;return a|0}function jk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29352,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+148>>2]&255](e,b)|0;i=d;return a|0}function kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29375,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+152>>2]&255](e,b)|0;i=d;return a|0}function lk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29390,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+156>>2]&127](d)|0;i=b;return a|0}function mk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,29408,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+160>>2]&255](f,b)|0;i=d;return a|0}function nk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29432,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+164>>2]&255](e,b)|0;i=d;return a|0}function ok(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+32|0;h=g+8|0;j=g;k=a+16|0;l=c[k>>2]|0;if(l>>>0>142){m=a+8|0;n=l;while(1){li(c[m>>2]|0,28142,142,0,0);o=n+-142|0;if(o>>>0>142)n=o;else{p=o;break}}}else p=l;l=a+8|0;if(p|0)li(c[l>>2]|0,28142,c[k>>2]|0,0,0);k=c[l>>2]|0;l=c[1464+(d<<2)>>2]|0;p=c[f+4>>2]|0;n=c[f>>2]|0;c[h>>2]=b;c[h+4>>2]=l;c[h+8>>2]=e;c[h+12>>2]=p;c[h+16>>2]=n;ki(k,29451,h);k=c[a+12>>2]|0;a=c[(c[k>>2]|0)+168>>2]|0;n=f;f=c[n+4>>2]|0;p=j;c[p>>2]=c[n>>2];c[p+4>>2]=f;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];j=vb[a&31](k,b,d,e,h)|0;i=g;return j|0}function pk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29512,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+172>>2]&127](d)|0;i=b;return a|0}function qk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,29530,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+176>>2]&255](f,b)|0;i=d;return a|0}function rk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29553,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+180>>2]&255](e,b)|0;i=d;return a|0}function sk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29574,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+184>>2]&127](d)|0;i=b;return a|0}function tk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,29591,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+188>>2]&255](f,b)|0;i=d;return a|0}function uk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29613,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+192>>2]&255](e,b)|0;i=d;return a|0}function vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29638,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+196>>2]&255](e,b)|0;i=d;return a|0}function wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29661,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+200>>2]&255](e,b)|0;i=d;return a|0}function xk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;switch(e|0){case -1:{o=28480;break}case -2:{o=28476;break}case -3:{o=28472;break}case -4:{o=28468;break}case -16:{o=28460;break}case -32:{o=28455;break}case -64:{o=28450;break}case 0:{o=28446;break}default:o=0}c[g>>2]=b;c[g+4>>2]=d;c[g+8>>2]=o;ki(h,29683,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+204>>2]&63](g,b,d,e)|0;i=f;return a|0}function yk(a,b){a=a|0;b=b|0;var d=0;d=c[a+12>>2]|0;return ub[c[(c[d>>2]|0)+208>>2]&255](d,b)|0}function zk(a){a=a|0;var b=0;b=c[a+12>>2]|0;return pb[c[(c[b>>2]|0)+212>>2]&127](b)|0}function Ak(a,b){a=a|0;b=b|0;var d=0;d=c[a+12>>2]|0;return ub[c[(c[d>>2]|0)+216>>2]&255](d,b)|0}function Bk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;return kb[c[(c[e>>2]|0)+220>>2]&127](e,b,d)|0}function Ck(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;return kb[c[(c[e>>2]|0)+224>>2]&127](e,b,d)|0}function Dk(a,b){a=a|0;b=b|0;var d=0;d=c[a+12>>2]|0;return ub[c[(c[d>>2]|0)+228>>2]&255](d,b)|0}function Ek(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;return kb[c[(c[e>>2]|0)+232>>2]&127](e,b,d)|0}function Fk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+12>>2]|0;return kb[c[(c[e>>2]|0)+236>>2]&127](e,b,d)|0}function Gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=c[1536+(b*20|0)>>2];c[e+4>>2]=b;ki(f,29728,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+240>>2]&255](e,b)|0;i=d;return a|0}function Hk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+48|0;f=e+40|0;g=e+32|0;h=e+24|0;j=e+16|0;k=e+8|0;l=e;m=a+16|0;n=c[m>>2]|0;if(n>>>0>142){o=a+8|0;p=n;while(1){li(c[o>>2]|0,28142,142,0,0);q=p+-142|0;if(q>>>0>142)p=q;else{r=q;break}}}else r=n;n=a+8|0;if(r|0)li(c[n>>2]|0,28142,c[m>>2]|0,0,0);ki(c[n>>2]|0,29753,l);ki(c[n>>2]|0,28444,k);k=c[n>>2]|0;a:do if(!b)s=k;else{l=b+-1|0;m=k;r=0;while(1){switch(c[d+(r<<2)>>2]|0){case -1:{t=28480;break}case -2:{t=28476;break}case -3:{t=28472;break}case -4:{t=28468;break}case -16:{t=28460;break}case -32:{t=28455;break}case -64:{t=28450;break}case 0:{t=28446;break}default:t=0}c[j>>2]=t;ki(m,28484,j);if((r|0)!=(l|0))ki(c[n>>2]|0,28487,h);r=r+1|0;p=c[n>>2]|0;if((r|0)==(b|0)){s=p;break a}else m=p}}while(0);ki(s,28490,g);ki(c[n>>2]|0,28504,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+244>>2]&127](f,b,d)|0;i=e;return a|0}function Ik(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29771,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+248>>2]&255](e,b)|0;i=d;return a|0}function Jk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29792,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+252>>2]&255](e,b)|0;i=d;return a|0}function Kk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+32|0;g=f+24|0;h=f+16|0;j=f+8|0;k=f;l=a+16|0;m=c[l>>2]|0;if(m>>>0>142){n=a+8|0;o=m;while(1){li(c[n>>2]|0,28142,142,0,0);p=o+-142|0;if(p>>>0>142)o=p;else{q=p;break}}}else q=m;m=a+8|0;if(q|0)li(c[m>>2]|0,28142,c[l>>2]|0,0,0);l=c[m>>2]|0;c[k>>2]=b;ki(l,29815,k);k=c[m>>2]|0;if(!b)r=k;else{l=b+-1|0;q=k;k=0;while(1){c[h>>2]=c[d+(k<<2)>>2];ki(q,29873,h);if((k|0)!=(l|0))ki(c[m>>2]|0,28487,g);k=k+1|0;o=c[m>>2]|0;if((k|0)==(b|0)){r=o;break}else q=o}}c[j>>2]=e;ki(r,29856,j);j=c[a+12>>2]|0;a=sb[c[(c[j>>2]|0)+256>>2]&63](j,b,d,e)|0;i=f;return a|0}function Lk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29876,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+260>>2]&255](e,b)|0;i=d;return a|0}function Mk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,29904,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+264>>2]&255](e,b)|0;i=d;return a|0}function Nk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=c[1536+(b*20|0)>>2];c[e+4>>2]=b;ki(f,29939,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+268>>2]&255](e,b)|0;i=d;return a|0}function Ok(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=c[1536+(b*20|0)>>2];c[e+4>>2]=b;ki(f,29965,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+272>>2]&255](e,b)|0;i=d;return a|0}function Pk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,29991,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+276>>2]&127](d)|0;i=b;return a|0}function Qk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30012,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+280>>2]&127](d)|0;i=b;return a|0}function Rk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30024,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+284>>2]&127](d)|0;i=b;return a|0}function Sk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30036,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+288>>2]&127](d)|0;i=b;return a|0}function Tk(a){a=a|0;var b=0;b=c[a+12>>2]|0;return pb[c[(c[b>>2]|0)+292>>2]&127](b)|0}function Uk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,j=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+16|0;e=d;f=(c[k>>2]=b,+g[k>>2]);j=a+16|0;l=c[j>>2]|0;if(l>>>0>142){m=a+8|0;n=l;while(1){li(c[m>>2]|0,28142,142,0,0);o=n+-142|0;if(o>>>0>142)n=o;else{p=o;break}}}else p=l;l=a+8|0;if(p|0)li(c[l>>2]|0,28142,c[j>>2]|0,0,0);j=c[l>>2]|0;h[e>>3]=f;c[e+8>>2]=b;ki(j,30047,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+296>>2]&255](e,b)|0;i=d;return a|0}function Vk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0,j=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;f=e;c[k>>2]=b;c[k+4>>2]=d;g=+h[k>>3];j=a+16|0;l=c[j>>2]|0;if(l>>>0>142){m=a+8|0;n=l;while(1){li(c[m>>2]|0,28142,142,0,0);o=n+-142|0;if(o>>>0>142)n=o;else{p=o;break}}}else p=l;l=a+8|0;if(p|0)li(c[l>>2]|0,28142,c[j>>2]|0,0,0);j=c[l>>2]|0;h[f>>3]=g;l=f+8|0;c[l>>2]=b;c[l+4>>2]=d;ki(j,30076,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+300>>2]&127](f,b,d)|0;i=e;return a|0}function Wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30107,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+304>>2]&255](e,b)|0;i=d;return a|0}function Xk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30135,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+308>>2]&255](e,b)|0;i=d;return a|0}function Yk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30162,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+312>>2]&127](d)|0;i=b;return a|0}function Zk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;c[e+4>>2]=b;ki(f,30180,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+316>>2]&255](e,b)|0;i=d;return a|0}function _k(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;h=f;c[h>>2]=b;c[h+4>>2]=d;h=f+8|0;c[h>>2]=b;c[h+4>>2]=d;ki(g,30207,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+320>>2]&127](f,b,d)|0;i=e;return a|0}function $k(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+48|0;f=e+40|0;g=e+32|0;h=e+24|0;j=e+16|0;k=e+8|0;l=e;m=a+16|0;n=c[m>>2]|0;if(n>>>0>142){o=a+8|0;p=n;while(1){li(c[o>>2]|0,28142,142,0,0);q=p+-142|0;if(q>>>0>142)p=q;else{r=q;break}}}else r=n;n=a+8|0;if(r|0)li(c[n>>2]|0,28142,c[m>>2]|0,0,0);ki(c[n>>2]|0,30238,l);ki(c[n>>2]|0,28444,k);k=c[n>>2]|0;a:do if(!b)s=k;else{l=b+-1|0;m=k;r=0;while(1){switch(c[d+(r<<2)>>2]|0){case -1:{t=28480;break}case -2:{t=28476;break}case -3:{t=28472;break}case -4:{t=28468;break}case -16:{t=28460;break}case -32:{t=28455;break}case -64:{t=28450;break}case 0:{t=28446;break}default:t=0}c[j>>2]=t;ki(m,28484,j);if((r|0)!=(l|0))ki(c[n>>2]|0,28487,h);r=r+1|0;p=c[n>>2]|0;if((r|0)==(b|0)){s=p;break a}else m=p}}while(0);ki(s,28490,g);ki(c[n>>2]|0,28504,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+324>>2]&127](f,b,d)|0;i=e;return a|0}function al(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;c[g>>2]=c[1536+(b*20|0)>>2];c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;ki(h,30253,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+328>>2]&63](g,b,d,e)|0;i=f;return a|0}function bl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+48|0;f=e+40|0;g=e+32|0;h=e+24|0;j=e+16|0;k=e+8|0;l=e;m=a+16|0;n=c[m>>2]|0;if(n>>>0>142){o=a+8|0;p=n;while(1){li(c[o>>2]|0,28142,142,0,0);q=p+-142|0;if(q>>>0>142)p=q;else{r=q;break}}}else r=n;n=a+8|0;if(r|0)li(c[n>>2]|0,28142,c[m>>2]|0,0,0);ki(c[n>>2]|0,30312,l);ki(c[n>>2]|0,28444,k);k=c[n>>2]|0;a:do if(!b)s=k;else{l=b+-1|0;m=k;r=0;while(1){switch(c[d+(r<<2)>>2]|0){case -1:{t=28480;break}case -2:{t=28476;break}case -3:{t=28472;break}case -4:{t=28468;break}case -16:{t=28460;break}case -32:{t=28455;break}case -64:{t=28450;break}case 0:{t=28446;break}default:t=0}c[j>>2]=t;ki(m,28484,j);if((r|0)!=(l|0))ki(c[n>>2]|0,28487,h);r=r+1|0;p=c[n>>2]|0;if((r|0)==(b|0)){s=p;break a}else m=p}}while(0);ki(s,28490,g);ki(c[n>>2]|0,28504,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+332>>2]&127](f,b,d)|0;i=e;return a|0}function cl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30329,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+336>>2]&127](d)|0;i=b;return a|0}function dl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30340,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+340>>2]&127](d)|0;i=b;return a|0}function el(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30354,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+344>>2]&127](d)|0;i=b;return a|0}function fl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30368,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+348>>2]&255](e,b)|0;i=d;return a|0}function gl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30396,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+352>>2]&255](e,b)|0;i=d;return a|0}function hl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;c[g>>2]=c[1536+(b*20|0)>>2];c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;ki(h,30423,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+356>>2]&63](g,b,d,e)|0;i=f;return a|0}function il(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30483,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+360>>2]&255](e,b)|0;i=d;return a|0}function jl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=c[1536+(b*20|0)>>2];c[e+4>>2]=b;ki(f,30510,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+364>>2]&255](e,b)|0;i=d;return a|0}function kl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=c[e>>2]|0;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30534,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+368>>2]&127](d)|0;i=b;return a|0}function ll(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30553,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+372>>2]&255](e,b)|0;i=d;return a|0}function ml(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30574,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+376>>2]&127](d)|0;i=b;return a|0}function nl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,30590,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+380>>2]&255](f,b)|0;i=d;return a|0}function ol(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30612,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+384>>2]&255](e,b)|0;i=d;return a|0}function pl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,30636,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+388>>2]&127](f,b,d)|0;i=e;return a|0}function ql(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30682,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+392>>2]&255](e,b)|0;i=d;return a|0}function rl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30712,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+396>>2]&255](e,b)|0;i=d;return a|0}function sl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,30740,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+400>>2]&127](f,b,d)|0;i=e;return a|0}function tl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,30795,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+404>>2]&127](f,b,d)|0;i=e;return a|0}function ul(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30850,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+408>>2]&255](e,b)|0;i=d;return a|0}function vl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,30870,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+412>>2]&127](d)|0;i=b;return a|0}function wl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,30886,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+416>>2]&255](f,b)|0;i=d;return a|0}function xl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30908,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+420>>2]&255](e,b)|0;i=d;return a|0}function yl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,30932,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+424>>2]&127](f,b,d)|0;i=e;return a|0}function zl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,30979,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+428>>2]&255](e,b)|0;i=d;return a|0}function Al(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,31009,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+432>>2]&255](e,b)|0;i=d;return a|0}function Bl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;c[g>>2]=b;c[g+4>>2]=e;ki(h,31037,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+436>>2]&63](g,b,d,e)|0;i=f;return a|0}function Cl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,31075,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+440>>2]&255](e,b)|0;i=d;return a|0}function Dl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,31095,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+444>>2]&127](d)|0;i=b;return a|0}function El(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,31111,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+448>>2]&255](f,b)|0;i=d;return a|0}function Fl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;c[g>>2]=b;c[g+4>>2]=d;c[g+8>>2]=e;ki(h,31134,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+452>>2]&63](g,b,d,e)|0;i=f;return a|0}function Gl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,31192,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+456>>2]&255](e,b)|0;i=d;return a|0}function Hl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+8|0;g=e;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;j=c[d+4>>2]|0;n=c[d>>2]|0;c[f>>2]=b;c[f+4>>2]=j;c[f+8>>2]=n;ki(h,31218,f);h=c[a+12>>2]|0;a=c[(c[h>>2]|0)+460>>2]|0;n=d;d=c[n+4>>2]|0;j=g;c[j>>2]=c[n>>2];c[j+4>>2]=d;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];g=kb[a&127](h,b,f)|0;i=e;return g|0}function Il(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;c[g>>2]=b;c[g+4>>2]=d;c[g+8>>2]=e;ki(h,31259,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+464>>2]&63](g,b,d,e)|0;i=f;return a|0}
function Je(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0;f=i;i=i+416|0;g=f+96|0;h=f+88|0;j=f+80|0;k=f+72|0;l=f+64|0;m=f+56|0;n=f+48|0;o=f+40|0;p=f+32|0;q=f+24|0;r=f+16|0;s=f+8|0;t=f;u=f+296|0;v=f+168|0;w=f+304|0;x=f+104|0;gi(x,b,c[e>>2]|0);b=x+16|0;c[b>>2]=e;e=x+20|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[x+44>>2]=12;y=x+48|0;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[u>>2]=1836278016;li(x,u,4,16286,0);c[u>>2]=1;li(x,u,4,16304,0);y=d+96|0;z=d+100|0;if((c[z>>2]|0)!=(c[y>>2]|0)){Ke(x,1);A=(c[z>>2]|0)-(c[y>>2]|0)>>2;B=A>>>7;if(!B){C=A;D=0}else{E=A;A=B;B=0;while(1){a[u+B>>0]=E|128;F=B+1|0;G=A>>>7;if(!G){C=A;D=F;break}else{H=A;A=G;B=F;E=H}}}a[u+D>>0]=C&127;li(x,u,D+1|0,16369,0);D=c[y>>2]|0;if((c[z>>2]|0)!=(D|0)){C=x+12|0;E=D;D=0;do{B=c[E+(D<<2)>>2]|0;A=c[C>>2]|0;if(A|0){c[t>>2]=16398;c[t+4>>2]=D;ki(A,16403,t)}a[u>>0]=96;li(x,u,1,28455,0);A=B+8|0;H=(c[B+12>>2]|0)-(c[A>>2]|0)>>2;F=B+20|0;G=(c[B+24>>2]|0)-(c[F>>2]|0)>>2;B=H>>>7;if(!B){I=H;J=0}else{K=H;L=B;B=0;while(1){a[u+B>>0]=K|128;M=B+1|0;N=L>>>7;if(!N){I=L;J=M;break}else{O=L;L=N;B=M;K=O}}}a[u+J>>0]=I&127;li(x,u,J+1|0,16412,0);if(H|0){K=0;do{He(x,c[(c[A>>2]|0)+(K<<2)>>2]|0);K=K+1|0}while((K|0)!=(H|0))}H=G>>>7;if(!H){P=G;Q=0}else{K=G;A=H;H=0;while(1){a[u+H>>0]=K|128;B=H+1|0;L=A>>>7;if(!L){P=A;Q=B;break}else{O=A;A=L;H=B;K=O}}}a[u+Q>>0]=P&127;li(x,u,Q+1|0,16423,0);if(G|0){K=0;do{He(x,c[(c[F>>2]|0)+(K<<2)>>2]|0);K=K+1|0}while((K|0)!=(G|0))}D=D+1|0;E=c[y>>2]|0}while(D>>>0<(c[z>>2]|0)-E>>2>>>0)}Le(x)}E=d+72|0;z=d+76|0;if((c[z>>2]|0)!=(c[E>>2]|0)){Ke(x,2);D=(c[z>>2]|0)-(c[E>>2]|0)>>2;y=D>>>7;if(!y){R=D;S=0}else{Q=D;D=y;y=0;while(1){a[u+y>>0]=Q|128;P=y+1|0;J=D>>>7;if(!J){R=D;S=P;break}else{I=D;D=J;y=P;Q=I}}}a[u+S>>0]=R&127;li(x,u,S+1|0,16435,0);S=c[E>>2]|0;a:do if((c[z>>2]|0)!=(S|0)){R=x+12|0;Q=S;y=0;while(1){D=c[Q+(y<<2)>>2]|0;I=c[R>>2]|0;if(I|0){c[s>>2]=16447;c[s+4>>2]=y;ki(I,16403,s)}I=c[D>>2]|0;P=c[D+4>>2]|0;J=P>>>7;if(!J){T=P;U=0}else{t=P;C=J;J=0;while(1){a[u+J>>0]=t|128;G=J+1|0;K=C>>>7;if(!K){T=C;U=G;break}else{F=C;C=K;J=G;t=F}}}a[u+U>>0]=T&127;li(x,u,U+1|0,20843,0);li(x,I,P,22193,1);t=c[D+8>>2]|0;J=c[D+12>>2]|0;C=J>>>7;if(!C){V=J;W=0}else{F=J;G=C;C=0;while(1){a[u+C>>0]=F|128;K=C+1|0;H=G>>>7;if(!H){V=G;W=K;break}else{A=G;G=H;C=K;F=A}}}a[u+W>>0]=V&127;li(x,u,W+1|0,20843,0);li(x,t,J,22212,1);F=D+16|0;a[u>>0]=c[F>>2];li(x,u,1,22230,0);switch(c[F>>2]|0){case 0:{F=tc(d,(c[D+20>>2]|0)+8|0)|0;C=F>>>7;if(!C){X=F;Y=0}else{G=F;F=C;C=0;while(1){a[u+C>>0]=G|128;P=C+1|0;I=F>>>7;if(!I){X=F;Y=P;break}else{A=F;F=I;C=P;G=A}}}a[u+Y>>0]=X&127;li(x,u,Y+1|0,22242,0);break}case 1:{G=c[D+20>>2]|0;a[u>>0]=112;li(x,u,1,28460,0);Ie(x,G+8|0);break}case 2:{Ie(x,(c[D+20>>2]|0)+8|0);break}case 3:{G=c[D+20>>2]|0;He(x,c[G+8>>2]|0);a[u>>0]=a[G+12>>0]|0;li(x,u,1,22758,0);break}default:{}}y=y+1|0;Q=c[E>>2]|0;if(y>>>0>=(c[z>>2]|0)-Q>>2>>>0)break a}}while(0);Le(x)}z=d+48|0;E=d+52|0;Y=(c[E>>2]|0)-(c[z>>2]|0)>>2;X=d+32|0;W=c[X>>2]|0;V=Y-W|0;U=(Y|0)!=(W|0);if(U){Ke(x,3);W=V>>>7;if(!W){Z=V;_=0}else{Y=V;T=W;W=0;while(1){a[u+W>>0]=Y|128;s=W+1|0;S=T>>>7;if(!S){Z=T;_=s;break}else{Q=T;T=S;W=s;Y=Q}}}a[u+_>>0]=Z&127;li(x,u,_+1|0,16461,0);_=0;do{Z=c[(c[z>>2]|0)+((c[X>>2]|0)+_<<2)>>2]|0;c[r>>2]=_;dm(v,100,16475,r)|0;Y=tc(d,Z+8|0)|0;Z=Y>>>7;if(!Z){$=Y;aa=0}else{W=Y;Y=Z;Z=0;while(1){a[u+Z>>0]=W|128;T=Z+1|0;Q=Y>>>7;if(!Q){$=Y;aa=T;break}else{s=Y;Y=Q;Z=T;W=s}}}a[u+aa>>0]=$&127;li(x,u,aa+1|0,v,0);_=_+1|0}while((_|0)!=(V|0));Le(x)}_=d+108|0;aa=(c[d+112>>2]|0)-(c[_>>2]|0)>>2;$=d+36|0;r=c[$>>2]|0;W=aa-r|0;if((aa|0)!=(r|0)){Ke(x,4);r=W>>>7;if(!r){ba=W;ca=0}else{aa=W;Z=r;r=0;while(1){a[u+r>>0]=aa|128;Y=r+1|0;s=Z>>>7;if(!s){ba=Z;ca=Y;break}else{T=Z;Z=s;r=Y;aa=T}}}a[u+ca>>0]=ba&127;li(x,u,ca+1|0,16504,0);ca=x+12|0;ba=0;do{aa=c[(c[_>>2]|0)+((c[$>>2]|0)+ba<<2)>>2]|0;r=c[ca>>2]|0;if(r|0){c[q>>2]=17865;c[q+4>>2]=ba;ki(r,16403,q)}a[u>>0]=112;li(x,u,1,28460,0);Ie(x,aa+8|0);ba=ba+1|0}while((ba|0)!=(W|0));Le(x)}W=d+132|0;ba=(c[d+136>>2]|0)-(c[W>>2]|0)>>2;q=d+40|0;ca=c[q>>2]|0;$=ba-ca|0;if((ba|0)!=(ca|0)){Ke(x,5);ca=$>>>7;if(!ca){da=$;ea=0}else{ba=$;_=ca;ca=0;while(1){a[u+ca>>0]=ba|128;aa=ca+1|0;r=_>>>7;if(!r){da=_;ea=aa;break}else{Z=_;_=r;ca=aa;ba=Z}}}a[u+ea>>0]=da&127;li(x,u,ea+1|0,16515,0);ea=x+12|0;da=0;do{ba=c[(c[W>>2]|0)+((c[q>>2]|0)+da<<2)>>2]|0;ca=c[ea>>2]|0;if(ca|0){c[p>>2]=17871;c[p+4>>2]=da;ki(ca,16403,p)}Ie(x,ba+8|0);da=da+1|0}while((da|0)!=($|0));Le(x)}$=d+60|0;da=(c[d+64>>2]|0)-(c[$>>2]|0)>>2;p=d+44|0;ea=c[p>>2]|0;q=da-ea|0;if((da|0)!=(ea|0)){Ke(x,6);ea=q>>>7;if(!ea){fa=q;ga=0}else{da=q;W=ea;ea=0;while(1){a[u+ea>>0]=da|128;ba=ea+1|0;ca=W>>>7;if(!ca){fa=W;ga=ba;break}else{_=W;W=ca;ea=ba;da=_}}}a[u+ga>>0]=fa&127;li(x,u,ga+1|0,16528,0);ga=0;do{fa=c[(c[$>>2]|0)+((c[p>>2]|0)+ga<<2)>>2]|0;He(x,c[fa+8>>2]|0);a[u>>0]=a[fa+12>>0]|0;li(x,u,1,22758,0);da=c[fa+16>>2]|0;if(da|0){fa=da;do{Me(x,d,0,fa);fa=c[fa+20>>2]|0}while((fa|0)!=0)}a[u>>0]=11;li(x,u,1,18226,0);ga=ga+1|0}while((ga|0)!=(q|0));Le(x)}q=d+84|0;ga=d+88|0;if((c[ga>>2]|0)!=(c[q>>2]|0)){Ke(x,7);p=(c[ga>>2]|0)-(c[q>>2]|0)>>2;$=p>>>7;if(!$){ha=p;ia=0}else{fa=p;p=$;$=0;while(1){a[u+$>>0]=fa|128;da=$+1|0;ea=p>>>7;if(!ea){ha=p;ia=da;break}else{W=p;p=ea;$=da;fa=W}}}a[u+ia>>0]=ha&127;li(x,u,ia+1|0,16712,0);ia=c[q>>2]|0;q=c[ga>>2]|0;b:do if((ia|0)!=(q|0)){ga=ia;while(1){ha=c[ga>>2]|0;fa=c[ha>>2]|0;$=c[ha+4>>2]|0;p=$>>>7;if(!p){ja=$;ka=0}else{W=$;da=p;p=0;while(1){a[u+p>>0]=W|128;ea=p+1|0;_=da>>>7;if(!_){ja=da;ka=ea;break}else{ba=da;da=_;p=ea;W=ba}}}a[u+ka>>0]=ja&127;li(x,u,ka+1|0,20843,0);li(x,fa,$,16724,1);W=ha+8|0;a[u>>0]=c[W>>2];li(x,u,1,16736,0);switch(c[W>>2]|0){case 0:{W=kc(d,ha+16|0)|0;p=W>>>7;if(!p){la=W;ma=0}else{da=W;W=p;p=0;while(1){a[u+p>>0]=da|128;D=p+1|0;ba=W>>>7;if(!ba){la=W;ma=D;break}else{ea=W;W=ba;p=D;da=ea}}}a[u+ma>>0]=la&127;li(x,u,ma+1|0,16748,0);break}case 1:{da=mc(d,ha+16|0)|0;p=da>>>7;if(!p){na=da;oa=0}else{W=da;da=p;p=0;while(1){a[u+p>>0]=W|128;$=p+1|0;fa=da>>>7;if(!fa){na=da;oa=$;break}else{ea=da;da=fa;p=$;W=ea}}}a[u+oa>>0]=na&127;li(x,u,oa+1|0,16766,0);break}case 2:{W=nc(d,ha+16|0)|0;p=W>>>7;if(!p){pa=W;qa=0}else{da=W;W=p;p=0;while(1){a[u+p>>0]=da|128;ea=p+1|0;$=W>>>7;if(!$){pa=W;qa=ea;break}else{fa=W;W=$;p=ea;da=fa}}}a[u+qa>>0]=pa&127;li(x,u,qa+1|0,16785,0);break}case 3:{da=lc(d,ha+16|0)|0;p=da>>>7;if(!p){ra=da;sa=0}else{W=da;da=p;p=0;while(1){a[u+p>>0]=W|128;fa=p+1|0;ea=da>>>7;if(!ea){ra=da;sa=fa;break}else{$=da;da=ea;p=fa;W=$}}}a[u+sa>>0]=ra&127;li(x,u,sa+1|0,16805,0);break}default:{}}ga=ga+4|0;if((ga|0)==(q|0))break b}}while(0);Le(x)}q=c[d+156>>2]|0;if(q|0?(sa=kc(d,q)|0,(sa|0)!=-1):0){Ke(x,8);q=sa>>>7;if(!q){ta=sa;ua=0}else{ra=sa;sa=q;q=0;while(1){a[u+q>>0]=ra|128;qa=q+1|0;pa=sa>>>7;if(!pa){ta=sa;ua=qa;break}else{oa=sa;sa=pa;q=qa;ra=oa}}}a[u+ua>>0]=ta&127;li(x,u,ua+1|0,16825,0);Le(x)}ua=d+120|0;ta=d+124|0;if((c[ta>>2]|0)!=(c[ua>>2]|0)){Ke(x,9);ra=(c[ta>>2]|0)-(c[ua>>2]|0)>>2;q=ra>>>7;if(!q){va=ra;wa=0}else{sa=ra;ra=q;q=0;while(1){a[u+q>>0]=sa|128;oa=q+1|0;qa=ra>>>7;if(!qa){va=ra;wa=oa;break}else{pa=ra;ra=qa;q=oa;sa=pa}}}a[u+wa>>0]=va&127;li(x,u,wa+1|0,16842,0);wa=c[ua>>2]|0;if((c[ta>>2]|0)!=(wa|0)){va=x+12|0;sa=wa;wa=0;do{q=c[sa+(wa<<2)>>2]|0;ra=mc(d,q)|0;pa=c[va>>2]|0;if(pa|0){c[o>>2]=16860;c[o+4>>2]=wa;ki(pa,16403,o)}pa=ra>>>7;if(!pa){xa=ra;ya=0}else{oa=ra;ra=pa;pa=0;while(1){a[u+pa>>0]=oa|128;qa=pa+1|0;na=ra>>>7;if(!na){xa=ra;ya=qa;break}else{ma=ra;ra=na;pa=qa;oa=ma}}}a[u+ya>>0]=xa&127;li(x,u,ya+1|0,16880,0);oa=c[q+32>>2]|0;if(oa|0){pa=oa;do{Me(x,d,0,pa);pa=c[pa+20>>2]|0}while((pa|0)!=0)}a[u>>0]=11;li(x,u,1,18226,0);pa=q+36|0;oa=q+40|0;ra=(c[oa>>2]|0)-(c[pa>>2]|0)>>5;ma=ra>>>7;if(!ma){za=ra;Aa=0}else{qa=ra;ra=ma;ma=0;while(1){a[u+ma>>0]=qa|128;na=ma+1|0;la=ra>>>7;if(!la){za=ra;Aa=na;break}else{ka=ra;ra=la;ma=na;qa=ka}}}a[u+Aa>>0]=za&127;li(x,u,Aa+1|0,16892,0);qa=c[pa>>2]|0;ma=c[oa>>2]|0;if((qa|0)!=(ma|0)){ra=qa;do{Ne(x,kc(d,ra)|0,21162,0);ra=ra+32|0}while((ra|0)!=(ma|0))}wa=wa+1|0;sa=c[ua>>2]|0}while(wa>>>0<(c[ta>>2]|0)-sa>>2>>>0)}Le(x)}if(U){Ke(x,10);U=V>>>7;if(!U){Ba=V;Ca=0}else{sa=V;ta=U;U=0;while(1){a[u+U>>0]=sa|128;wa=U+1|0;ua=ta>>>7;if(!ua){Ba=ta;Ca=wa;break}else{Aa=ta;ta=ua;U=wa;sa=Aa}}}a[u+Ca>>0]=Ba&127;li(x,u,Ca+1|0,16461,0);Ca=x+12|0;Ba=x+4|0;sa=u+1|0;U=u+2|0;ta=u+3|0;Aa=u+4|0;wa=0;do{ua=c[Ca>>2]|0;if(ua|0){c[n>>2]=16913;c[n+4>>2]=wa;ki(ua,16403,n)}ua=c[(c[z>>2]|0)+((c[X>>2]|0)+wa<<2)>>2]|0;a[u>>0]=0;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;a[u+4>>0]=0;za=c[Ba>>2]|0;li(x,u,a[(c[b>>2]|0)+4>>0]|0?1:5,16927,0);ya=ua+72|0;xa=ua+76|0;o=c[xa>>2]|0;va=c[ya>>2]|0;ma=va;if((o|0)!=(va|0)){ra=(c[ua+52>>2]|0)-(c[ua+48>>2]|0)>>2;oa=ra+1|0;pa=ra+(o-va>>2)|0;if(oa>>>0<pa>>>0){va=c[ma>>2]|0;o=oa;qa=1;while(1){q=va;va=c[ma+(o-ra<<2)>>2]|0;ka=((q|0)!=(va|0)&1)+qa|0;o=o+1|0;if((o|0)==(pa|0)){Da=ka;break}else qa=ka}qa=Da>>>7;if(!qa){Ea=Da;Fa=0}else{pa=Da;o=qa;qa=0;while(1){a[u+qa>>0]=pa|128;va=qa+1|0;ma=o>>>7;if(!ma){Ea=o;Fa=va;break}else{ka=o;o=ma;qa=va;pa=ka}}}}else{Ea=1;Fa=0}a[u+Fa>>0]=Ea&127;li(x,u,Fa+1|0,16950,0);pa=c[ya>>2]|0;qa=c[xa>>2]|0;o=pa;ka=(qa-o>>2)+ra|0;if(oa>>>0<=ka>>>0){va=o;o=qa;qa=ka;ka=pa;ma=c[pa>>2]|0;pa=oa;q=1;while(1){if((pa|0)==(qa|0))Ga=-64;else Ga=c[ka+(pa-ra<<2)>>2]|0;if((ma|0)==(Ga|0)){Ha=va;Ia=o;Ja=ma;Ka=q+1|0}else{na=q>>>7;if(!na){La=q;Ma=0}else{la=q;ja=na;na=0;while(1){a[u+na>>0]=la|128;ia=na+1|0;ga=ja>>>7;if(!ga){La=ja;Ma=ia;break}else{W=ja;ja=ga;na=ia;la=W}}}a[u+Ma>>0]=La&127;li(x,u,Ma+1|0,27491,0);He(x,ma);Ha=c[ya>>2]|0;Ia=c[xa>>2]|0;Ja=Ga;Ka=1}pa=pa+1|0;qa=(Ia-Ha>>2)+ra|0;if(pa>>>0>qa>>>0)break;else{va=Ha;o=Ia;ka=Ha;ma=Ja;q=Ka}}}}else{a[u>>0]=0;li(x,u,1,16950,0)}q=c[ua+124>>2]|0;if(q|0){ma=q;do{Me(x,d,ua,ma);ma=c[ma+20>>2]|0}while((ma|0)!=0)}a[u>>0]=11;li(x,u,1,18226,0);ma=(c[Ba>>2]|0)-za|0;if(!(a[(c[b>>2]|0)+4>>0]|0)){ua=ma+-5|0;a[u>>0]=ua|128;a[sa>>0]=ua>>>7|128;a[U>>0]=ua>>>14|128;a[ta>>0]=ua>>>21|128;a[Aa>>0]=ua>>>28;ii(x,za,u,5,16967,0)}else{ua=ma+-1|0;ma=ua;q=0;while(1){ma=ma>>>7;ka=q+1|0;if(!ma){Na=ka;Oa=q;break}else q=ka}if(Oa|0)mi(x,Na+za|0,za+1|0,ua);q=ua>>>7;if(!q){Pa=ua;Qa=0}else{ma=ua;ka=q;q=0;while(1){a[u+q>>0]=ma|128;o=q+1|0;va=ka>>>7;if(!va){Pa=ka;Qa=o;break}else{qa=ka;ka=va;q=o;ma=qa}}}a[u+Qa>>0]=Pa&127;ii(x,za,u,Qa+1|0,16967,0);hi(x,Oa)}wa=wa+1|0}while((wa|0)!=(V|0));Le(x)}V=d+144|0;wa=d+148|0;if((c[wa>>2]|0)!=(c[V>>2]|0)){Ke(x,11);Oa=(c[wa>>2]|0)-(c[V>>2]|0)>>2;Qa=Oa>>>7;if(!Qa){Ra=Oa;Sa=0}else{Pa=Oa;Oa=Qa;Qa=0;while(1){a[u+Qa>>0]=Pa|128;Na=Qa+1|0;Aa=Oa>>>7;if(!Aa){Ra=Oa;Sa=Na;break}else{ta=Oa;Oa=Aa;Qa=Na;Pa=ta}}}a[u+Sa>>0]=Ra&127;li(x,u,Sa+1|0,16988,0);Sa=c[V>>2]|0;if((c[wa>>2]|0)!=(Sa|0)){Ra=x+12|0;Pa=Sa;Sa=0;do{Qa=c[Pa+(Sa<<2)>>2]|0;Oa=c[Ra>>2]|0;if(Oa|0){c[m>>2]=17006;c[m+4>>2]=Sa;ki(Oa,16403,m)}Oa=nc(d,Qa)|0;ta=Oa>>>7;if(!ta){Ta=Oa;Ua=0}else{Na=Oa;Oa=ta;ta=0;while(1){a[u+ta>>0]=Na|128;Aa=ta+1|0;U=Oa>>>7;if(!U){Ta=Oa;Ua=Aa;break}else{sa=Oa;Oa=U;ta=Aa;Na=sa}}}a[u+Ua>>0]=Ta&127;li(x,u,Ua+1|0,17026,0);Na=c[Qa+32>>2]|0;if(Na|0){ta=Na;do{Me(x,d,0,ta);ta=c[ta+20>>2]|0}while((ta|0)!=0)}a[u>>0]=11;li(x,u,1,18226,0);ta=Qa+40|0;Na=c[ta>>2]|0;Oa=Na>>>7;if(!Oa){Va=Na;Wa=0}else{za=Na;Na=Oa;Oa=0;while(1){a[u+Oa>>0]=za|128;sa=Oa+1|0;Aa=Na>>>7;if(!Aa){Va=Na;Wa=sa;break}else{U=Na;Na=Aa;Oa=sa;za=U}}}a[u+Wa>>0]=Va&127;li(x,u,Wa+1|0,17039,0);za=c[Ra>>2]|0;if(za|0){c[l>>2]=27898;c[l+4>>2]=Sa;ki(za,16403,l)}li(x,c[Qa+36>>2]|0,c[ta>>2]|0,27898,0);Sa=Sa+1|0;Pa=c[V>>2]|0}while(Sa>>>0<(c[wa>>2]|0)-Pa>>2>>>0)}Le(x)}Pa=c[b>>2]|0;if(!(a[Pa+6>>0]|0))Xa=Pa;else{c[v>>2]=0;Pa=v+4|0;c[Pa>>2]=0;c[v+8>>2]=0;Pe(x,20918);wa=c[z>>2]|0;Sa=c[E>>2]|0;if((wa|0)!=(Sa|0)){V=wa;wa=0;while(1){l=((c[(c[V>>2]|0)+4>>2]|0)!=0&1)+wa|0;V=V+4|0;if((V|0)==(Sa|0)){Ya=l;break}else wa=l}if(Ya){a[u>>0]=1;li(x,u,1,17110,0);c[x+56>>2]=1;a[u>>0]=0;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;a[u+4>>0]=0;wa=x+4|0;Sa=c[wa>>2]|0;li(x,u,a[(c[b>>2]|0)+4>>0]|0?1:5,17129,0);c[x+52>>2]=Sa;c[x+60>>2]=c[wa>>2];wa=Ya>>>7;if(!wa){Za=Ya;_a=0}else{Sa=Ya;Ya=wa;wa=0;while(1){a[u+wa>>0]=Sa|128;V=wa+1|0;l=Ya>>>7;if(!l){Za=Ya;_a=V;break}else{Ra=Ya;Ya=l;wa=V;Sa=Ra}}}a[u+_a>>0]=Za&127;li(x,u,_a+1|0,16461,0);_a=c[E>>2]|0;Za=c[z>>2]|0;if((_a|0)!=(Za|0)){Sa=_a;_a=Za;Za=0;while(1){wa=c[_a+(Za<<2)>>2]|0;Ya=wa+4|0;if(!(c[Ya>>2]|0)){$a=_a;ab=Sa}else{Ra=Za>>>7;if(!Ra){bb=Za;cb=0}else{V=Za;l=Ra;Ra=0;while(1){a[u+Ra>>0]=V|128;Wa=Ra+1|0;Va=l>>>7;if(!Va){bb=l;cb=Wa;break}else{d=l;l=Va;Ra=Wa;V=d}}}a[u+cb>>0]=bb&127;li(x,u,cb+1|0,21162,0);c[k>>2]=Za;dm(w,100,17175,k)|0;V=c[wa>>2]|0;Ra=c[Ya>>2]|0;l=Ra>>>7;if(!l){db=Ra;eb=0}else{ta=Ra;Qa=l;l=0;while(1){a[u+l>>0]=ta|128;d=l+1|0;Wa=Qa>>>7;if(!Wa){db=Qa;eb=d;break}else{Va=Qa;Qa=Wa;l=d;ta=Va}}}a[u+eb>>0]=db&127;li(x,u,eb+1|0,20843,0);li(x,V,Ra,w,1);$a=c[z>>2]|0;ab=c[E>>2]|0}Za=Za+1|0;if(Za>>>0>=ab-$a>>2>>>0)break;else{Sa=ab;_a=$a}}}Qe(x);fb=u}else gb=172}else gb=172;if((gb|0)==172)fb=u;a[fb>>0]=2;li(x,fb,1,17189,0);c[x+56>>2]=1;a[fb>>0]=0;a[fb+1>>0]=0;a[fb+2>>0]=0;a[fb+3>>0]=0;a[fb+4>>0]=0;gb=x+4|0;$a=c[gb>>2]|0;li(x,fb,a[(c[b>>2]|0)+4>>0]|0?1:5,17129,0);c[x+52>>2]=$a;c[x+60>>2]=c[gb>>2];gb=(c[E>>2]|0)-(c[z>>2]|0)>>2;$a=gb>>>7;if(!$a){hb=gb;ib=0}else{_a=gb;gb=$a;$a=0;while(1){a[u+$a>>0]=_a|128;ab=$a+1|0;Sa=gb>>>7;if(!Sa){hb=gb;ib=ab;break}else{Za=gb;gb=Sa;$a=ab;_a=Za}}}a[u+ib>>0]=hb&127;li(x,fb,ib+1|0,16461,0);ib=c[z>>2]|0;if((c[E>>2]|0)!=(ib|0)){hb=ib;ib=0;do{_a=c[hb+(ib<<2)>>2]|0;$a=_a+48|0;gb=(c[_a+52>>2]|0)-(c[$a>>2]|0)>>2;Za=_a+72|0;ab=(c[_a+76>>2]|0)-(c[Za>>2]|0)>>2;Sa=ab+gb|0;eb=ib>>>7;if(!eb){jb=ib;kb=0}else{db=ib;k=eb;eb=0;while(1){a[u+eb>>0]=db|128;cb=eb+1|0;bb=k>>>7;if(!bb){jb=k;kb=cb;break}else{ta=k;k=bb;eb=cb;db=ta}}}a[u+kb>>0]=jb&127;li(x,fb,kb+1|0,21162,0);db=Sa>>>7;if(!db){lb=Sa;mb=0}else{eb=Sa;k=db;db=0;while(1){a[u+db>>0]=eb|128;Ra=db+1|0;V=k>>>7;if(!V){lb=k;mb=Ra;break}else{ta=k;k=V;db=Ra;eb=ta}}}a[u+mb>>0]=lb&127;li(x,fb,mb+1|0,17205,0);wc($a,_a+84|0,v);if(gb|0){eb=0;do{db=c[v>>2]|0;k=db+(eb*12|0)|0;c[j>>2]=eb;dm(w,100,17216,j)|0;Sa=eb>>>7;if(!Sa){nb=eb;ob=0}else{ta=eb;Ra=Sa;Sa=0;while(1){a[u+Sa>>0]=ta|128;V=Sa+1|0;cb=Ra>>>7;if(!cb){nb=Ra;ob=V;break}else{bb=Ra;Ra=cb;Sa=V;ta=bb}}}a[u+ob>>0]=nb&127;li(x,fb,ob+1|0,16690,0);ta=a[k>>0]|0;if(!(ta&1)){pb=(ta&255)>>>1;qb=k+1|0}else{pb=c[db+(eb*12|0)+4>>2]|0;qb=c[db+(eb*12|0)+8>>2]|0}ta=pb>>>7;if(!ta){rb=pb;sb=0}else{Sa=pb;Ra=ta;ta=0;while(1){a[u+ta>>0]=Sa|128;bb=ta+1|0;V=Ra>>>7;if(!V){rb=Ra;sb=bb;break}else{cb=Ra;Ra=V;ta=bb;Sa=cb}}}a[u+sb>>0]=rb&127;li(x,fb,sb+1|0,20843,0);li(x,qb,pb,w,1);eb=eb+1|0}while(eb>>>0<gb>>>0)}wc(Za,_a+104|0,v);if(ab|0){eb=0;do{$a=c[v>>2]|0;Sa=$a+(eb*12|0)|0;ta=eb+gb|0;c[h>>2]=ta;dm(w,100,17216,h)|0;Ra=ta>>>7;if(!Ra){tb=ta;ub=0}else{db=ta;ta=Ra;Ra=0;while(1){a[u+Ra>>0]=db|128;k=Ra+1|0;cb=ta>>>7;if(!cb){tb=ta;ub=k;break}else{bb=ta;ta=cb;Ra=k;db=bb}}}a[u+ub>>0]=tb&127;li(x,fb,ub+1|0,16690,0);db=a[Sa>>0]|0;if(!(db&1)){vb=(db&255)>>>1;wb=Sa+1|0}else{vb=c[$a+(eb*12|0)+4>>2]|0;wb=c[$a+(eb*12|0)+8>>2]|0}db=vb>>>7;if(!db){xb=vb;yb=0}else{Ra=vb;ta=db;db=0;while(1){a[u+db>>0]=Ra|128;bb=db+1|0;k=ta>>>7;if(!k){xb=ta;yb=bb;break}else{cb=ta;ta=k;db=bb;Ra=cb}}}a[u+yb>>0]=xb&127;li(x,fb,yb+1|0,20843,0);li(x,wb,vb,w,1);eb=eb+1|0}while(eb>>>0<ab>>>0)}ib=ib+1|0;hb=c[z>>2]|0}while(ib>>>0<(c[E>>2]|0)-hb>>2>>>0)}Qe(x);Le(x);hb=c[v>>2]|0;if(hb|0){E=c[Pa>>2]|0;if((E|0)==(hb|0))zb=hb;else{ib=E;do{E=ib+-12|0;c[Pa>>2]=E;jn(E);ib=c[Pa>>2]|0}while((ib|0)!=(hb|0));zb=c[v>>2]|0}An(zb)}Xa=c[b>>2]|0}if(a[Xa+5>>0]|0?(Xa=c[e>>2]|0,e=c[x+24>>2]|0,(Xa|0)!=(e|0)):0){b=Xa;do{Xa=c[b>>2]|0;c[g>>2]=21510;c[g+4>>2]=Xa;dm(v,128,17231,g)|0;Pe(x,v);Xa=c[b+4>>2]|0;zb=Xa>>>7;if(!zb){Ab=Xa;Bb=0}else{hb=Xa;Xa=zb;zb=0;while(1){a[u+zb>>0]=hb|128;ib=zb+1|0;Pa=Xa>>>7;if(!Pa){Ab=Xa;Bb=ib;break}else{E=Xa;Xa=Pa;zb=ib;hb=E}}}a[u+Bb>>0]=Ab&127;li(x,u,Bb+1|0,17237,0);hb=b+8|0;zb=b+12|0;Xa=(c[zb>>2]|0)-(c[hb>>2]|0)>>4;E=Xa>>>7;if(!E){Cb=Xa;Db=0}else{ib=Xa;Xa=E;E=0;while(1){a[u+E>>0]=ib|128;Pa=E+1|0;z=Xa>>>7;if(!z){Cb=Xa;Db=Pa;break}else{w=Xa;Xa=z;E=Pa;ib=w}}}a[u+Db>>0]=Cb&127;li(x,u,Db+1|0,17256,0);ib=c[hb>>2]|0;E=c[zb>>2]|0;if((ib|0)!=(E|0)){Xa=ib;do{ib=c[Xa>>2]|0;w=ib>>>7;if(!w){Eb=ib;Fb=0}else{Pa=ib;ib=w;w=0;while(1){a[u+w>>0]=Pa|128;z=w+1|0;vb=ib>>>7;if(!vb){Eb=ib;Fb=z;break}else{wb=ib;ib=vb;w=z;Pa=wb}}}a[u+Fb>>0]=Eb&127;li(x,u,Fb+1|0,17267,0);Pa=c[Xa+4>>2]|0;w=Pa>>>7;if(!w){Gb=Pa;Hb=0}else{ib=Pa;Pa=w;w=0;while(1){a[u+w>>0]=ib|128;wb=w+1|0;z=Pa>>>7;if(!z){Gb=Pa;Hb=wb;break}else{vb=Pa;Pa=z;w=wb;ib=vb}}}a[u+Hb>>0]=Gb&127;li(x,u,Hb+1|0,17278,0);ib=c[Xa+8>>2]|0;w=ib>>>7;if(!w){Ib=ib;Jb=0}else{Pa=ib;ib=w;w=0;while(1){a[u+w>>0]=Pa|128;vb=w+1|0;wb=ib>>>7;if(!wb){Ib=ib;Jb=vb;break}else{z=ib;ib=wb;w=vb;Pa=z}}}a[u+Jb>>0]=Ib&127;li(x,u,Jb+1|0,17291,0);if(((c[Xa>>2]|0)+-3|0)>>>0<3){Pa=c[Xa+12>>2]|0;w=Pa>>>7;if(!w){Kb=Pa;Lb=0}else{ib=Pa;Pa=w;w=0;while(1){a[u+w>>0]=ib|128;z=w+1|0;vb=Pa>>>7;if(!vb){Kb=Pa;Lb=z;break}else{wb=Pa;Pa=vb;w=z;ib=wb}}}a[u+Lb>>0]=Kb&127;li(x,u,Lb+1|0,17303,0)}Xa=Xa+16|0}while((Xa|0)!=(E|0))}Le(x);b=b+20|0}while((b|0)!=(e|0))}e=c[x+8>>2]|0;b=x+20|0;Lb=c[b>>2]|0;if(!Lb){i=f;return e|0}u=x+24|0;x=c[u>>2]|0;if((x|0)==(Lb|0))Mb=Lb;else{Kb=x;while(1){x=Kb+-20|0;c[u>>2]=x;Jb=c[Kb+-12>>2]|0;Ib=Jb;if(!Jb)Nb=x;else{x=Kb+-8|0;Hb=c[x>>2]|0;if((Hb|0)!=(Jb|0))c[x>>2]=Hb+(~((Hb+-16-Ib|0)>>>4)<<4);An(Jb);Nb=c[u>>2]|0}if((Nb|0)==(Lb|0))break;else Kb=Nb}Mb=c[b>>2]|0}An(Mb);i=f;return e|0}function Ke(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+112|0;f=e+8|0;g=e;h=e+12|0;c[g>>2]=c[1416+(d<<2)>>2];c[g+4>>2]=d;dm(h,100,16324,g)|0;j=c[b+12>>2]|0;if(j|0){c[f>>2]=h;ki(j,16342,f)}a[g>>0]=d;li(b,g,1,20646,0);c[b+44>>2]=d;c[b+40>>2]=1;a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;a[g+3>>0]=0;a[g+4>>0]=0;d=b+4|0;f=c[d>>2]|0;li(b,g,a[(c[b+16>>2]|0)+4>>0]|0?1:5,16348,0);c[b+36>>2]=f;c[b+48>>2]=c[d>>2];i=e;return}function Le(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d;f=c[b+36>>2]|0;g=b+40|0;h=c[g>>2]|0;j=(c[b+4>>2]|0)-f|0;if(!(a[(c[b+16>>2]|0)+4>>0]|0)){k=j+-5|0;a[e>>0]=k|128;a[e+1>>0]=k>>>7|128;a[e+2>>0]=k>>>14|128;a[e+3>>0]=k>>>21|128;a[e+4>>0]=k>>>28;ii(b,f,e,5,16379,0);c[g>>2]=0;i=d;return}k=j-h|0;j=k;l=0;while(1){j=j>>>7;m=l+1|0;if(!j){n=m;break}else l=m}if((n|0)!=(h|0))mi(b,n+f|0,h+f|0,k);l=k>>>7;if(!l){o=k;p=0}else{j=k;k=l;l=0;while(1){a[e+l>>0]=j|128;m=l+1|0;q=k>>>7;if(!q){o=k;p=m;break}else{r=k;k=q;l=m;j=r}}}a[e+p>>0]=o&127;ii(b,f,e,p+1|0,16379,0);hi(b,n-h|0);c[g>>2]=0;i=d;return}function Me(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;g=i;i=i+16|0;h=g;do switch(c[f+16>>2]|0){case 0:{j=c[f+24>>2]|0;k=c[1536+(j*20|0)>>2]|0;a[h>>0]=j;li(b,h,1,k,0);i=g;return}case 1:{a[h>>0]=2;li(b,h,1,20404,0);k=f+24|0;j=c[k>>2]|0;l=c[j+8>>2]|0;switch((c[j+12>>2]|0)-l>>2|0){case 0:{a[h>>0]=64;li(b,h,1,28450,0);break}case 1:{He(b,c[l>>2]|0);break}default:{a[h>>0]=-1;li(b,h,1,16540,0)}}l=c[(c[k>>2]|0)+20>>2]|0;if(l|0){k=l;do{Me(b,d,e,k);k=c[k+20>>2]|0}while((k|0)!=0)}a[h>>0]=11;li(b,h,1,18226,0);i=g;return}case 2:{a[h>>0]=12;li(b,h,1,20249,0);k=c[f+48>>2]|0;l=k>>>7;if(!l){m=k;n=0}else{j=k;k=l;l=0;while(1){a[h+l>>0]=j|128;o=l+1|0;p=k>>>7;if(!p){m=k;n=o;break}else{q=k;k=p;l=o;j=q}}}a[h+n>>0]=m&127;li(b,h,n+1|0,16565,0);i=g;return}case 3:{a[h>>0]=13;li(b,h,1,20252,0);j=c[f+48>>2]|0;l=j>>>7;if(!l){r=j;s=0}else{k=j;j=l;l=0;while(1){a[h+l>>0]=k|128;q=l+1|0;o=j>>>7;if(!o){r=j;s=q;break}else{p=j;j=o;l=q;k=p}}}a[h+s>>0]=r&127;li(b,h,s+1|0,16565,0);i=g;return}case 4:{a[h>>0]=14;li(b,h,1,20258,0);k=f+24|0;l=c[k>>2]|0;j=(c[l+4>>2]|0)-(c[l>>2]|0)>>5;l=j>>>7;if(!l){t=j;u=0}else{p=j;j=l;l=0;while(1){a[h+l>>0]=p|128;q=l+1|0;o=j>>>7;if(!o){t=j;u=q;break}else{v=j;j=o;l=q;p=v}}}a[h+u>>0]=t&127;li(b,h,u+1|0,16577,0);p=c[k>>2]|0;l=c[p>>2]|0;j=c[p+4>>2]|0;if((l|0)!=(j|0)){p=l;do{l=c[p+24>>2]|0;v=l>>>7;if(!v){w=l;x=0}else{q=l;l=v;v=0;while(1){a[h+v>>0]=q|128;o=v+1|0;y=l>>>7;if(!y){w=l;x=o;break}else{z=l;l=y;v=o;q=z}}}a[h+x>>0]=w&127;li(b,h,x+1|0,16565,0);p=p+32|0}while((p|0)!=(j|0))}j=c[f+56>>2]|0;p=j>>>7;if(!p){A=j;B=0}else{k=j;j=p;p=0;while(1){a[h+p>>0]=k|128;q=p+1|0;v=j>>>7;if(!v){A=j;B=q;break}else{l=j;j=v;p=q;k=l}}}a[h+B>>0]=A&127;li(b,h,B+1|0,16589,0);i=g;return}case 5:{k=kc(d,f+24|0)|0;a[h>>0]=16;li(b,h,1,20267,0);Ne(b,k,21162,0);i=g;return}case 6:{k=oc(d,f+24|0)|0;a[h>>0]=17;li(b,h,1,20272,0);p=k>>>7;if(!p){D=k;E=0}else{j=k;k=p;p=0;while(1){a[h+p>>0]=j|128;l=p+1|0;q=k>>>7;if(!q){D=k;E=l;break}else{v=k;k=q;p=l;j=v}}}a[h+E>>0]=D&127;li(b,h,E+1|0,16613,0);a[h>>0]=0;li(b,h,1,26780,0);i=g;return}case 7:{j=c[f+24>>2]|0;p=c[1536+(j*20|0)>>2]|0;a[h>>0]=j;li(b,h,1,p,0);i=g;return}case 8:{switch(c[f+40>>2]|0){case -1:{a[h>>0]=65;li(b,h,1,18763,0);p=c[f+48>>2]|0;j=p>>7;if((p|0)<0){if((j|0)!=-1|(p&64|0)==0){k=p;v=j;l=0;while(1){a[h+l>>0]=k|128;q=l+1|0;z=v>>7;if((z|0)!=-1|(v&64|0)==0){o=v;v=z;l=q;k=o}else{F=v;G=q;break}}}else{F=p;G=0}a[h+G>>0]=F&127;H=G}else{if(!(j|p&64)){I=p;J=0}else{v=p;k=j;l=0;while(1){a[h+l>>0]=v|128;q=l+1|0;o=k>>7;if(!(o|k&64)){I=k;J=q;break}else{z=k;k=o;l=q;v=z}}}a[h+J>>0]=I&127;H=J}li(b,h,H+1|0,16629,0);i=g;return}case -2:{a[h>>0]=66;li(b,h,1,18773,0);v=f+48|0;l=c[v>>2]|0;k=c[v+4>>2]|0;v=l&255;j=co(l|0,k|0,7)|0;p=C;if((k|0)<0){if((j|0)!=-1|(p|0)!=-1|(v&64)==0){k=l;z=j;q=p;o=0;while(1){a[h+o>>0]=k|128;y=o+1|0;K=z&255;L=co(z|0,q|0,7)|0;q=C;if(!((L|0)!=-1|(q|0)!=-1|(K&64)==0)){M=K;N=y;break}else{K=z;z=L;o=y;k=K}}}else{M=v;N=0}a[h+N>>0]=M&127;O=N}else{if((j|0)==0&(p|0)==0&(v&64)==0){P=v;Q=0}else{k=l;o=j;z=p;q=0;while(1){a[h+q>>0]=k|128;K=q+1|0;y=o&255;L=co(o|0,z|0,7)|0;z=C;if((L|0)==0&(z|0)==0&(y&64)==0){P=y;Q=K;break}else{y=o;o=L;q=K;k=y}}}a[h+Q>>0]=P&127;O=Q}li(b,h,O+1|0,16641,0);i=g;return}case -3:{a[h>>0]=67;li(b,h,1,18783,0);c[h>>2]=c[f+48>>2];li(b,h,4,16653,0);i=g;return}case -4:{a[h>>0]=68;li(b,h,1,18793,0);k=f+48|0;q=c[k+4>>2]|0;o=h;c[o>>2]=c[k>>2];c[o+4>>2]=q;li(b,h,8,16665,0);i=g;return}default:{i=g;return}}break}case 9:{q=c[f+24>>2]|0;o=c[1536+(q*20|0)>>2]|0;a[h>>0]=q;li(b,h,1,o,0);i=g;return}case 10:{a[h>>0]=63;li(b,h,1,18736,0);a[h>>0]=0;li(b,h,1,27078,0);i=g;return}case 11:{a[h>>0]=26;li(b,h,1,20286,0);i=g;return}case 12:{o=lc(d,f+24|0)|0;a[h>>0]=35;li(b,h,1,18420,0);Ne(b,o,16677,7);i=g;return}case 13:{o=pc(e,f+24|0)|0;a[h>>0]=32;li(b,h,1,18410,0);q=o>>>7;if(!q){R=o;S=0}else{k=o;o=q;q=0;while(1){a[h+q>>0]=k|128;z=q+1|0;p=o>>>7;if(!p){R=o;S=z;break}else{j=o;o=p;q=z;k=j}}}a[h+S>>0]=R&127;li(b,h,S+1|0,16690,0);i=g;return}case 14:{a[h>>0]=64;li(b,h,1,18751,0);a[h>>0]=0;li(b,h,1,27178,0);i=g;return}case 15:{a[h>>0]=4;li(b,h,1,20415,0);k=f+24|0;q=c[k>>2]|0;o=c[q+8>>2]|0;switch((c[q+12>>2]|0)-o>>2|0){case 0:{a[h>>0]=64;li(b,h,1,28450,0);break}case 1:{He(b,c[o>>2]|0);break}default:{a[h>>0]=-1;li(b,h,1,16540,0)}}o=c[(c[k>>2]|0)+20>>2]|0;if(o|0){q=o;do{Me(b,d,e,q);q=c[q+20>>2]|0}while((q|0)!=0)}q=k+4|0;if(c[q>>2]|0?(a[h>>0]=5,li(b,h,1,18146,0),o=c[q>>2]|0,o|0):0){q=o;do{Me(b,d,e,q);q=c[q+20>>2]|0}while((q|0)!=0)}a[h>>0]=11;li(b,h,1,18226,0);i=g;return}case 16:{q=f+24|0;k=c[q>>2]|0;o=c[1536+(k*20|0)>>2]|0;a[h>>0]=k;li(b,h,1,o,0);o=vi(c[q>>2]|0,c[q+4>>2]|0)|0;if(o>>>0>1){q=o;o=0;while(1){k=o+1<<24>>24;if(q>>>0>3){q=q>>>1;o=k}else{T=k;break}}}else T=0;a[h>>0]=T;li(b,h,1,16702,0);o=c[f+32>>2]|0;q=o>>>7;if(!q){U=o;V=0}else{k=o;o=q;q=0;while(1){a[h+q>>0]=k|128;j=q+1|0;z=o>>>7;if(!z){U=o;V=j;break}else{p=o;o=z;q=j;k=p}}}a[h+V>>0]=U&127;li(b,h,V+1|0,26982,0);i=g;return}case 17:{a[h>>0]=3;li(b,h,1,20410,0);k=f+24|0;q=c[k>>2]|0;o=c[q+8>>2]|0;switch((c[q+12>>2]|0)-o>>2|0){case 0:{a[h>>0]=64;li(b,h,1,28450,0);break}case 1:{He(b,c[o>>2]|0);break}default:{a[h>>0]=-1;li(b,h,1,16540,0)}}o=c[(c[k>>2]|0)+20>>2]|0;if(o|0){k=o;do{Me(b,d,e,k);k=c[k+20>>2]|0}while((k|0)!=0)}a[h>>0]=11;li(b,h,1,18226,0);i=g;return}case 18:{a[h>>0]=1;li(b,h,1,18142,0);i=g;return}case 19:{a[h>>0]=15;li(b,h,1,20434,0);i=g;return}case 20:{a[h>>0]=27;li(b,h,1,20441,0);i=g;return}case 21:{k=lc(d,f+24|0)|0;a[h>>0]=36;li(b,h,1,20448,0);Ne(b,k,16677,7);i=g;return}case 22:{k=pc(e,f+24|0)|0;a[h>>0]=33;li(b,h,1,20459,0);o=k>>>7;if(!o){W=k;X=0}else{q=k;k=o;o=0;while(1){a[h+o>>0]=q|128;p=o+1|0;j=k>>>7;if(!j){W=k;X=p;break}else{z=k;k=j;o=p;q=z}}}a[h+X>>0]=W&127;li(b,h,X+1|0,16690,0);i=g;return}case 23:{q=f+24|0;o=c[q>>2]|0;k=c[1536+(o*20|0)>>2]|0;a[h>>0]=o;li(b,h,1,k,0);k=vi(c[q>>2]|0,c[q+4>>2]|0)|0;if(k>>>0>1){q=k;k=0;while(1){o=k+1<<24>>24;if(q>>>0>3){q=q>>>1;k=o}else{Y=o;break}}}else Y=0;a[h>>0]=Y;li(b,h,1,16702,0);k=c[f+32>>2]|0;q=k>>>7;if(!q){Z=k;_=0}else{o=k;k=q;q=0;while(1){a[h+q>>0]=o|128;z=q+1|0;p=k>>>7;if(!p){Z=k;_=z;break}else{j=k;k=p;q=z;o=j}}}a[h+_>>0]=Z&127;li(b,h,_+1|0,27037,0);i=g;return}case 24:{o=pc(e,f+24|0)|0;a[h>>0]=34;li(b,h,1,20469,0);q=o>>>7;if(!q){$=o;aa=0}else{k=o;o=q;q=0;while(1){a[h+q>>0]=k|128;j=q+1|0;z=o>>>7;if(!z){$=o;aa=j;break}else{p=o;o=z;q=j;k=p}}}a[h+aa>>0]=$&127;li(b,h,aa+1|0,16690,0);i=g;return}case 25:{k=c[f+24>>2]|0;q=c[1536+(k*20|0)>>2]|0;a[h>>0]=k;li(b,h,1,q,0);i=g;return}case 26:{a[h>>0]=0;li(b,h,1,18130,0);i=g;return}default:{i=g;return}}while(0)}function Ne(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;g=i;i=i+16|0;h=g+8|0;j=g+4|0;k=g;if(!(a[(c[b+16>>2]|0)+5>>0]|0)){l=d>>>7;if(!l){m=d;n=0}else{o=d;p=l;l=0;while(1){a[h+l>>0]=o|128;q=l+1|0;r=p>>>7;if(!r){m=p;n=q;break}else{s=p;p=r;l=q;o=s}}}a[h+n>>0]=m&127;li(b,h,n+1|0,e,0);i=g;return}c[h>>2]=f;c[j>>2]=d;n=b+32|0;m=c[n>>2]|0;if(m){o=b+44|0;l=c[o>>2]|0;if((c[m+4>>2]|0)==(l|0))t=m;else{u=o;v=l;w=5}}else{l=b+44|0;u=l;v=c[l>>2]|0;w=5}if((w|0)==5){l=b+20|0;o=c[1416+(v<<2)>>2]|0;m=b+24|0;p=c[m>>2]|0;s=b+28|0;q=c[s>>2]|0;r=q;if(p>>>0>=q>>>0){q=c[l>>2]|0;x=((p-q|0)/20|0)+1|0;if(x>>>0>214748364)rn(l);y=q;z=(r-q|0)/20|0;if(z>>>0<107374182){r=z<<1;z=r>>>0<x>>>0?x:r;r=c[m>>2]|0;x=(r-q|0)/20|0;A=r;if(!z){B=0;C=0;D=x;E=A}else{F=z;G=A;H=x;w=12}}else{x=c[m>>2]|0;F=214748364;G=x;H=(x-q|0)/20|0;w=12}if((w|0)==12){B=F;C=Tn(F*20|0)|0;D=H;E=G}G=C+(D*20|0)|0;H=G;F=C+(B*20|0)|0;B=c[u>>2]|0;c[G>>2]=o;c[C+(D*20|0)+4>>2]=B;c[C+(D*20|0)+8>>2]=0;c[C+(D*20|0)+12>>2]=0;c[C+(D*20|0)+16>>2]=0;D=G+20|0;if((E|0)==(y|0)){I=H;J=q;K=y}else{q=E;E=G;G=H;while(1){H=q;q=q+-20|0;C=q;B=c[C+4>>2]|0;u=E+-20|0;c[u>>2]=c[C>>2];c[u+4>>2]=B;B=E+-12|0;u=H+-12|0;c[B>>2]=0;C=E+-8|0;c[C>>2]=0;c[E+-4>>2]=0;c[B>>2]=c[u>>2];B=H+-8|0;c[C>>2]=c[B>>2];C=H+-4|0;c[E+-4>>2]=c[C>>2];c[C>>2]=0;c[B>>2]=0;c[u>>2]=0;E=G+-20|0;u=E;if((q|0)==(y|0)){L=u;break}else G=u}I=L;J=c[l>>2]|0;K=c[m>>2]|0}c[l>>2]=I;c[m>>2]=D;c[s>>2]=F;F=J;if((K|0)!=(F|0)){s=K;do{K=c[s+-12>>2]|0;D=K;if(K|0){I=s+-8|0;l=c[I>>2]|0;if((l|0)!=(K|0))c[I>>2]=l+(~((l+-16-D|0)>>>4)<<4);An(K)}s=s+-20|0}while((s|0)!=(F|0))}if(J|0)An(J)}else{c[p>>2]=o;c[p+4>>2]=v;c[p+8>>2]=0;c[p+12>>2]=0;c[p+16>>2]=0;c[m>>2]=p+20}p=(c[m>>2]|0)+-20|0;c[n>>2]=p;t=p}p=(c[b+4>>2]|0)-(c[b+48>>2]|0)|0;c[k>>2]=p;n=t+12|0;m=c[n>>2]|0;if(m>>>0<(c[t+16>>2]|0)>>>0){Yh(m,f,p,d,0);c[n>>2]=(c[n>>2]|0)+16}else Oe(t+8|0,h,k,j);a[h>>0]=d|128;a[h+1>>0]=d>>>7|128;a[h+2>>0]=d>>>14|128;a[h+3>>0]=d>>>21|128;a[h+4>>0]=d>>>28;li(b,h,5,e,0);i=g;return}function Oe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=a+4|0;g=c[a>>2]|0;h=((c[f>>2]|0)-g>>4)+1|0;if(h>>>0>268435455)rn(a);i=a+8|0;j=(c[i>>2]|0)-g|0;if(j>>4>>>0<134217727){k=j>>3;j=k>>>0<h>>>0?h:k;k=(c[f>>2]|0)-g>>4;if(!j){l=0;m=0;n=k}else{o=j;p=k;q=6}}else{o=268435455;p=(c[f>>2]|0)-g>>4;q=6}if((q|0)==6){l=o;m=Tn(o<<4)|0;n=p}p=m+(n<<4)|0;Yh(p,c[b>>2]|0,c[d>>2]|0,c[e>>2]|0,0);e=c[a>>2]|0;d=(c[f>>2]|0)-e|0;b=p+(0-(d>>4)<<4)|0;ho(b|0,e|0,d|0)|0;c[a>>2]=b;c[f>>2]=p+16;c[i>>2]=m+(l<<4);if(!e)return;An(e);return}function Pe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+112|0;f=e+8|0;g=e;h=e+12|0;c[g>>2]=d;dm(h,100,17057,g)|0;j=c[b+12>>2]|0;if(j|0){c[f>>2]=h;ki(j,16342,f)}a[g>>0]=0;li(b,g,1,17070,0);c[b+44>>2]=0;c[b+40>>2]=1;a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;a[g+3>>0]=0;a[g+4>>0]=0;f=b+4|0;j=c[f>>2]|0;li(b,g,a[(c[b+16>>2]|0)+4>>0]|0?1:5,16348,0);c[b+36>>2]=j;c[b+48>>2]=c[f>>2];f=vm(d)|0;j=f>>>7;if(!j){k=f;l=0}else{h=f;m=j;j=0;while(1){a[g+j>>0]=h|128;n=j+1|0;o=m>>>7;if(!o){k=m;l=n;break}else{p=m;m=o;j=n;h=p}}}a[g+l>>0]=k&127;li(b,g,l+1|0,20843,0);li(b,d,f,17090,1);i=e;return}function Qe(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d;f=c[b+52>>2]|0;g=b+56|0;h=c[g>>2]|0;j=(c[b+4>>2]|0)-f|0;if(!(a[(c[b+16>>2]|0)+4>>0]|0)){k=j+-5|0;a[e>>0]=k|128;a[e+1>>0]=k>>>7|128;a[e+2>>0]=k>>>14|128;a[e+3>>0]=k>>>21|128;a[e+4>>0]=k>>>28;ii(b,f,e,5,17153,0);c[g>>2]=0;i=d;return}k=j-h|0;j=k;l=0;while(1){j=j>>>7;m=l+1|0;if(!j){n=m;break}else l=m}if((n|0)!=(h|0))mi(b,n+f|0,h+f|0,k);l=k>>>7;if(!l){o=k;p=0}else{j=k;k=l;l=0;while(1){a[e+l>>0]=j|128;m=l+1|0;q=k>>>7;if(!q){o=k;p=m;break}else{r=k;k=q;l=m;j=r}}}a[e+p>>0]=o&127;ii(b,f,e,p+1|0,17153,0);hi(b,n-h|0);c[g>>2]=0;i=d;return}function Re(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+48|0;h=g;c[h+4>>2]=0;c[h>>2]=872;c[h+8>>2]=e;c[h+12>>2]=f;f=h+16|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;f=sj(a,b,h,d)|0;c[h>>2]=872;d=c[h+20>>2]|0;if(!d){i=g;return f|0}b=h+24|0;h=c[b>>2]|0;if((h|0)!=(d|0))c[b>>2]=h+(~(((h+-12-d|0)>>>0)/12|0)*12|0);An(d);i=g;return f|0}function Se(a){a=a|0;var b=0,d=0;c[a>>2]=872;b=c[a+20>>2]|0;if(!b)return;d=a+24|0;a=c[d>>2]|0;if((a|0)!=(b|0))c[d>>2]=a+(~(((a+-12-b|0)>>>0)/12|0)*12|0);An(b);return}function Te(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=872;b=c[a+20>>2]|0;if(!b){An(a);return}d=a+24|0;e=c[d>>2]|0;if((e|0)!=(b|0))c[d>>2]=e+(~(((e+-12-b|0)>>>0)/12|0)*12|0);An(b);An(a);return}function Ue(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=c[(c[a+4>>2]|0)+8>>2]|0;g=c[a+8>>2]|0;a=c[(c[g>>2]|0)+8>>2]|0;hn(e,b,vm(b)|0);b=kb[a&127](g,f,e)|0;jn(e);i=d;return b|0}function Ve(a,b){a=a|0;b=b|0;c[a+4>>2]=b;return}function We(a,b){a=a|0;b=b|0;return 0}function Xe(a){a=a|0;return 0}function Ye(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Ze(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function _e(a){a=a|0;return 0}function $e(a,b){a=a|0;b=b|0;return 0}function af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+96|0;e=d+104|0;f=c[a>>2]|0;if((c[e>>2]|0)-f>>2>>>0>=b>>>0)return 0;g=d+100|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!b)i=0;else i=Tn(b<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[e>>2]=i+(b<<2);if(!f)return 0;An(h);return 0}function bf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;b=i;i=i+16|0;h=b;j=a+12|0;a=yc(c[j>>2]|0)|0;c[a+16>>2]=4;k=Tn(32)|0;nd(k);c[a+24>>2]=k;c[h>>2]=k;Ac(k+8|0,e,e+(d<<2)|0);Ac(k+20|0,g,g+(f<<2)|0);f=c[j>>2]|0;j=f+100|0;g=c[j>>2]|0;if((g|0)==(c[f+104>>2]|0)){Bc(f+96|0,h);i=b;return 0}else{c[g>>2]=k;c[j>>2]=(c[j>>2]|0)+4;i=b;return 0}return 0}function cf(a){a=a|0;return 0}function df(a,b){a=a|0;b=b|0;return 0}function ef(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+72|0;e=d+80|0;f=c[a>>2]|0;if((c[e>>2]|0)-f>>2>>>0>=b>>>0)return 0;g=d+76|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!b)i=0;else i=Tn(b<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[e>>2]=i+(b<<2);if(!f)return 0;An(h);return 0}function ff(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+16|0;g=d;h=b+12|0;b=yc(c[h>>2]|0)|0;c[b+16>>2]=2;j=Tn(24)|0;Cd(j);c[b+24>>2]=j;c[g>>2]=j;b=c[e>>2]|0;k=c[e+4>>2]|0;a:do if(!k)l=0;else{e=b;m=0;while(1){if(!(a[e>>0]|0)){l=m;break a}n=m+1|0;if(n>>>0<k>>>0){e=e+1|0;m=n}else{l=n;break}}}while(0);m=Vn(l+1|0)|0;ho(m|0,b|0,l|0)|0;a[m+l>>0]=0;c[j>>2]=m;c[j+4>>2]=k;k=c[f>>2]|0;m=c[f+4>>2]|0;b:do if(!m)o=0;else{f=k;l=0;while(1){if(!(a[f>>0]|0)){o=l;break b}b=l+1|0;if(b>>>0<m>>>0){f=f+1|0;l=b}else{o=b;break}}}while(0);l=Vn(o+1|0)|0;ho(l|0,k|0,o|0)|0;a[l+o>>0]=0;c[j+8>>2]=l;c[j+12>>2]=m;m=c[h>>2]|0;h=m+76|0;j=c[h>>2]|0;if((j|0)==(c[m+80>>2]|0)){qe(m+72|0,g);i=d;return 0}else{c[j>>2]=c[g>>2];c[h>>2]=(c[h>>2]|0)+4;i=d;return 0}return 0}function gf(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;g=b+12|0;b=c[(c[(c[g>>2]|0)+72>>2]|0)+(d<<2)>>2]|0;c[b+16>>2]=0;d=Tn(128)|0;qd(d);f=b+20|0;c[f>>2]=d;a[d+8>>0]=1;c[d+32>>2]=0;b=d+40|0;c[b>>2]=h;c[b+4>>2]=0;b=d+48|0;e=c[g>>2]|0;i=c[(c[e+96>>2]|0)+(h<<2)>>2]|0;h=i+8|0;if((b|0)==(h|0))j=e;else{Ac(b,c[h>>2]|0,c[i+12>>2]|0);Ac(d+60|0,c[i+20>>2]|0,c[i+24>>2]|0);j=c[g>>2]|0}i=j+52|0;d=c[i>>2]|0;if((d|0)==(c[j+56>>2]|0)){pe(j+48|0,f);k=c[g>>2]|0;l=k+32|0;m=c[l>>2]|0;n=m+1|0;c[l>>2]=n;return 0}else{c[d>>2]=c[f>>2];c[i>>2]=(c[i>>2]|0)+4;k=c[g>>2]|0;l=k+32|0;m=c[l>>2]|0;n=m+1|0;c[l>>2]=n;return 0}return 0}function hf(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;g=a+12|0;a=c[(c[(c[g>>2]|0)+72>>2]|0)+(b<<2)>>2]|0;c[a+16>>2]=1;b=Tn(32)|0;ud(b);f=a+20|0;c[f>>2]=b;a=b+8|0;c[a>>2]=c[h>>2];c[a+4>>2]=c[h+4>>2];c[a+8>>2]=c[h+8>>2];c[a+12>>2]=c[h+12>>2];c[a+16>>2]=c[h+16>>2];c[a+20>>2]=c[h+20>>2];h=c[g>>2]|0;a=h+112|0;b=c[a>>2]|0;if((b|0)==(c[h+116>>2]|0)){le(h+108|0,f);i=c[g>>2]|0;j=i+36|0;k=c[j>>2]|0;l=k+1|0;c[j>>2]=l;return 0}else{c[b>>2]=c[f>>2];c[a>>2]=(c[a>>2]|0)+4;i=c[g>>2]|0;j=i+36|0;k=c[j>>2]|0;l=k+1|0;c[j>>2]=l;return 0}return 0}function jf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;f=a+12|0;a=c[(c[(c[f>>2]|0)+72>>2]|0)+(b<<2)>>2]|0;c[a+16>>2]=2;b=Tn(32)|0;Ad(b);e=a+20|0;c[e>>2]=b;a=b+8|0;c[a>>2]=c[g>>2];c[a+4>>2]=c[g+4>>2];c[a+8>>2]=c[g+8>>2];c[a+12>>2]=c[g+12>>2];c[a+16>>2]=c[g+16>>2];c[a+20>>2]=c[g+20>>2];g=c[f>>2]|0;a=g+136|0;b=c[a>>2]|0;if((b|0)==(c[g+140>>2]|0)){ne(g+132|0,e);h=c[f>>2]|0;i=h+40|0;j=c[i>>2]|0;k=j+1|0;c[i>>2]=k;return 0}else{c[b>>2]=c[e>>2];c[a>>2]=(c[a>>2]|0)+4;h=c[f>>2]|0;i=h+40|0;j=c[i>>2]|0;k=j+1|0;c[i>>2]=k;return 0}return 0}function kf(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;g=b+12|0;b=c[(c[(c[g>>2]|0)+72>>2]|0)+(d<<2)>>2]|0;c[b+16>>2]=3;d=Tn(20)|0;sd(d);f=b+20|0;c[f>>2]=d;c[d+8>>2]=h;a[d+12>>0]=i&1;i=c[g>>2]|0;h=i+64|0;b=c[h>>2]|0;if((b|0)==(c[i+68>>2]|0)){je(i+60|0,f);j=c[g>>2]|0;k=j+44|0;l=c[k>>2]|0;m=l+1|0;c[k>>2]=m;return 0}else{c[b>>2]=d;c[h>>2]=(c[h>>2]|0)+4;j=c[g>>2]|0;k=j+44|0;l=c[k>>2]|0;m=l+1|0;c[k>>2]=m;return 0}return 0}function lf(a){a=a|0;return 0}function mf(a,b){a=a|0;b=b|0;return 0}function nf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+48|0;e=(c[d+32>>2]|0)+b|0;b=d+56|0;f=c[a>>2]|0;if((c[b>>2]|0)-f>>2>>>0>=e>>>0)return 0;g=d+52|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!e)i=0;else i=Tn(e<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[b>>2]=i+(e<<2);if(!f)return 0;An(h);return 0}function of(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;f=d;g=b+12|0;b=yc(c[g>>2]|0)|0;c[b+16>>2]=0;h=Tn(128)|0;qd(h);c[b+24>>2]=h;c[f>>2]=h;a[h+8>>0]=1;c[h+32>>2]=0;b=h+40|0;c[b>>2]=e;c[b+4>>2]=0;b=h+48|0;j=c[g>>2]|0;k=c[(c[j+96>>2]|0)+(e<<2)>>2]|0;e=k+8|0;if((b|0)==(e|0))l=j;else{Ac(b,c[e>>2]|0,c[k+12>>2]|0);Ac(h+60|0,c[k+20>>2]|0,c[k+24>>2]|0);l=c[g>>2]|0}g=l+52|0;k=c[g>>2]|0;if((k|0)==(c[l+56>>2]|0)){pe(l+48|0,f);i=d;return 0}else{c[k>>2]=h;c[g>>2]=(c[g>>2]|0)+4;i=d;return 0}return 0}function pf(a){a=a|0;return 0}function qf(a,b){a=a|0;b=b|0;return 0}function rf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+108|0;e=(c[d+36>>2]|0)+b|0;b=d+116|0;f=c[a>>2]|0;if((c[b>>2]|0)-f>>2>>>0>=e>>>0)return 0;g=d+112|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!e)i=0;else i=Tn(e<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[b>>2]=i+(e<<2);if(!f)return 0;An(h);return 0}function sf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;d=a+12|0;a=yc(c[d>>2]|0)|0;c[a+16>>2]=5;b=Tn(32)|0;ud(b);f=a+24|0;c[f>>2]=b;a=b+8|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];c[a+16>>2]=c[e+16>>2];c[a+20>>2]=c[e+20>>2];e=c[d>>2]|0;d=e+112|0;a=c[d>>2]|0;if((a|0)==(c[e+116>>2]|0)){le(e+108|0,f);return 0}else{c[a>>2]=c[f>>2];c[d>>2]=(c[d>>2]|0)+4;return 0}return 0}function tf(a){a=a|0;return 0}function uf(a,b){a=a|0;b=b|0;return 0}function vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+132|0;e=(c[d+40>>2]|0)+b|0;b=d+140|0;f=c[a>>2]|0;if((c[b>>2]|0)-f>>2>>>0>=e>>>0)return 0;g=d+136|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!e)i=0;else i=Tn(e<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[b>>2]=i+(e<<2);if(!f)return 0;An(h);return 0}function wf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;b=a+12|0;a=yc(c[b>>2]|0)|0;c[a+16>>2]=7;e=Tn(32)|0;Ad(e);f=a+24|0;c[f>>2]=e;a=e+8|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];c[a+16>>2]=c[d+16>>2];c[a+20>>2]=c[d+20>>2];d=c[b>>2]|0;b=d+136|0;a=c[b>>2]|0;if((a|0)==(c[d+140>>2]|0)){ne(d+132|0,f);return 0}else{c[a>>2]=c[f>>2];c[b>>2]=(c[b>>2]|0)+4;return 0}return 0}function xf(a){a=a|0;return 0}function yf(a,b){a=a|0;b=b|0;return 0}function zf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+60|0;e=(c[d+44>>2]|0)+b|0;b=d+68|0;f=c[a>>2]|0;if((c[b>>2]|0)-f>>2>>>0>=e>>>0)return 0;g=d+64|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!e)i=0;else i=Tn(e<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[b>>2]=i+(e<<2);if(!f)return 0;An(h);return 0}function Af(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;d=b+12|0;b=yc(c[d>>2]|0)|0;c[b+16>>2]=1;g=Tn(20)|0;sd(g);h=b+24|0;c[h>>2]=g;c[g+8>>2]=e;a[g+12>>0]=f&1;f=c[d>>2]|0;d=f+64|0;e=c[d>>2]|0;if((e|0)==(c[f+68>>2]|0)){je(f+60|0,h);return 0}else{c[e>>2]=g;c[d>>2]=(c[d>>2]|0)+4;return 0}return 0}function Bf(a,b){a=a|0;b=b|0;c[a+36>>2]=(c[(c[(c[a+12>>2]|0)+60>>2]|0)+(b<<2)>>2]|0)+16;return 0}function Cf(a,b){a=a|0;b=b|0;c[a+36>>2]=0;return 0}function Df(a,b){a=a|0;b=b|0;return 0}function Ef(a){a=a|0;return 0}function Ff(a,b){a=a|0;b=b|0;return 0}function Gf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+84|0;e=d+92|0;f=c[a>>2]|0;if((c[e>>2]|0)-f>>2>>>0>=b>>>0)return 0;g=d+88|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!b)i=0;else i=Tn(b<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[e>>2]=i+(b<<2);if(!f)return 0;An(h);return 0}function Hf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+16|0;h=d;j=b+12|0;b=yc(c[j>>2]|0)|0;c[b+16>>2]=3;k=Tn(48)|0;Ed(k);c[b+24>>2]=k;c[h>>2]=k;b=c[g>>2]|0;l=c[g+4>>2]|0;g=k;a:do if(!l)m=0;else{n=b;o=0;while(1){if(!(a[n>>0]|0)){m=o;break a}p=o+1|0;if(p>>>0<l>>>0){n=n+1|0;o=p}else{m=p;break}}}while(0);o=Vn(m+1|0)|0;ho(o|0,b|0,m|0)|0;a[o+m>>0]=0;c[k>>2]=o;c[k+4>>2]=l;c[k+32>>2]=0;l=k+40|0;c[l>>2]=f;c[l+4>>2]=0;c[k+8>>2]=e;e=c[j>>2]|0;j=e+88|0;k=c[j>>2]|0;if((k|0)==(c[e+92>>2]|0)){ke(e+84|0,h);i=d;return 0}else{c[k>>2]=g;c[j>>2]=(c[j>>2]|0)+4;i=d;return 0}return 0}function If(a){a=a|0;return 0}function Jf(a,b){a=a|0;b=b|0;return 0}function Kf(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+12|0;a=yc(c[d>>2]|0)|0;c[a+16>>2]=9;c[a+40>>2]=0;e=a+48|0;c[e>>2]=b;c[e+4>>2]=0;c[(c[d>>2]|0)+156>>2]=a+24;return 0}function Lf(a){a=a|0;return 0}function Mf(a,b){a=a|0;b=b|0;return 0}function Nf(a,b){a=a|0;b=b|0;return 0}function Of(a,b){a=a|0;b=b|0;var d=0;d=c[(c[(c[a+12>>2]|0)+48>>2]|0)+(b<<2)>>2]|0;c[a+16>>2]=d;Pf(a,0,d+124|0);return 0}function Pf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=d;d=a+32|0;c[d>>2]=(c[d>>2]|0)+1;d=a+20|0;f=a+24|0;g=c[f>>2]|0;h=a+28|0;a=c[h>>2]|0;if(g>>>0<a>>>0){c[g>>2]=b;c[g+4>>2]=e;c[g+8>>2]=0;c[f>>2]=g+12;return}i=c[d>>2]|0;j=((g-i|0)/12|0)+1|0;if(j>>>0>357913941)rn(d);g=(a-i|0)/12|0;if(g>>>0<178956970){a=g<<1;g=a>>>0<j>>>0?j:a;a=c[f>>2]|0;j=(a-i|0)/12|0;if(!g){k=0;l=0;m=j;n=a}else{o=g;p=a;q=j;r=8}}else{j=c[f>>2]|0;o=357913941;p=j;q=(j-i|0)/12|0;r=8}if((r|0)==8){k=o;l=Tn(o*12|0)|0;m=q;n=p}p=l+(m*12|0)|0;c[p>>2]=b;c[l+(m*12|0)+4>>2]=e;c[l+(m*12|0)+8>>2]=0;m=n-i|0;n=p+(((m|0)/-12|0)*12|0)|0;e=i;ho(n|0,e|0,m|0)|0;c[d>>2]=n;c[f>>2]=p+12;c[h>>2]=l+(k*12|0);if(!i)return;An(e);return}function Qf(a,b){a=a|0;b=b|0;return 0}function Rf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+16|0;f=b;c[f>>2]=e;g=c[a+16>>2]|0;a=g+72|0;h=g+76|0;j=c[a>>2]|0;k=(c[h>>2]|0)-j|0;l=k>>2;m=l+d|0;n=g+80|0;if((c[n>>2]|0)-j>>2>>>0<m>>>0){if(!m)o=0;else o=Tn(m<<2)|0;g=o+(l<<2)|0;p=g+(0-l<<2)|0;l=j;ho(p|0,l|0,k|0)|0;c[a>>2]=p;c[h>>2]=g;c[n>>2]=o+(m<<2);if(j|0)An(l)}if(!d){i=b;return 0}else q=0;do{l=c[h>>2]|0;if((l|0)==(c[n>>2]|0))de(a,f);else{c[l>>2]=e;c[h>>2]=l+4}q=q+1|0}while((q|0)!=(d|0));i=b;return 0}function Sf(a,b){a=a|0;b=b|0;return 0}function Tf(a){a=a|0;return 0}function Uf(a,b){a=a|0;b=b|0;return 0}function Vf(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Wf(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Xf(a,b){a=a|0;b=b|0;return 0}function Yf(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Zf(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function _f(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;f=Oc(b)|0;b=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(b-g|0)/12|0;if((b|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h;$f(a,17402,e);if(!f){j=1;i=d;return j|0}Ec(f);An(f);j=1;i=d;return j|0}e=g;g=h+-1|0;h=c[e+(g*12|0)+4>>2]|0;a=e+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=f;c[h>>2]=f;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=f;c[a>>2]=f;j=0;i=d;return j|0}return 0}function $f(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+176|0;f=e+32|0;g=e+16|0;h=e;j=e+48|0;c[g>>2]=d;c[h>>2]=c[g>>2];d=(em(j,128,b,g)|0)+1|0;if(d>>>0>128){g=i;i=i+((1*d|0)+15&-16)|0;em(g,d,b,h)|0;k=g}else k=j;j=c[a+8>>2]|0;a=c[(c[j>>2]|0)+8>>2]|0;hn(f,k,vm(k)|0);kb[a&127](j,-1,f)|0;jn(f);i=e;return}function ag(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e;g=Tn(24)|0;Mc(g);h=Pc(g)|0;g=h+24|0;Ac((c[g>>2]|0)+8|0,d,d+(b<<2)|0);b=c[a+24>>2]|0;d=c[a+20>>2]|0;j=(b-d|0)/12|0;do if((b|0)==(d|0)){c[f>>2]=0;c[f+4>>2]=j;$f(a,17402,f);if(h|0){Ec(h);An(h)}}else{k=d;l=j+-1|0;m=c[k+(l*12|0)+4>>2]|0;n=k+(l*12|0)+8|0;if(!(c[m>>2]|0)){c[n>>2]=h;c[m>>2]=h;break}else{c[(c[n>>2]|0)+20>>2]=h;c[n>>2]=h;break}}while(0);Pf(a,1,(c[g>>2]|0)+20|0);i=e;return 0}function bg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=Qc(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=Rc(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function dg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+112|0;g=f+72|0;h=f+64|0;j=f+32|0;k=f;l=Tn(12)|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;if(b|0){eg(l,b);m=0;do{n=(c[l>>2]|0)+(m<<5)|0;Hc(j,c[d+(m<<2)>>2]|0,0);c[n>>2]=c[j>>2];c[n+4>>2]=c[j+4>>2];c[n+8>>2]=c[j+8>>2];c[n+12>>2]=c[j+12>>2];c[n+16>>2]=c[j+16>>2];c[n+20>>2]=c[j+20>>2];c[n+24>>2]=c[j+24>>2];c[n+28>>2]=c[j+28>>2];m=m+1|0}while((m|0)!=(b|0))}Hc(k,e,0);c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];c[g+12>>2]=c[k+12>>2];c[g+16>>2]=c[k+16>>2];c[g+20>>2]=c[k+20>>2];c[g+24>>2]=c[k+24>>2];c[g+28>>2]=c[k+28>>2];k=Sc(l,g)|0;g=c[a+24>>2]|0;l=c[a+20>>2]|0;e=(g-l|0)/12|0;if((g|0)==(l|0)){c[h>>2]=0;c[h+4>>2]=e;$f(a,17402,h);if(!k){o=1;i=f;return o|0}Ec(k);An(k);o=1;i=f;return o|0}h=l;l=e+-1|0;e=c[h+(l*12|0)+4>>2]|0;a=h+(l*12|0)+8|0;if(!(c[e>>2]|0)){c[a>>2]=k;c[e>>2]=k;o=0;i=f;return o|0}else{c[(c[a>>2]|0)+20>>2]=k;c[a>>2]=k;o=0;i=f;return o|0}return 0}function eg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=a+8|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;if(e-g>>5>>>0>=b>>>0){h=b;i=g;do{c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;c[i+16>>2]=0;c[i+20>>2]=0;c[i+24>>2]=0;c[i+28>>2]=0;i=(c[f>>2]|0)+32|0;c[f>>2]=i;h=h+-1|0}while((h|0)!=0);return}h=c[a>>2]|0;i=(g-h>>5)+b|0;if(i>>>0>134217727)rn(a);g=e-h|0;if(g>>5>>>0<67108863){e=g>>4;g=e>>>0<i>>>0?i:e;e=(c[f>>2]|0)-h>>5;if(!g){j=0;k=0;l=e}else{m=g;n=e;o=9}}else{m=134217727;n=(c[f>>2]|0)-h>>5;o=9}if((o|0)==9){j=m;k=Tn(m<<5)|0;l=n}n=k+(l<<5)|0;l=k+(j<<5)|0;j=b;b=n;k=n;while(1){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;b=k+32|0;m=b;j=j+-1|0;if(!j){p=m;break}else k=m}k=c[a>>2]|0;j=(c[f>>2]|0)-k|0;b=n+(0-(j>>5)<<5)|0;ho(b|0,k|0,j|0)|0;c[a>>2]=b;c[f>>2]=p;c[d>>2]=l;if(!k)return;An(k);return}function fg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=Tc(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function gg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=Uc(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function hg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;f=Vc(b)|0;b=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(b-g|0)/12|0;if((b|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h;$f(a,17402,e);if(!f){j=1;i=d;return j|0}Ec(f);An(f);j=1;i=d;return j|0}e=g;g=h+-1|0;h=c[e+(g*12|0)+4>>2]|0;a=e+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=f;c[h>>2]=f;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=f;c[a>>2]=f;j=0;i=d;return j|0}return 0}function ig(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;f=Xc(b)|0;b=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(b-g|0)/12|0;if((b|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h;$f(a,17402,e);if(!f){j=1;i=d;return j|0}Ec(f);An(f);j=1;i=d;return j|0}e=g;g=h+-1|0;h=c[e+(g*12|0)+4>>2]|0;a=e+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=f;c[h>>2]=f;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=f;c[a>>2]=f;j=0;i=d;return j|0}return 0}function jg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=Yc()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function kg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=Zc()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function lg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+32|0;d=b+16|0;e=b;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h;$f(a,17402,e);j=1;i=b;return j|0}e=g;g=h+-1|0;f=e+(g*12|0)|0;if((c[f>>2]|0)!=3){$f(a,17440,b+8|0);j=1;i=b;return j|0}if(h>>>0>1){c[f>>2]=4;c[e+(g*12|0)+4>>2]=(c[e+((h+-2|0)*12|0)+8>>2]|0)+24+4;c[e+(g*12|0)+8>>2]=0;j=0;i=b;return j|0}else{c[d>>2]=1;c[d+4>>2]=h;$f(a,17402,d);j=1;i=b;return j|0}return 0}function mg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;d=a+24|0;e=c[d>>2]|0;if((e|0)==(c[a+20>>2]|0)){$f(a,17476,b);f=1;i=b;return f|0}else{g=a+32|0;c[g>>2]=(c[g>>2]|0)+-1;c[d>>2]=e+-12;f=0;i=b;return f|0}return 0}function ng(a){a=a|0;return 0}function og(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+48|0;f=e+41|0;g=e+32|0;h=e;a[f>>0]=a[e+40>>0]|0;Kc(h,f,d);d=Wc(h)|0;h=c[b+24>>2]|0;f=c[b+20>>2]|0;j=(h-f|0)/12|0;if((h|0)==(f|0)){c[g>>2]=0;c[g+4>>2]=j;$f(b,17402,g);if(!d){k=1;i=e;return k|0}Ec(d);An(d);k=1;i=e;return k|0}g=f;f=j+-1|0;j=c[g+(f*12|0)+4>>2]|0;b=g+(f*12|0)+8|0;if(!(c[j>>2]|0)){c[b>>2]=d;c[j>>2]=d;k=0;i=e;return k|0}else{c[(c[b>>2]|0)+20>>2]=d;c[b>>2]=d;k=0;i=e;return k|0}return 0}function pg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+48|0;g=f+41|0;h=f+32|0;j=f;a[g>>0]=a[f+40>>0]|0;Lc(j,g,d,e);e=Wc(j)|0;j=c[b+24>>2]|0;d=c[b+20>>2]|0;g=(j-d|0)/12|0;if((j|0)==(d|0)){c[h>>2]=0;c[h+4>>2]=g;$f(b,17402,h);if(!e){k=1;i=f;return k|0}Ec(e);An(e);k=1;i=f;return k|0}h=d;d=g+-1|0;g=c[h+(d*12|0)+4>>2]|0;b=h+(d*12|0)+8|0;if(!(c[g>>2]|0)){c[b>>2]=e;c[g>>2]=e;k=0;i=f;return k|0}else{c[(c[b>>2]|0)+20>>2]=e;c[b>>2]=e;k=0;i=f;return k|0}return 0}function qg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=_c(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function rg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=$c(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function sg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=ad()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function tg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+48|0;f=e+41|0;g=e+32|0;h=e;a[f>>0]=a[e+40>>0]|0;Ic(h,f,d);d=Wc(h)|0;h=c[b+24>>2]|0;f=c[b+20>>2]|0;j=(h-f|0)/12|0;if((h|0)==(f|0)){c[g>>2]=0;c[g+4>>2]=j;$f(b,17402,g);if(!d){k=1;i=e;return k|0}Ec(d);An(d);k=1;i=e;return k|0}g=f;f=j+-1|0;j=c[g+(f*12|0)+4>>2]|0;b=g+(f*12|0)+8|0;if(!(c[j>>2]|0)){c[b>>2]=d;c[j>>2]=d;k=0;i=e;return k|0}else{c[(c[b>>2]|0)+20>>2]=d;c[b>>2]=d;k=0;i=e;return k|0}return 0}function ug(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+48|0;g=f+41|0;h=f+32|0;j=f;a[g>>0]=a[f+40>>0]|0;Jc(j,g,d,e);e=Wc(j)|0;j=c[b+24>>2]|0;d=c[b+20>>2]|0;g=(j-d|0)/12|0;if((j|0)==(d|0)){c[h>>2]=0;c[h+4>>2]=g;$f(b,17402,h);if(!e){k=1;i=f;return k|0}Ec(e);An(e);k=1;i=f;return k|0}h=d;d=g+-1|0;g=c[h+(d*12|0)+4>>2]|0;b=h+(d*12|0)+8|0;if(!(c[g>>2]|0)){c[b>>2]=e;c[g>>2]=e;k=0;i=f;return k|0}else{c[(c[b>>2]|0)+20>>2]=e;c[b>>2]=e;k=0;i=f;return k|0}return 0}function vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e;g=Tn(24)|0;Mc(g);h=bd(g,0)|0;g=h+24|0;Ac((c[g>>2]|0)+8|0,d,d+(b<<2)|0);c[g+4>>2]=0;b=c[a+24>>2]|0;d=c[a+20>>2]|0;j=(b-d|0)/12|0;do if((b|0)==(d|0)){c[f>>2]=0;c[f+4>>2]=j;$f(a,17402,f);if(h|0){Ec(h);An(h)}}else{k=d;l=j+-1|0;m=c[k+(l*12|0)+4>>2]|0;n=k+(l*12|0)+8|0;if(!(c[m>>2]|0)){c[n>>2]=h;c[m>>2]=h;break}else{c[(c[n>>2]|0)+20>>2]=h;c[n>>2]=h;break}}while(0);Pf(a,3,(c[g>>2]|0)+20|0);i=e;return 0}function wg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=cd(b,1<<d,e,0)|0;e=c[a+24>>2]|0;d=c[a+20>>2]|0;b=(e-d|0)/12|0;if((e|0)==(d|0)){c[g>>2]=0;c[g+4>>2]=b;$f(a,17402,g);if(!h){j=1;i=f;return j|0}Ec(h);An(h);j=1;i=f;return j|0}g=d;d=b+-1|0;b=c[g+(d*12|0)+4>>2]|0;a=g+(d*12|0)+8|0;if(!(c[b>>2]|0)){c[a>>2]=h;c[b>>2]=h;j=0;i=f;return j|0}else{c[(c[a>>2]|0)+20>>2]=h;c[a>>2]=h;j=0;i=f;return j|0}return 0}function xg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e;g=Tn(24)|0;Mc(g);h=dd(g)|0;g=h+24|0;Ac((c[g>>2]|0)+8|0,d,d+(b<<2)|0);b=c[a+24>>2]|0;d=c[a+20>>2]|0;j=(b-d|0)/12|0;do if((b|0)==(d|0)){c[f>>2]=0;c[f+4>>2]=j;$f(a,17402,f);if(h|0){Ec(h);An(h)}}else{k=d;l=j+-1|0;m=c[k+(l*12|0)+4>>2]|0;n=k+(l*12|0)+8|0;if(!(c[m>>2]|0)){c[n>>2]=h;c[m>>2]=h;break}else{c[(c[n>>2]|0)+20>>2]=h;c[n>>2]=h;break}}while(0);Pf(a,2,(c[g>>2]|0)+20|0);i=e;return 0}function yg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=ed()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function zg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=fd()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function Ag(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=gd()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function Bg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=hd(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function Cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=id(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function Dg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=jd(b,1<<d,e,0)|0;e=c[a+24>>2]|0;d=c[a+20>>2]|0;b=(e-d|0)/12|0;if((e|0)==(d|0)){c[g>>2]=0;c[g+4>>2]=b;$f(a,17402,g);if(!h){j=1;i=f;return j|0}Ec(h);An(h);j=1;i=f;return j|0}g=d;d=b+-1|0;b=c[g+(d*12|0)+4>>2]|0;a=g+(d*12|0)+8|0;if(!(c[b>>2]|0)){c[a>>2]=h;c[b>>2]=h;j=0;i=f;return j|0}else{c[(c[a>>2]|0)+20>>2]=h;c[a>>2]=h;j=0;i=f;return j|0}return 0}function Eg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+80|0;e=d+40|0;f=d+32|0;g=d;Hc(g,b,0);c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];c[e+24>>2]=c[g+24>>2];c[e+28>>2]=c[g+28>>2];g=kd(e)|0;e=c[a+24>>2]|0;b=c[a+20>>2]|0;h=(e-b|0)/12|0;if((e|0)==(b|0)){c[f>>2]=0;c[f+4>>2]=h;$f(a,17402,f);if(!g){j=1;i=d;return j|0}Ec(g);An(g);j=1;i=d;return j|0}f=b;b=h+-1|0;h=c[f+(b*12|0)+4>>2]|0;a=f+(b*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=g;c[h>>2]=g;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=g;c[a>>2]=g;j=0;i=d;return j|0}return 0}function Fg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;f=ld(b)|0;b=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(b-g|0)/12|0;if((b|0)==(g|0)){c[e>>2]=0;c[e+4>>2]=h;$f(a,17402,e);if(!f){j=1;i=d;return j|0}Ec(f);An(f);j=1;i=d;return j|0}e=g;g=h+-1|0;h=c[e+(g*12|0)+4>>2]|0;a=e+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=f;c[h>>2]=f;j=0;i=d;return j|0}else{c[(c[a>>2]|0)+20>>2]=f;c[a>>2]=f;j=0;i=d;return j|0}return 0}function Gg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b;e=md()|0;f=c[a+24>>2]|0;g=c[a+20>>2]|0;h=(f-g|0)/12|0;if((f|0)==(g|0)){c[d>>2]=0;c[d+4>>2]=h;$f(a,17402,d);if(!e){j=1;i=b;return j|0}Ec(e);An(e);j=1;i=b;return j|0}d=g;g=h+-1|0;h=c[d+(g*12|0)+4>>2]|0;a=d+(g*12|0)+8|0;if(!(c[h>>2]|0)){c[a>>2]=e;c[h>>2]=e;j=0;i=b;return j|0}else{c[(c[a>>2]|0)+20>>2]=e;c[a>>2]=e;j=0;i=b;return j|0}return 0}function Hg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;b=i;i=i+16|0;d=a+24|0;e=c[d>>2]|0;if((e|0)==(c[a+20>>2]|0)){$f(a,17476,b);f=1;i=b;return f|0}else{g=a+32|0;c[g>>2]=(c[g>>2]|0)+-1;c[d>>2]=e+-12;c[a+16>>2]=0;f=0;i=b;return f|0}return 0}function Ig(a){a=a|0;return 0}function Jg(a,b){a=a|0;b=b|0;return 0}function Kg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+120|0;e=d+128|0;f=c[a>>2]|0;if((c[e>>2]|0)-f>>2>>>0>=b>>>0)return 0;g=d+124|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!b)i=0;else i=Tn(b<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[e>>2]=i+(b<<2);if(!f)return 0;An(h);return 0}function Lg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;b=a+12|0;a=yc(c[b>>2]|0)|0;c[a+16>>2]=6;e=Tn(48)|0;wd(e);f=a+24|0;c[f>>2]=e;c[e+16>>2]=0;a=e+24|0;c[a>>2]=d;c[a+4>>2]=0;a=c[b>>2]|0;b=a+124|0;d=c[b>>2]|0;if((d|0)==(c[a+128>>2]|0)){me(a+120|0,f);return 0}else{c[d>>2]=e;c[b>>2]=(c[b>>2]|0)+4;return 0}return 0}function Mg(a,b){a=a|0;b=b|0;c[a+36>>2]=(c[(c[(c[a+12>>2]|0)+120>>2]|0)+(b<<2)>>2]|0)+32;return 0}function Ng(a,b){a=a|0;b=b|0;c[a+36>>2]=0;return 0}function Og(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[(c[(c[a+12>>2]|0)+120>>2]|0)+(b<<2)>>2]|0;b=e+36|0;a=e+44|0;f=c[b>>2]|0;if((c[a>>2]|0)-f>>5>>>0>=d>>>0)return 0;g=e+40|0;e=(c[g>>2]|0)-f|0;h=e>>5;if(!d)i=0;else i=Tn(d<<5)|0;j=i+(h<<5)|0;k=j+(0-h<<5)|0;h=f;ho(k|0,h|0,e|0)|0;c[b>>2]=k;c[g>>2]=j;c[a>>2]=i+(d<<5);if(!f)return 0;An(h);return 0}function Pg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=c[(c[(c[a+12>>2]|0)+120>>2]|0)+(b<<2)>>2]|0;b=e+40|0;a=c[b>>2]|0;if(a>>>0<(c[e+44>>2]|0)>>>0){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;c[a+28>>2]=0;a=(c[b>>2]|0)+32|0;c[b>>2]=a;f=a}else{Qg(e+36|0);f=c[b>>2]|0}c[f+-16>>2]=0;b=f+-8|0;c[b>>2]=d;c[b+4>>2]=0;return 0}function Qg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=a+4|0;d=c[a>>2]|0;e=((c[b>>2]|0)-d>>5)+1|0;if(e>>>0>134217727)rn(a);f=a+8|0;g=(c[f>>2]|0)-d|0;if(g>>5>>>0<67108863){h=g>>4;g=h>>>0<e>>>0?e:h;h=c[b>>2]|0;e=h-d>>5;if(!g){i=0;j=0;k=e;l=h}else{m=g;n=h;o=e;p=6}}else{e=c[b>>2]|0;m=134217727;n=e;o=e-d>>5;p=6}if((p|0)==6){i=m;j=Tn(m<<5)|0;k=o;l=n}n=j+(k<<5)|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;k=l-d|0;l=n+(0-(k>>5)<<5)|0;ho(l|0,d|0,k|0)|0;c[a>>2]=l;c[b>>2]=n+32;c[f>>2]=j+(i<<5);if(!d)return;An(d);return}function Rg(a,b){a=a|0;b=b|0;return 0}function Sg(a){a=a|0;return 0}function Tg(a,b){a=a|0;b=b|0;return 0}function Ug(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[a+12>>2]|0;a=d+144|0;e=d+152|0;f=c[a>>2]|0;if((c[e>>2]|0)-f>>2>>>0>=b>>>0)return 0;g=d+148|0;d=(c[g>>2]|0)-f|0;h=d>>2;if(!b)i=0;else i=Tn(b<<2)|0;j=i+(h<<2)|0;k=j+(0-h<<2)|0;h=f;ho(k|0,h|0,d|0)|0;c[a>>2]=k;c[g>>2]=j;c[e>>2]=i+(b<<2);if(!f)return 0;An(h);return 0}function Vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;b=a+12|0;a=yc(c[b>>2]|0)|0;c[a+16>>2]=8;e=Tn(48)|0;yd(e);f=a+24|0;c[f>>2]=e;c[e+16>>2]=0;a=e+24|0;c[a>>2]=d;c[a+4>>2]=0;a=c[b>>2]|0;b=a+148|0;d=c[b>>2]|0;if((d|0)==(c[a+152>>2]|0)){oe(a+144|0,f);return 0}else{c[d>>2]=e;c[b>>2]=(c[b>>2]|0)+4;return 0}return 0}function Wg(a,b){a=a|0;b=b|0;c[a+36>>2]=(c[(c[(c[a+12>>2]|0)+144>>2]|0)+(b<<2)>>2]|0)+32;return 0}function Xg(a,b){a=a|0;b=b|0;c[a+36>>2]=0;return 0}function Yg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[(c[(c[a+12>>2]|0)+144>>2]|0)+(b<<2)>>2]|0;b=Vn(e)|0;c[f+36>>2]=b;c[f+40>>2]=e;ho(b|0,d|0,e|0)|0;return 0}function Zg(a,b){a=a|0;b=b|0;return 0}function _g(a){a=a|0;return 0}function $g(a,b){a=a|0;b=b|0;return 0}function ah(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function bh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[a+12>>2]|0;g=(c[f+52>>2]|0)-(c[f+48>>2]|0)>>2;if(g>>>0>=b>>>0){h=0;i=d;return h|0}c[e>>2]=b;c[e+4>>2]=g;$f(a,17502,e);h=1;i=d;return h|0}function ch(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;if(Zh(e)|0){i=f;return 0}j=b+12|0;b=c[j>>2]|0;k=e+4|0;hn(g,c[e>>2]|0,c[k>>2]|0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;l=Tn(40)|0;m=l+8|0;c[m>>2]=c[g>>2];c[m+4>>2]=c[g+4>>2];c[m+8>>2]=c[g+8>>2];c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;m=l+20|0;c[m>>2]=c[h>>2];c[m+4>>2]=c[h+4>>2];c[m+8>>2]=c[h+8>>2];c[m+12>>2]=c[h+12>>2];c[l+36>>2]=d;ge(b+160|0,l)|0;jn(g);g=c[(c[(c[j>>2]|0)+48>>2]|0)+(d<<2)>>2]|0;d=c[e>>2]|0;e=c[k>>2]|0;a:do if(!e)n=0;else{k=d;j=0;while(1){if(!(a[k>>0]|0)){n=j;break a}l=j+1|0;if(l>>>0<e>>>0){k=k+1|0;j=l}else{n=l;break}}}while(0);j=Vn(n+1|0)|0;ho(j|0,d|0,n|0)|0;a[j+n>>0]=0;c[g>>2]=j;c[g+4>>2]=e;i=f;return 0}function dh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function eh(a,b){a=a|0;b=b|0;return 0}function fh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=c[(c[(c[a+12>>2]|0)+48>>2]|0)+(b<<2)>>2]|0;b=((c[g+76>>2]|0)-(c[g+72>>2]|0)>>2)+((c[g+52>>2]|0)-(c[g+48>>2]|0)>>2)|0;if(b>>>0>=d>>>0){h=0;i=e;return h|0}c[f>>2]=d;c[f+4>>2]=b;$f(a,17560,f);h=1;i=e;return h|0}function gh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+32|0;g=f+16|0;h=f;if(Zh(e)|0){i=f;return 0}j=c[(c[(c[a+12>>2]|0)+48>>2]|0)+(b<<2)>>2]|0;b=(c[j+52>>2]|0)-(c[j+48>>2]|0)>>2;a=b>>>0>d>>>0;hn(g,c[e>>2]|0,c[e+4>>2]|0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;e=Tn(40)|0;k=e+8|0;c[k>>2]=c[g>>2];c[k+4>>2]=c[g+4>>2];c[k+8>>2]=c[g+8>>2];c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;k=e+20|0;c[k>>2]=c[h>>2];c[k+4>>2]=c[h+4>>2];c[k+8>>2]=c[h+8>>2];c[k+12>>2]=c[h+12>>2];c[e+36>>2]=d-(a?0:b);ge(a?j+84|0:j+104|0,e)|0;jn(g);i=f;return 0}function hh(a){a=a|0;return 0}function ih(a,b){a=a|0;b=b|0;return 0}function jh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function kh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0}function lh(a){a=a|0;return 0}function mh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;i=i+48|0;f=d+33|0;g=d;a[f>>0]=a[d+32>>0]|0;Kc(g,f,e);e=Wc(g)|0;c[c[b+36>>2]>>2]=e;i=d;return 0}function nh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;d=i;i=i+48|0;g=d+33|0;h=d;a[g>>0]=a[d+32>>0]|0;Lc(h,g,e,f);f=Wc(h)|0;c[c[b+36>>2]>>2]=f;i=d;return 0}function oh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;b=i;i=i+64|0;e=b+32|0;f=b;Hc(f,d,0);c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[e+16>>2]=c[f+16>>2];c[e+20>>2]=c[f+20>>2];c[e+24>>2]=c[f+24>>2];c[e+28>>2]=c[f+28>>2];f=_c(e)|0;c[c[a+36>>2]>>2]=f;i=b;return 0}function ph(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;d=i;i=i+48|0;f=d+33|0;g=d;a[f>>0]=a[d+32>>0]|0;Ic(g,f,e);e=Wc(g)|0;c[c[b+36>>2]>>2]=e;i=d;return 0}function qh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;d=i;i=i+48|0;g=d+33|0;h=d;a[g>>0]=a[d+32>>0]|0;Jc(h,g,e,f);f=Wc(h)|0;c[c[b+36>>2]>>2]=f;i=d;return 0}function rh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;if(!(c[a+12>>2]|0)){i=e;return}c[f>>2]=0;g=f+4|0;c[g>>2]=0;c[f+8>>2]=0;sh(a,f);uh(c[f>>2]|0,c[g>>2]|0);yh(0,f,b,d);d=c[f>>2]|0;f=d;if(d|0){b=c[g>>2]|0;if((b|0)!=(d|0))c[g>>2]=b+(~((b+-4-f|0)>>>2)<<2);An(d)}i=e;return}function sh(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;i=i+16|0;g=f+4|0;h=f;j=c[d+8>>2]|0;d=c[j>>2]|0;if(!d){i=f;return}k=e+4|0;l=e+8|0;m=j;j=1;n=d;while(1){d=n;o=m;p=o+8|0;q=d+8|0;r=b[p>>1]|0;s=(r&1)==0;t=(r&254)>>>1;u=s?t:c[o+12>>2]|0;v=a[q>>0]|0;w=(v&1)==0;x=(r&65535)>>>8&255;a:do if((u|0)==((w?(v&255)>>>1:c[d+12>>2]|0)|0)){r=w?q+1|0:c[d+16>>2]|0;b:do if(s){if(u|0){if(x<<24>>24!=(a[r>>0]|0)){y=n;z=1;break a}A=t;B=p+1|0;C=r;while(1){A=A+-1|0;B=B+1|0;if(!A)break b;C=C+1|0;if((a[B>>0]|0)!=(a[C>>0]|0)){y=n;z=1;break a}}}}else if(um(c[o+16>>2]|0,r,u)|0){y=n;z=1;break a}while(0);do if(j){c[g>>2]=p;r=c[k>>2]|0;if(r>>>0<(c[l>>2]|0)>>>0){c[r>>2]=p;c[k>>2]=(c[k>>2]|0)+4;break}else{th(e,g);break}}while(0);c[h>>2]=q;r=c[k>>2]|0;if(r>>>0<(c[l>>2]|0)>>>0){c[r>>2]=q;c[k>>2]=(c[k>>2]|0)+4;y=m;z=0;break}else{th(e,h);y=m;z=0;break}}else{y=n;z=1}while(0);n=c[n>>2]|0;if(!n)break;else{m=y;j=z}}i=f;return}function th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0;d=a;a=b;a:while(1){b=a;e=a+-4|0;f=a+-8|0;g=d;b:while(1){h=g;i=b-h|0;j=i>>2;switch(j|0){case 2:{k=g;l=e;m=e;n=4;break a;break}case 3:{o=g;p=e;q=e;n=8;break a;break}case 4:{r=g;s=e;n=26;break a;break}case 5:{t=g;u=e;n=27;break a;break}case 1:case 0:{n=137;break a;break}default:{}}if((i|0)<124){v=g;w=a;n=29;break a}x=g+(((j|0)/2|0)<<2)|0;do if((i|0)>3996){y=(j|0)/4|0;z=wh(g,g+(y<<2)|0,x,x+(y<<2)|0,e)|0}else{y=c[x>>2]|0;A=c[g>>2]|0;B=c[y+16>>2]|0;C=c[A+16>>2]|0;D=y;E=A;if((B|0)>=(C|0))if((B|0)==(C|0))F=(c[y+20>>2]|0)<(c[A+20>>2]|0);else F=0;else F=1;G=c[e>>2]|0;H=c[G+16>>2]|0;I=G;if((H|0)>=(B|0))if((H|0)==(B|0))J=(c[G+20>>2]|0)<(c[y+20>>2]|0);else J=0;else J=1;if(!F){if(!J){z=0;break}c[x>>2]=I;c[e>>2]=D;y=c[x>>2]|0;G=c[g>>2]|0;B=c[y+16>>2]|0;H=c[G+16>>2]|0;K=G;L=y;if((B|0)>=(H|0)){if((B|0)!=(H|0)){z=1;break}if((c[y+20>>2]|0)>=(c[G+20>>2]|0)){z=1;break}}c[g>>2]=L;c[x>>2]=K;z=2;break}if(J){c[g>>2]=I;c[e>>2]=E;z=1;break}c[g>>2]=D;c[x>>2]=E;D=c[e>>2]|0;I=c[D+16>>2]|0;K=D;if((I|0)>=(C|0)){if((I|0)!=(C|0)){z=1;break}if((c[D+20>>2]|0)>=(c[A+20>>2]|0)){z=1;break}}c[x>>2]=K;c[e>>2]=E;z=2}while(0);j=c[g>>2]|0;i=c[x>>2]|0;E=c[j+16>>2]|0;K=c[i+16>>2]|0;A=j;c:do if((E|0)<(K|0)){M=e;N=z}else{if((E|0)==(K|0)?(c[j+20>>2]|0)<(c[i+20>>2]|0):0){M=e;N=z;break}d:do if((g|0)!=(f|0)){D=i+20|0;C=f;while(1){I=c[C>>2]|0;L=c[I+16>>2]|0;if((L|0)<(K|0)){O=C;P=I;break}if((L|0)==(K|0)?(c[I+20>>2]|0)<(c[D>>2]|0):0){O=C;P=I;break}C=C+-4|0;if((g|0)==(C|0))break d}c[g>>2]=P;c[O>>2]=A;M=O;N=z+1|0;break c}while(0);C=g+4|0;D=c[e>>2]|0;I=c[D+16>>2]|0;L=D;do if((E|0)<(I|0))Q=C;else{if((E|0)==(I|0)?(c[j+20>>2]|0)<(c[D+20>>2]|0):0){Q=C;break}if((C|0)==(e|0)){n=137;break a}G=j+20|0;y=C;while(1){H=c[y>>2]|0;B=c[H+16>>2]|0;if((E|0)<(B|0)){R=H;S=y;break}if((E|0)==(B|0)?(c[G>>2]|0)<(c[H+20>>2]|0):0){R=H;S=y;break}y=y+4|0;if((y|0)==(e|0)){n=137;break a}}c[S>>2]=L;c[e>>2]=R;Q=S+4|0}while(0);if((Q|0)==(e|0)){n=137;break a}else{T=Q;U=e}while(1){L=c[g>>2]|0;C=c[T>>2]|0;D=c[L+16>>2]|0;I=c[C+16>>2]|0;e:do if((D|0)<(I|0))V=T;else{y=L+20|0;G=I;H=C;B=T;while(1){if((D|0)==(G|0)?(c[y>>2]|0)<(c[H+20>>2]|0):0){V=B;break e}W=B+4|0;H=c[W>>2]|0;G=c[H+16>>2]|0;if((D|0)<(G|0)){V=W;break}else B=W}}while(0);C=L+20|0;I=U;while(1){B=I+-4|0;G=c[B>>2]|0;H=c[G+16>>2]|0;if((D|0)<(H|0)){I=B;continue}if((D|0)!=(H|0)){X=B;Y=G;break}if((c[C>>2]|0)<(c[G+20>>2]|0))I=B;else{X=B;Y=G;break}}if(V>>>0>=X>>>0){g=V;continue b}I=c[V>>2]|0;c[V>>2]=Y;c[X>>2]=I;T=V+4|0;U=X}}while(0);E=g+4|0;f:do if(E>>>0<M>>>0){j=E;A=M;K=x;i=N;while(1){I=c[K>>2]|0;C=c[I+16>>2]|0;D=I+20|0;I=j;while(1){L=c[I>>2]|0;G=c[L+16>>2]|0;if((G|0)>=(C|0)){if((G|0)!=(C|0)){Z=L;_=I;break}if((c[L+20>>2]|0)>=(c[D>>2]|0)){Z=L;_=I;break}}I=I+4|0}I=Z;L=A+-4|0;G=c[L>>2]|0;B=c[G+16>>2]|0;g:do if((B|0)<(C|0))$=L;else{H=B;y=G;W=L;while(1){if((H|0)==(C|0)?(c[y+20>>2]|0)<(c[D>>2]|0):0){$=W;break g}aa=W+-4|0;y=c[aa>>2]|0;H=c[y+16>>2]|0;if((H|0)<(C|0)){$=aa;break}else W=aa}}while(0);if(_>>>0>$>>>0){ba=_;ca=K;da=i;break f}c[_>>2]=c[$>>2];c[$>>2]=I;j=_+4|0;A=$;K=(K|0)==(_|0)?$:K;i=i+1|0}}else{ba=E;ca=x;da=N}while(0);do if((ba|0)==(ca|0))ea=da;else{x=c[ca>>2]|0;E=c[ba>>2]|0;i=c[x+16>>2]|0;K=c[E+16>>2]|0;A=E;j=x;if((i|0)>=(K|0)){if((i|0)!=(K|0)){ea=da;break}if((c[x+20>>2]|0)>=(c[E+20>>2]|0)){ea=da;break}}c[ba>>2]=j;c[ca>>2]=A;ea=da+1|0}while(0);if(!ea){fa=xh(g,ba)|0;A=ba+4|0;if(xh(A,a)|0){n=136;break}if(fa){g=A;continue}}A=ba;if((A-h|0)>=(b-A|0)){ga=g;ha=ba;n=135;break}uh(g,ba);g=ba+4|0}if((n|0)==135){n=0;uh(ha+4|0,a);d=ga;a=ha;continue}else if((n|0)==136){n=0;if(fa){n=137;break}else{d=g;a=ba;continue}}}if((n|0)==4){ba=c[l>>2]|0;l=c[k>>2]|0;a=c[ba+16>>2]|0;d=c[l+16>>2]|0;fa=l;ha=ba;if((a|0)>=(d|0)){if((a|0)!=(d|0))return;if((c[ba+20>>2]|0)>=(c[l+20>>2]|0))return}c[k>>2]=ha;c[m>>2]=fa;return}else if((n|0)==8){fa=o+4|0;m=c[fa>>2]|0;ha=c[o>>2]|0;k=c[m+16>>2]|0;l=c[ha+16>>2]|0;ba=m;d=ha;if((k|0)>=(l|0))if((k|0)==(l|0))ia=(c[m+20>>2]|0)<(c[ha+20>>2]|0);else ia=0;else ia=1;a=c[p>>2]|0;ga=c[a+16>>2]|0;ea=a;if((ga|0)>=(k|0))if((ga|0)==(k|0))ja=(c[a+20>>2]|0)<(c[m+20>>2]|0);else ja=0;else ja=1;if(!ia){if(!ja)return;c[fa>>2]=ea;c[q>>2]=ba;ia=c[fa>>2]|0;m=c[o>>2]|0;a=c[ia+16>>2]|0;k=c[m+16>>2]|0;ga=m;da=ia;if((a|0)>=(k|0)){if((a|0)!=(k|0))return;if((c[ia+20>>2]|0)>=(c[m+20>>2]|0))return}c[o>>2]=da;c[fa>>2]=ga;return}if(ja){c[o>>2]=ea;c[q>>2]=d;return}c[o>>2]=ba;c[fa>>2]=d;ba=c[p>>2]|0;p=c[ba+16>>2]|0;o=ba;if((p|0)>=(l|0)){if((p|0)!=(l|0))return;if((c[ba+20>>2]|0)>=(c[ha+20>>2]|0))return}c[fa>>2]=o;c[q>>2]=d;return}else if((n|0)==26){vh(r,r+4|0,r+8|0,s)|0;return}else if((n|0)==27){wh(t,t+4|0,t+8|0,t+12|0,u)|0;return}else if((n|0)==29){u=v+8|0;t=v+4|0;s=c[t>>2]|0;r=c[v>>2]|0;d=c[s+16>>2]|0;q=c[r+16>>2]|0;o=s;fa=r;if((d|0)>=(q|0))if((d|0)==(q|0))ka=(c[s+20>>2]|0)<(c[r+20>>2]|0);else ka=0;else ka=1;ha=c[u>>2]|0;ba=c[ha+16>>2]|0;l=ha;if((ba|0)>=(d|0))if((ba|0)==(d|0))la=(c[ha+20>>2]|0)<(c[s+20>>2]|0);else la=0;else la=1;do if(!ka)if(la){c[t>>2]=l;c[u>>2]=o;if((ba|0)>=(q|0)){if((ba|0)!=(q|0)){ma=o;na=s;break}if((c[ha+20>>2]|0)>=(c[r+20>>2]|0)){ma=o;na=s;break}}c[v>>2]=l;c[t>>2]=fa;ma=o;na=s}else{ma=l;na=ha}else{if(la){c[v>>2]=l;c[u>>2]=fa;ma=fa;na=r;break}c[v>>2]=o;c[t>>2]=fa;if((ba|0)>=(q|0)){if((ba|0)!=(q|0)){ma=l;na=ha;break}if((c[ha+20>>2]|0)>=(c[r+20>>2]|0)){ma=l;na=ha;break}}c[t>>2]=l;c[u>>2]=fa;ma=fa;na=r}while(0);r=v+12|0;if((r|0)==(w|0))return;else{oa=na;pa=ma;qa=r;ra=u}while(1){u=c[qa>>2]|0;r=u+16|0;ma=c[r>>2]|0;na=c[oa+16>>2]|0;fa=u;if((ma|0)>=(na|0)){if((ma|0)==(na|0)?(na=u+20|0,(c[na>>2]|0)<(c[oa+20>>2]|0)):0){sa=na;n=52}}else{sa=u+20|0;n=52}if((n|0)==52){n=0;c[qa>>2]=pa;h:do if((ra|0)==(v|0))ta=ra;else{u=c[r>>2]|0;na=ra;while(1){ma=na+-4|0;l=c[ma>>2]|0;t=c[l+16>>2]|0;ha=l;if((u|0)>=(t|0)){if((u|0)!=(t|0)){ta=na;break h}if((c[sa>>2]|0)>=(c[l+20>>2]|0)){ta=na;break h}}c[na>>2]=ha;if((ma|0)==(v|0)){ta=ma;break}else na=ma}}while(0);c[ta>>2]=fa}r=qa+4|0;if((r|0)==(w|0))break;g=c[qa>>2]|0;na=qa;oa=g;pa=g;qa=r;ra=na}return}else if((n|0)==137)return}function vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=c[b>>2]|0;g=c[a>>2]|0;h=c[f+16>>2]|0;i=c[g+16>>2]|0;j=f;k=g;if((h|0)>=(i|0))if((h|0)==(i|0))l=(c[f+20>>2]|0)<(c[g+20>>2]|0);else l=0;else l=1;m=c[d>>2]|0;n=c[m+16>>2]|0;o=m;if((n|0)>=(h|0))if((n|0)==(h|0))p=(c[m+20>>2]|0)<(c[f+20>>2]|0);else p=0;else p=1;do if(!l)if(p){c[b>>2]=o;c[d>>2]=j;h=c[b>>2]|0;n=c[a>>2]|0;q=c[h+16>>2]|0;r=c[n+16>>2]|0;s=n;t=h;if((q|0)>=(r|0)){if((q|0)!=(r|0)){u=1;v=f;w=j;break}if((c[h+20>>2]|0)>=(c[n+20>>2]|0)){u=1;v=f;w=j;break}}c[a>>2]=t;c[b>>2]=s;s=c[d>>2]|0;u=2;v=s;w=s}else{u=0;v=m;w=o}else{if(p){c[a>>2]=o;c[d>>2]=k;u=1;v=g;w=k;break}c[a>>2]=j;c[b>>2]=k;s=c[d>>2]|0;t=c[s+16>>2]|0;n=s;if((t|0)>=(i|0)){if((t|0)!=(i|0)){u=1;v=s;w=n;break}if((c[s+20>>2]|0)>=(c[g+20>>2]|0)){u=1;v=s;w=n;break}}c[b>>2]=n;c[d>>2]=k;u=2;v=g;w=k}while(0);k=c[e>>2]|0;g=c[k+16>>2]|0;i=c[v+16>>2]|0;j=k;if((g|0)>=(i|0)){if((g|0)!=(i|0)){x=u;return x|0}if((c[k+20>>2]|0)>=(c[v+20>>2]|0)){x=u;return x|0}}c[d>>2]=j;c[e>>2]=w;w=u+1|0;e=c[d>>2]|0;j=c[b>>2]|0;v=c[e+16>>2]|0;k=c[j+16>>2]|0;i=j;g=e;if((v|0)>=(k|0)){if((v|0)!=(k|0)){x=w;return x|0}if((c[e+20>>2]|0)>=(c[j+20>>2]|0)){x=w;return x|0}}c[b>>2]=g;c[d>>2]=i;i=u+2|0;d=c[b>>2]|0;g=c[a>>2]|0;w=c[d+16>>2]|0;j=c[g+16>>2]|0;e=g;k=d;if((w|0)>=(j|0)){if((w|0)!=(j|0)){x=i;return x|0}if((c[d+20>>2]|0)>=(c[g+20>>2]|0)){x=i;return x|0}}c[a>>2]=k;c[b>>2]=e;x=u+3|0;return x|0}function wh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=vh(a,b,d,e)|0;h=c[f>>2]|0;i=c[e>>2]|0;j=c[h+16>>2]|0;k=c[i+16>>2]|0;l=i;m=h;if((j|0)>=(k|0)){if((j|0)!=(k|0)){n=g;return n|0}if((c[h+20>>2]|0)>=(c[i+20>>2]|0)){n=g;return n|0}}c[e>>2]=m;c[f>>2]=l;l=g+1|0;f=c[e>>2]|0;m=c[d>>2]|0;i=c[f+16>>2]|0;h=c[m+16>>2]|0;k=m;j=f;if((i|0)>=(h|0)){if((i|0)!=(h|0)){n=l;return n|0}if((c[f+20>>2]|0)>=(c[m+20>>2]|0)){n=l;return n|0}}c[d>>2]=j;c[e>>2]=k;k=g+2|0;e=c[d>>2]|0;j=c[b>>2]|0;l=c[e+16>>2]|0;m=c[j+16>>2]|0;f=j;h=e;if((l|0)>=(m|0)){if((l|0)!=(m|0)){n=k;return n|0}if((c[e+20>>2]|0)>=(c[j+20>>2]|0)){n=k;return n|0}}c[b>>2]=h;c[d>>2]=f;f=g+3|0;d=c[b>>2]|0;h=c[a>>2]|0;k=c[d+16>>2]|0;j=c[h+16>>2]|0;e=h;m=d;if((k|0)>=(j|0)){if((k|0)!=(j|0)){n=f;return n|0}if((c[d+20>>2]|0)>=(c[h+20>>2]|0)){n=f;return n|0}}c[a>>2]=m;c[b>>2]=e;n=g+4|0;return n|0}function xh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;switch(b-a>>2|0){case 2:{d=b+-4|0;e=c[d>>2]|0;f=c[a>>2]|0;g=c[e+16>>2]|0;h=c[f+16>>2]|0;i=f;j=e;if((g|0)>=(h|0)){if((g|0)!=(h|0)){k=1;return k|0}if((c[e+20>>2]|0)>=(c[f+20>>2]|0)){k=1;return k|0}}c[a>>2]=j;c[d>>2]=i;k=1;return k|0}case 3:{i=a+4|0;d=b+-4|0;j=c[i>>2]|0;f=c[a>>2]|0;e=c[j+16>>2]|0;h=c[f+16>>2]|0;g=j;l=f;if((e|0)>=(h|0))if((e|0)==(h|0))m=(c[j+20>>2]|0)<(c[f+20>>2]|0);else m=0;else m=1;n=c[d>>2]|0;o=c[n+16>>2]|0;p=n;if((o|0)>=(e|0))if((o|0)==(e|0))q=(c[n+20>>2]|0)<(c[j+20>>2]|0);else q=0;else q=1;if(!m){if(!q){k=1;return k|0}c[i>>2]=p;c[d>>2]=g;m=c[i>>2]|0;j=c[a>>2]|0;n=c[m+16>>2]|0;e=c[j+16>>2]|0;o=j;r=m;if((n|0)>=(e|0)){if((n|0)!=(e|0)){k=1;return k|0}if((c[m+20>>2]|0)>=(c[j+20>>2]|0)){k=1;return k|0}}c[a>>2]=r;c[i>>2]=o;k=1;return k|0}if(q){c[a>>2]=p;c[d>>2]=l;k=1;return k|0}c[a>>2]=g;c[i>>2]=l;g=c[d>>2]|0;p=c[g+16>>2]|0;q=g;if((p|0)>=(h|0)){if((p|0)!=(h|0)){k=1;return k|0}if((c[g+20>>2]|0)>=(c[f+20>>2]|0)){k=1;return k|0}}c[i>>2]=q;c[d>>2]=l;k=1;return k|0}case 4:{vh(a,a+4|0,a+8|0,b+-4|0)|0;k=1;return k|0}case 5:{wh(a,a+4|0,a+8|0,a+12|0,b+-4|0)|0;k=1;return k|0}case 1:case 0:{k=1;return k|0}default:{l=a+8|0;d=a+4|0;q=c[d>>2]|0;i=c[a>>2]|0;f=c[q+16>>2]|0;g=c[i+16>>2]|0;h=q;p=i;if((f|0)>=(g|0))if((f|0)==(g|0))s=(c[q+20>>2]|0)<(c[i+20>>2]|0);else s=0;else s=1;o=c[l>>2]|0;r=c[o+16>>2]|0;j=o;if((r|0)>=(f|0))if((r|0)==(f|0))t=(c[o+20>>2]|0)<(c[q+20>>2]|0);else t=0;else t=1;do if(!s)if(t){c[d>>2]=j;c[l>>2]=h;if((r|0)>=(g|0)){if((r|0)!=(g|0)){u=q;break}if((c[o+20>>2]|0)>=(c[i+20>>2]|0)){u=q;break}}c[a>>2]=j;c[d>>2]=p;u=q}else u=o;else{if(t){c[a>>2]=j;c[l>>2]=p;u=i;break}c[a>>2]=h;c[d>>2]=p;if((r|0)>=(g|0)){if((r|0)!=(g|0)){u=o;break}if((c[o+20>>2]|0)>=(c[i+20>>2]|0)){u=o;break}}c[d>>2]=j;c[l>>2]=p;u=i}while(0);i=a+12|0;a:do if((i|0)==(b|0)){v=1;w=0}else{p=u;j=0;d=i;o=l;while(1){g=c[d>>2]|0;r=c[g+16>>2]|0;h=c[p+16>>2]|0;t=g;if((r|0)>=(h|0))if((r|0)==(h|0)?(c[g+20>>2]|0)<(c[p+20>>2]|0):0)x=48;else y=j;else x=48;if((x|0)==48){x=0;h=g+20|0;c[d>>2]=c[o>>2];b:do if((o|0)==(a|0))z=o;else{r=c[g+16>>2]|0;q=o;while(1){s=q+-4|0;f=c[s>>2]|0;m=c[f+16>>2]|0;e=f;if((r|0)>=(m|0)){if((r|0)!=(m|0)){z=q;break b}if((c[h>>2]|0)>=(c[f+20>>2]|0)){z=q;break b}}c[q>>2]=e;if((s|0)==(a|0)){z=s;break}else q=s}}while(0);c[z>>2]=t;h=j+1|0;if((h|0)==8){v=0;w=(d+4|0)==(b|0);break a}else y=h}h=d+4|0;if((h|0)==(b|0)){v=1;w=0;break a}g=d;p=c[d>>2]|0;j=y;d=h;o=g}}while(0);k=w|v;return k|0}}return 0}function yh(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=c[e>>2]|0;h=e+4|0;i=c[h>>2]|0;if((d|0)==(i|0))return;else{j=d;k=i;l=d}while(1){a:do if((j|0)!=(k|0)){d=c[l>>2]|0;m=b[d>>1]|0;n=(m&1)==0;o=n?(m&254)>>>1:c[d+4>>2]|0;p=d+8|0;q=d+1|0;d=(m&65535)>>>8&255;m=(o|0)==0;if(n){if(m){n=j;while(1){r=c[n>>2]|0;s=b[r>>1]|0;if(!(((s&1)==0?(s&254)>>>1:c[r+4>>2]|0)|0)){t=n;break a}n=n+4|0;if((n|0)==(k|0)){t=k;break a}}}else u=j;while(1){n=c[u>>2]|0;r=b[n>>1]|0;s=(r&1)==0;v=(r&254)>>>1;w=(r&65535)>>>8&255;do if(((s?v:c[n+4>>2]|0)|0)==(o|0)){if(!s)if(!(um(c[n+8>>2]|0,q,o)|0)){t=u;break a}else break;if(w<<24>>24==d<<24>>24){r=v;x=n+1|0;y=q;do{r=r+-1|0;x=x+1|0;if(!r){t=u;break a}y=y+1|0}while((a[x>>0]|0)==(a[y>>0]|0))}}while(0);u=u+4|0;if((u|0)==(k|0)){t=k;break}}}else{if(m){q=j;while(1){d=c[q>>2]|0;n=b[d>>1]|0;if(!(((n&1)==0?(n&254)>>>1:c[d+4>>2]|0)|0)){t=q;break a}q=q+4|0;if((q|0)==(k|0)){t=k;break a}}}else z=j;while(1){q=c[z>>2]|0;m=b[q>>1]|0;d=(m&1)==0;n=(m&254)>>>1;v=(m&65535)>>>8&255;do if(((d?n:c[q+4>>2]|0)|0)==(o|0)){m=c[p>>2]|0;if(!d)if(!(um(c[q+8>>2]|0,m,o)|0)){t=z;break a}else break;if(v<<24>>24==(a[m>>0]|0)){w=n;s=q+1|0;y=m;do{w=w+-1|0;s=s+1|0;if(!w){t=z;break a}y=y+1|0}while((a[s>>0]|0)==(a[y>>0]|0))}}while(0);z=z+4|0;if((z|0)==(k|0)){t=k;break}}}}else t=k;while(0);if((t|0)!=(l|0))qb[f&31](c[t>>2]|0,c[l>>2]|0,g);o=l+4|0;if((o|0)==(i|0))break;j=c[e>>2]|0;k=c[h>>2]|0;l=o}return}function zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=c[a+24>>2]|0;c[e>>2]=f;a=b+152|0;g=c[a>>2]|0;if((g|0)==(c[b+156>>2]|0)){Ah(b+148|0,e);i=d;return 0}else{c[g>>2]=f;c[a>>2]=(c[a>>2]|0)+4;i=d;return 0}return 0}function Ah(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function Bh(a,b){a=a|0;b=b|0;a=b+152|0;c[a>>2]=(c[a>>2]|0)+-4;return 0}function Ch(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=c[a+24>>2]|0;c[e>>2]=f;a=b+152|0;g=c[a>>2]|0;if((g|0)==(c[b+156>>2]|0)){Ah(b+148|0,e);i=d;return 0}else{c[g>>2]=f;c[a>>2]=(c[a>>2]|0)+4;i=d;return 0}return 0}function Dh(a,b){a=a|0;b=b|0;a=b+152|0;c[a>>2]=(c[a>>2]|0)+-4;return 0}function Eh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=b+148|0;j=b+152|0;k=a+48|0;a=(c[j>>2]|0)-(c[h>>2]|0)>>2;while(1){l=a+-1|0;if((a|0)<=0){m=6;break}if(_h(c[(c[h>>2]|0)+(l<<2)>>2]|0,k)|0){n=a;m=5;break}else a=l}if((m|0)==5){$h(k);c[g>>2]=0;g=k;c[g>>2]=((c[j>>2]|0)-(c[h>>2]|0)>>2)-n;c[g+4>>2]=0;i=d;return 0}else if((m|0)==6){m=c[k>>2]|0;c[e>>2]=c[k+4>>2];c[e+4>>2]=m;Fh(b,f,17611,e);i=d;return 0}return 0}function Fh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[a+160>>2]=1;c[g>>2]=e;xi(c[a>>2]|0,b,c[a+4>>2]|0,d,g);i=f;return}function Gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=b+148|0;j=b+152|0;k=a+48|0;a=(c[j>>2]|0)-(c[h>>2]|0)>>2;while(1){l=a+-1|0;if((a|0)<=0){m=6;break}if(_h(c[(c[h>>2]|0)+(l<<2)>>2]|0,k)|0){n=a;m=5;break}else a=l}if((m|0)==5){$h(k);c[g>>2]=0;g=k;c[g>>2]=((c[j>>2]|0)-(c[h>>2]|0)>>2)-n;c[g+4>>2]=0;i=d;return 0}else if((m|0)==6){m=c[k>>2]|0;c[e>>2]=c[k+4>>2];c[e+4>>2]=m;Fh(b,f,17611,e);i=d;return 0}return 0}function Hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d+8|0;f=d;g=c[a+24>>2]|0;h=c[g>>2]|0;j=c[g+4>>2]|0;if((h|0)!=(j|0)){g=b+148|0;k=b+152|0;l=h;do{h=l+16|0;do if((c[h>>2]|0)==1){m=l+24|0;n=(c[k>>2]|0)-(c[g>>2]|0)>>2;while(1){o=n+-1|0;if((n|0)<=0){p=15;break}if(_h(c[(c[g>>2]|0)+(o<<2)>>2]|0,m)|0){q=n;p=14;break}else n=o}if((p|0)==14){p=0;$h(m);c[h>>2]=0;n=m;c[n>>2]=((c[k>>2]|0)-(c[g>>2]|0)>>2)-q;c[n+4>>2]=0;break}else if((p|0)==15){p=0;n=c[m>>2]|0;c[e>>2]=c[m+4>>2];c[e+4>>2]=n;Fh(b,l,17611,e);break}}while(0);l=l+32|0}while((l|0)!=(j|0))}j=a+48|0;if((c[j>>2]|0)!=1){i=d;return 0}l=b+148|0;e=b+152|0;q=a+56|0;g=(c[e>>2]|0)-(c[l>>2]|0)>>2;while(1){k=g+-1|0;if((g|0)<=0){p=8;break}if(_h(c[(c[l>>2]|0)+(k<<2)>>2]|0,q)|0){r=g;p=7;break}else g=k}if((p|0)==7){$h(q);c[j>>2]=0;j=q;c[j>>2]=((c[e>>2]|0)-(c[l>>2]|0)>>2)-r;c[j+4>>2]=0;i=d;return 0}else if((p|0)==8){p=c[q>>2]|0;c[f>>2]=c[q+4>>2];c[f+4>>2]=p;Fh(b,a+32|0,17611,f);i=d;return 0}return 0}function Ih(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=hc((c[b+12>>2]|0)+160|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j+4>>2]|0;l=c[j>>2]|0;c[e>>2]=20395;c[e+4>>2]=k;c[e+8>>2]=l;Fh(b,f,17643,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=hc((c[b+12>>2]|0)+220|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j+4>>2]|0;l=c[j>>2]|0;c[e>>2]=17672;c[e+4>>2]=k;c[e+8>>2]=l;Fh(b,f,17643,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Kh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=hc((c[b+12>>2]|0)+180|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j+4>>2]|0;l=c[j>>2]|0;c[e>>2]=17878;c[e+4>>2]=k;c[e+8>>2]=l;Fh(b,f,17643,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=pc(c[b+16>>2]|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j>>2]|0;c[e>>2]=c[j+4>>2];c[e+4>>2]=k;Fh(b,f,17686,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Mh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=c[a+24>>2]|0;c[e>>2]=f;a=b+152|0;g=c[a>>2]|0;if((g|0)==(c[b+156>>2]|0)){Ah(b+148|0,e);i=d;return 0}else{c[g>>2]=f;c[a>>2]=(c[a>>2]|0)+4;i=d;return 0}return 0}function Nh(a,b){a=a|0;b=b|0;a=b+152|0;c[a>>2]=(c[a>>2]|0)+-4;return 0}function Oh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=hc((c[b+12>>2]|0)+180|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j+4>>2]|0;l=c[j>>2]|0;c[e>>2]=17878;c[e+4>>2]=k;c[e+8>>2]=l;Fh(b,f,17643,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Ph(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=pc(c[b+16>>2]|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j>>2]|0;c[e>>2]=c[j+4>>2];c[e+4>>2]=k;Fh(b,f,17686,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Qh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;f=a+24|0;g=a+40|0;if((c[g>>2]|0)!=1){i=d;return 0}h=pc(c[b+16>>2]|0,f)|0;if((h|0)==-1){j=a+48|0;k=c[j>>2]|0;c[e>>2]=c[j+4>>2];c[e+4>>2]=k;Fh(b,f,17686,e);i=d;return 0}else{e=a+48|0;$h(e);a=e;c[a>>2]=h;c[a+4>>2]=((h|0)<0)<<31>>31;c[g>>2]=0;i=d;return 0}return 0}function Rh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+160|0;f=e+128|0;g=e+112|0;h=e+96|0;j=e+80|0;k=e+64|0;l=e+48|0;m=e+32|0;n=e+16|0;o=e;p=e+144|0;q=b+12|0;c[q>>2]=d;c[p>>2]=b;c[p+4>>2]=20395;rh(d+160|0,23,p);c[p>>2]=b;c[p+4>>2]=17878;rh(d+180|0,23,p);c[p>>2]=b;c[p+4>>2]=17672;rh(d+220|0,23,p);c[p>>2]=b;c[p+4>>2]=17865;rh(d+240|0,23,p);c[p>>2]=b;c[p+4>>2]=17871;rh(d+260|0,23,p);r=c[d+48>>2]|0;s=c[d+52>>2]|0;if((r|0)!=(s|0)){t=b+16|0;u=p+4|0;v=p+4|0;w=b+20|0;x=r;do{r=c[x>>2]|0;c[t>>2]=r;do if(a[r+8>>0]|0?(y=r+16|0,z=r+32|0,(c[z>>2]|0)==1):0){A=hc((c[q>>2]|0)+220|0,y)|0;if((A|0)==-1){B=r+40|0;C=c[B+4>>2]|0;D=c[B>>2]|0;c[o>>2]=17672;c[o+4>>2]=C;c[o+8>>2]=D;Fh(b,y,17643,o);break}else{y=r+40|0;$h(y);D=y;c[D>>2]=A;c[D+4>>2]=((A|0)<0)<<31>>31;c[z>>2]=0;break}}while(0);c[p>>2]=b;c[u>>2]=17742;rh(r+84|0,23,p);c[p>>2]=b;c[v>>2]=17752;rh(r+104|0,23,p);Td(r,w)|0;c[t>>2]=0;x=x+4|0}while((x|0)!=(s|0))}s=c[d+84>>2]|0;x=c[d+88>>2]|0;a:do if((s|0)!=(x|0)){t=s;while(1){w=c[t>>2]|0;b:do switch(c[w+8>>2]|0){case 0:{p=w+16|0;v=w+32|0;if((c[v>>2]|0)==1){u=hc((c[q>>2]|0)+160|0,p)|0;if((u|0)==-1){o=w+40|0;z=c[o+4>>2]|0;A=c[o>>2]|0;c[n>>2]=20395;c[n+4>>2]=z;c[n+8>>2]=A;Fh(b,p,17643,n);break b}else{p=w+40|0;$h(p);A=p;c[A>>2]=u;c[A+4>>2]=((u|0)<0)<<31>>31;c[v>>2]=0;break b}}break}case 1:{v=w+16|0;u=w+32|0;if((c[u>>2]|0)==1){A=hc((c[q>>2]|0)+240|0,v)|0;if((A|0)==-1){p=w+40|0;z=c[p+4>>2]|0;o=c[p>>2]|0;c[m>>2]=17865;c[m+4>>2]=z;c[m+8>>2]=o;Fh(b,v,17643,m);break b}else{v=w+40|0;$h(v);o=v;c[o>>2]=A;c[o+4>>2]=((A|0)<0)<<31>>31;c[u>>2]=0;break b}}break}case 2:{u=w+16|0;A=w+32|0;if((c[A>>2]|0)==1){o=hc((c[q>>2]|0)+260|0,u)|0;if((o|0)==-1){v=w+40|0;z=c[v+4>>2]|0;p=c[v>>2]|0;c[l>>2]=17871;c[l+4>>2]=z;c[l+8>>2]=p;Fh(b,u,17643,l);break b}else{u=w+40|0;$h(u);p=u;c[p>>2]=o;c[p+4>>2]=((o|0)<0)<<31>>31;c[A>>2]=0;break b}}break}case 3:{A=w+16|0;o=w+32|0;if((c[o>>2]|0)==1){p=hc((c[q>>2]|0)+180|0,A)|0;if((p|0)==-1){u=w+40|0;z=c[u+4>>2]|0;v=c[u>>2]|0;c[k>>2]=17878;c[k+4>>2]=z;c[k+8>>2]=v;Fh(b,A,17643,k);break b}else{A=w+40|0;$h(A);v=A;c[v>>2]=p;c[v+4>>2]=((p|0)<0)<<31>>31;c[o>>2]=0;break b}}break}default:{}}while(0);t=t+4|0;if((t|0)==(x|0))break a}}while(0);x=c[d+60>>2]|0;k=c[d+64>>2]|0;if((x|0)!=(k|0)){l=b+20|0;m=x;do{Rd(c[(c[m>>2]|0)+16>>2]|0,l)|0;m=m+4|0}while((m|0)!=(k|0))}k=c[d+120>>2]|0;m=c[d+124>>2]|0;if((k|0)!=(m|0)){l=b+20|0;x=k;do{k=c[x>>2]|0;n=k+16|0;do if((c[n>>2]|0)==1){s=hc((c[q>>2]|0)+240|0,k)|0;if((s|0)==-1){t=k+24|0;r=c[t+4>>2]|0;w=c[t>>2]|0;c[j>>2]=17865;c[j+4>>2]=r;c[j+8>>2]=w;Fh(b,k,17643,j);break}else{w=k+24|0;$h(w);r=w;c[r>>2]=s;c[r+4>>2]=((s|0)<0)<<31>>31;c[n>>2]=0;break}}while(0);Rd(c[k+32>>2]|0,l)|0;n=c[k+36>>2]|0;s=c[k+40>>2]|0;if((n|0)!=(s|0)){r=n;do{n=r+16|0;do if((c[n>>2]|0)==1){w=hc((c[q>>2]|0)+160|0,r)|0;if((w|0)==-1){t=r+24|0;o=c[t+4>>2]|0;p=c[t>>2]|0;c[h>>2]=20395;c[h+4>>2]=o;c[h+8>>2]=p;Fh(b,r,17643,h);break}else{p=r+24|0;$h(p);o=p;c[o>>2]=w;c[o+4>>2]=((w|0)<0)<<31>>31;c[n>>2]=0;break}}while(0);r=r+32|0}while((r|0)!=(s|0))}x=x+4|0}while((x|0)!=(m|0))}m=c[d+144>>2]|0;x=c[d+148>>2]|0;if((m|0)!=(x|0)){h=b+20|0;l=m;do{m=c[l>>2]|0;j=m+16|0;do if((c[j>>2]|0)==1){s=hc((c[q>>2]|0)+260|0,m)|0;if((s|0)==-1){r=m+24|0;k=c[r+4>>2]|0;n=c[r>>2]|0;c[g>>2]=17871;c[g+4>>2]=k;c[g+8>>2]=n;Fh(b,m,17643,g);break}else{n=m+24|0;$h(n);k=n;c[k>>2]=s;c[k+4>>2]=((s|0)<0)<<31>>31;c[j>>2]=0;break}}while(0);Rd(c[m+32>>2]|0,h)|0;l=l+4|0}while((l|0)!=(x|0))}x=c[d+156>>2]|0;if(!x){c[q>>2]=0;i=e;return}d=x+16|0;if((c[d>>2]|0)!=1){c[q>>2]=0;i=e;return}l=hc((c[q>>2]|0)+160|0,x)|0;if((l|0)==-1){h=x+24|0;g=c[h+4>>2]|0;j=c[h>>2]|0;c[f>>2]=20395;c[f+4>>2]=g;c[f+8>>2]=j;Fh(b,x,17643,f);c[q>>2]=0;i=e;return}else{f=x+24|0;$h(f);x=f;c[x>>2]=l;c[x+4>>2]=((l|0)<0)<<31>>31;c[d>>2]=0;c[q>>2]=0;i=e;return}}function Sh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=(c[b+16>>2]|0)>(c[d+16>>2]|0)?b+12|0:d+12|0;d=c[e>>2]|0;j=(a[b>>0]&1)==0?b+1|0:c[b+8>>2]|0;c[g>>2]=c[e+4>>2];c[g+4>>2]=j;Fh(d,h,17718,g);i=f;return}function Th(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+336|0;f=e+328|0;g=e+164|0;h=e;$n(h|0,0,160)|0;j=h+4|0;c[j>>2]=a;c[h>>2]=d;d=h+160|0;c[d>>2]=0;c[h+8>>2]=b;a=h+20|0;c[a>>2]=h;c[h+28>>2]=138;c[h+32>>2]=139;c[h+104>>2]=140;c[h+108>>2]=141;c[h+36>>2]=142;c[h+40>>2]=143;c[h+44>>2]=144;c[h+48>>2]=145;c[h+52>>2]=146;c[h+76>>2]=147;c[h+80>>2]=148;c[h+88>>2]=149;c[h+96>>2]=150;c[h+124>>2]=151;c[h+128>>2]=152;c[h+136>>2]=153;k=c[b>>2]|0;l=c[b+4>>2]|0;if((k|0)==(l|0)){m=0;i=e;return m|0}b=g+4|0;n=g+20|0;o=g+160|0;p=g+148|0;q=g+152|0;r=k;do{k=c[r>>2]|0;switch(c[k>>2]|0){case 0:{Rh(h,c[k+8>>2]|0);break}case 6:{s=c[k+8>>2]|0;if(!(c[s>>2]|0))Rh(h,c[s+4>>2]|0);break}case 4:{c[f>>2]=1400;$n(g|0,0,160)|0;c[g>>2]=f;c[b>>2]=c[j>>2];s=n;t=a;u=s+128|0;do{c[s>>2]=c[t>>2];s=s+4|0;t=t+4|0}while((s|0)<(u|0));c[n>>2]=g;c[o>>2]=0;t=c[k+8>>2]|0;if((c[t>>2]|0)==0?(Rh(g,c[t+4>>2]|0),(c[o>>2]|0)==1):0)c[k>>2]=5;t=c[p>>2]|0;s=t;if(t|0){u=c[q>>2]|0;if((u|0)!=(t|0))c[q>>2]=u+(~((u+-4-s|0)>>>2)<<2);An(t)}break}case 7:{t=c[k+8>>2]|0;if(!(c[t>>2]|0))Rh(h,c[t+4>>2]|0);break}default:{}}r=r+4|0}while((r|0)!=(l|0));l=c[d>>2]|0;d=c[h+148>>2]|0;if(!d){m=l;i=e;return m|0}r=h+152|0;h=c[r>>2]|0;if((h|0)!=(d|0))c[r>>2]=h+(~((h+-4-d|0)>>>2)<<2);An(d);m=l;i=e;return m|0}function Uh(a){a=a|0;return}function Vh(a){a=a|0;An(a);return}function Wh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0}function Xh(a){a=a|0;return 80}function Yh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[a>>2]=b;c[a+4>>2]=d;c[a+8>>2]=e;c[a+12>>2]=f;return}function Zh(a){a=a|0;var b=0;if(!(c[a>>2]|0)){b=1;return b|0}b=(c[a+4>>2]|0)==0;return b|0}function _h(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;if(!d){e=0;return e|0}f=c[b>>2]|0;if(!f){e=0;return e|0}g=c[a+4>>2]|0;if((g|0)!=(c[b+4>>2]|0)){e=0;return e|0}e=(um(d,f,g)|0)==0;return e|0}function $h(a){a=a|0;var b=0;b=c[a>>2]|0;if(!b)return;Wn(b);return}function ai(a,b){a=a|0;b=b|0;var d=0,e=0;d=a<<24>>24;a=d+-48|0;if(a>>>0<10){c[b>>2]=a;e=0;return e|0}if((d+-97|0)>>>0<7){c[b>>2]=d+-87;e=0;return e|0}if((d+-65|0)>>>0>=7){e=1;return e|0}c[b>>2]=d+-55;e=0;return e|0}function bi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)==(d|0)){f=1;return f|0}g=a[b>>0]|0;a:do if((g<<24>>24==48?(h=b+1|0,h>>>0<d>>>0):0)?(a[h>>0]|0)==120:0){h=b+2|0;if((h|0)==(d|0)){f=1;return f|0}if(h>>>0<d>>>0){i=h;j=0;k=0;b:while(1){l=a[i>>0]|0;m=l+-48|0;do if(m>>>0<10)n=m;else{if((l+-97|0)>>>0<7){n=l+-87|0;break}if((l+-65|0)>>>0>=7){f=1;o=21;break b}n=l+-55|0}while(0);l=ao(j|0,k|0,4)|0;m=go(n|0,0,l|0,C|0)|0;l=C;if(k>>>0>l>>>0|(k|0)==(l|0)&j>>>0>m>>>0){f=1;o=21;break}p=i+1|0;if(p>>>0<d>>>0){i=p;j=m;k=l}else{q=p;r=m;s=l;break a}}if((o|0)==21)return f|0}else{q=h;r=0;s=0}}else o=3;while(0);c:do if((o|0)==3)if(b>>>0<d>>>0){n=(g<<24>>24)+-48|0;if(n>>>0>9){f=1;return f|0}else{t=b;u=0;v=0;w=n}while(1){n=oo(u|0,v|0,10,0)|0;k=u;u=go(w|0,0,n|0,C|0)|0;n=v;v=C;if(n>>>0>v>>>0|(n|0)==(v|0)&k>>>0>u>>>0){f=1;o=21;break}t=t+1|0;if(t>>>0>=d>>>0){q=t;r=u;s=v;break c}w=(a[t>>0]|0)+-48|0;if(w>>>0>9){f=1;o=21;break}}if((o|0)==21)return f|0}else{q=b;r=0;s=0}while(0);if((q|0)!=(d|0)){f=1;return f|0}d=e;c[d>>2]=r;c[d+4>>2]=s;f=0;return f|0}function ci(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0;g=a[b>>0]|0;a:do switch(g<<24>>24){case 43:case 45:{if(!f){h=1;return h|0}else{i=b+1|0;j=g<<24>>24==45;break a}break}default:{i=b;j=0}}while(0);b:do if((i|0)==(d|0)){k=1;l=0;m=0}else{b=a[i>>0]|0;if((b<<24>>24==48?(g=i+1|0,g>>>0<d>>>0):0)?(a[g>>0]|0)==120:0){g=i+2|0;if((g|0)==(d|0)){k=1;l=0;m=0;break}if(g>>>0<d>>>0){f=g;n=0;o=0;while(1){p=a[f>>0]|0;q=p+-48|0;do if(q>>>0<10)r=q;else{if((p+-97|0)>>>0<7){r=p+-87|0;break}if((p+-65|0)>>>0>=7){k=1;l=0;m=0;break b}r=p+-55|0}while(0);p=ao(n|0,o|0,4)|0;q=go(r|0,0,p|0,C|0)|0;p=C;if(o>>>0>p>>>0|(o|0)==(p|0)&n>>>0>q>>>0){k=1;l=0;m=0;break b}s=f+1|0;if(s>>>0<d>>>0){f=s;n=q;o=p}else{t=s;u=q;v=p;break}}}else{t=g;u=0;v=0}}else w=6;c:do if((w|0)==6)if(i>>>0<d>>>0){o=(b<<24>>24)+-48|0;if(o>>>0>9){k=1;l=0;m=0;break b}else{x=i;y=0;z=0;A=o}while(1){o=oo(y|0,z|0,10,0)|0;n=y;y=go(A|0,0,o|0,C|0)|0;o=z;z=C;if(o>>>0>z>>>0|(o|0)==(z|0)&n>>>0>y>>>0){k=1;l=0;m=0;break b}x=x+1|0;if(x>>>0>=d>>>0){t=x;u=y;v=z;break c}A=(a[x>>0]|0)+-48|0;if(A>>>0>9){k=1;l=0;m=0;break b}}}else{t=i;u=0;v=0}while(0);b=(t|0)==(d|0);k=b&1^1;l=b?v:0;m=b?u:0}while(0);do if(j)if(l>>>0>2147483648|(l|0)==-2147483648&m>>>0>0){h=1;return h|0}else{u=_n(0,0,m|0,l|0)|0;B=u;D=C;break}else{B=m;D=l}while(0);l=e;c[l>>2]=B;c[l+4>>2]=D;h=k;return h|0}function di(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=a[b>>0]|0;a:do switch(g<<24>>24){case 43:case 45:{if(!f){h=1;return h|0}else{i=b+1|0;j=g<<24>>24==45;break a}break}default:{i=b;j=0}}while(0);if((i|0)==(d|0)){h=1;return h|0}b=a[i>>0]|0;b:do if((b<<24>>24==48?(g=i+1|0,g>>>0<d>>>0):0)?(a[g>>0]|0)==120:0){g=i+2|0;if((g|0)==(d|0)){h=1;return h|0}if(g>>>0<d>>>0){f=g;k=0;l=0;c:while(1){m=a[f>>0]|0;n=m+-48|0;do if(n>>>0<10)o=n;else{if((m+-97|0)>>>0<7){o=m+-87|0;break}if((m+-65|0)>>>0>=7){h=1;p=28;break c}o=m+-55|0}while(0);m=ao(k|0,l|0,4)|0;n=go(o|0,0,m|0,C|0)|0;m=C;if(l>>>0>m>>>0|(l|0)==(m|0)&k>>>0>n>>>0){h=1;p=28;break}q=f+1|0;if(q>>>0<d>>>0){f=q;k=n;l=m}else{r=q;s=m;t=n;break b}}if((p|0)==28)return h|0}else{r=g;s=0;t=0}}else p=6;while(0);d:do if((p|0)==6)if(i>>>0<d>>>0){o=(b<<24>>24)+-48|0;if(o>>>0>9){h=1;return h|0}else{u=i;v=0;w=0;x=o}while(1){o=oo(v|0,w|0,10,0)|0;l=v;v=go(x|0,0,o|0,C|0)|0;o=w;w=C;if(o>>>0>w>>>0|(o|0)==(w|0)&l>>>0>v>>>0){h=1;p=28;break}u=u+1|0;if(u>>>0>=d>>>0){r=u;s=w;t=v;break d}x=(a[u>>0]|0)+-48|0;if(x>>>0>9){h=1;p=28;break}}if((p|0)==28)return h|0}else{r=i;s=0;t=0}while(0);if((r|0)!=(d|0)){h=1;return h|0}do if(j)if(s>>>0>0|(s|0)==0&t>>>0>2147483648){h=1;return h|0}else{d=_n(0,1,t|0,s|0)|0;y=d;break}else if(s>>>0>0|(s|0)==0&t>>>0>4294967295){h=1;return h|0}else y=t;while(0);c[e>>2]=y;h=0;return h|0}function ei(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0;h=i;i=i+16|0;j=h;switch(b|0){case 1:case 0:{b=Zl()|0;c[b>>2]=0;k=+Zm(d,j);do if((c[j>>2]|0)==(e|0)){if(k==-s|(k==0.0|k==s)?c[b>>2]|0:0){l=1;break}g[f>>2]=k;l=0}else l=1;while(0);m=l;i=h;return m|0}case 2:{switch(a[d>>0]|0){case 45:{n=d+1|0;o=1;break}case 43:{n=d+1|0;o=0;break}default:{n=d;o=0}}l=n+2|0;if(l>>>0<e>>>0){n=l;l=0;b=0;j=0;p=0;q=0;a:while(1){r=a[n>>0]|0;do if(r<<24>>24!=46){t=r<<24>>24;u=t+-48|0;if(u>>>0<10){v=q+4|0;if(!u){w=l;x=b;y=j;z=p;A=v;break}else{B=v;C=u}}else{if((t+-97|0)>>>0<7)D=t+-87|0;else{if((t+-65|0)>>>0>=7){E=n;F=1;G=l;H=b;I=p;J=q;break a}D=t+-55|0}B=q+4|0;C=D}if((b|0)==0|(B+j|0)<29){w=l;x=(b<<B)+C|0;y=j+4|0;z=p-(l?B:0)|0;A=0}else{w=l;x=b;y=j;z=p;A=B}}else{w=1;x=b;y=j;z=((b|0)==0?0:q)+p|0;A=0}while(0);r=n+1|0;if(r>>>0<e>>>0){n=r;l=w;b=x;j=y;p=z;q=A}else{E=r;F=0;G=w;H=x;I=z;J=A;break}}A=(G?0:J)+I|0;if(H|0){if(F){F=E+1|0;switch(a[F>>0]|0){case 45:{K=E+2|0;L=1;M=0-A|0;break}case 43:{K=E+2|0;L=0;M=A;break}default:{K=F;L=0;M=0}}if(K>>>0<e>>>0){F=K;K=0;while(1){E=(K*10|0)+-48+(a[F>>0]|0)|0;F=F+1|0;if(!(F>>>0<e>>>0&(E+M|0)<128)){N=E;break}else K=E}}else N=0;O=L<<24>>24?0-N|0:N}else O=0;N=32-(aa(H|0)|0)|0;L=A+N|0;A=L+-1+O|0;if((A|0)>127){c[f>>2]=(o&1)<<31|2139095040;m=0;i=h;return m|0}if((A|0)>=-126){if((N|0)<=24)if((N|0)<24){P=A;Q=H<<24-N}else{P=A;Q=H}else{K=N+-24|0;if(!(1<<K&H))R=H;else R=(1<<N+-25)+H|0;M=R>>>K;P=M>>>0>16777215?O+L|0:A;Q=M}c[f>>2]=Q&8388607|(o&1)<<31|(P<<23)+1065353216;m=0;i=h;return m|0}if((N|0)<=23)if((N|0)<23)S=H<<23-N;else S=H;else{P=N+-23|0;if(!(1<<P&H))T=H;else T=(1<<N+-24)+H|0;S=T>>>P}P=-127-A|0;if((P|0)<23){if(!P)U=S;else{if(!(S&1<<P))V=S;else V=S+(1<<P+-1)|0;U=V>>>P&8388607}if(U|0){c[f>>2]=U|(o&1)<<31;m=0;i=h;return m|0}}c[f>>2]=(o&1)<<31;m=0;i=h;return m|0}}c[f>>2]=(o&1)<<31;m=0;i=h;return m|0}case 3:{c[f>>2]=((a[d>>0]|0)==45&1)<<31|2139095040;m=0;i=h;return m|0}case 4:{switch(a[d>>0]|0){case 45:{W=d+1|0;X=-8388608;break}case 43:{W=d+1|0;X=2139095040;break}default:{W=d;X=2139095040}}do if((W+3|0)!=(e|0)){d=W+6|0;if(d>>>0<e>>>0){Y=d;Z=0}else{m=1;i=h;return m|0}b:while(1){d=a[Y>>0]|0;o=d+-48|0;do if(o>>>0<10)_=o;else{if((d+-97|0)>>>0<7){_=d+-87|0;break}if((d+-65|0)>>>0>=7){m=1;$=71;break b}_=d+-55|0}while(0);d=_+(Z<<4)|0;Y=Y+1|0;if(d>>>0>=8388608){m=1;$=71;break}if(Y>>>0>=e>>>0){ba=d;$=69;break}else Z=d}if(($|0)==69){if(!ba)m=1;else{ca=ba;break}i=h;return m|0}else if(($|0)==71){i=h;return m|0}}else ca=4194304;while(0);c[f>>2]=ca|X;m=0;i=h;return m|0}default:{m=1;i=h;return m|0}}return 0}function fi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;g=i;i=i+16|0;j=g;switch(b|0){case 1:case 0:{b=Zl()|0;c[b>>2]=0;k=+$m(d,j);do if((c[j>>2]|0)==(e|0)){if(k==-s|(k==0.0|k==s)?c[b>>2]|0:0){l=1;break}h[f>>3]=k;l=0}else l=1;while(0);m=l;i=g;return m|0}case 2:{switch(a[d>>0]|0){case 45:{n=d+1|0;o=0;p=-2147483648;break}case 43:{n=d+1|0;o=0;p=0;break}default:{n=d;o=0;p=0}}l=n+2|0;if(l>>>0<e>>>0){n=l;l=0;b=0;j=0;q=0;r=0;t=0;a:while(1){u=a[n>>0]|0;do if(u<<24>>24!=46){v=u<<24>>24;w=v+-48|0;if(w>>>0<10){x=t+4|0;if(!w){y=l;z=b;A=j;B=q;D=r;E=x;break}else{F=x;G=w}}else{if((v+-97|0)>>>0<7)H=v+-87|0;else{if((v+-65|0)>>>0>=7){I=n;J=1;K=l;L=b;M=j;N=r;O=t;break a}H=v+-55|0}F=t+4|0;G=H}if((l|0)==0&(b|0)==0|(F+q|0)<58){v=ao(l|0,b|0,F|0)|0;w=go(v|0,C|0,G|0,0)|0;y=w;z=C;A=j;B=q+4|0;D=r-(j?F:0)|0;E=0}else{y=l;z=b;A=j;B=q;D=r;E=F}}else{y=l;z=b;A=1;B=q;D=((l|0)==0&(b|0)==0?0:t)+r|0;E=0}while(0);u=n+1|0;if(u>>>0<e>>>0){n=u;l=y;b=z;j=A;q=B;r=D;t=E}else{I=u;J=0;K=y;L=z;M=A;N=D;O=E;break}}E=(M?0:O)+N|0;if(!((K|0)==0&(L|0)==0)){if(J){J=I+1|0;switch(a[J>>0]|0){case 45:{P=I+2|0;Q=1;R=0-E|0;break}case 43:{P=I+2|0;Q=0;R=E;break}default:{P=J;Q=0;R=0}}if(P>>>0<e>>>0){J=P;P=0;while(1){I=(P*10|0)+-48+(a[J>>0]|0)|0;J=J+1|0;if(!(J>>>0<e>>>0&(I+R|0)<1024)){S=I;break}else P=I}}else S=0;T=Q<<24>>24?0-S|0:S}else T=0;S=jo(K|0,L|0,0)|0;Q=64-S|0;S=E+Q|0;E=S+-1+T|0;if((E|0)>1023){P=f;c[P>>2]=o;c[P+4>>2]=p|2146435072;m=0;i=g;return m|0}if((E|0)>=-1022){if((Q|0)<=53)if((Q|0)<53){P=ao(K|0,L|0,53-Q|0)|0;U=C;V=P;W=E}else{U=L;V=K;W=E}else{P=Q+-53|0;R=ao(1,0,P|0)|0;if((R&K|0)==0&(C&L|0)==0){X=K;Y=L}else{R=ao(1,0,Q+-54|0)|0;J=go(R|0,C|0,K|0,L|0)|0;X=J;Y=C}J=eo(X|0,Y|0,P|0)|0;P=C;U=P;V=J;W=P>>>0>2097151|(P|0)==2097151&J>>>0>4294967295?T+S|0:E}S=ao(W+1023|0,0,52)|0;W=f;c[W>>2]=V|o|S;c[W+4>>2]=U&1048575|p|C;m=0;i=g;return m|0}if((Q|0)<=52)if((Q|0)<52){U=ao(K|0,L|0,52-Q|0)|0;Z=U;_=C}else{Z=K;_=L}else{U=Q+-52|0;W=ao(1,0,U|0)|0;if((W&K|0)==0&(C&L|0)==0){$=K;aa=L}else{W=ao(1,0,Q+-53|0)|0;Q=go(W|0,C|0,K|0,L|0)|0;$=Q;aa=C}Q=eo($|0,aa|0,U|0)|0;Z=Q;_=C}Q=-1023-E|0;if((Q|0)<52){if(!Q){ba=Z;ca=_}else{E=ao(1,0,Q|0)|0;if((Z&E|0)==0&(_&C|0)==0){da=Z;ea=_}else{E=ao(1,0,Q+-1|0)|0;U=go(Z|0,_|0,E|0,C|0)|0;da=U;ea=C}U=eo(da|0,ea|0,Q|0)|0;ba=U;ca=C&1048575}if(!((ba|0)==0&(ca|0)==0)){U=f;c[U>>2]=ba|o;c[U+4>>2]=ca|p;m=0;i=g;return m|0}}ca=f;c[ca>>2]=o;c[ca+4>>2]=p;m=0;i=g;return m|0}}ca=f;c[ca>>2]=o;c[ca+4>>2]=p;m=0;i=g;return m|0}case 3:{p=ao((a[d>>0]|0)==45|0,0,63)|0;ca=f;c[ca>>2]=p;c[ca+4>>2]=C|2146435072;m=0;i=g;return m|0}case 4:{switch(a[d>>0]|0){case 45:{fa=d+1|0;ga=0;ha=-1048576;break}case 43:{fa=d+1|0;ga=0;ha=2146435072;break}default:{fa=d;ga=0;ha=2146435072}}d=fa+3|0;do if((d|0)!=(e|0)){b:do if(d>>>0<e>>>0){ca=d;p=18030;while(1){o=a[p>>0]|0;if(!(o<<24>>24)){ia=p;break b}if((a[ca>>0]|0)!=o<<24>>24){m=1;break}ca=ca+1|0;o=p+1|0;if(ca>>>0>=e>>>0){ia=o;break b}else p=o}i=g;return m|0}else ia=18030;while(0);if(a[ia>>0]|0){m=1;i=g;return m|0}p=fa+6|0;if(p>>>0<e>>>0){ja=p;ka=0;la=0}else{m=1;i=g;return m|0}c:while(1){p=a[ja>>0]|0;ca=p+-48|0;do if(ca>>>0<10)ma=ca;else{if((p+-97|0)>>>0<7){ma=p+-87|0;break}if((p+-65|0)>>>0>=7){m=1;na=76;break c}ma=p+-55|0}while(0);p=ao(ka|0,la|0,4)|0;ca=go(ma|0,0,p|0,C|0)|0;p=C;ja=ja+1|0;if(!(p>>>0<1048576|(p|0)==1048576&ca>>>0<0)){m=1;na=76;break}if(ja>>>0>=e>>>0){oa=ca;pa=p;na=74;break}else{ka=ca;la=p}}if((na|0)==74){if((oa|0)==0&(pa|0)==0)m=1;else{qa=oa;ra=pa;break}i=g;return m|0}else if((na|0)==76){i=g;return m|0}}else{qa=0;ra=524288}while(0);na=f;c[na>>2]=qa|ga;c[na+4>>2]=ra|ha;m=0;i=g;return m|0}default:{m=1;i=g;return m|0}}return 0}function gi(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=b;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=d;return}function hi(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;c[d>>2]=(c[d>>2]|0)+b;return}function ii(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=a+8|0;if((c[h>>2]|0)==1)return;i=c[a+12>>2]|0;if(i|0)ji(i,d,e,b,0,f,g);g=c[a>>2]|0;c[h>>2]=sb[c[(c[g>>2]|0)+8>>2]&63](g,b,d,e)|0;return}function ji(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;l=i;i=i+32|0;m=l+24|0;n=l+16|0;o=l+8|0;p=l;q=l+28|0;r=e+f|0;if((f|0)<=0){i=l;return}f=(h|0)==0;s=g-e|0;g=b+4|0;t=b+8|0;u=b+12|0;v=(k|0)==1;k=(j|0)!=0;w=e;while(1){e=w+16|0;if(!f){c[p>>2]=h;ki(b,28484,p)}c[o>>2]=s+w;ki(b,18034,o);x=0;y=w;while(1){if(y>>>0<r>>>0){c[n>>2]=d[y>>0];ki(b,18042,n)}else{a[q>>0]=32;z=c[g>>2]|0;if((c[t>>2]|0)==1){A=z;B=1}else{C=c[u>>2]|0;if(C|0)ji(C,q,1,z,0,0,0);C=c[b>>2]|0;D=sb[c[(c[C>>2]|0)+8>>2]&63](C,z,q,1)|0;c[t>>2]=D;A=c[g>>2]|0;B=D}D=A+1|0;c[g>>2]=D;a[q>>0]=32;if((B|0)==1)E=D;else{z=c[u>>2]|0;if(z|0)ji(z,q,1,D,0,0,0);z=c[b>>2]|0;c[t>>2]=sb[c[(c[z>>2]|0)+8>>2]&63](z,D,q,1)|0;E=c[g>>2]|0}c[g>>2]=E+1}D=x+1|0;z=y+1|0;if((D|0)<2){x=D;y=z;continue}a[q>>0]=32;D=c[g>>2]|0;if((c[t>>2]|0)==1){F=1;G=D}else{C=c[u>>2]|0;if(C|0)ji(C,q,1,D,0,0,0);C=c[b>>2]|0;H=sb[c[(c[C>>2]|0)+8>>2]&63](C,D,q,1)|0;c[t>>2]=H;F=H;G=c[g>>2]|0}H=G+1|0;c[g>>2]=H;if(z>>>0<e>>>0){x=0;y=z}else{I=z;J=F;K=H;break}}if(v){a[q>>0]=32;if((J|0)==1){L=1;M=K}else{y=c[u>>2]|0;if(y|0)ji(y,q,1,K,0,0,0);y=c[b>>2]|0;x=sb[c[(c[y>>2]|0)+8>>2]&63](y,K,q,1)|0;c[t>>2]=x;L=x;M=c[g>>2]|0}x=M+1|0;c[g>>2]=x;if(w>>>0<r>>>0){y=0;e=w;while(1){if(!(Om(d[e>>0]|0)|0))N=46;else N=d[e>>0]|0;a[q>>0]=N;H=c[g>>2]|0;if((c[t>>2]|0)==1){O=1;P=H}else{z=c[u>>2]|0;if(z|0)ji(z,q,1,H,0,0,0);z=c[b>>2]|0;D=sb[c[(c[z>>2]|0)+8>>2]&63](z,H,q,1)|0;c[t>>2]=D;O=D;P=c[g>>2]|0}D=P+1|0;c[g>>2]=D;y=y+1|0;H=e+1|0;if(!(H>>>0<r>>>0&(y|0)<16)){Q=O;R=D;S=H;break}else e=H}}else{Q=L;R=x;S=w}}else{Q=J;R=K;S=I}if(k&S>>>0>=r>>>0){c[m>>2]=j;ki(b,18047,m);T=c[t>>2]|0;U=c[g>>2]|0}else{T=Q;U=R}a[q>>0]=10;if((T|0)==1)V=U;else{e=c[u>>2]|0;if(e|0)ji(e,q,1,U,0,0,0);e=c[b>>2]|0;c[t>>2]=sb[c[(c[e>>2]|0)+8>>2]&63](e,U,q,1)|0;V=c[g>>2]|0}c[g>>2]=V+1;if(S>>>0<r>>>0)w=S;else break}i=l;return}function ki(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+160|0;f=e+16|0;g=e;h=e+32|0;c[f>>2]=d;c[g>>2]=c[f>>2];d=em(h,128,b,f)|0;f=d+1|0;if(f>>>0>128){j=i;i=i+((1*f|0)+15&-16)|0;k=j;l=em(j,f,b,g)|0}else{k=h;l=d}d=a+4|0;h=c[d>>2]|0;g=a+8|0;if((c[g>>2]|0)==1){m=h;n=m+l|0;c[d>>2]=n;i=e;return}b=c[a+12>>2]|0;if(b|0)ji(b,k,l,h,0,0,0);b=c[a>>2]|0;c[g>>2]=sb[c[(c[b>>2]|0)+8>>2]&63](b,h,k,l)|0;m=c[d>>2]|0;n=m+l|0;c[d>>2]=n;i=e;return}function li(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=a+4|0;h=c[g>>2]|0;i=a+8|0;if((c[i>>2]|0)==1){j=h;k=j+d|0;c[g>>2]=k;return}l=c[a+12>>2]|0;if(l|0)ji(l,b,d,h,0,e,f);f=c[a>>2]|0;c[i>>2]=sb[c[(c[f>>2]|0)+8>>2]&63](f,h,b,d)|0;j=c[g>>2]|0;k=j+d|0;c[g>>2]=k;return}function mi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=a+8|0;if((c[h>>2]|0)==1){i=f;return}j=c[a+12>>2]|0;if(j|0){c[g>>2]=d;c[g+4>>2]=e+d;c[g+8>>2]=b;c[g+12>>2]=e+b;ki(j,18054,g)}g=c[a>>2]|0;c[h>>2]=sb[c[(c[g>>2]|0)+12>>2]&63](g,b,d,e)|0;i=f;return}function ni(a){a=a|0;var b=0;b=a+16|0;c[a>>2]=b;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;ti(b);return}function oi(a){a=a|0;var b=0,d=0;c[a>>2]=1520;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if(!a)return;b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;An(b)}An(a);return}function pi(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=1520;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(!d){An(a);return}b=c[d>>2]|0;if(b|0){e=d+4|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;An(b)}An(d);An(a);return}function qi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(!e)return 0;f=e+b|0;g=a+4|0;a=c[g>>2]|0;h=(c[a+4>>2]|0)-(c[a>>2]|0)|0;if(f>>>0>h>>>0){ri(a,f-h|0);i=c[g>>2]|0}else i=a;ho((c[i>>2]|0)+b|0,d|0,e|0)|0;return 0}function ri(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+8|0;f=c[e>>2]|0;g=b+4|0;h=c[g>>2]|0;if((f-h|0)>>>0>=d>>>0){i=d;j=h;do{a[j>>0]=0;j=(c[g>>2]|0)+1|0;c[g>>2]=j;i=i+-1|0}while((i|0)!=0);return}i=c[b>>2]|0;j=h-i+d|0;if((j|0)<0)rn(b);h=f-i|0;if(h>>>0<1073741823){f=h<<1;h=f>>>0<j>>>0?j:f;f=(c[g>>2]|0)-i|0;if(!h){k=0;l=0;m=f}else{n=h;o=f;p=9}}else{n=2147483647;o=(c[g>>2]|0)-i|0;p=9}if((p|0)==9){k=n;l=Tn(n)|0;m=o}o=l+m|0;m=l+k|0;k=d;d=o;l=o;while(1){a[d>>0]=0;d=l+1|0;n=d;k=k+-1|0;if(!k){q=n;break}else l=n}l=c[b>>2]|0;k=(c[g>>2]|0)-l|0;d=o+(0-k)|0;ho(d|0,l|0,k|0)|0;c[b>>2]=d;c[g>>2]=q;c[e>>2]=m;if(!l)return;An(l);return}function si(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(!e)return 0;f=e+d|0;g=e+b|0;h=f>>>0>g>>>0?f:g;g=a+4|0;a=c[g>>2]|0;f=(c[a+4>>2]|0)-(c[a>>2]|0)|0;if(h>>>0>f>>>0){ri(a,h-f|0);i=c[g>>2]|0}else i=a;a=c[i>>2]|0;io(a+b|0,a+d|0,e|0)|0;return 0}function ti(a){a=a|0;var b=0;c[a>>2]=1520;b=Tn(12)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[a+4>>2]=b;return}function ui(a){a=a|0;var b=0;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;return a|0}function vi(a,b){a=a|0;b=b|0;var d=0;if((b|0)!=-1){d=b;return d|0}d=c[1536+(a*20|0)+16>>2]|0;return d|0}function wi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g;j=d+8|0;c[j>>2]=(c[j>>2]|0)+1;c[h>>2]=f;xi(c[d+4>>2]|0,a,b,e,h);i=g;return}function xi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+176|0;h=g+32|0;j=g+48|0;k=g+28|0;l=g+24|0;m=g+12|0;n=g;c[h>>2]=c[f>>2];o=(em(j,128,e,f)|0)+1|0;if(o>>>0>128){f=i;i=i+((1*o|0)+15&-16)|0;em(f,o,e,h)|0;p=f}else p=j;c[k>>2]=0;c[l>>2]=0;j=pb[c[(c[a>>2]|0)+12>>2]&127](a)|0;if((b|0)!=0&(d|0)!=0){f=i;i=i+((1*(j+1|0)|0)+15&-16)|0;if((Yd(d,b,j,f,k,l)|0)==1){Pm(20079,31,1,c[1510]|0)|0;gb(1)}else q=f}else q=0;f=c[(c[a>>2]|0)+8>>2]|0;hn(m,p,vm(p)|0);hn(n,q,c[k>>2]|0);vb[f&31](a,b,m,n,c[l>>2]|0)|0;jn(n);jn(m);i=g;return}function yi(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if(!b)return;else d=b;do{b=d;d=c[d+8>>2]|0;$h(b);An(b)}while((d|0)!=0);return}function zi(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+32>>2]=0;return}function Ai(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;switch(c[a>>2]|0){case 0:{Dc(c[a+4>>2]|0);return}case 3:case 4:case 1:{b=c[a+4>>2]|0;if(!b)return;d=c[b>>2]|0;e=d;if(d|0){f=b+4|0;g=c[f>>2]|0;if((g|0)!=(d|0))c[f>>2]=g+(~((g+-4-e|0)>>>2)<<2);An(d)}An(b);return}case 5:case 2:{$h(a+20|0);return}default:return}}function Bi(a){a=a|0;var b=0;if(!a)return;else b=a;do{a=b;b=c[b+32>>2]|0;Ai(a);An(a)}while((b|0)!=0);return}function Ci(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=b+4|0;f=(c[e>>2]|0)-(c[b>>2]|0)|0;g=f>>2;if(!g)return;if(g>>>0>1073741823)rn(a);h=Tn(f)|0;c[d>>2]=h;c[a>>2]=h;c[a+8>>2]=h+(g<<2);g=c[b>>2]|0;b=c[e>>2]|0;if((g|0)==(b|0))return;e=(b+-4-g|0)>>>2;a=g;g=h;while(1){c[g>>2]=c[a>>2];a=a+4|0;if((a|0)==(b|0))break;else g=g+4|0}c[d>>2]=h+(e+1<<2);return}function Di(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+160|0;f=e+16|0;g=e;h=e+32|0;if(!(c[c[a>>2]>>2]|0)){i=e;return}c[f>>2]=d;c[g>>2]=c[f>>2];d=(em(h,128,b,f)|0)+1|0;if(d>>>0>128){f=i;i=i+((1*d|0)+15&-16)|0;em(f,d,b,g)|0;j=f}else j=h;h=c[a>>2]|0;nb[c[h>>2]&31](j,c[h+4>>2]|0);i=e;return}function Ei(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+16|0;f=e+4|0;g=e;h=b+4|0;j=c[h>>2]|0;k=b+8|0;l=c[k>>2]|0;m=j;if((l|0)==(j|0))n=l;else{j=l+(~((l+-4-m|0)>>>2)<<2)|0;c[k>>2]=j;n=j}j=b+16|0;l=c[j>>2]|0;o=b+20|0;p=c[o>>2]|0;if((p|0)==(l|0)){q=m;r=n}else{n=p;while(1){p=n+-24|0;c[o>>2]=p;m=c[n+-20>>2]|0;s=m;if(!m)t=p;else{p=n+-16|0;u=c[p>>2]|0;if((u|0)!=(m|0))c[p>>2]=u+(~((u+-4-s|0)>>>2)<<2);An(m);t=c[o>>2]|0}if((t|0)==(l|0))break;else n=t}q=c[h>>2]|0;r=c[k>>2]|0}c[f>>2]=0;k=r-q>>2;c[g>>2]=k;if(l>>>0<(c[b+24>>2]|0)>>>0){c[l>>2]=0;Ci(l+4|0,d);c[l+16>>2]=k;a[l+20>>0]=0;c[o>>2]=(c[o>>2]|0)+24;i=e;return 0}else{Fi(j,f,d,g);i=e;return 0}return 0}function Fi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=b+4|0;h=c[b>>2]|0;i=(((c[g>>2]|0)-h|0)/24|0)+1|0;if(i>>>0>178956970)rn(b);j=b+8|0;k=((c[j>>2]|0)-h|0)/24|0;if(k>>>0<89478485){l=k<<1;k=l>>>0<i>>>0?i:l;l=((c[g>>2]|0)-h|0)/24|0;if(!k){m=0;n=0;o=l}else{p=k;q=l;r=6}}else{p=178956970;q=((c[g>>2]|0)-h|0)/24|0;r=6}if((r|0)==6){m=p;n=Tn(p*24|0)|0;o=q}q=n+(o*24|0)|0;p=q;r=n+(m*24|0)|0;m=c[f>>2]|0;c[q>>2]=c[d>>2];Ci(n+(o*24|0)+4|0,e);c[n+(o*24|0)+16>>2]=m;a[n+(o*24|0)+20>>0]=0;o=q+24|0;n=c[b>>2]|0;m=c[g>>2]|0;if((m|0)==(n|0)){s=p;t=n;u=n}else{e=m;m=q;q=p;while(1){p=e;e=e+-24|0;c[m+-24>>2]=c[e>>2];d=m+-20|0;f=p+-20|0;c[d>>2]=0;h=m+-16|0;c[h>>2]=0;c[m+-12>>2]=0;c[d>>2]=c[f>>2];d=p+-16|0;c[h>>2]=c[d>>2];h=p+-12|0;c[m+-12>>2]=c[h>>2];c[h>>2]=0;c[d>>2]=0;c[f>>2]=0;f=m+-8|0;d=p+-8|0;c[f>>2]=c[d>>2];a[f+4>>0]=a[d+4>>0]|0;m=q+-24|0;d=m;if((e|0)==(n|0)){v=d;break}else q=d}s=v;t=c[b>>2]|0;u=c[g>>2]|0}c[b>>2]=s;c[g>>2]=o;c[j>>2]=r;r=t;if((u|0)!=(r|0)){j=u;do{u=c[j+-20>>2]|0;o=u;if(u|0){g=j+-16|0;s=c[g>>2]|0;if((s|0)!=(u|0))c[g>>2]=s+(~((s+-4-o|0)>>>2)<<2);An(u)}j=j+-24|0}while((j|0)!=(r|0))}if(!t)return;An(t);return}function Gi(a,b){a=a|0;b=b|0;return Hi(a,b)|0}function Hi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;e=i;i=i+80|0;f=e+56|0;g=e+40|0;h=e+32|0;j=e+24|0;k=e+8|0;l=e;m=e+68|0;n=c[1536+(d*20|0)+8>>2]|0;o=c[1536+(d*20|0)+12>>2]|0;p=c[1536+(d*20|0)>>2]|0;q=b+16|0;r=b+20|0;s=c[r>>2]|0;t=c[q>>2]|0;u=(s-t|0)/24|0;if((s|0)!=(t|0)){s=t;t=u+-1|0;v=((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2)-(c[s+(t*24|0)+16>>2]|0)|0;if(v>>>0<2?(a[s+(t*24|0)+20>>0]|0)==0:0){c[k>>2]=p;c[k+4>>2]=v;c[k+8>>2]=2;Di(b,20140,k);w=1}else w=0}else{c[l>>2]=0;c[l+4>>2]=u+-1;Di(b,20111,l);w=1}l=c[r>>2]|0;u=c[q>>2]|0;k=(l-u|0)/24|0;do if((l|0)!=(u|0)){v=u;t=k+-1|0;s=b+8|0;x=c[s>>2]|0;y=c[b+4>>2]|0;z=x-y>>2;if((c[v+(t*24|0)+16>>2]|0)>>>0<z>>>0){A=c[y+(z+-1<<2)>>2]|0;c[s>>2]=x+-4;B=0;C=u;D=l;E=A;break}else{B=(a[v+(t*24|0)+20>>0]^1)&255;C=u;D=l;E=0;break}}else{c[j>>2]=0;c[j+4>>2]=k+-1;Di(b,20111,j);B=1;C=c[q>>2]|0;D=c[r>>2]|0;E=0}while(0);r=B|w;w=(D-C|0)/24|0;do if((D|0)!=(C|0)){q=C;j=w+-1|0;k=b+8|0;l=c[k>>2]|0;u=c[b+4>>2]|0;t=l-u>>2;if((c[q+(j*24|0)+16>>2]|0)>>>0>=t>>>0){F=0;G=(a[q+(j*24|0)+20>>0]^1)&255|r;break}j=c[u+(t+-1<<2)>>2]|0;c[k>>2]=l+-4;if((j|0)!=0&((n|0)!=0&(j|0)!=(n|0))){switch(n|0){case -1:{H=28480;break}case -2:{H=28476;break}case -3:{H=28472;break}case -4:{H=28468;break}case -16:{H=28460;break}case -32:{H=28455;break}case -64:{H=28450;break}case 0:{H=28446;break}default:H=0}switch(j|0){case -1:{I=28480;break}case -2:{I=28476;break}case -3:{I=28472;break}case -4:{I=28468;break}case -16:{I=28460;break}case -32:{I=28455;break}case -64:{I=28450;break}case 0:{I=28446;break}default:I=0}c[g>>2]=p;c[g+4>>2]=H;c[g+8>>2]=I;Di(b,20204,g);F=1;G=r}else{F=0;G=r}}else{c[h>>2]=0;c[h+4>>2]=w+-1;Di(b,20111,h);F=0;G=B|1}while(0);B=F|G;if((E|0)!=0&((o|0)!=0&(E|0)!=(o|0))){switch(o|0){case -1:{J=28480;break}case -2:{J=28476;break}case -3:{J=28472;break}case -4:{J=28468;break}case -16:{J=28460;break}case -32:{J=28455;break}case -64:{J=28450;break}case 0:{J=28446;break}default:J=0}switch(E|0){case -1:{K=28480;break}case -2:{K=28476;break}case -3:{K=28472;break}case -4:{K=28468;break}case -16:{K=28460;break}case -32:{K=28455;break}case -64:{K=28450;break}case 0:{K=28446;break}default:K=0}c[f>>2]=p;c[f+4>>2]=J;c[f+8>>2]=K;Di(b,20204,f);L=1}else L=0;f=B|L;L=c[1536+(d*20|0)+4>>2]|0;c[m>>2]=L;if((L|0)==-64){i=e;return f|0}d=b+8|0;B=c[d>>2]|0;if((B|0)==(c[b+12>>2]|0)){de(b+4|0,m);i=e;return f|0}else{c[B>>2]=L;c[d>>2]=B+4;i=e;return f|0}return 0}function Ii(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=1;h=(c[b+8>>2]|0)-(c[b+4>>2]|0)>>2;c[g>>2]=h;j=b+20|0;k=c[j>>2]|0;if(k>>>0<(c[b+24>>2]|0)>>>0){c[k>>2]=1;Ci(k+4|0,d);c[k+16>>2]=h;a[k+20>>0]=0;c[j>>2]=(c[j>>2]|0)+24;i=e;return 0}else{Fi(b+16|0,f,d,g);i=e;return 0}return 0}function Ji(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e+8|0;g=e;h=b+16|0;j=b+20|0;k=c[j>>2]|0;l=c[h>>2]|0;m=(k-l|0)/24|0;if(m>>>0<=d>>>0){c[g>>2]=d;c[g+4>>2]=m+-1;Di(b,20111,g);n=1;i=e;return n|0}g=l;o=m+~d|0;if((c[g+(o*24|0)>>2]|0)==2){p=l;q=k;r=0}else{k=Ki(b,g+(o*24|0)+4|0,20249)|0;p=c[h>>2]|0;q=c[j>>2]|0;r=k}k=(q-p|0)/24|0;if((q|0)==(p|0)){c[f>>2]=0;c[f+4>>2]=k+-1;Di(b,20111,f);n=1;i=e;return n|0}f=p;p=k+-1|0;a[f+(p*24|0)+20>>0]=1;k=c[f+(p*24|0)+16>>2]|0;p=b+4|0;f=b+8|0;b=c[f>>2]|0;q=c[p>>2]|0;j=b-q>>2;h=b;if(k>>>0>j>>>0){Li(p,k-j|0);n=r;i=e;return n|0}if(k>>>0>=j>>>0){n=r;i=e;return n|0}j=q+(k<<2)|0;if((h|0)==(j|0)){n=r;i=e;return n|0}c[f>>2]=h+(~((h+-4-j|0)>>>2)<<2);n=r;i=e;return n|0}function Ki(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=i;i=i+48|0;g=f+32|0;h=f+24|0;j=f+8|0;k=f;l=d+4|0;m=(c[l>>2]|0)-(c[d>>2]|0)>>2;n=b+16|0;o=b+20|0;p=c[o>>2]|0;q=c[n>>2]|0;r=(p-q|0)/24|0;if((p|0)!=(q|0)){p=q;q=r+-1|0;s=((c[b+8>>2]|0)-(c[b+4>>2]|0)>>2)-(c[p+(q*24|0)+16>>2]|0)|0;if(s>>>0<m>>>0?(a[p+(q*24|0)+20>>0]|0)==0:0){c[j>>2]=e;c[j+4>>2]=s;c[j+8>>2]=m;Di(b,20140,j);t=1}else t=0}else{c[k>>2]=0;c[k+4>>2]=r+-1;Di(b,20111,k);t=1}k=c[d>>2]|0;r=(c[l>>2]|0)-k>>2;if(!r){u=t;i=f;return u|0}j=b+4|0;m=b+8|0;s=k;k=r;r=0;q=t;while(1){t=s;p=k-r|0;v=c[o>>2]|0;w=c[n>>2]|0;x=(v-w|0)/24|0;do if((v|0)!=(w|0)){y=w;z=x+-1|0;A=c[j>>2]|0;B=(c[m>>2]|0)-A>>2;if((p+-1+(c[y+(z*24|0)+16>>2]|0)|0)>>>0<B>>>0){C=0;D=t;E=s;F=c[A+(B-p<<2)>>2]|0;break}else{C=(a[y+(z*24|0)+20>>0]^1)&255;D=t;E=s;F=0;break}}else{c[h>>2]=0;c[h+4>>2]=x+-1;Di(b,20111,h);z=c[d>>2]|0;C=1;D=z;E=z;F=0}while(0);x=C|q;t=c[D+(r<<2)>>2]|0;if((F|0)!=0&((t|0)!=(F|0)&(t|0)!=0)){switch(t|0){case -1:{G=28480;break}case -2:{G=28476;break}case -3:{G=28472;break}case -4:{G=28468;break}case -16:{G=28460;break}case -32:{G=28455;break}case -64:{G=28450;break}case 0:{G=28446;break}default:G=0}switch(F|0){case -1:{H=28480;break}case -2:{H=28476;break}case -3:{H=28472;break}case -4:{H=28468;break}case -16:{H=28460;break}case -32:{H=28455;break}case -64:{H=28450;break}case 0:{H=28446;break}default:H=0}c[g>>2]=e;c[g+4>>2]=G;c[g+8>>2]=H;Di(b,20204,g);I=1;J=c[d>>2]|0}else{I=0;J=E}t=x|I;r=r+1|0;k=(c[l>>2]|0)-J>>2;if(k>>>0<=r>>>0){u=t;break}else{s=J;q=t}}i=f;return u|0}
function Vd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=b+36|0;if(a[e>>0]|0){f=1;return f|0}g=b+52|0;h=c[g>>2]|0;i=b+40|0;j=c[i>>2]|0;k=h;l=j;m=k-l|0;if(m>>>0<d>>>0){n=b+44|0;o=c[n>>2]|0;p=d+29|0;d=o|0?o<<1:65536;while(1){q=d-o+m|0;if(q>>>0<p>>>0)d=d<<1;else{r=q;s=d;break}}d=Vn(s)|0;p=b+60|0;o=c[p>>2]|0;io(d|0,h|0,o-k|0)|0;c[i>>2]=d;c[n>>2]=s;s=0-m|0;c[g>>2]=d+m+s;n=b+48|0;c[n>>2]=d+((c[n>>2]|0)-l)+s;n=b+56|0;c[n>>2]=d+((c[n>>2]|0)-l)+s;c[p>>2]=d+(o-l)+s;s=b+28|0;c[s>>2]=(c[s>>2]|0)+m;if(!j)t=r;else{Wn(j);t=r}}else{r=b+60|0;io(j|0,h|0,(c[r>>2]|0)-k|0)|0;k=0-m|0;c[g>>2]=(c[g>>2]|0)+k;g=b+48|0;c[g>>2]=(c[g>>2]|0)+k;g=b+56|0;c[g>>2]=(c[g>>2]|0)+k;c[r>>2]=(c[r>>2]|0)+k;k=b+28|0;c[k>>2]=(c[k>>2]|0)+m;t=m}if(!(c[b>>2]|0)){m=b+60|0;k=Sm(c[m>>2]|0,1,t,c[b+4>>2]|0)|0;r=(c[m>>2]|0)+k|0;c[m>>2]=r;u=m;v=r}else{r=b+12|0;m=c[r>>2]|0;k=(c[b+8>>2]|0)-m|0;g=t>>>0>k>>>0?k:t;t=b+60|0;ho(c[t>>2]|0,(c[b+4>>2]|0)+m|0,g|0)|0;c[r>>2]=(c[r>>2]|0)+g;r=(c[t>>2]|0)+g|0;c[t>>2]=r;u=t;v=r}if(v>>>0>=((c[i>>2]|0)+(c[b+44>>2]|0)+-29|0)>>>0){f=0;return f|0}a[e>>0]=1;e=v;v=e+29|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(v|0));c[u>>2]=(c[u>>2]|0)+29;f=0;return f|0}function Wd(a){a=a|0;var b=0;if((c[a>>2]|0)==0?(b=c[a+4>>2]|0,b|0):0)Jm(b)|0;b=c[a+40>>2]|0;if(!b){An(a);return}Wn(b);An(a);return}function Xd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=Tn(64)|0;f=e;g=f+64|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e+20>>2]=1;c[e+16>>2]=a;c[e>>2]=1;c[e+4>>2]=b;c[e+8>>2]=d;c[e+12>>2]=0;return e|0}function Yd(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;j=i;i=i+16|0;k=j+4|0;l=j;m=c[d+4>>2]|0;n=c[b+20>>2]|0;o=c[b+32>>2]|0;do if((n|0)==(m|0)){c[k>>2]=o;p=o}else{if((m|0)==1){c[k>>2]=0;p=0;break}if((n|0)<(m|0))q=Zd(b,n,o,0,m,k)|0;else q=Zd(b,1,0,0,m,k)|0;if((q|0)!=1){p=c[k>>2]|0;break}r=1;i=j;return r|0}while(0);if((Zd(b,m,p,1,m,l)|0)==1){r=1;i=j;return r|0}m=c[l>>2]|0;l=c[d+8>>2]|0;k=c[d+12>>2]|0;d=m-p|0;do if(d>>>0>e>>>0){if((k-l|0)>>>0>e>>>0)s=l;else s=(k+l|0)/2|0;q=s+-1|0;o=e>>>1;n=(q>>>0>o>>>0?q-o|0:0)+p|0;o=m-e|0;q=n>>>0>o>>>0?o:n;n=(m|0)==(q+e|0);if((p|0)==(q|0))if(n){t=p;u=e;v=e;w=p;x=f;break}else{y=e;z=p;A=f}else{a[f>>0]=a[11493]|0;a[f+1>>0]=a[11494]|0;a[f+2>>0]=a[11495]|0;o=q+3|0;B=f+3|0;C=e+-3|0;if(n){t=q;u=e;v=C;w=o;x=B;break}else{y=C;z=o;A=B}}B=f+e+-3|0;a[B>>0]=a[11493]|0;a[B+1>>0]=a[11494]|0;a[B+2>>0]=a[11495]|0;t=q;u=e;v=y+-3|0;w=z;x=A}else{t=p;u=d;v=d;w=p;x=f}while(0);if((c[b>>2]|0)!=1){d=c[b+4>>2]|0;A=Vm(d)|0;if((A|0)==-1){r=1;i=j;return r|0}if((Ym(d,w,0)|0)==-1){r=1;i=j;return r|0}if((Sm(x,1,v,d)|0)>>>0<v>>>0){r=1;i=j;return r|0}if((Ym(d,A,0)|0)==-1){r=1;i=j;return r|0}}else ho(x|0,(c[b+4>>2]|0)+w|0,v|0)|0;a[f+u>>0]=0;c[g>>2]=u;c[h>>2]=t-p;r=0;i=j;return r|0}function Zd(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;j=i;i=i+8192|0;k=j;if((c[b>>2]|0)==1){l=c[b+4>>2]|0;m=l+e|0;n=c[b+8>>2]|0;o=l+n|0;a:do if((n|0)>(e|0))if(!f){l=d;p=m;while(1){if((a[p>>0]|0)==10){q=l+1|0;if((q|0)==(g|0)){r=p;break}else s=q}else s=l;q=p+1|0;if(q>>>0<o>>>0){l=s;p=q}else{t=0;u=q;break a}}t=e+1-m+r|0;u=r;break}else{p=0;l=d;q=m;while(1){v=a[q>>0]|0;if(v<<24>>24==10)if((l|0)==(g|0)){w=p;x=q;break}else y=l+1|0;else y=l;z=q+1|0;if(z>>>0<o>>>0){p=v<<24>>24==13;l=y;q=z}else{t=0;u=z;break a}}t=e-m+(w<<31>>31)+x|0;u=x;break}else{t=0;u=m}while(0);if((u|0)==(o|0))if(!f){A=t;B=1}else{A=e-m+o|0;B=0}else{A=t;B=0}c[h>>2]=A;C=B;i=j;return C|0}B=c[b+4>>2]|0;b=Vm(B)|0;if((b|0)==-1){C=1;i=j;return C|0}if((Ym(B,e,0)|0)==-1)D=1;else{A=Sm(k,1,8192,B)|0;b:do if(!A){E=e;F=27}else{t=k;o=1-t|0;c:do if(!f){m=d;u=A;x=e;while(1){w=k+u|0;d:do if((u|0)>0){y=m;r=k;while(1){if((a[r>>0]|0)==10){s=y+1|0;if((s|0)==(g|0)){G=r;break}else H=s}else H=y;s=r+1|0;if(s>>>0<w>>>0){y=H;r=s}else{I=H;J=0;K=s;break d}}I=g;J=o+x+G|0;K=G}else{I=m;J=0;K=k}while(0);if((K|0)!=(w|0)){L=J;break c}c[h>>2]=J;r=x+u|0;u=Sm(k,1,8192,B)|0;if(!u){E=r;F=27;break b}else{m=I;x=r}}}else{x=k+A|0;e:do if((A|0)>0){m=0;u=d;r=k;while(1){y=a[r>>0]|0;if(y<<24>>24==10)if((u|0)==(g|0)){M=m;N=r;break}else O=u+1|0;else O=u;s=r+1|0;if(s>>>0<x>>>0){m=y<<24>>24==13;u=O;r=s}else{P=0;Q=s;break e}}P=e-t+(M<<31>>31)+N|0;Q=N}else{P=0;Q=k}while(0);L=(Q|0)==(x|0)?A+e|0:P}while(0);c[h>>2]=L;R=0}while(0);if((F|0)==27)if(!f)R=1;else{c[h>>2]=E;R=0}D=R}R=(Ym(B,b,0)|0)==-1;C=R?1:D;i=j;return C|0}function _d(a){a=a|0;return}function $d(a){a=a|0;An(a);return}function ae(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+8|0;h=f;j=c[b+4>>2]|0;k=c[b+8>>2]|0;l=c[b+12>>2]|0;b=(a[e>>0]&1)==0?e+1|0:c[e+8>>2]|0;if((d|0)==-1){c[h>>2]=b;wi(j,k,l,11559,h);i=f;return 1}else{c[g>>2]=d;c[g+4>>2]=b;wi(j,k,l,11586,g);i=f;return 1}return 0}function be(e,f){e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,uc=0,vc=0,wc=0,xc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Jc=0,Kc=0,Lc=0,od=0,pd=0,Dd=0,Gd=0,Id=0,Nd=0,Rd=0,Sd=0,Td=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,he=0,ie=0,ve=0,we=0,xe=0,ye=0,ze=0,Ae=0,Be=0,Ce=0;g=i;i=i+11056|0;h=g+7032|0;j=g+10504|0;k=g+10496|0;l=g+7024|0;m=g+7016|0;n=g+7008|0;o=g+7e3|0;p=g+6992|0;q=g+6984|0;r=g+6976|0;s=g+6968|0;t=g+6952|0;u=g+6944|0;v=g+6928|0;w=g+6920|0;x=g+6904|0;y=g+6896|0;z=g+6880|0;A=g+6872|0;B=g+6856|0;C=g+6848|0;D=g+6840|0;E=g+6832|0;F=g+6824|0;G=g+6816|0;H=g+6768|0;I=g+10456|0;J=g+10520|0;K=g+304|0;L=g+7256|0;M=g+240|0;N=g+10920|0;O=g+7236|0;P=g+7208|0;Q=g+10492|0;R=g+10488|0;S=g+10484|0;T=g+10472|0;U=g+6800|0;V=g+6736|0;W=g+11050|0;X=g+6704|0;Y=g+11049|0;Z=g+272|0;_=g+11048|0;$=g+7240|0;aa=g+224|0;ba=g+7224|0;ca=g+208|0;da=g+7212|0;ea=g+192|0;fa=g+7196|0;ga=g+176|0;ha=g+7184|0;ia=g+160|0;ja=g+7172|0;ka=g+144|0;la=g+7160|0;ma=g+128|0;na=g+7148|0;oa=g+112|0;pa=g+7136|0;qa=g+96|0;ra=g+7124|0;sa=g+80|0;ta=g+7112|0;ua=g+64|0;va=g+7100|0;wa=g+48|0;xa=g+7088|0;ya=g+32|0;za=g+7076|0;Aa=g+16|0;Ba=g+7064|0;Ca=g;c[H>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;c[H+12>>2]=0;c[H+16>>2]=0;c[H+20>>2]=0;c[H+24>>2]=0;c[H+28>>2]=0;c[I>>2]=0;c[I+4>>2]=0;c[I+8>>2]=0;c[I+12>>2]=0;c[O>>2]=128;c[L>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;Da=M+4|0;Ea=h+8|0;Fa=j+4|0;Ga=M+16|0;Ha=M+8|0;Ia=Da+4|0;Ja=M+24|0;Ka=M+24|0;La=Ka+4|0;Ma=h+16|0;Na=h+24|0;Oa=h+24|0;Pa=j+4|0;Qa=j+8|0;Ra=j+12|0;Sa=f+12|0;Ta=f+16|0;Ua=f+20|0;Va=h+16|0;Wa=-2;Xa=L;Ya=L;Za=J;_a=J;$a=200;ab=0;bb=K;cb=K;while(1){b[_a>>1]=ab;if((Za+($a<<1)+-2|0)>>>0<=_a>>>0){db=(_a-Za>>1)+1|0;eb=$a<<1;fb=eb>>>0>2147483647?-1:eb<<1;gb=Vn(fb)|0;$n(gb|0,0,fb|0)|0;io(gb|0,Za|0,eb|0)|0;if(!((Za|0)==(J|0)|(Za|0)==0))Wn(Za);c[Sa>>2]=gb;fb=eb>>>0>134217727?-1:eb<<5;hb=Vn(fb)|0;$n(hb|0,0,fb|0)|0;io(hb|0,bb|0,$a<<5|0)|0;if(!((bb|0)==(K|0)|(bb|0)==0))Wn(bb);c[Ta>>2]=hb;fb=eb>>>0>268435455?-1:eb<<4;ib=Vn(fb)|0;$n(ib|0,0,fb|0)|0;io(ib|0,Xa|0,$a<<4|0)|0;if(!((Xa|0)==(L|0)|(Xa|0)==0))Wn(Xa);c[Ua>>2]=ib;fb=gb+(db<<1)+-2|0;jb=hb+(db<<5)+-32|0;if((eb|0)>(db|0)){kb=ib;lb=ib+(db<<4)+-16|0;mb=gb;nb=fb;ob=eb;pb=hb;qb=jb}else{rb=Wa;sb=N;tb=1;ub=gb;vb=fb;wb=jb;break}}else{kb=Xa;lb=Ya;mb=Za;nb=_a;ob=$a;pb=bb;qb=cb}if((ab|0)==10){rb=Wa;sb=N;tb=0;ub=mb;vb=nb;wb=qb;break}jb=b[6788+(ab<<1)>>1]|0;fb=jb<<16>>16;do if(jb<<16>>16!=-274){if((Wa|0)==-2)xb=Ud(H,I,e,f)|0;else xb=Wa;if((xb|0)>=1)if(xb>>>0<330){yb=xb;zb=d[11622+xb>>0]|0}else{yb=xb;zb=2}else{yb=0;zb=0}gb=zb+fb|0;if(gb>>>0<=797?(b[7598+(gb<<1)>>1]|0)==(zb|0):0){hb=b[9194+(gb<<1)>>1]|0;gb=hb<<16>>16;if(hb<<16>>16<1){Ab=yb;Bb=0-gb|0;Cb=24;break}else{hb=qb+32|0;c[hb>>2]=c[H>>2];c[hb+4>>2]=c[H+4>>2];c[hb+8>>2]=c[H+8>>2];c[hb+12>>2]=c[H+12>>2];c[hb+16>>2]=c[H+16>>2];c[hb+20>>2]=c[H+20>>2];c[hb+24>>2]=c[H+24>>2];c[hb+28>>2]=c[H+28>>2];eb=lb+16|0;c[eb>>2]=c[I>>2];c[eb+4>>2]=c[I+4>>2];c[eb+8>>2]=c[I+8>>2];c[eb+12>>2]=c[I+12>>2];Db=-2;Eb=eb;Fb=nb;Gb=gb;Hb=hb;break}}else{Ib=yb;Cb=23}}else{Ib=Wa;Cb=23}while(0);if((Cb|0)==23){Cb=0;fb=a[11952+ab>>0]|0;if(!(fb<<24>>24)){Jb=Ib;Kb=mb;Lb=nb;Mb=ab;Nb=qb;Cb=695;break}else{Ab=Ib;Bb=fb&255;Cb=24}}do if((Cb|0)==24){Cb=0;fb=a[12357+Bb>>0]|0;jb=fb&255;hb=qb+(1-jb<<5)|0;c[M>>2]=c[hb>>2];c[M+4>>2]=c[hb+4>>2];c[M+8>>2]=c[hb+8>>2];c[M+12>>2]=c[hb+12>>2];c[M+16>>2]=c[hb+16>>2];c[M+20>>2]=c[hb+20>>2];c[M+24>>2]=c[hb+24>>2];c[M+28>>2]=c[hb+28>>2];hb=0-jb|0;if(!(fb<<24>>24)){fb=c[lb+(hb<<4)+12>>2]|0;Ob=0;Pb=fb;Qb=fb;Rb=lb+(hb<<4)+4|0}else{fb=lb+(hb<<4)|0;gb=fb+16|0;Ob=c[gb>>2]|0;Pb=c[gb+8>>2]|0;Qb=c[fb+(jb<<4)+12>>2]|0;Rb=gb+4|0}gb=c[Rb>>2]|0;a:do switch(Bb|0){case 2:{jb=Tn(12)|0;c[jb>>2]=0;c[jb+4>>2]=0;c[jb+8>>2]=0;fb=c[qb>>2]|0;eb=qb+4|0;db=c[eb>>2]|0;b:do if(!db)Sb=0;else{ib=fb;Tb=0;while(1){if(!(a[ib>>0]|0)){Sb=Tb;break b}Ub=Tb+1|0;if(Ub>>>0<db>>>0){ib=ib+1|0;Tb=Ub}else{Sb=Ub;break}}}while(0);db=Vn(Sb+1|0)|0;ho(db|0,fb|0,Sb|0)|0;a[db+Sb>>0]=0;c[jb>>2]=db;c[jb+4>>2]=c[eb>>2];c[jb+8>>2]=0;c[Da>>2]=jb;c[M>>2]=jb;break}case 3:{db=qb+-32|0;Tb=c[db+4>>2]|0;ib=M;c[ib>>2]=c[db>>2];c[ib+4>>2]=Tb;ib=Tn(12)|0;c[ib>>2]=0;c[ib+4>>2]=0;c[ib+8>>2]=0;db=c[qb>>2]|0;Ub=qb+4|0;Vb=c[Ub>>2]|0;Wb=Tb;c:do if(!Vb)Xb=0;else{Tb=db;Yb=0;while(1){if(!(a[Tb>>0]|0)){Xb=Yb;break c}Zb=Yb+1|0;if(Zb>>>0<Vb>>>0){Tb=Tb+1|0;Yb=Zb}else{Xb=Zb;break}}}while(0);Vb=Vn(Xb+1|0)|0;ho(Vb|0,db|0,Xb|0)|0;a[Vb+Xb>>0]=0;c[ib>>2]=Vb;c[ib+4>>2]=c[Ub>>2];c[ib+8>>2]=0;c[Wb+8>>2]=ib;c[Da>>2]=ib;break}case 4:{c[Da>>2]=0;c[M>>2]=0;break}case 6:{Vb=qb;jb=c[Vb+4>>2]|0;eb=h;c[eb>>2]=c[Vb>>2];c[eb+4>>2]=jb;c[Ea>>2]=0;c[j>>2]=h;c[Fa>>2]=h;ce(j,k,P);c[M>>2]=c[k>>2];c[Da>>2]=c[P>>2];break}case 7:{jb=Tn(12)|0;c[jb>>2]=0;c[jb+4>>2]=0;c[jb+8>>2]=0;c[M>>2]=jb;break}case 8:{jb=c[qb+-32>>2]|0;c[M>>2]=jb;eb=jb+4|0;Vb=c[eb>>2]|0;if((Vb|0)==(c[jb+8>>2]|0)){de(jb,qb);break a}else{c[Vb>>2]=c[qb>>2];c[eb>>2]=Vb+4;break a}break}case 171:{Vb=Tn(32)|0;Qd(Vb);c[M>>2]=Vb;eb=c[qb>>2]|0;jb=c[Vb>>2]|0;if(!jb){_b=Vb+4|0;$b=Vb+8|0}else{fb=Vb+4|0;Yb=c[fb>>2]|0;if((Yb|0)==(jb|0))ac=jb;else{Tb=Yb;do{Yb=Tb+-4|0;c[fb>>2]=Yb;Zb=c[Yb>>2]|0;c[Yb>>2]=0;if(Zb|0){Pd(Zb);An(Zb)}Tb=c[fb>>2]|0}while((Tb|0)!=(jb|0));ac=c[Vb>>2]|0}An(ac);jb=Vb+8|0;c[jb>>2]=0;c[fb>>2]=0;c[Vb>>2]=0;_b=fb;$b=jb}c[Vb>>2]=c[eb>>2];jb=eb+4|0;c[_b>>2]=c[jb>>2];Tb=eb+8|0;c[$b>>2]=c[Tb>>2];c[Tb>>2]=0;c[jb>>2]=0;c[eb>>2]=0;jb=c[qb>>2]|0;if(jb|0){Tb=c[jb>>2]|0;if(Tb|0){ib=jb+4|0;Wb=c[ib>>2]|0;if((Wb|0)==(Tb|0))bc=Tb;else{Ub=Wb;do{Wb=Ub+-4|0;c[ib>>2]=Wb;db=c[Wb>>2]|0;c[Wb>>2]=0;if(db|0){Pd(db);An(db)}Ub=c[ib>>2]|0}while((Ub|0)!=(Tb|0));bc=c[jb>>2]|0}An(bc)}An(jb)}Tb=c[M>>2]|0;Ub=Tb;d:do if((c[Tb+4>>2]|0)==(c[Tb>>2]|0))cc=Ub;else{ib=Tb;eb=Ub;Vb=0;fb=-1;while(1){db=c[(c[ib>>2]|0)+(Vb<<2)>>2]|0;switch(c[db>>2]|0){case 0:{Wb=c[db+8>>2]|0;Zb=c[Wb+20>>2]|0;if(!Zb){dc=ib;ec=eb;fc=Vb}else{hn(Ba,c[Wb+16>>2]|0,Zb);c[Ca>>2]=c[Wb>>2];c[Ca+4>>2]=c[Wb+4>>2];c[Ca+8>>2]=c[Wb+8>>2];c[Ca+12>>2]=c[Wb+12>>2];Wb=Tn(40)|0;Zb=Wb+8|0;c[Zb>>2]=c[Ba>>2];c[Zb+4>>2]=c[Ba+4>>2];c[Zb+8>>2]=c[Ba+8>>2];c[Ba>>2]=0;c[Ba+4>>2]=0;c[Ba+8>>2]=0;Zb=Wb+20|0;c[Zb>>2]=c[Ca>>2];c[Zb+4>>2]=c[Ca+4>>2];c[Zb+8>>2]=c[Ca+8>>2];c[Zb+12>>2]=c[Ca+12>>2];c[Wb+36>>2]=Vb;ge(ib+12|0,Wb)|0;jn(Ba);Wb=c[M>>2]|0;dc=Wb;ec=Wb;fc=Vb}break}case 8:{gc=(c[db+8>>2]|0)+24|0;Cb=687;break}case 9:{gc=(c[db+8>>2]|0)+24|0;Cb=687;break}case 10:{gc=(c[db+8>>2]|0)+24|0;Cb=687;break}case 12:case 11:{gc=(c[db+8>>2]|0)+24|0;Cb=687;break}case 1:{gc=(c[db+8>>2]|0)+24|0;Cb=687;break}case 2:{gc=db+16|0;Cb=687;break}default:{dc=ib;ec=eb;fc=fb}}if((Cb|0)==687){Cb=0;if((c[gc+16>>2]|0)==0?(db=gc+24|0,Wb=db,(c[Wb>>2]|0)==-1?(c[Wb+4>>2]|0)==-1:0):0){Wb=db;c[Wb>>2]=fb;c[Wb+4>>2]=((fb|0)<0)<<31>>31;dc=ib;ec=eb;fc=fb}else{dc=ib;ec=eb;fc=fb}}Vb=Vb+1|0;if(Vb>>>0>=(c[dc+4>>2]|0)-(c[dc>>2]|0)>>2>>>0){cc=ec;break d}else{ib=dc;eb=ec;fb=fc}}}while(0);c[f>>2]=cc;break}case 10:{Ub=Tn(20)|0;sd(Ub);c[M>>2]=Ub;c[Ub+8>>2]=c[qb>>2];a[Ub+12>>0]=0;break}case 11:{Ub=Tn(20)|0;sd(Ub);c[M>>2]=Ub;c[Ub+8>>2]=c[qb+-32>>2];a[Ub+12>>0]=1;break}case 12:{c[M>>2]=c[qb+-32>>2];break}case 13:{Ub=Tn(24)|0;c[Ub>>2]=0;c[Ub+4>>2]=0;c[Ub+8>>2]=0;c[Ub+12>>2]=0;c[Ub+16>>2]=0;c[Ub+20>>2]=0;c[M>>2]=Ub;break}case 14:{Ub=Tn(24)|0;c[Ub>>2]=0;c[Ub+4>>2]=0;c[Ub+8>>2]=0;c[Ub+12>>2]=0;c[Ub+16>>2]=0;c[Ub+20>>2]=0;c[M>>2]=Ub;Tb=qb+-32|0;jb=c[Tb>>2]|0;fb=jb+4|0;eb=c[fb>>2]|0;c[Ub>>2]=c[jb>>2];c[Ub+4>>2]=eb;eb=jb+8|0;c[Ub+8>>2]=c[eb>>2];c[eb>>2]=0;c[fb>>2]=0;c[jb>>2]=0;jb=c[Tb>>2]|0;if(jb|0){Tb=c[jb>>2]|0;fb=Tb;if(Tb|0){eb=jb+4|0;Ub=c[eb>>2]|0;if((Ub|0)!=(Tb|0))c[eb>>2]=Ub+(~((Ub+-4-fb|0)>>>2)<<2);An(Tb)}An(jb)}break}case 15:{jb=Tn(24)|0;c[jb>>2]=0;c[jb+4>>2]=0;c[jb+8>>2]=0;c[jb+12>>2]=0;c[jb+16>>2]=0;c[jb+20>>2]=0;c[M>>2]=jb;Tb=qb+-160|0;fb=c[Tb>>2]|0;Ub=fb+4|0;eb=c[Ub>>2]|0;c[jb>>2]=c[fb>>2];c[jb+4>>2]=eb;eb=fb+8|0;c[jb+8>>2]=c[eb>>2];c[eb>>2]=0;c[Ub>>2]=0;c[fb>>2]=0;fb=c[Tb>>2]|0;if(fb|0){Tb=c[fb>>2]|0;Ub=Tb;if(Tb|0){eb=fb+4|0;jb=c[eb>>2]|0;if((jb|0)!=(Tb|0))c[eb>>2]=jb+(~((jb+-4-Ub|0)>>>2)<<2);An(Tb)}An(fb)}fb=c[M>>2]|0;Tb=fb+12|0;Ub=qb+-32|0;jb=c[Ub>>2]|0;eb=c[Tb>>2]|0;ib=eb;Vb=fb+16|0;if(!eb)hc=fb+20|0;else{Wb=c[Vb>>2]|0;if((Wb|0)!=(eb|0))c[Vb>>2]=Wb+(~((Wb+-4-ib|0)>>>2)<<2);An(eb);eb=fb+20|0;c[eb>>2]=0;c[Vb>>2]=0;c[Tb>>2]=0;hc=eb}c[Tb>>2]=c[jb>>2];Tb=jb+4|0;c[Vb>>2]=c[Tb>>2];Vb=jb+8|0;c[hc>>2]=c[Vb>>2];c[Vb>>2]=0;c[Tb>>2]=0;c[jb>>2]=0;jb=c[Ub>>2]|0;if(jb|0){Ub=c[jb>>2]|0;Tb=Ub;if(Ub|0){Vb=jb+4|0;eb=c[Vb>>2]|0;if((eb|0)!=(Ub|0))c[Vb>>2]=eb+(~((eb+-4-Tb|0)>>>2)<<2);An(Ub)}An(jb)}break}case 16:{jb=Tn(24)|0;c[jb>>2]=0;c[jb+4>>2]=0;c[jb+8>>2]=0;c[jb+12>>2]=0;c[jb+16>>2]=0;c[jb+20>>2]=0;c[M>>2]=jb;Ub=qb+-32|0;Tb=c[Ub>>2]|0;eb=Tb+4|0;Vb=c[eb>>2]|0;c[jb+12>>2]=c[Tb>>2];c[jb+16>>2]=Vb;Vb=Tb+8|0;c[jb+20>>2]=c[Vb>>2];c[Vb>>2]=0;c[eb>>2]=0;c[Tb>>2]=0;Tb=c[Ub>>2]|0;if(Tb|0){Ub=c[Tb>>2]|0;eb=Ub;if(Ub|0){Vb=Tb+4|0;jb=c[Vb>>2]|0;if((jb|0)!=(Ub|0))c[Vb>>2]=jb+(~((jb+-4-eb|0)>>>2)<<2);An(Ub)}An(Tb)}break}case 17:{Tb=Tn(32)|0;ud(Tb);c[M>>2]=Tb;Ub=Tb+8|0;Tb=qb+-32|0;c[Ub>>2]=c[Tb>>2];c[Ub+4>>2]=c[Tb+4>>2];c[Ub+8>>2]=c[Tb+8>>2];c[Ub+12>>2]=c[Tb+12>>2];c[Ub+16>>2]=c[Tb+16>>2];c[Ub+20>>2]=c[Tb+20>>2];break}case 18:{Tb=Tn(32)|0;Ad(Tb);c[M>>2]=Tb;Ub=Tb+8|0;c[Ub>>2]=c[qb>>2];c[Ub+4>>2]=c[qb+4>>2];c[Ub+8>>2]=c[qb+8>>2];c[Ub+12>>2]=c[qb+12>>2];c[Ub+16>>2]=c[qb+16>>2];c[Ub+20>>2]=c[qb+20>>2];break}case 19:{a[Ga>>0]=0;Ub=qb;Tb=c[Ub+4>>2]|0;eb=M;c[eb>>2]=c[Ub>>2];c[eb+4>>2]=Tb;Tb=Ha;c[Tb>>2]=0;c[Tb+4>>2]=0;break}case 20:{a[Ga>>0]=1;Tb=qb+-32|0;eb=c[Tb+4>>2]|0;Ub=M;c[Ub>>2]=c[Tb>>2];c[Ub+4>>2]=eb;eb=qb;Ub=c[eb+4>>2]|0;Tb=Ha;c[Tb>>2]=c[eb>>2];c[Tb+4>>2]=Ub;break}case 21:{Ub=qb+-32|0;c[M>>2]=c[Ub>>2];c[M+4>>2]=c[Ub+4>>2];c[M+8>>2]=c[Ub+8>>2];c[M+12>>2]=c[Ub+12>>2];c[M+16>>2]=c[Ub+16>>2];c[M+20>>2]=c[Ub+20>>2];c[M+24>>2]=c[Ub+24>>2];c[M+28>>2]=c[Ub+28>>2];break}case 22:{Ub=qb+4|0;Tb=c[Ub>>2]|0;eb=Ub+4|0;if((bi(Tb,Tb+(c[eb>>2]|0)|0,M)|0)==1){Tb=c[Ub>>2]|0;c[G>>2]=c[eb>>2];c[G+4>>2]=Tb;wi(lb,e,f,12530,G)}break}case 23:{c[M>>2]=c[qb>>2];Tb=qb+4|0;eb=c[Tb>>2]|0;Ub=Tb+4|0;Tb=c[Ub>>2]|0;e:do if(!Tb)ic=0;else{jb=eb;Vb=0;while(1){if(!(a[jb>>0]|0)){ic=Vb;break e}fb=Vb+1|0;if(fb>>>0<Tb>>>0){jb=jb+1|0;Vb=fb}else{ic=fb;break}}}while(0);Tb=Vn(ic+1|0)|0;ho(Tb|0,eb|0,ic|0)|0;a[Tb+ic>>0]=0;c[Da>>2]=Tb;c[Ia>>2]=c[Ub>>2];break}case 24:{c[M>>2]=c[qb>>2];Tb=qb+4|0;Vb=c[Tb>>2]|0;jb=Tb+4|0;Tb=c[jb>>2]|0;f:do if(!Tb)jc=0;else{fb=Vb;ib=0;while(1){if(!(a[fb>>0]|0)){jc=ib;break f}Wb=ib+1|0;if(Wb>>>0<Tb>>>0){fb=fb+1|0;ib=Wb}else{jc=Wb;break}}}while(0);Tb=Vn(jc+1|0)|0;ho(Tb|0,Vb|0,jc|0)|0;a[Tb+jc>>0]=0;c[Da>>2]=Tb;c[Ia>>2]=c[jb>>2];break}case 25:{c[M>>2]=c[qb>>2];Tb=qb+4|0;Ub=c[Tb>>2]|0;eb=Tb+4|0;Tb=c[eb>>2]|0;g:do if(!Tb)kc=0;else{ib=Ub;fb=0;while(1){if(!(a[ib>>0]|0)){kc=fb;break g}Wb=fb+1|0;if(Wb>>>0<Tb>>>0){ib=ib+1|0;fb=Wb}else{kc=Wb;break}}}while(0);Tb=Vn(kc+1|0)|0;ho(Tb|0,Ub|0,kc|0)|0;a[Tb+kc>>0]=0;c[Da>>2]=Tb;c[Ia>>2]=c[eb>>2];break}case 26:{c[M>>2]=c[lb>>2];c[M+4>>2]=c[lb+4>>2];c[M+8>>2]=c[lb+8>>2];c[M+12>>2]=c[lb+12>>2];c[Ga>>2]=0;Tb=qb;jb=c[Tb+4>>2]|0;Vb=Ja;c[Vb>>2]=c[Tb>>2];c[Vb+4>>2]=jb;break}case 27:{c[M>>2]=c[lb>>2];c[M+4>>2]=c[lb+4>>2];c[M+8>>2]=c[lb+8>>2];c[M+12>>2]=c[lb+12>>2];c[Ga>>2]=1;jb=c[qb>>2]|0;Vb=qb+4|0;Tb=c[Vb>>2]|0;h:do if(!Tb)lc=0;else{fb=jb;ib=0;while(1){if(!(a[fb>>0]|0)){lc=ib;break h}Wb=ib+1|0;if(Wb>>>0<Tb>>>0){fb=fb+1|0;ib=Wb}else{lc=Wb;break}}}while(0);Tb=Vn(lc+1|0)|0;ho(Tb|0,jb|0,lc|0)|0;a[Tb+lc>>0]=0;c[Ka>>2]=Tb;c[La>>2]=c[Vb>>2];break}case 28:{Tb=Tn(12)|0;c[Tb>>2]=0;c[Tb+4>>2]=0;c[Tb+8>>2]=0;c[M>>2]=Tb;break}case 29:{Tb=c[qb+-32>>2]|0;c[M>>2]=Tb;eb=Tb+4|0;Ub=c[eb>>2]|0;if((Ub|0)==(c[Tb+8>>2]|0)){ee(Tb,qb);break a}else{c[Ub>>2]=c[qb>>2];c[Ub+4>>2]=c[qb+4>>2];c[Ub+8>>2]=c[qb+8>>2];c[Ub+12>>2]=c[qb+12>>2];c[Ub+16>>2]=c[qb+16>>2];c[Ub+20>>2]=c[qb+20>>2];c[Ub+24>>2]=c[qb+24>>2];c[Ub+28>>2]=c[qb+28>>2];c[eb>>2]=(c[eb>>2]|0)+32;break a}break}case 30:{eb=M;c[eb>>2]=0;c[eb+4>>2]=0;break}case 32:{eb=c[qb>>2]|0;Ub=qb+4|0;Tb=c[Ub>>2]|0;i:do if(!Tb)mc=0;else{ib=eb;fb=0;while(1){if(!(a[ib>>0]|0)){mc=fb;break i}Wb=fb+1|0;if(Wb>>>0<Tb>>>0){ib=ib+1|0;fb=Wb}else{mc=Wb;break}}}while(0);Tb=Vn(mc+1|0)|0;ho(Tb|0,eb|0,mc|0)|0;a[Tb+mc>>0]=0;c[M>>2]=Tb;c[Da>>2]=c[Ub>>2];break}case 33:{Tb=M;c[Tb>>2]=0;c[Tb+4>>2]=0;break}case 35:{Tb=M;c[Tb>>2]=0;c[Tb+4>>2]=0;break}case 36:{Tb=c[qb>>2]|0;Vb=qb+4|0;if((ci(Tb,Tb+(c[Vb>>2]|0)|0,M,1)|0)==1){Tb=c[qb>>2]|0;c[F>>2]=c[Vb>>2];c[F+4>>2]=Tb;wi(lb,e,f,12548,F)}break}case 37:{c[M>>2]=-1;break}case 38:{Tb=c[qb>>2]|0;Vb=qb+4|0;if((di(Tb,Tb+(c[Vb>>2]|0)|0,M,0)|0)==1){Tb=c[qb>>2]|0;c[E>>2]=c[Vb>>2];c[E+4>>2]=Tb;wi(lb,e,f,12570,E)}break}case 39:{Tb=c[qb>>2]|0;Vb=Tb;c[Tb>>2]=c[lb>>2];c[Tb+4>>2]=c[lb+4>>2];c[Tb+8>>2]=c[lb+8>>2];c[Tb+12>>2]=c[lb+12>>2];c[M>>2]=Vb;c[Da>>2]=Vb;c[Ha>>2]=1;break}case 40:{Vb=c[qb>>2]|0;Tb=Vb;c[Vb>>2]=c[lb>>2];c[Vb+4>>2]=c[lb+4>>2];c[Vb+8>>2]=c[lb+8>>2];c[Vb+12>>2]=c[lb+12>>2];c[M>>2]=Tb;c[Da>>2]=Tb;c[Ha>>2]=1;break}case 41:{c[M>>2]=c[qb>>2];c[M+4>>2]=c[qb+4>>2];c[M+8>>2]=c[qb+8>>2];break}case 42:{c[M>>2]=md()|0;break}case 43:{c[M>>2]=ed()|0;break}case 44:{c[M>>2]=Zc()|0;break}case 45:{c[M>>2]=gd()|0;break}case 46:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=Qc(h)|0;break}case 47:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=Rc(h)|0;break}case 48:{Tb=c[qb+-32>>2]|0;c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=Sc(Tb,h)|0;break}case 49:{c[M>>2]=fd()|0;break}case 50:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=Tc(h)|0;break}case 51:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=Uc(h)|0;break}case 52:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=$c(h)|0;break}case 53:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=id(h)|0;break}case 54:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=kd(h)|0;break}case 55:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=_c(h)|0;break}case 56:{c[h>>2]=c[qb>>2];c[h+4>>2]=c[qb+4>>2];c[h+8>>2]=c[qb+8>>2];c[h+12>>2]=c[qb+12>>2];c[h+16>>2]=c[qb+16>>2];c[h+20>>2]=c[qb+20>>2];c[h+24>>2]=c[qb+24>>2];c[h+28>>2]=c[qb+28>>2];c[M>>2]=hd(h)|0;break}case 57:{Tb=qb+-32|0;c[M>>2]=cd(c[qb+-64>>2]|0,c[qb>>2]|0,c[Tb>>2]|0,c[Tb+4>>2]|0)|0;break}case 58:{Tb=qb+-32|0;c[M>>2]=jd(c[qb+-64>>2]|0,c[qb>>2]|0,c[Tb>>2]|0,c[Tb+4>>2]|0)|0;break}case 59:{Tb=lb+-16|0;c[Va>>2]=0;c[Va+4>>2]=0;c[Va+8>>2]=0;c[Va+12>>2]=0;c[h>>2]=c[Tb>>2];c[h+4>>2]=c[Tb+4>>2];c[h+8>>2]=c[Tb+8>>2];c[h+12>>2]=c[Tb+12>>2];Tb=c[qb+-32>>2]|0;Vb=c[qb>>2]|0;jb=qb+4|0;fb=c[jb>>2]|0;ib=jb+4|0;Wb=c[ib>>2]|0;db=fb+Wb|0;c[Ma>>2]=Tb;switch(Tb|0){case -1:{nc=di(fb,db,Na,1)|0;Cb=140;break}case -2:{nc=ci(fb,db,Oa,1)|0;Cb=140;break}case -3:{nc=ei(Vb,fb,db,Na)|0;Cb=140;break}case -4:{nc=fi(Vb,fb,db,Oa)|0;Cb=140;break}default:{oc=Wb;pc=fb;Cb=142}}if((Cb|0)==140?(Cb=0,(nc|0)==1):0){oc=c[ib>>2]|0;pc=c[jb>>2]|0;Cb=142}if((Cb|0)==142){Cb=0;c[D>>2]=oc;c[D+4>>2]=pc;wi(lb,e,f,12595,D)}ib=c[jb>>2]|0;if(ib|0)Wn(ib);c[M>>2]=Wc(h)|0;break}case 60:{c[M>>2]=ld(c[qb>>2]|0)|0;break}case 61:{c[M>>2]=Oc(c[qb>>2]|0)|0;break}case 62:{c[M>>2]=Vc(c[qb>>2]|0)|0;break}case 63:{c[M>>2]=Xc(c[qb>>2]|0)|0;break}case 64:{c[M>>2]=Yc()|0;break}case 65:{c[M>>2]=ad()|0;break}case 66:{ib=Pc(c[qb+-64>>2]|0)|0;c[M>>2]=ib;jb=qb+-96|0;fb=c[jb+4>>2]|0;Wb=c[ib+24>>2]|0;c[Wb>>2]=c[jb>>2];c[Wb+4>>2]=fb;if(!(Zh(qb)|0)){if(!(Zh(c[(c[M>>2]|0)+24>>2]|0)|0)){if(!(_h(c[(c[M>>2]|0)+24>>2]|0,qb)|0)){fb=c[(c[M>>2]|0)+24>>2]|0;Wb=c[fb>>2]|0;jb=c[qb+4>>2]|0;ib=c[qb>>2]|0;c[B>>2]=c[fb+4>>2];c[B+4>>2]=Wb;c[B+8>>2]=jb;c[B+12>>2]=ib;wi(lb,e,f,12642,B)}}else{ib=c[qb>>2]|0;c[C>>2]=c[qb+4>>2];c[C+4>>2]=ib;wi(lb,e,f,12618,C)}$h(qb)}break}case 67:{ib=dd(c[qb+-64>>2]|0)|0;c[M>>2]=ib;jb=qb+-96|0;Wb=c[jb+4>>2]|0;fb=c[ib+24>>2]|0;c[fb>>2]=c[jb>>2];c[fb+4>>2]=Wb;if(!(Zh(qb)|0)){if(!(Zh(c[(c[M>>2]|0)+24>>2]|0)|0)){if(!(_h(c[(c[M>>2]|0)+24>>2]|0,qb)|0)){Wb=c[(c[M>>2]|0)+24>>2]|0;fb=c[Wb>>2]|0;jb=c[qb+4>>2]|0;ib=c[qb>>2]|0;c[z>>2]=c[Wb+4>>2];c[z+4>>2]=fb;c[z+8>>2]=jb;c[z+12>>2]=ib;wi(lb,e,f,12642,z)}}else{ib=c[qb>>2]|0;c[A>>2]=c[qb+4>>2];c[A+4>>2]=ib;wi(lb,e,f,12618,A)}$h(qb)}break}case 68:{ib=bd(c[qb+-64>>2]|0,0)|0;c[M>>2]=ib;jb=qb+-96|0;fb=c[jb+4>>2]|0;Wb=c[ib+24>>2]|0;c[Wb>>2]=c[jb>>2];c[Wb+4>>2]=fb;if(!(Zh(qb)|0)){if(!(Zh(c[(c[M>>2]|0)+24>>2]|0)|0)){if(!(_h(c[(c[M>>2]|0)+24>>2]|0,qb)|0)){fb=c[(c[M>>2]|0)+24>>2]|0;Wb=c[fb>>2]|0;jb=c[qb+4>>2]|0;ib=c[qb>>2]|0;c[x>>2]=c[fb+4>>2];c[x+4>>2]=Wb;c[x+8>>2]=jb;c[x+12>>2]=ib;wi(lb,e,f,12642,x)}}else{ib=c[qb>>2]|0;c[y>>2]=c[qb+4>>2];c[y+4>>2]=ib;wi(lb,e,f,12618,y)}$h(qb)}break}case 69:{ib=bd(c[qb+-160>>2]|0,c[qb+-64>>2]|0)|0;c[M>>2]=ib;jb=qb+-192|0;Wb=c[jb+4>>2]|0;fb=c[ib+24>>2]|0;c[fb>>2]=c[jb>>2];c[fb+4>>2]=Wb;Wb=qb+-96|0;if(!(Zh(Wb)|0)){if(!(Zh(c[(c[M>>2]|0)+24>>2]|0)|0)){if(!(_h(c[(c[M>>2]|0)+24>>2]|0,Wb)|0)){fb=c[(c[M>>2]|0)+24>>2]|0;jb=c[fb>>2]|0;ib=c[qb+-92>>2]|0;db=c[Wb>>2]|0;c[v>>2]=c[fb+4>>2];c[v+4>>2]=jb;c[v+8>>2]=ib;c[v+12>>2]=db;wi(lb+-48|0,e,f,12642,v)}}else{db=c[Wb>>2]|0;c[w>>2]=c[qb+-92>>2];c[w+4>>2]=db;wi(lb+-48|0,e,f,12618,w)}$h(Wb)}if(!(Zh(qb)|0)){if(!(Zh(c[(c[M>>2]|0)+24>>2]|0)|0)){if(!(_h(c[(c[M>>2]|0)+24>>2]|0,qb)|0)){Wb=c[(c[M>>2]|0)+24>>2]|0;db=c[Wb>>2]|0;ib=c[qb+4>>2]|0;jb=c[qb>>2]|0;c[t>>2]=c[Wb+4>>2];c[t+4>>2]=db;c[t+8>>2]=ib;c[t+12>>2]=jb;wi(lb,e,f,12642,t)}}else{jb=c[qb>>2]|0;c[u>>2]=c[qb+4>>2];c[u+4>>2]=jb;wi(lb,e,f,12618,u)}$h(qb)}break}case 70:{jb=Tn(24)|0;Mc(jb);c[M>>2]=jb;ib=jb+8|0;db=qb+-32|0;Wb=c[db>>2]|0;fb=c[ib>>2]|0;Vb=fb;Tb=jb+12|0;if(!fb)qc=jb+16|0;else{Zb=c[Tb>>2]|0;if((Zb|0)!=(fb|0))c[Tb>>2]=Zb+(~((Zb+-4-Vb|0)>>>2)<<2);An(fb);fb=jb+16|0;c[fb>>2]=0;c[Tb>>2]=0;c[ib>>2]=0;qc=fb}c[ib>>2]=c[Wb>>2];ib=Wb+4|0;c[Tb>>2]=c[ib>>2];Tb=Wb+8|0;c[qc>>2]=c[Tb>>2];c[Tb>>2]=0;c[ib>>2]=0;c[Wb>>2]=0;Wb=c[db>>2]|0;if(Wb|0){db=c[Wb>>2]|0;ib=db;if(db|0){Tb=Wb+4|0;fb=c[Tb>>2]|0;if((fb|0)!=(db|0))c[Tb>>2]=fb+(~((fb+-4-ib|0)>>>2)<<2);An(db)}An(Wb)}c[(c[M>>2]|0)+20>>2]=c[qb>>2];break}case 71:{Wb=qb+-32|0;c[M>>2]=c[Wb>>2];c[M+4>>2]=c[Wb+4>>2];c[M+8>>2]=c[Wb+8>>2];break}case 72:{Wb=lb+-16|0;db=c[qb+-32>>2]|0;ib=c[qb>>2]|0;if(ib){fb=c[qb+4>>2]|0;Tb=(c[qb+8>>2]|0)+1|0;if(!fb){rc=db;uc=Tb}else{c[fb+20>>2]=db;rc=ib;uc=Tb}}else{rc=db;uc=1}c[db>>2]=c[Wb>>2];c[db+4>>2]=c[Wb+4>>2];c[db+8>>2]=c[Wb+8>>2];c[db+12>>2]=c[Wb+12>>2];c[M>>2]=rc;c[Da>>2]=db;c[Ha>>2]=uc;break}case 73:{db=Pc(c[qb>>2]|0)|0;Wb=qb+-32|0;Tb=c[Wb+4>>2]|0;ib=c[db+24>>2]|0;c[ib>>2]=c[Wb>>2];c[ib+4>>2]=Tb;Tb=lb+-32|0;ib=db;c[db>>2]=c[Tb>>2];c[db+4>>2]=c[Tb+4>>2];c[db+8>>2]=c[Tb+8>>2];c[db+12>>2]=c[Tb+12>>2];c[M>>2]=ib;c[Da>>2]=ib;c[Ha>>2]=1;break}case 74:{ib=dd(c[qb>>2]|0)|0;Tb=qb+-32|0;db=c[Tb+4>>2]|0;Wb=c[ib+24>>2]|0;c[Wb>>2]=c[Tb>>2];c[Wb+4>>2]=db;db=lb+-32|0;Wb=ib;c[ib>>2]=c[db>>2];c[ib+4>>2]=c[db+4>>2];c[ib+8>>2]=c[db+8>>2];c[ib+12>>2]=c[db+12>>2];c[M>>2]=Wb;c[Da>>2]=Wb;c[Ha>>2]=1;break}case 75:{c[M>>2]=c[qb>>2];c[M+4>>2]=c[qb+4>>2];c[M+8>>2]=c[qb+8>>2];Wb=(c[qb+4>>2]|0)+24|0;db=qb+-64|0;ib=c[db+4>>2]|0;Tb=c[Wb>>2]|0;c[Tb>>2]=c[db>>2];c[Tb+4>>2]=ib;ib=c[Wb>>2]|0;Wb=ib+8|0;Tb=qb+-32|0;db=c[Tb>>2]|0;fb=c[Wb>>2]|0;jb=fb;Vb=ib+12|0;if(!fb)vc=ib+16|0;else{Zb=c[Vb>>2]|0;if((Zb|0)!=(fb|0))c[Vb>>2]=Zb+(~((Zb+-4-jb|0)>>>2)<<2);An(fb);fb=ib+16|0;c[fb>>2]=0;c[Vb>>2]=0;c[Wb>>2]=0;vc=fb}c[Wb>>2]=c[db>>2];Wb=db+4|0;c[Vb>>2]=c[Wb>>2];Vb=db+8|0;c[vc>>2]=c[Vb>>2];c[Vb>>2]=0;c[Wb>>2]=0;c[db>>2]=0;db=c[Tb>>2]|0;if(db|0){Tb=c[db>>2]|0;Wb=Tb;if(Tb|0){Vb=db+4|0;fb=c[Vb>>2]|0;if((fb|0)!=(Tb|0))c[Vb>>2]=fb+(~((fb+-4-Wb|0)>>>2)<<2);An(Tb)}An(db)}break}case 76:{db=Tn(24)|0;Nc(db,c[qb+-160>>2]|0);Tb=bd(db,c[qb+-32>>2]|0)|0;db=lb+-112|0;Wb=Tb;c[Tb>>2]=c[db>>2];c[Tb+4>>2]=c[db+4>>2];c[Tb+8>>2]=c[db+8>>2];c[Tb+12>>2]=c[db+12>>2];c[M>>2]=Wb;c[Da>>2]=Wb;c[Ha>>2]=1;break}case 77:{Wb=Tn(24)|0;Nc(Wb,c[qb+-32>>2]|0);db=bd(Wb,0)|0;Wb=lb+-48|0;Tb=db;c[db>>2]=c[Wb>>2];c[db+4>>2]=c[Wb+4>>2];c[db+8>>2]=c[Wb+8>>2];c[db+12>>2]=c[Wb+12>>2];c[M>>2]=Tb;c[Da>>2]=Tb;c[Ha>>2]=1;break}case 78:{Tb=Tn(24)|0;Nc(Tb,c[qb+-160>>2]|0);Wb=bd(Tb,c[qb+-32>>2]|0)|0;Tb=lb+-128|0;db=c[qb+-256>>2]|0;if(db){fb=c[qb+-252>>2]|0;Vb=(c[qb+-248>>2]|0)+1|0;if(!fb){wc=Wb;xc=Vb}else{c[fb+20>>2]=Wb;wc=db;xc=Vb}}else{wc=Wb;xc=1}c[Wb>>2]=c[Tb>>2];c[Wb+4>>2]=c[Tb+4>>2];c[Wb+8>>2]=c[Tb+8>>2];c[Wb+12>>2]=c[Tb+12>>2];c[M>>2]=wc;c[Da>>2]=Wb;c[Ha>>2]=xc;break}case 79:{Wb=Tn(24)|0;Nc(Wb,c[qb+-32>>2]|0);Tb=bd(Wb,0)|0;Wb=lb+-64|0;Vb=c[qb+-128>>2]|0;if(Vb){db=c[qb+-124>>2]|0;fb=(c[qb+-120>>2]|0)+1|0;if(!db){Cc=Tb;Dc=fb}else{c[db+20>>2]=Tb;Cc=Vb;Dc=fb}}else{Cc=Tb;Dc=1}c[Tb>>2]=c[Wb>>2];c[Tb+4>>2]=c[Wb+4>>2];c[Tb+8>>2]=c[Wb+8>>2];c[Tb+12>>2]=c[Wb+12>>2];c[M>>2]=Cc;c[Da>>2]=Tb;c[Ha>>2]=Dc;break}case 80:{Tb=Tn(24)|0;Nc(Tb,c[qb+-32>>2]|0);Wb=bd(Tb,c[qb>>2]|0)|0;Tb=lb+-32|0;fb=c[qb+-64>>2]|0;if(fb){Vb=c[qb+-60>>2]|0;db=(c[qb+-56>>2]|0)+1|0;if(!Vb){Ec=Wb;Fc=db}else{c[Vb+20>>2]=Wb;Ec=fb;Fc=db}}else{Ec=Wb;Fc=1}c[Wb>>2]=c[Tb>>2];c[Wb+4>>2]=c[Tb+4>>2];c[Wb+8>>2]=c[Tb+8>>2];c[Wb+12>>2]=c[Tb+12>>2];c[M>>2]=Ec;c[Da>>2]=Wb;c[Ha>>2]=Fc;break}case 81:{Wb=Tn(24)|0;Nc(Wb,c[qb>>2]|0);Tb=bd(Wb,0)|0;Wb=lb+-16|0;db=c[qb+-32>>2]|0;if(db){fb=c[qb+-28>>2]|0;Vb=(c[qb+-24>>2]|0)+1|0;if(!fb){Gc=Tb;Hc=Vb}else{c[fb+20>>2]=Tb;Gc=db;Hc=Vb}}else{Gc=Tb;Hc=1}c[Tb>>2]=c[Wb>>2];c[Tb+4>>2]=c[Wb+4>>2];c[Tb+8>>2]=c[Wb+8>>2];c[Tb+12>>2]=c[Wb+12>>2];c[M>>2]=Gc;c[Da>>2]=Tb;c[Ha>>2]=Hc;break}case 82:{c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;break}case 83:{c[M>>2]=c[qb+-32>>2];Tb=c[qb+-28>>2]|0;c[Tb+20>>2]=c[qb>>2];Wb=c[qb+4>>2]|0;c[Da>>2]=(Wb|0)==0?Tb:Wb;c[Ha>>2]=(c[qb+8>>2]|0)+(c[qb+-24>>2]|0);break}case 84:{c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;break}case 85:{c[M>>2]=c[qb+-32>>2];Wb=c[qb+-28>>2]|0;c[Wb+20>>2]=c[qb>>2];Tb=c[qb+4>>2]|0;c[Da>>2]=(Tb|0)==0?Wb:Tb;c[Ha>>2]=(c[qb+8>>2]|0)+(c[qb+-24>>2]|0);break}case 88:{Tb=Tn(36)|0;zi(Tb);c[M>>2]=Tb;c[Tb>>2]=3;c[Tb+4>>2]=c[qb+-64>>2];c[Tb+32>>2]=c[qb>>2];break}case 89:{Tb=Tn(36)|0;zi(Tb);c[M>>2]=Tb;c[Tb>>2]=1;c[Tb+4>>2]=c[qb+-64>>2];c[Tb+32>>2]=c[qb>>2];break}case 90:{Tb=Tn(36)|0;zi(Tb);c[M>>2]=Tb;c[Tb>>2]=2;Wb=Tb+4|0;Vb=lb+-64|0;c[Wb>>2]=c[Vb>>2];c[Wb+4>>2]=c[Vb+4>>2];c[Wb+8>>2]=c[Vb+8>>2];c[Wb+12>>2]=c[Vb+12>>2];Vb=qb+-96|0;Wb=c[Vb+4>>2]|0;db=Tb+20|0;c[db>>2]=c[Vb>>2];c[db+4>>2]=Wb;c[Tb+28>>2]=c[qb+-64>>2];c[Tb+32>>2]=c[qb>>2];break}case 91:{Tb=Tn(36)|0;zi(Tb);c[M>>2]=Tb;c[Tb>>2]=0;c[Tb+4>>2]=c[qb>>2];c[Tb+32>>2]=0;break}case 92:{Tb=Tn(36)|0;zi(Tb);c[M>>2]=Tb;c[Tb>>2]=4;c[Tb+4>>2]=c[qb+-64>>2];c[Tb+32>>2]=c[qb>>2];break}case 93:{Tb=Tn(36)|0;zi(Tb);c[M>>2]=Tb;c[Tb>>2]=5;Wb=Tb+4|0;db=lb+-64|0;c[Wb>>2]=c[db>>2];c[Wb+4>>2]=c[db+4>>2];c[Wb+8>>2]=c[db+8>>2];c[Wb+12>>2]=c[db+12>>2];db=qb+-96|0;Wb=c[db+4>>2]|0;Vb=Tb+20|0;c[Vb>>2]=c[db>>2];c[Vb+4>>2]=Wb;c[Tb+28>>2]=c[qb+-64>>2];c[Tb+32>>2]=c[qb>>2];break}case 94:{Tb=Tn(128)|0;qd(Tb);c[M>>2]=Tb;Tb=c[qb>>2]|0;if(Tb|0){Wb=Tb;while(1){Tb=Wb;Wb=c[Wb+32>>2]|0;Vb=c[Tb>>2]|0;switch(Vb|0){case 0:{db=Tb+4|0;c[(c[M>>2]|0)+124>>2]=c[db>>2];c[db>>2]=0;break}case 4:case 1:{db=c[M>>2]|0;fb=(Vb|0)==1?db+48|0:db+72|0;c[Q>>2]=c[fb+4>>2];db=c[Tb+4>>2]|0;c[R>>2]=c[db>>2];c[S>>2]=c[db+4>>2];c[k>>2]=c[Q>>2];c[j>>2]=c[R>>2];c[h>>2]=c[S>>2];fe(fb,k,j,h)|0;break}case 5:case 2:{fb=(Vb|0)==2;Vb=c[M>>2]|0;db=fb?Vb+48|0:Vb+72|0;ib=Tb+28|0;jb=db+4|0;Zb=c[jb>>2]|0;if((Zb|0)==(c[db+8>>2]|0))de(db,ib);else{c[Zb>>2]=c[ib>>2];c[jb>>2]=Zb+4}hn(T,c[Tb+20>>2]|0,c[Tb+24>>2]|0);Zb=c[jb>>2]|0;jb=c[db>>2]|0;db=Tb+4|0;c[U>>2]=c[db>>2];c[U+4>>2]=c[db+4>>2];c[U+8>>2]=c[db+8>>2];c[U+12>>2]=c[db+12>>2];db=Tn(40)|0;ib=db+8|0;c[ib>>2]=c[T>>2];c[ib+4>>2]=c[T+4>>2];c[ib+8>>2]=c[T+8>>2];c[T>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;ib=db+20|0;c[ib>>2]=c[U>>2];c[ib+4>>2]=c[U+4>>2];c[ib+8>>2]=c[U+8>>2];c[ib+12>>2]=c[U+12>>2];c[db+36>>2]=(Zb-jb>>2)+-1;ge(fb?Vb+84|0:Vb+104|0,db)|0;jn(T);break}case 3:{db=c[M>>2]|0;Vb=db+60|0;fb=c[Tb+4>>2]|0;jb=c[Vb>>2]|0;Zb=jb;ib=db+64|0;if(!jb)Jc=db+68|0;else{Yb=c[ib>>2]|0;if((Yb|0)!=(jb|0))c[ib>>2]=Yb+(~((Yb+-4-Zb|0)>>>2)<<2);An(jb);jb=db+68|0;c[jb>>2]=0;c[ib>>2]=0;c[Vb>>2]=0;Jc=jb}c[Vb>>2]=c[fb>>2];Vb=fb+4|0;c[ib>>2]=c[Vb>>2];ib=fb+8|0;c[Jc>>2]=c[ib>>2];c[ib>>2]=0;c[Vb>>2]=0;c[fb>>2]=0;break}default:{}}Ai(Tb);An(Tb);if(!Wb)break a}}break}case 95:{Wb=Tn(12)|0;c[Wb>>2]=0;c[Wb+4>>2]=0;c[Wb+8>>2]=0;c[M>>2]=Wb;Ub=c[qb+-32>>2]|0;c[Wb>>2]=Ub;Wb=Ub;a[Wb+8>>0]=1;Ub=Wb+16|0;Wb=qb+-64|0;c[Ub>>2]=c[Wb>>2];c[Ub+4>>2]=c[Wb+4>>2];c[Ub+8>>2]=c[Wb+8>>2];c[Ub+12>>2]=c[Wb+12>>2];c[Ub+16>>2]=c[Wb+16>>2];c[Ub+20>>2]=c[Wb+20>>2];c[Ub+24>>2]=c[Wb+24>>2];c[Ub+28>>2]=c[Wb+28>>2];Wb=qb+-128|0;Ub=c[Wb+4>>2]|0;eb=c[c[M>>2]>>2]|0;c[eb>>2]=c[Wb>>2];c[eb+4>>2]=Ub;Ub=c[M>>2]|0;eb=Ub+4|0;Wb=qb+-96|0;Tb=c[Wb>>2]|0;fb=c[Tb>>2]|0;c[Tb>>2]=0;Vb=c[eb>>2]|0;c[eb>>2]=fb;if(Vb|0){Fd(Vb);An(Vb)}a[Ub+8>>0]=a[Tb+4>>0]|0;Tb=c[Wb>>2]|0;if(Tb|0){Wb=c[Tb>>2]|0;c[Tb>>2]=0;if(Wb|0){Fd(Wb);An(Wb)}An(Tb)}break}case 96:{Tb=Tn(12)|0;c[Tb>>2]=0;c[Tb+4>>2]=0;c[Tb+8>>2]=0;c[M>>2]=Tb;Wb=c[qb+-32>>2]|0;c[Tb>>2]=Wb;Tb=Wb;a[Tb+8>>0]=1;Wb=Tb+16|0;Tb=qb+-64|0;c[Wb>>2]=c[Tb>>2];c[Wb+4>>2]=c[Tb+4>>2];c[Wb+8>>2]=c[Tb+8>>2];c[Wb+12>>2]=c[Tb+12>>2];c[Wb+16>>2]=c[Tb+16>>2];c[Wb+20>>2]=c[Tb+20>>2];c[Wb+24>>2]=c[Tb+24>>2];c[Wb+28>>2]=c[Tb+28>>2];Tb=qb+-96|0;Wb=c[Tb+4>>2]|0;Ub=c[c[M>>2]>>2]|0;c[Ub>>2]=c[Tb>>2];c[Ub+4>>2]=Wb;break}case 97:{Wb=Tn(12)|0;c[Wb>>2]=0;c[Wb+4>>2]=0;c[Wb+8>>2]=0;c[M>>2]=Wb;Ub=c[qb+-32>>2]|0;c[Wb>>2]=Ub;Wb=qb+-96|0;Tb=c[Wb+4>>2]|0;Vb=Ub;c[Vb>>2]=c[Wb>>2];c[Vb+4>>2]=Tb;Tb=c[M>>2]|0;Vb=Tb+4|0;Wb=qb+-64|0;Ub=c[Wb>>2]|0;fb=c[Ub>>2]|0;c[Ub>>2]=0;eb=c[Vb>>2]|0;c[Vb>>2]=fb;if(eb|0){Fd(eb);An(eb)}a[Tb+8>>0]=a[Ub+4>>0]|0;Ub=c[Wb>>2]|0;if(Ub|0){Wb=c[Ub>>2]|0;c[Ub>>2]=0;if(Wb|0){Fd(Wb);An(Wb)}An(Ub)}break}case 98:{Ub=Tn(12)|0;c[Ub>>2]=0;c[Ub+4>>2]=0;c[Ub+8>>2]=0;c[M>>2]=Ub;Wb=c[qb+-32>>2]|0;c[Ub>>2]=Wb;Ub=qb+-64|0;Tb=c[Ub+4>>2]|0;eb=Wb;c[eb>>2]=c[Ub>>2];c[eb+4>>2]=Tb;break}case 99:{Tb=qb+-32|0;c[M>>2]=c[Tb>>2];c[M+4>>2]=c[Tb+4>>2];c[M+8>>2]=c[Tb+8>>2];break}case 101:{Tb=Tn(48)|0;wd(Tb);c[M>>2]=Tb;eb=qb+-96|0;c[Tb>>2]=c[eb>>2];c[Tb+4>>2]=c[eb+4>>2];c[Tb+8>>2]=c[eb+8>>2];c[Tb+12>>2]=c[eb+12>>2];c[Tb+16>>2]=c[eb+16>>2];c[Tb+20>>2]=c[eb+20>>2];c[Tb+24>>2]=c[eb+24>>2];c[Tb+28>>2]=c[eb+28>>2];c[Tb+32>>2]=c[qb+-64>>2];eb=Tb+36|0;Ub=qb+-32|0;Wb=c[Ub>>2]|0;fb=c[eb>>2]|0;Vb=fb;ib=Tb+40|0;if(!fb)Kc=Tb+44|0;else{jb=c[ib>>2]|0;if((jb|0)!=(fb|0))c[ib>>2]=jb+(~((jb+-32-Vb|0)>>>5)<<5);An(fb);fb=Tb+44|0;c[fb>>2]=0;c[ib>>2]=0;c[eb>>2]=0;Kc=fb}c[eb>>2]=c[Wb>>2];eb=Wb+4|0;c[ib>>2]=c[eb>>2];ib=Wb+8|0;c[Kc>>2]=c[ib>>2];c[ib>>2]=0;c[eb>>2]=0;c[Wb>>2]=0;Wb=c[Ub>>2]|0;if(Wb|0){Ub=c[Wb>>2]|0;eb=Ub;if(Ub|0){ib=Wb+4|0;fb=c[ib>>2]|0;if((fb|0)!=(Ub|0))c[ib>>2]=fb+(~((fb+-32-eb|0)>>>5)<<5);An(Ub)}An(Wb)}break}case 102:{Wb=Tn(48)|0;wd(Wb);c[M>>2]=Wb;Ub=lb+-48|0;c[Wb>>2]=c[Ub>>2];c[Wb+4>>2]=c[Ub+4>>2];c[Wb+8>>2]=c[Ub+8>>2];c[Wb+12>>2]=c[Ub+12>>2];c[Wb+16>>2]=0;Ub=Wb+24|0;c[Ub>>2]=0;c[Ub+4>>2]=0;c[Wb+32>>2]=c[qb+-64>>2];Ub=Wb+36|0;eb=qb+-32|0;fb=c[eb>>2]|0;ib=c[Ub>>2]|0;Tb=ib;Vb=Wb+40|0;if(!ib)Lc=Wb+44|0;else{jb=c[Vb>>2]|0;if((jb|0)!=(ib|0))c[Vb>>2]=jb+(~((jb+-32-Tb|0)>>>5)<<5);An(ib);ib=Wb+44|0;c[ib>>2]=0;c[Vb>>2]=0;c[Ub>>2]=0;Lc=ib}c[Ub>>2]=c[fb>>2];Ub=fb+4|0;c[Vb>>2]=c[Ub>>2];Vb=fb+8|0;c[Lc>>2]=c[Vb>>2];c[Vb>>2]=0;c[Ub>>2]=0;c[fb>>2]=0;fb=c[eb>>2]|0;if(fb|0){eb=c[fb>>2]|0;Ub=eb;if(eb|0){Vb=fb+4|0;ib=c[Vb>>2]|0;if((ib|0)!=(eb|0))c[Vb>>2]=ib+(~((ib+-32-Ub|0)>>>5)<<5);An(eb)}An(fb)}break}case 103:{fb=Tn(20)|0;c[fb>>2]=0;c[fb+4>>2]=0;c[fb+8>>2]=0;c[fb+12>>2]=0;c[fb+16>>2]=0;c[M>>2]=fb;eb=c[qb+-32>>2]|0;c[fb>>2]=eb;fb=qb+-96|0;Ub=c[fb+4>>2]|0;ib=eb;c[ib>>2]=c[fb>>2];c[ib+4>>2]=Ub;Ub=c[M>>2]|0;a[Ub+16>>0]=0;ib=Ub+8|0;fb=qb+-64|0;eb=c[fb>>2]|0;Vb=c[eb>>2]|0;c[eb>>2]=0;Wb=c[ib>>2]|0;c[ib>>2]=Vb;if(Wb|0){Fd(Wb);An(Wb)}a[Ub+12>>0]=a[eb+4>>0]|0;eb=c[fb>>2]|0;if(eb|0){fb=c[eb>>2]|0;c[eb>>2]=0;if(fb|0){Fd(fb);An(fb)}An(eb)}break}case 104:{a[h>>0]=a[W>>0]|0;Ic(V,h,0);eb=Wc(V)|0;fb=lb+-128|0;c[eb>>2]=c[fb>>2];c[eb+4>>2]=c[fb+4>>2];c[eb+8>>2]=c[fb+8>>2];c[eb+12>>2]=c[fb+12>>2];fb=Tn(20)|0;c[fb>>2]=0;c[fb+4>>2]=0;c[fb+8>>2]=0;c[fb+12>>2]=0;c[fb+16>>2]=0;c[M>>2]=fb;Ub=Tn(32)|0;ud(Ub);Wb=c[fb>>2]|0;c[fb>>2]=Ub;if(Wb|0){vd(Wb);An(Wb)}Wb=qb+-224|0;Ub=c[Wb+4>>2]|0;fb=c[c[M>>2]>>2]|0;c[fb>>2]=c[Wb>>2];c[fb+4>>2]=Ub;Ub=qb+-64|0;fb=c[Ub>>2]|0;Wb=(c[fb+4>>2]|0)-(c[fb>>2]|0)>>5;fb=c[M>>2]|0;Vb=c[fb>>2]|0;ib=Vb+8|0;c[ib>>2]=Wb;c[ib+4>>2]=0;ib=Vb+16|0;c[ib>>2]=Wb;c[ib+4>>2]=0;a[Vb+24>>0]=1;a[fb+16>>0]=1;Vb=Tn(48)|0;wd(Vb);ib=fb+4|0;fb=c[ib>>2]|0;c[ib>>2]=Vb;if(fb|0){xd(fb);An(fb)}c[(c[(c[M>>2]|0)+4>>2]|0)+32>>2]=eb;eb=c[(c[M>>2]|0)+4>>2]|0;fb=eb+36|0;Vb=c[Ub>>2]|0;ib=c[fb>>2]|0;Wb=ib;Tb=eb+40|0;if(!ib)od=eb+44|0;else{jb=c[Tb>>2]|0;if((jb|0)!=(ib|0))c[Tb>>2]=jb+(~((jb+-32-Wb|0)>>>5)<<5);An(ib);ib=eb+44|0;c[ib>>2]=0;c[Tb>>2]=0;c[fb>>2]=0;od=ib}c[fb>>2]=c[Vb>>2];fb=Vb+4|0;c[Tb>>2]=c[fb>>2];Tb=Vb+8|0;c[od>>2]=c[Tb>>2];c[Tb>>2]=0;c[fb>>2]=0;c[Vb>>2]=0;Vb=c[Ub>>2]|0;if(Vb|0){Ub=c[Vb>>2]|0;fb=Ub;if(Ub|0){Tb=Vb+4|0;ib=c[Tb>>2]|0;if((ib|0)!=(Ub|0))c[Tb>>2]=ib+(~((ib+-32-fb|0)>>>5)<<5);An(Ub)}An(Vb)}Vb=c[M>>2]|0;Ub=Vb+8|0;fb=qb+-192|0;ib=c[fb>>2]|0;Tb=c[ib>>2]|0;c[ib>>2]=0;eb=c[Ub>>2]|0;c[Ub>>2]=Tb;if(eb|0){Fd(eb);An(eb)}a[Vb+12>>0]=a[ib+4>>0]|0;ib=c[fb>>2]|0;if(ib|0){fb=c[ib>>2]|0;c[ib>>2]=0;if(fb|0){Fd(fb);An(fb)}An(ib)}break}case 105:{ib=Tn(48)|0;yd(ib);c[M>>2]=ib;fb=qb+-96|0;c[ib>>2]=c[fb>>2];c[ib+4>>2]=c[fb+4>>2];c[ib+8>>2]=c[fb+8>>2];c[ib+12>>2]=c[fb+12>>2];c[ib+16>>2]=c[fb+16>>2];c[ib+20>>2]=c[fb+20>>2];c[ib+24>>2]=c[fb+24>>2];c[ib+28>>2]=c[fb+28>>2];c[ib+32>>2]=c[qb+-64>>2];fb=qb+-32|0;ce(fb,ib+36|0,ib+40|0);yi(fb);break}case 106:{fb=Tn(48)|0;yd(fb);c[M>>2]=fb;ib=lb+-48|0;c[fb>>2]=c[ib>>2];c[fb+4>>2]=c[ib+4>>2];c[fb+8>>2]=c[ib+8>>2];c[fb+12>>2]=c[ib+12>>2];c[fb+16>>2]=0;ib=fb+24|0;c[ib>>2]=0;c[ib+4>>2]=0;c[fb+32>>2]=c[qb+-64>>2];ib=qb+-32|0;ce(ib,fb+36|0,fb+40|0);yi(ib);break}case 107:{ib=Tn(20)|0;c[ib>>2]=0;c[ib+4>>2]=0;c[ib+8>>2]=0;c[ib+12>>2]=0;c[ib+16>>2]=0;c[M>>2]=ib;fb=c[qb+-32>>2]|0;c[ib>>2]=fb;ib=qb+-96|0;Vb=c[ib+4>>2]|0;eb=fb;c[eb>>2]=c[ib>>2];c[eb+4>>2]=Vb;Vb=c[M>>2]|0;a[Vb+16>>0]=0;eb=Vb+8|0;ib=qb+-64|0;fb=c[ib>>2]|0;Tb=c[fb>>2]|0;c[fb>>2]=0;Ub=c[eb>>2]|0;c[eb>>2]=Tb;if(Ub|0){Fd(Ub);An(Ub)}a[Vb+12>>0]=a[fb+4>>0]|0;fb=c[ib>>2]|0;if(fb|0){ib=c[fb>>2]|0;c[fb>>2]=0;if(ib|0){Fd(ib);An(ib)}An(fb)}break}case 108:{a[h>>0]=a[Y>>0]|0;Ic(X,h,0);fb=Wc(X)|0;ib=lb+-112|0;c[fb>>2]=c[ib>>2];c[fb+4>>2]=c[ib+4>>2];c[fb+8>>2]=c[ib+8>>2];c[fb+12>>2]=c[ib+12>>2];ib=Tn(20)|0;Vb=ib+4|0;c[ib>>2]=0;c[ib+4>>2]=0;c[ib+8>>2]=0;c[ib+12>>2]=0;c[ib+16>>2]=0;c[M>>2]=ib;a[ib+16>>0]=1;ib=Tn(48)|0;yd(ib);Ub=c[Vb>>2]|0;c[Vb>>2]=ib;if(Ub|0){zd(Ub);An(Ub)}c[(c[(c[M>>2]|0)+4>>2]|0)+32>>2]=fb;fb=qb+-64|0;Ub=c[(c[M>>2]|0)+4>>2]|0;ce(fb,Ub+36|0,Ub+40|0);yi(fb);fb=c[M>>2]|0;Ub=c[(c[fb+4>>2]|0)+40>>2]|0;ib=Tn(32)|0;Ad(ib);Vb=(Ub+65535|0)>>>16;Ub=c[fb>>2]|0;c[fb>>2]=ib;if(Ub|0){Bd(Ub);An(Ub)}Ub=qb+-192|0;ib=c[Ub+4>>2]|0;fb=c[c[M>>2]>>2]|0;c[fb>>2]=c[Ub>>2];c[fb+4>>2]=ib;ib=c[M>>2]|0;fb=c[ib>>2]|0;Ub=fb+8|0;c[Ub>>2]=Vb;c[Ub+4>>2]=0;Ub=fb+16|0;c[Ub>>2]=Vb;c[Ub+4>>2]=0;a[fb+24>>0]=1;fb=ib+8|0;Ub=qb+-160|0;Vb=c[Ub>>2]|0;Tb=c[Vb>>2]|0;c[Vb>>2]=0;eb=c[fb>>2]|0;c[fb>>2]=Tb;if(eb|0){Fd(eb);An(eb)}a[ib+12>>0]=a[Vb+4>>0]|0;Vb=c[Ub>>2]|0;if(Vb|0){Ub=c[Vb>>2]|0;c[Vb>>2]=0;if(Ub|0){Fd(Ub);An(Ub)}An(Vb)}break}case 109:{a[h>>0]=a[_>>0]|0;Ic(Z,h,0);Vb=Wc(Z)|0;Ub=lb+-96|0;c[Vb>>2]=c[Ub>>2];c[Vb+4>>2]=c[Ub+4>>2];c[Vb+8>>2]=c[Ub+8>>2];c[Vb+12>>2]=c[Ub+12>>2];Ub=Tn(20)|0;ib=Ub+4|0;c[Ub>>2]=0;c[Ub+4>>2]=0;c[Ub+8>>2]=0;c[Ub+12>>2]=0;c[Ub+16>>2]=0;c[M>>2]=Ub;a[Ub+16>>0]=1;Ub=Tn(48)|0;yd(Ub);eb=c[ib>>2]|0;c[ib>>2]=Ub;if(eb|0){zd(eb);An(eb)}c[(c[(c[M>>2]|0)+4>>2]|0)+32>>2]=Vb;Vb=qb+-64|0;eb=c[(c[M>>2]|0)+4>>2]|0;ce(Vb,eb+36|0,eb+40|0);yi(Vb);Vb=c[M>>2]|0;eb=c[(c[Vb+4>>2]|0)+40>>2]|0;Ub=Tn(32)|0;Ad(Ub);ib=(eb+65535|0)>>>16;eb=c[Vb>>2]|0;c[Vb>>2]=Ub;if(eb|0){Bd(eb);An(eb)}eb=qb+-160|0;Ub=c[eb+4>>2]|0;Vb=c[c[M>>2]>>2]|0;c[Vb>>2]=c[eb>>2];c[Vb+4>>2]=Ub;Ub=c[M>>2]|0;Vb=c[Ub>>2]|0;eb=Vb+8|0;c[eb>>2]=ib;c[eb+4>>2]=0;eb=Vb+16|0;c[eb>>2]=ib;c[eb+4>>2]=0;a[Vb+24>>0]=1;a[Ub+12>>0]=0;break}case 110:{Ub=Tn(12)|0;c[Ub>>2]=0;c[Ub+4>>2]=0;c[Ub+8>>2]=0;c[M>>2]=Ub;Vb=c[qb+-64>>2]|0;c[Ub>>2]=Vb;Ub=qb+-128|0;eb=c[Ub+4>>2]|0;ib=Vb;c[ib>>2]=c[Ub>>2];c[ib+4>>2]=eb;c[(c[c[M>>2]>>2]|0)+16>>2]=c[qb+-32>>2];eb=c[M>>2]|0;ib=eb+4|0;Ub=qb+-96|0;Vb=c[Ub>>2]|0;Tb=c[Vb>>2]|0;c[Vb>>2]=0;fb=c[ib>>2]|0;c[ib>>2]=Tb;if(fb|0){Fd(fb);An(fb)}a[eb+8>>0]=a[Vb+4>>0]|0;Vb=c[Ub>>2]|0;if(Vb|0){Ub=c[Vb>>2]|0;c[Vb>>2]=0;if(Ub|0){Fd(Ub);An(Ub)}An(Vb)}break}case 111:{Vb=Tn(12)|0;c[Vb>>2]=0;c[Vb+4>>2]=0;c[Vb+8>>2]=0;c[M>>2]=Vb;Ub=c[qb+-64>>2]|0;c[Vb>>2]=Ub;Vb=qb+-96|0;eb=c[Vb+4>>2]|0;fb=Ub;c[fb>>2]=c[Vb>>2];c[fb+4>>2]=eb;c[(c[c[M>>2]>>2]|0)+16>>2]=c[qb+-32>>2];a[(c[M>>2]|0)+8>>0]=0;break}case 112:{eb=Tn(24)|0;Cd(eb);c[M>>2]=eb;c[eb+16>>2]=0;eb=Tn(128)|0;qd(eb);c[(c[M>>2]|0)+20>>2]=eb;eb=qb+-64|0;fb=c[eb+4>>2]|0;Vb=c[(c[M>>2]|0)+20>>2]|0;c[Vb>>2]=c[eb>>2];c[Vb+4>>2]=fb;fb=c[(c[M>>2]|0)+20>>2]|0;a[fb+8>>0]=1;Vb=fb+16|0;fb=qb+-32|0;c[Vb>>2]=c[fb>>2];c[Vb+4>>2]=c[fb+4>>2];c[Vb+8>>2]=c[fb+8>>2];c[Vb+12>>2]=c[fb+12>>2];c[Vb+16>>2]=c[fb+16>>2];c[Vb+20>>2]=c[fb+20>>2];c[Vb+24>>2]=c[fb+24>>2];c[Vb+28>>2]=c[fb+28>>2];break}case 113:{fb=Tn(24)|0;Cd(fb);c[M>>2]=fb;c[fb+16>>2]=0;fb=Tn(128)|0;qd(fb);c[(c[M>>2]|0)+20>>2]=fb;fb=qb+-64|0;Vb=c[fb+4>>2]|0;eb=c[(c[M>>2]|0)+20>>2]|0;c[eb>>2]=c[fb>>2];c[eb+4>>2]=Vb;Vb=c[(c[M>>2]|0)+20>>2]|0;eb=Vb+48|0;fb=qb+-32|0;Ub=c[fb>>2]|0;Tb=c[eb>>2]|0;ib=Tb;Wb=Vb+52|0;if(!Tb)pd=Vb+56|0;else{jb=c[Wb>>2]|0;if((jb|0)!=(Tb|0))c[Wb>>2]=jb+(~((jb+-4-ib|0)>>>2)<<2);An(Tb);Tb=Vb+56|0;c[Tb>>2]=0;c[Wb>>2]=0;c[eb>>2]=0;pd=Tb}c[eb>>2]=c[Ub>>2];eb=Ub+4|0;c[Wb>>2]=c[eb>>2];Wb=Ub+8|0;c[pd>>2]=c[Wb>>2];c[Wb>>2]=0;c[eb>>2]=0;c[Ub>>2]=0;eb=Vb+60|0;Wb=Ub+12|0;Tb=c[eb>>2]|0;ib=Tb;jb=Vb+64|0;if(!Tb)Dd=Vb+68|0;else{db=c[jb>>2]|0;if((db|0)!=(Tb|0))c[jb>>2]=db+(~((db+-4-ib|0)>>>2)<<2);An(Tb);Tb=Vb+68|0;c[Tb>>2]=0;c[jb>>2]=0;c[eb>>2]=0;Dd=Tb}c[eb>>2]=c[Wb>>2];eb=Ub+16|0;c[jb>>2]=c[eb>>2];jb=Ub+20|0;c[Dd>>2]=c[jb>>2];c[jb>>2]=0;c[eb>>2]=0;c[Wb>>2]=0;Wb=c[fb>>2]|0;if(Wb|0){fb=c[Wb+12>>2]|0;eb=fb;if(fb|0){jb=Wb+16|0;Ub=c[jb>>2]|0;if((Ub|0)!=(fb|0))c[jb>>2]=Ub+(~((Ub+-4-eb|0)>>>2)<<2);An(fb)}fb=c[Wb>>2]|0;eb=fb;if(fb|0){Ub=Wb+4|0;jb=c[Ub>>2]|0;if((jb|0)!=(fb|0))c[Ub>>2]=jb+(~((jb+-4-eb|0)>>>2)<<2);An(fb)}An(Wb)}break}case 114:{Wb=Tn(24)|0;Cd(Wb);c[M>>2]=Wb;c[Wb+16>>2]=1;fb=c[qb+-32>>2]|0;c[Wb+20>>2]=fb;Wb=qb+-64|0;eb=c[Wb+4>>2]|0;jb=fb;c[jb>>2]=c[Wb>>2];c[jb+4>>2]=eb;break}case 115:{eb=Tn(24)|0;Cd(eb);c[M>>2]=eb;c[eb+16>>2]=2;jb=c[qb+-32>>2]|0;c[eb+20>>2]=jb;eb=qb+-64|0;Wb=c[eb+4>>2]|0;fb=jb;c[fb>>2]=c[eb>>2];c[fb+4>>2]=Wb;break}case 116:{Wb=Tn(24)|0;Cd(Wb);c[M>>2]=Wb;c[Wb+16>>2]=3;fb=c[qb+-32>>2]|0;c[Wb+20>>2]=fb;Wb=qb+-64|0;eb=c[Wb+4>>2]|0;jb=fb;c[jb>>2]=c[Wb>>2];c[jb+4>>2]=eb;break}case 117:{eb=c[qb+-32>>2]|0;c[M>>2]=eb;jb=qb+-96|0;Wb=c[jb+4>>2]|0;fb=eb;c[fb>>2]=c[jb>>2];c[fb+4>>2]=Wb;Wb=qb+-64|0;fb=c[Wb+4>>2]|0;jb=(c[M>>2]|0)+8|0;c[jb>>2]=c[Wb>>2];c[jb+4>>2]=fb;break}case 118:{fb=c[qb+-64>>2]|0;c[M>>2]=fb;c[fb+16>>2]=0;fb=Tn(128)|0;qd(fb);c[(c[M>>2]|0)+20>>2]=fb;fb=qb+-96|0;jb=c[fb+4>>2]|0;Wb=c[(c[M>>2]|0)+20>>2]|0;c[Wb>>2]=c[fb>>2];c[Wb+4>>2]=jb;jb=c[(c[M>>2]|0)+20>>2]|0;a[jb+8>>0]=1;Wb=jb+16|0;jb=qb+-32|0;c[Wb>>2]=c[jb>>2];c[Wb+4>>2]=c[jb+4>>2];c[Wb+8>>2]=c[jb+8>>2];c[Wb+12>>2]=c[jb+12>>2];c[Wb+16>>2]=c[jb+16>>2];c[Wb+20>>2]=c[jb+20>>2];c[Wb+24>>2]=c[jb+24>>2];c[Wb+28>>2]=c[jb+28>>2];break}case 119:{jb=c[qb+-64>>2]|0;c[M>>2]=jb;c[jb+16>>2]=0;jb=Tn(128)|0;qd(jb);c[(c[M>>2]|0)+20>>2]=jb;jb=qb+-96|0;Wb=c[jb+4>>2]|0;fb=c[(c[M>>2]|0)+20>>2]|0;c[fb>>2]=c[jb>>2];c[fb+4>>2]=Wb;Wb=c[(c[M>>2]|0)+20>>2]|0;fb=Wb+48|0;jb=qb+-32|0;eb=c[jb>>2]|0;Ub=c[fb>>2]|0;Tb=Ub;Vb=Wb+52|0;if(!Ub)Gd=Wb+56|0;else{ib=c[Vb>>2]|0;if((ib|0)!=(Ub|0))c[Vb>>2]=ib+(~((ib+-4-Tb|0)>>>2)<<2);An(Ub);Ub=Wb+56|0;c[Ub>>2]=0;c[Vb>>2]=0;c[fb>>2]=0;Gd=Ub}c[fb>>2]=c[eb>>2];fb=eb+4|0;c[Vb>>2]=c[fb>>2];Vb=eb+8|0;c[Gd>>2]=c[Vb>>2];c[Vb>>2]=0;c[fb>>2]=0;c[eb>>2]=0;fb=Wb+60|0;Vb=eb+12|0;Ub=c[fb>>2]|0;Tb=Ub;ib=Wb+64|0;if(!Ub)Id=Wb+68|0;else{db=c[ib>>2]|0;if((db|0)!=(Ub|0))c[ib>>2]=db+(~((db+-4-Tb|0)>>>2)<<2);An(Ub);Ub=Wb+68|0;c[Ub>>2]=0;c[ib>>2]=0;c[fb>>2]=0;Id=Ub}c[fb>>2]=c[Vb>>2];fb=eb+16|0;c[ib>>2]=c[fb>>2];ib=eb+20|0;c[Id>>2]=c[ib>>2];c[ib>>2]=0;c[fb>>2]=0;c[Vb>>2]=0;Vb=c[jb>>2]|0;if(Vb|0){jb=c[Vb+12>>2]|0;fb=jb;if(jb|0){ib=Vb+16|0;eb=c[ib>>2]|0;if((eb|0)!=(jb|0))c[ib>>2]=eb+(~((eb+-4-fb|0)>>>2)<<2);An(jb)}jb=c[Vb>>2]|0;fb=jb;if(jb|0){eb=Vb+4|0;ib=c[eb>>2]|0;if((ib|0)!=(jb|0))c[eb>>2]=ib+(~((ib+-4-fb|0)>>>2)<<2);An(jb)}An(Vb)}break}case 120:{Vb=c[qb+-64>>2]|0;c[M>>2]=Vb;c[Vb+16>>2]=1;c[Vb+20>>2]=c[qb+-32>>2];Vb=qb+-96|0;jb=c[Vb+4>>2]|0;fb=c[(c[M>>2]|0)+20>>2]|0;c[fb>>2]=c[Vb>>2];c[fb+4>>2]=jb;break}case 121:{jb=c[qb+-64>>2]|0;c[M>>2]=jb;c[jb+16>>2]=2;c[jb+20>>2]=c[qb+-32>>2];jb=qb+-96|0;fb=c[jb+4>>2]|0;Vb=c[(c[M>>2]|0)+20>>2]|0;c[Vb>>2]=c[jb>>2];c[Vb+4>>2]=fb;break}case 122:{fb=c[qb+-64>>2]|0;c[M>>2]=fb;c[fb+16>>2]=3;c[fb+20>>2]=c[qb+-32>>2];fb=qb+-96|0;Vb=c[fb+4>>2]|0;jb=c[(c[M>>2]|0)+20>>2]|0;c[jb>>2]=c[fb>>2];c[jb+4>>2]=Vb;break}case 123:{Vb=Tn(24)|0;Cd(Vb);c[M>>2]=Vb;jb=qb+-64|0;fb=c[jb+4>>2]|0;ib=Vb;c[ib>>2]=c[jb>>2];c[ib+4>>2]=fb;fb=qb+-32|0;ib=c[fb+4>>2]|0;jb=Vb+8|0;c[jb>>2]=c[fb>>2];c[jb+4>>2]=ib;break}case 124:{ib=Tn(48)|0;Ed(ib);c[M>>2]=ib;c[ib+8>>2]=0;jb=ib+16|0;ib=qb+-32|0;c[jb>>2]=c[ib>>2];c[jb+4>>2]=c[ib+4>>2];c[jb+8>>2]=c[ib+8>>2];c[jb+12>>2]=c[ib+12>>2];c[jb+16>>2]=c[ib+16>>2];c[jb+20>>2]=c[ib+20>>2];c[jb+24>>2]=c[ib+24>>2];c[jb+28>>2]=c[ib+28>>2];break}case 125:{ib=Tn(48)|0;Ed(ib);c[M>>2]=ib;c[ib+8>>2]=1;jb=ib+16|0;ib=qb+-32|0;c[jb>>2]=c[ib>>2];c[jb+4>>2]=c[ib+4>>2];c[jb+8>>2]=c[ib+8>>2];c[jb+12>>2]=c[ib+12>>2];c[jb+16>>2]=c[ib+16>>2];c[jb+20>>2]=c[ib+20>>2];c[jb+24>>2]=c[ib+24>>2];c[jb+28>>2]=c[ib+28>>2];break}case 126:{ib=Tn(48)|0;Ed(ib);c[M>>2]=ib;c[ib+8>>2]=2;jb=ib+16|0;ib=qb+-32|0;c[jb>>2]=c[ib>>2];c[jb+4>>2]=c[ib+4>>2];c[jb+8>>2]=c[ib+8>>2];c[jb+12>>2]=c[ib+12>>2];c[jb+16>>2]=c[ib+16>>2];c[jb+20>>2]=c[ib+20>>2];c[jb+24>>2]=c[ib+24>>2];c[jb+28>>2]=c[ib+28>>2];break}case 127:{ib=Tn(48)|0;Ed(ib);c[M>>2]=ib;c[ib+8>>2]=3;jb=ib+16|0;ib=qb+-32|0;c[jb>>2]=c[ib>>2];c[jb+4>>2]=c[ib+4>>2];c[jb+8>>2]=c[ib+8>>2];c[jb+12>>2]=c[ib+12>>2];c[jb+16>>2]=c[ib+16>>2];c[jb+20>>2]=c[ib+20>>2];c[jb+24>>2]=c[ib+24>>2];c[jb+28>>2]=c[ib+28>>2];break}case 128:{ib=c[qb+-32>>2]|0;c[M>>2]=ib;jb=qb+-64|0;fb=c[jb+4>>2]|0;Vb=ib;c[Vb>>2]=c[jb>>2];c[Vb+4>>2]=fb;break}case 129:{fb=Tn(8)|0;Vb=fb;c[Vb>>2]=0;c[Vb+4>>2]=0;c[fb>>2]=0;c[M>>2]=fb;a[fb+4>>0]=0;break}case 131:{fb=Tn(8)|0;Vb=fb;c[Vb>>2]=0;c[Vb+4>>2]=0;c[fb>>2]=0;c[M>>2]=fb;a[fb+4>>0]=1;Vb=Tn(48)|0;Ed(Vb);jb=c[fb>>2]|0;c[fb>>2]=Vb;if(jb|0){Fd(jb);An(jb)}jb=qb+-32|0;Vb=c[jb+4>>2]|0;fb=c[c[M>>2]>>2]|0;c[fb>>2]=c[jb>>2];c[fb+4>>2]=Vb;break}case 132:{Vb=Tn(32)|0;nd(Vb);c[M>>2]=Vb;fb=Vb+8|0;jb=qb+-32|0;ib=c[jb>>2]|0;eb=c[fb>>2]|0;Ub=eb;Wb=Vb+12|0;if(!eb)Nd=Vb+16|0;else{Tb=c[Wb>>2]|0;if((Tb|0)!=(eb|0))c[Wb>>2]=Tb+(~((Tb+-4-Ub|0)>>>2)<<2);An(eb);eb=Vb+16|0;c[eb>>2]=0;c[Wb>>2]=0;c[fb>>2]=0;Nd=eb}c[fb>>2]=c[ib>>2];fb=ib+4|0;c[Wb>>2]=c[fb>>2];Wb=ib+8|0;c[Nd>>2]=c[Wb>>2];c[Wb>>2]=0;c[fb>>2]=0;c[ib>>2]=0;fb=Vb+20|0;Wb=ib+12|0;eb=c[fb>>2]|0;Ub=eb;Tb=Vb+24|0;if(!eb)Rd=Vb+28|0;else{db=c[Tb>>2]|0;if((db|0)!=(eb|0))c[Tb>>2]=db+(~((db+-4-Ub|0)>>>2)<<2);An(eb);eb=Vb+28|0;c[eb>>2]=0;c[Tb>>2]=0;c[fb>>2]=0;Rd=eb}c[fb>>2]=c[Wb>>2];fb=ib+16|0;c[Tb>>2]=c[fb>>2];Tb=ib+20|0;c[Rd>>2]=c[Tb>>2];c[Tb>>2]=0;c[fb>>2]=0;c[Wb>>2]=0;Wb=c[jb>>2]|0;if(Wb|0){jb=c[Wb+12>>2]|0;fb=jb;if(jb|0){Tb=Wb+16|0;ib=c[Tb>>2]|0;if((ib|0)!=(jb|0))c[Tb>>2]=ib+(~((ib+-4-fb|0)>>>2)<<2);An(jb)}jb=c[Wb>>2]|0;fb=jb;if(jb|0){ib=Wb+4|0;Tb=c[ib>>2]|0;if((Tb|0)!=(jb|0))c[ib>>2]=Tb+(~((Tb+-4-fb|0)>>>2)<<2);An(jb)}An(Wb)}break}case 133:{Wb=Tn(32)|0;nd(Wb);c[M>>2]=Wb;jb=qb+-64|0;fb=c[jb+4>>2]|0;Tb=Wb;c[Tb>>2]=c[jb>>2];c[Tb+4>>2]=fb;fb=Wb+8|0;Tb=qb+-32|0;jb=c[Tb>>2]|0;ib=c[fb>>2]|0;eb=ib;Vb=Wb+12|0;if(!ib)Sd=Wb+16|0;else{Ub=c[Vb>>2]|0;if((Ub|0)!=(ib|0))c[Vb>>2]=Ub+(~((Ub+-4-eb|0)>>>2)<<2);An(ib);ib=Wb+16|0;c[ib>>2]=0;c[Vb>>2]=0;c[fb>>2]=0;Sd=ib}c[fb>>2]=c[jb>>2];fb=jb+4|0;c[Vb>>2]=c[fb>>2];Vb=jb+8|0;c[Sd>>2]=c[Vb>>2];c[Vb>>2]=0;c[fb>>2]=0;c[jb>>2]=0;fb=Wb+20|0;Vb=jb+12|0;ib=c[fb>>2]|0;eb=ib;Ub=Wb+24|0;if(!ib)Td=Wb+28|0;else{db=c[Ub>>2]|0;if((db|0)!=(ib|0))c[Ub>>2]=db+(~((db+-4-eb|0)>>>2)<<2);An(ib);ib=Wb+28|0;c[ib>>2]=0;c[Ub>>2]=0;c[fb>>2]=0;Td=ib}c[fb>>2]=c[Vb>>2];fb=jb+16|0;c[Ub>>2]=c[fb>>2];Ub=jb+20|0;c[Td>>2]=c[Ub>>2];c[Ub>>2]=0;c[fb>>2]=0;c[Vb>>2]=0;Vb=c[Tb>>2]|0;if(Vb|0){Tb=c[Vb+12>>2]|0;fb=Tb;if(Tb|0){Ub=Vb+16|0;jb=c[Ub>>2]|0;if((jb|0)!=(Tb|0))c[Ub>>2]=jb+(~((jb+-4-fb|0)>>>2)<<2);An(Tb)}Tb=c[Vb>>2]|0;fb=Tb;if(Tb|0){jb=Vb+4|0;Ub=c[jb>>2]|0;if((Ub|0)!=(Tb|0))c[jb>>2]=Ub+(~((Ub+-4-fb|0)>>>2)<<2);An(Tb)}An(Vb)}break}case 134:{Vb=qb+-32|0;c[M>>2]=c[Vb>>2];c[M+4>>2]=c[Vb+4>>2];c[M+8>>2]=c[Vb+8>>2];c[M+12>>2]=c[Vb+12>>2];c[M+16>>2]=c[Vb+16>>2];c[M+20>>2]=c[Vb+20>>2];c[M+24>>2]=c[Vb+24>>2];c[M+28>>2]=c[Vb+28>>2];break}case 135:{Vb=Tn(280)|0;Hd(Vb);c[M>>2]=Vb;break}case 136:{Vb=c[qb+-32>>2]|0;c[M>>2]=Vb;Tb=yc(Vb)|0;c[Tb>>2]=c[lb>>2];c[Tb+4>>2]=c[lb+4>>2];c[Tb+8>>2]=c[lb+8>>2];c[Tb+12>>2]=c[lb+12>>2];c[Tb+16>>2]=4;Vb=c[qb>>2]|0;fb=Tb+24|0;c[fb>>2]=Vb;Tb=c[M>>2]|0;Ub=Tb+100|0;jb=c[Ub>>2]|0;if((jb|0)==(c[Tb+104>>2]|0))Bc(Tb+96|0,fb);else{c[jb>>2]=Vb;c[Ub>>2]=(c[Ub>>2]|0)+4}Ub=c[qb>>2]|0;Vb=c[Ub>>2]|0;if(Vb|0){jb=c[M>>2]|0;hn($,Vb,c[Ub+4>>2]|0);Ub=c[M>>2]|0;Vb=c[Ub+100>>2]|0;fb=c[Ub+96>>2]|0;c[aa>>2]=c[lb>>2];c[aa+4>>2]=c[lb+4>>2];c[aa+8>>2]=c[lb+8>>2];c[aa+12>>2]=c[lb+12>>2];Ub=Tn(40)|0;Tb=Ub+8|0;c[Tb>>2]=c[$>>2];c[Tb+4>>2]=c[$+4>>2];c[Tb+8>>2]=c[$+8>>2];c[$>>2]=0;c[$+4>>2]=0;c[$+8>>2]=0;Tb=Ub+20|0;c[Tb>>2]=c[aa>>2];c[Tb+4>>2]=c[aa+4>>2];c[Tb+8>>2]=c[aa+8>>2];c[Tb+12>>2]=c[aa+12>>2];c[Ub+36>>2]=(Vb-fb>>2)+-1;ge(jb+220|0,Ub)|0;jn($)}break}case 137:{Ub=c[qb+-32>>2]|0;c[M>>2]=Ub;jb=yc(Ub)|0;c[jb>>2]=c[lb>>2];c[jb+4>>2]=c[lb+4>>2];c[jb+8>>2]=c[lb+8>>2];c[jb+12>>2]=c[lb+12>>2];c[jb+16>>2]=1;Ub=c[qb>>2]|0;fb=c[Ub>>2]|0;c[Ub>>2]=0;Ub=jb+24|0;c[Ub>>2]=fb;jb=c[M>>2]|0;Vb=jb+64|0;Tb=c[Vb>>2]|0;if((Tb|0)==(c[jb+68>>2]|0))je(jb+60|0,Ub);else{c[Tb>>2]=fb;c[Vb>>2]=(c[Vb>>2]|0)+4}Vb=c[Ub>>2]|0;Ub=c[Vb>>2]|0;if(Ub|0){fb=c[M>>2]|0;hn(ba,Ub,c[Vb+4>>2]|0);Vb=c[M>>2]|0;Ub=c[Vb+64>>2]|0;Tb=c[Vb+60>>2]|0;c[ca>>2]=c[lb>>2];c[ca+4>>2]=c[lb+4>>2];c[ca+8>>2]=c[lb+8>>2];c[ca+12>>2]=c[lb+12>>2];Vb=Tn(40)|0;jb=Vb+8|0;c[jb>>2]=c[ba>>2];c[jb+4>>2]=c[ba+4>>2];c[jb+8>>2]=c[ba+8>>2];c[ba>>2]=0;c[ba+4>>2]=0;c[ba+8>>2]=0;jb=Vb+20|0;c[jb>>2]=c[ca>>2];c[jb+4>>2]=c[ca+4>>2];c[jb+8>>2]=c[ca+8>>2];c[jb+12>>2]=c[ca+12>>2];c[Vb+36>>2]=(Ub-Tb>>2)+-1;ge(fb+180|0,Vb)|0;jn(ba)}Vb=c[qb>>2]|0;if(!(a[Vb+8>>0]|0))Vd=Vb;else{Vb=yc(c[M>>2]|0)|0;c[Vb>>2]=c[lb>>2];c[Vb+4>>2]=c[lb+4>>2];c[Vb+8>>2]=c[lb+8>>2];c[Vb+12>>2]=c[lb+12>>2];c[Vb+16>>2]=3;fb=(c[qb>>2]|0)+4|0;Tb=c[fb>>2]|0;c[fb>>2]=0;fb=Vb+24|0;c[fb>>2]=Tb;c[Tb+8>>2]=3;Ub=Tb+16|0;c[Ub>>2]=c[lb>>2];c[Ub+4>>2]=c[lb+4>>2];c[Ub+8>>2]=c[lb+8>>2];c[Ub+12>>2]=c[lb+12>>2];Ub=c[M>>2]|0;Tb=c[fb>>2]|0;jb=Tb+40|0;c[jb>>2]=((c[Ub+64>>2]|0)-(c[Ub+60>>2]|0)>>2)+-1;c[jb+4>>2]=0;jb=Ub+88|0;ib=c[jb>>2]|0;if((ib|0)==(c[Ub+92>>2]|0))ke(Ub+84|0,fb);else{c[ib>>2]=Tb;c[jb>>2]=(c[jb>>2]|0)+4}jb=c[fb>>2]|0;fb=c[jb>>2]|0;if(fb|0){Tb=c[M>>2]|0;hn(da,fb,c[jb+4>>2]|0);jb=c[M>>2]|0;fb=c[jb+88>>2]|0;ib=c[jb+84>>2]|0;c[ea>>2]=c[Vb>>2];c[ea+4>>2]=c[Vb+4>>2];c[ea+8>>2]=c[Vb+8>>2];c[ea+12>>2]=c[Vb+12>>2];Vb=Tn(40)|0;jb=Vb+8|0;c[jb>>2]=c[da>>2];c[jb+4>>2]=c[da+4>>2];c[jb+8>>2]=c[da+8>>2];c[da>>2]=0;c[da+4>>2]=0;c[da+8>>2]=0;jb=Vb+20|0;c[jb>>2]=c[ea>>2];c[jb+4>>2]=c[ea+4>>2];c[jb+8>>2]=c[ea+8>>2];c[jb+12>>2]=c[ea+12>>2];c[Vb+36>>2]=(fb-ib>>2)+-1;ge(Tb+200|0,Vb)|0;jn(da)}Vd=c[qb>>2]|0}if(Vd|0){Vb=Vd+4|0;Tb=c[Vb>>2]|0;c[Vb>>2]=0;if(Tb|0){Fd(Tb);An(Tb)}Tb=c[Vd>>2]|0;c[Vd>>2]=0;if(Tb|0){td(Tb);An(Tb)}An(Vd)}break}case 138:{Tb=c[qb+-32>>2]|0;c[M>>2]=Tb;Vb=yc(Tb)|0;c[Vb>>2]=c[lb>>2];c[Vb+4>>2]=c[lb+4>>2];c[Vb+8>>2]=c[lb+8>>2];c[Vb+12>>2]=c[lb+12>>2];c[Vb+16>>2]=5;Tb=c[qb>>2]|0;ib=c[Tb>>2]|0;c[Tb>>2]=0;Tb=Vb+24|0;c[Tb>>2]=ib;Vb=c[M>>2]|0;fb=Vb+112|0;jb=c[fb>>2]|0;if((jb|0)==(c[Vb+116>>2]|0))le(Vb+108|0,Tb);else{c[jb>>2]=ib;c[fb>>2]=(c[fb>>2]|0)+4}fb=c[Tb>>2]|0;Tb=c[fb>>2]|0;if(Tb|0){ib=c[M>>2]|0;hn(fa,Tb,c[fb+4>>2]|0);fb=c[M>>2]|0;Tb=c[fb+112>>2]|0;jb=c[fb+108>>2]|0;c[ga>>2]=c[lb>>2];c[ga+4>>2]=c[lb+4>>2];c[ga+8>>2]=c[lb+8>>2];c[ga+12>>2]=c[lb+12>>2];fb=Tn(40)|0;Vb=fb+8|0;c[Vb>>2]=c[fa>>2];c[Vb+4>>2]=c[fa+4>>2];c[Vb+8>>2]=c[fa+8>>2];c[fa>>2]=0;c[fa+4>>2]=0;c[fa+8>>2]=0;Vb=fb+20|0;c[Vb>>2]=c[ga>>2];c[Vb+4>>2]=c[ga+4>>2];c[Vb+8>>2]=c[ga+8>>2];c[Vb+12>>2]=c[ga+12>>2];c[fb+36>>2]=(Tb-jb>>2)+-1;ge(ib+240|0,fb)|0;jn(fa)}if(a[(c[qb>>2]|0)+12>>0]|0){fb=yc(c[M>>2]|0)|0;c[fb>>2]=c[lb>>2];c[fb+4>>2]=c[lb+4>>2];c[fb+8>>2]=c[lb+8>>2];c[fb+12>>2]=c[lb+12>>2];c[fb+16>>2]=3;ib=(c[qb>>2]|0)+8|0;jb=c[ib>>2]|0;c[ib>>2]=0;ib=fb+24|0;c[ib>>2]=jb;c[jb+8>>2]=1;Tb=jb+16|0;c[Tb>>2]=c[lb>>2];c[Tb+4>>2]=c[lb+4>>2];c[Tb+8>>2]=c[lb+8>>2];c[Tb+12>>2]=c[lb+12>>2];Tb=c[M>>2]|0;jb=c[ib>>2]|0;Vb=jb+40|0;c[Vb>>2]=((c[Tb+112>>2]|0)-(c[Tb+108>>2]|0)>>2)+-1;c[Vb+4>>2]=0;Vb=Tb+88|0;Ub=c[Vb>>2]|0;if((Ub|0)==(c[Tb+92>>2]|0))ke(Tb+84|0,ib);else{c[Ub>>2]=jb;c[Vb>>2]=(c[Vb>>2]|0)+4}Vb=c[ib>>2]|0;ib=c[Vb>>2]|0;if(ib|0){jb=c[M>>2]|0;hn(ha,ib,c[Vb+4>>2]|0);Vb=c[M>>2]|0;ib=c[Vb+88>>2]|0;Ub=c[Vb+84>>2]|0;c[ia>>2]=c[fb>>2];c[ia+4>>2]=c[fb+4>>2];c[ia+8>>2]=c[fb+8>>2];c[ia+12>>2]=c[fb+12>>2];fb=Tn(40)|0;Vb=fb+8|0;c[Vb>>2]=c[ha>>2];c[Vb+4>>2]=c[ha+4>>2];c[Vb+8>>2]=c[ha+8>>2];c[ha>>2]=0;c[ha+4>>2]=0;c[ha+8>>2]=0;Vb=fb+20|0;c[Vb>>2]=c[ia>>2];c[Vb+4>>2]=c[ia+4>>2];c[Vb+8>>2]=c[ia+8>>2];c[Vb+12>>2]=c[ia+12>>2];c[fb+36>>2]=(ib-Ub>>2)+-1;ge(jb+200|0,fb)|0;jn(ha)}}fb=c[qb>>2]|0;if(!(a[fb+16>>0]|0))Wd=fb;else{fb=yc(c[M>>2]|0)|0;c[fb>>2]=c[lb>>2];c[fb+4>>2]=c[lb+4>>2];c[fb+8>>2]=c[lb+8>>2];c[fb+12>>2]=c[lb+12>>2];c[fb+16>>2]=6;jb=(c[qb>>2]|0)+4|0;Ub=c[jb>>2]|0;c[jb>>2]=0;jb=fb+24|0;c[jb>>2]=Ub;fb=c[M>>2]|0;ib=fb+124|0;Vb=c[ib>>2]|0;if((Vb|0)==(c[fb+128>>2]|0))me(fb+120|0,jb);else{c[Vb>>2]=Ub;c[ib>>2]=(c[ib>>2]|0)+4}Wd=c[qb>>2]|0}if(Wd|0){ib=Wd+8|0;Ub=c[ib>>2]|0;c[ib>>2]=0;if(Ub|0){Fd(Ub);An(Ub)}Ub=Wd+4|0;ib=c[Ub>>2]|0;c[Ub>>2]=0;if(ib|0){xd(ib);An(ib)}ib=c[Wd>>2]|0;c[Wd>>2]=0;if(ib|0){vd(ib);An(ib)}An(Wd)}break}case 139:{ib=c[qb+-32>>2]|0;c[M>>2]=ib;Ub=yc(ib)|0;c[Ub>>2]=c[lb>>2];c[Ub+4>>2]=c[lb+4>>2];c[Ub+8>>2]=c[lb+8>>2];c[Ub+12>>2]=c[lb+12>>2];c[Ub+16>>2]=7;ib=c[qb>>2]|0;Vb=c[ib>>2]|0;c[ib>>2]=0;ib=Ub+24|0;c[ib>>2]=Vb;Ub=c[M>>2]|0;jb=Ub+136|0;fb=c[jb>>2]|0;if((fb|0)==(c[Ub+140>>2]|0))ne(Ub+132|0,ib);else{c[fb>>2]=Vb;c[jb>>2]=(c[jb>>2]|0)+4}jb=c[ib>>2]|0;ib=c[jb>>2]|0;if(ib|0){Vb=c[M>>2]|0;hn(ja,ib,c[jb+4>>2]|0);jb=c[M>>2]|0;ib=c[jb+136>>2]|0;fb=c[jb+132>>2]|0;c[ka>>2]=c[lb>>2];c[ka+4>>2]=c[lb+4>>2];c[ka+8>>2]=c[lb+8>>2];c[ka+12>>2]=c[lb+12>>2];jb=Tn(40)|0;Ub=jb+8|0;c[Ub>>2]=c[ja>>2];c[Ub+4>>2]=c[ja+4>>2];c[Ub+8>>2]=c[ja+8>>2];c[ja>>2]=0;c[ja+4>>2]=0;c[ja+8>>2]=0;Ub=jb+20|0;c[Ub>>2]=c[ka>>2];c[Ub+4>>2]=c[ka+4>>2];c[Ub+8>>2]=c[ka+8>>2];c[Ub+12>>2]=c[ka+12>>2];c[jb+36>>2]=(ib-fb>>2)+-1;ge(Vb+260|0,jb)|0;jn(ja)}if(a[(c[qb>>2]|0)+12>>0]|0){jb=yc(c[M>>2]|0)|0;c[jb>>2]=c[lb>>2];c[jb+4>>2]=c[lb+4>>2];c[jb+8>>2]=c[lb+8>>2];c[jb+12>>2]=c[lb+12>>2];c[jb+16>>2]=3;Vb=(c[qb>>2]|0)+8|0;fb=c[Vb>>2]|0;c[Vb>>2]=0;Vb=jb+24|0;c[Vb>>2]=fb;c[fb+8>>2]=2;ib=fb+16|0;c[ib>>2]=c[lb>>2];c[ib+4>>2]=c[lb+4>>2];c[ib+8>>2]=c[lb+8>>2];c[ib+12>>2]=c[lb+12>>2];ib=c[M>>2]|0;fb=c[Vb>>2]|0;Ub=fb+40|0;c[Ub>>2]=((c[ib+136>>2]|0)-(c[ib+132>>2]|0)>>2)+-1;c[Ub+4>>2]=0;Ub=ib+88|0;Tb=c[Ub>>2]|0;if((Tb|0)==(c[ib+92>>2]|0))ke(ib+84|0,Vb);else{c[Tb>>2]=fb;c[Ub>>2]=(c[Ub>>2]|0)+4}Ub=c[Vb>>2]|0;Vb=c[Ub>>2]|0;if(Vb|0){fb=c[M>>2]|0;hn(la,Vb,c[Ub+4>>2]|0);Ub=c[M>>2]|0;Vb=c[Ub+88>>2]|0;Tb=c[Ub+84>>2]|0;c[ma>>2]=c[jb>>2];c[ma+4>>2]=c[jb+4>>2];c[ma+8>>2]=c[jb+8>>2];c[ma+12>>2]=c[jb+12>>2];jb=Tn(40)|0;Ub=jb+8|0;c[Ub>>2]=c[la>>2];c[Ub+4>>2]=c[la+4>>2];c[Ub+8>>2]=c[la+8>>2];c[la>>2]=0;c[la+4>>2]=0;c[la+8>>2]=0;Ub=jb+20|0;c[Ub>>2]=c[ma>>2];c[Ub+4>>2]=c[ma+4>>2];c[Ub+8>>2]=c[ma+8>>2];c[Ub+12>>2]=c[ma+12>>2];c[jb+36>>2]=(Vb-Tb>>2)+-1;ge(fb+200|0,jb)|0;jn(la)}}jb=c[qb>>2]|0;if(!(a[jb+16>>0]|0))Xd=jb;else{jb=yc(c[M>>2]|0)|0;c[jb>>2]=c[lb>>2];c[jb+4>>2]=c[lb+4>>2];c[jb+8>>2]=c[lb+8>>2];c[jb+12>>2]=c[lb+12>>2];c[jb+16>>2]=8;fb=(c[qb>>2]|0)+4|0;Tb=c[fb>>2]|0;c[fb>>2]=0;fb=jb+24|0;c[fb>>2]=Tb;jb=c[M>>2]|0;Vb=jb+148|0;Ub=c[Vb>>2]|0;if((Ub|0)==(c[jb+152>>2]|0))oe(jb+144|0,fb);else{c[Ub>>2]=Tb;c[Vb>>2]=(c[Vb>>2]|0)+4}Xd=c[qb>>2]|0}if(Xd|0){Vb=Xd+8|0;Tb=c[Vb>>2]|0;c[Vb>>2]=0;if(Tb|0){Fd(Tb);An(Tb)}Tb=Xd+4|0;Vb=c[Tb>>2]|0;c[Tb>>2]=0;if(Vb|0){zd(Vb);An(Vb)}Vb=c[Xd>>2]|0;c[Xd>>2]=0;if(Vb|0){Bd(Vb);An(Vb)}An(Xd)}break}case 140:{Vb=c[qb+-32>>2]|0;c[M>>2]=Vb;Tb=c[c[qb>>2]>>2]|0;Ub=Tb+8|0;do if(!(a[Ub>>0]|0)){fb=tc(Vb,Ub)|0;jb=Tb+48|0;if((fb|0)==-1){zc(lb,Vb,jb)|0;break}ib=c[(c[Vb+96>>2]|0)+(fb<<2)>>2]|0;fb=ib+8|0;if((jb|0)!=(fb|0)){Ac(jb,c[fb>>2]|0,c[ib+12>>2]|0);Ac(Tb+60|0,c[ib+20>>2]|0,c[ib+24>>2]|0)}}while(0);Tb=yc(c[M>>2]|0)|0;c[Tb>>2]=c[lb>>2];c[Tb+4>>2]=c[lb+4>>2];c[Tb+8>>2]=c[lb+8>>2];c[Tb+12>>2]=c[lb+12>>2];c[Tb+16>>2]=0;Vb=c[qb>>2]|0;Ub=c[Vb>>2]|0;c[Vb>>2]=0;Vb=Tb+24|0;c[Vb>>2]=Ub;Tb=c[M>>2]|0;ib=Tb+52|0;fb=c[ib>>2]|0;if((fb|0)==(c[Tb+56>>2]|0))pe(Tb+48|0,Vb);else{c[fb>>2]=Ub;c[ib>>2]=(c[ib>>2]|0)+4}ib=c[Vb>>2]|0;Vb=c[ib>>2]|0;if(Vb|0){Ub=c[M>>2]|0;hn(na,Vb,c[ib+4>>2]|0);ib=c[M>>2]|0;Vb=c[ib+52>>2]|0;fb=c[ib+48>>2]|0;c[oa>>2]=c[lb>>2];c[oa+4>>2]=c[lb+4>>2];c[oa+8>>2]=c[lb+8>>2];c[oa+12>>2]=c[lb+12>>2];ib=Tn(40)|0;Tb=ib+8|0;c[Tb>>2]=c[na>>2];c[Tb+4>>2]=c[na+4>>2];c[Tb+8>>2]=c[na+8>>2];c[na>>2]=0;c[na+4>>2]=0;c[na+8>>2]=0;Tb=ib+20|0;c[Tb>>2]=c[oa>>2];c[Tb+4>>2]=c[oa+4>>2];c[Tb+8>>2]=c[oa+8>>2];c[Tb+12>>2]=c[oa+12>>2];c[ib+36>>2]=(Vb-fb>>2)+-1;ge(Ub+160|0,ib)|0;jn(na)}ib=c[qb>>2]|0;if(!(a[ib+8>>0]|0))Yd=ib;else{ib=yc(c[M>>2]|0)|0;c[ib>>2]=c[lb>>2];c[ib+4>>2]=c[lb+4>>2];c[ib+8>>2]=c[lb+8>>2];c[ib+12>>2]=c[lb+12>>2];c[ib+16>>2]=3;Ub=(c[qb>>2]|0)+4|0;fb=c[Ub>>2]|0;c[Ub>>2]=0;Ub=ib+24|0;c[Ub>>2]=fb;c[fb+8>>2]=0;Vb=fb+16|0;c[Vb>>2]=c[lb>>2];c[Vb+4>>2]=c[lb+4>>2];c[Vb+8>>2]=c[lb+8>>2];c[Vb+12>>2]=c[lb+12>>2];Vb=c[M>>2]|0;fb=c[Ub>>2]|0;Tb=fb+40|0;c[Tb>>2]=((c[Vb+52>>2]|0)-(c[Vb+48>>2]|0)>>2)+-1;c[Tb+4>>2]=0;Tb=Vb+88|0;jb=c[Tb>>2]|0;if((jb|0)==(c[Vb+92>>2]|0))ke(Vb+84|0,Ub);else{c[jb>>2]=fb;c[Tb>>2]=(c[Tb>>2]|0)+4}Tb=c[Ub>>2]|0;Ub=c[Tb>>2]|0;if(Ub|0){fb=c[M>>2]|0;hn(pa,Ub,c[Tb+4>>2]|0);Tb=c[M>>2]|0;Ub=c[Tb+88>>2]|0;jb=c[Tb+84>>2]|0;c[qa>>2]=c[ib>>2];c[qa+4>>2]=c[ib+4>>2];c[qa+8>>2]=c[ib+8>>2];c[qa+12>>2]=c[ib+12>>2];ib=Tn(40)|0;Tb=ib+8|0;c[Tb>>2]=c[pa>>2];c[Tb+4>>2]=c[pa+4>>2];c[Tb+8>>2]=c[pa+8>>2];c[pa>>2]=0;c[pa+4>>2]=0;c[pa+8>>2]=0;Tb=ib+20|0;c[Tb>>2]=c[qa>>2];c[Tb+4>>2]=c[qa+4>>2];c[Tb+8>>2]=c[qa+8>>2];c[Tb+12>>2]=c[qa+12>>2];c[ib+36>>2]=(Ub-jb>>2)+-1;ge(fb+200|0,ib)|0;jn(pa)}Yd=c[qb>>2]|0}if(Yd|0){ib=Yd+4|0;fb=c[ib>>2]|0;c[ib>>2]=0;if(fb|0){Fd(fb);An(fb)}fb=c[Yd>>2]|0;c[Yd>>2]=0;if(fb|0){rd(fb);An(fb)}An(Yd)}break}case 141:{fb=c[qb+-32>>2]|0;c[M>>2]=fb;ib=yc(fb)|0;c[ib>>2]=c[lb>>2];c[ib+4>>2]=c[lb+4>>2];c[ib+8>>2]=c[lb+8>>2];c[ib+12>>2]=c[lb+12>>2];c[ib+16>>2]=6;fb=c[qb>>2]|0;jb=ib+24|0;c[jb>>2]=fb;ib=c[M>>2]|0;Ub=ib+124|0;Tb=c[Ub>>2]|0;if((Tb|0)==(c[ib+128>>2]|0)){me(ib+120|0,jb);break a}else{c[Tb>>2]=fb;c[Ub>>2]=(c[Ub>>2]|0)+4;break a}break}case 142:{Ub=c[qb+-32>>2]|0;c[M>>2]=Ub;fb=yc(Ub)|0;c[fb>>2]=c[lb>>2];c[fb+4>>2]=c[lb+4>>2];c[fb+8>>2]=c[lb+8>>2];c[fb+12>>2]=c[lb+12>>2];c[fb+16>>2]=8;Ub=c[qb>>2]|0;Tb=fb+24|0;c[Tb>>2]=Ub;fb=c[M>>2]|0;jb=fb+148|0;ib=c[jb>>2]|0;if((ib|0)==(c[fb+152>>2]|0)){oe(fb+144|0,Tb);break a}else{c[ib>>2]=Ub;c[jb>>2]=(c[jb>>2]|0)+4;break a}break}case 143:{jb=c[qb+-32>>2]|0;c[M>>2]=jb;Ub=yc(jb)|0;c[Ub>>2]=c[lb>>2];c[Ub+4>>2]=c[lb+4>>2];c[Ub+8>>2]=c[lb+8>>2];c[Ub+12>>2]=c[lb+12>>2];c[Ub+16>>2]=9;jb=Ub+24|0;c[jb>>2]=c[qb>>2];c[jb+4>>2]=c[qb+4>>2];c[jb+8>>2]=c[qb+8>>2];c[jb+12>>2]=c[qb+12>>2];c[jb+16>>2]=c[qb+16>>2];c[jb+20>>2]=c[qb+20>>2];c[jb+24>>2]=c[qb+24>>2];c[jb+28>>2]=c[qb+28>>2];c[(c[M>>2]|0)+156>>2]=jb;break}case 144:{jb=c[qb+-32>>2]|0;c[M>>2]=jb;Ub=yc(jb)|0;c[Ub>>2]=c[lb>>2];c[Ub+4>>2]=c[lb+4>>2];c[Ub+8>>2]=c[lb+8>>2];c[Ub+12>>2]=c[lb+12>>2];c[Ub+16>>2]=2;jb=Ub+24|0;c[jb>>2]=c[qb>>2];Ub=c[M>>2]|0;if(((c[Ub+52>>2]|0)-(c[Ub+48>>2]|0)>>2|0)==(c[Ub+32>>2]|0))Zd=Ub;else{wi(lb,e,f,12677,s);Zd=c[M>>2]|0}if(((c[Zd+112>>2]|0)-(c[Zd+108>>2]|0)>>2|0)==(c[Zd+36>>2]|0))_d=Zd;else{wi(lb,e,f,12677,r);_d=c[M>>2]|0}if(((c[_d+136>>2]|0)-(c[_d+132>>2]|0)>>2|0)==(c[_d+40>>2]|0))$d=_d;else{wi(lb,e,f,12677,q);$d=c[M>>2]|0}if(((c[$d+64>>2]|0)-(c[$d+60>>2]|0)>>2|0)!=(c[$d+44>>2]|0))wi(lb,e,f,12677,p);switch(c[(c[qb>>2]|0)+16>>2]|0){case 0:{Ub=c[M>>2]|0;ib=c[(c[jb>>2]|0)+20>>2]|0;Tb=ib+8|0;do if(!(a[Tb>>0]|0)){fb=tc(Ub,Tb)|0;Vb=ib+48|0;if((fb|0)==-1){zc(lb,Ub,Vb)|0;break}Wb=c[(c[Ub+96>>2]|0)+(fb<<2)>>2]|0;fb=Wb+8|0;if((Vb|0)!=(fb|0)){Ac(Vb,c[fb>>2]|0,c[Wb+12>>2]|0);Ac(ib+60|0,c[Wb+20>>2]|0,c[Wb+24>>2]|0)}}while(0);ib=c[M>>2]|0;Ub=(c[jb>>2]|0)+20|0;Tb=ib+52|0;Wb=c[Tb>>2]|0;if((Wb|0)==(c[ib+56>>2]|0))pe(ib+48|0,Ub);else{c[Wb>>2]=c[Ub>>2];c[Tb>>2]=(c[Tb>>2]|0)+4}Tb=c[(c[jb>>2]|0)+20>>2]|0;Ub=c[Tb>>2]|0;if(Ub|0){Wb=c[M>>2]|0;hn(ra,Ub,c[Tb+4>>2]|0);Tb=c[M>>2]|0;Ub=c[Tb+52>>2]|0;ib=c[Tb+48>>2]|0;c[sa>>2]=c[lb>>2];c[sa+4>>2]=c[lb+4>>2];c[sa+8>>2]=c[lb+8>>2];c[sa+12>>2]=c[lb+12>>2];Tb=Tn(40)|0;fb=Tb+8|0;c[fb>>2]=c[ra>>2];c[fb+4>>2]=c[ra+4>>2];c[fb+8>>2]=c[ra+8>>2];c[ra>>2]=0;c[ra+4>>2]=0;c[ra+8>>2]=0;fb=Tb+20|0;c[fb>>2]=c[sa>>2];c[fb+4>>2]=c[sa+4>>2];c[fb+8>>2]=c[sa+8>>2];c[fb+12>>2]=c[sa+12>>2];c[Tb+36>>2]=(Ub-ib>>2)+-1;ge(Wb+160|0,Tb)|0;jn(ra)}Tb=c[M>>2]|0;Wb=Tb+32|0;c[Wb>>2]=(c[Wb>>2]|0)+1;ae=Tb;break}case 1:{Tb=c[M>>2]|0;Wb=(c[jb>>2]|0)+20|0;ib=Tb+112|0;Ub=c[ib>>2]|0;if((Ub|0)==(c[Tb+116>>2]|0))le(Tb+108|0,Wb);else{c[Ub>>2]=c[Wb>>2];c[ib>>2]=(c[ib>>2]|0)+4}ib=c[(c[jb>>2]|0)+20>>2]|0;Wb=c[ib>>2]|0;if(Wb|0){Ub=c[M>>2]|0;hn(ta,Wb,c[ib+4>>2]|0);ib=c[M>>2]|0;Wb=c[ib+112>>2]|0;Tb=c[ib+108>>2]|0;c[ua>>2]=c[lb>>2];c[ua+4>>2]=c[lb+4>>2];c[ua+8>>2]=c[lb+8>>2];c[ua+12>>2]=c[lb+12>>2];ib=Tn(40)|0;fb=ib+8|0;c[fb>>2]=c[ta>>2];c[fb+4>>2]=c[ta+4>>2];c[fb+8>>2]=c[ta+8>>2];c[ta>>2]=0;c[ta+4>>2]=0;c[ta+8>>2]=0;fb=ib+20|0;c[fb>>2]=c[ua>>2];c[fb+4>>2]=c[ua+4>>2];c[fb+8>>2]=c[ua+8>>2];c[fb+12>>2]=c[ua+12>>2];c[ib+36>>2]=(Wb-Tb>>2)+-1;ge(Ub+240|0,ib)|0;jn(ta)}ib=c[M>>2]|0;Ub=ib+36|0;c[Ub>>2]=(c[Ub>>2]|0)+1;ae=ib;break}case 2:{ib=c[M>>2]|0;Ub=(c[jb>>2]|0)+20|0;Tb=ib+136|0;Wb=c[Tb>>2]|0;if((Wb|0)==(c[ib+140>>2]|0))ne(ib+132|0,Ub);else{c[Wb>>2]=c[Ub>>2];c[Tb>>2]=(c[Tb>>2]|0)+4}Tb=c[(c[jb>>2]|0)+20>>2]|0;Ub=c[Tb>>2]|0;if(Ub|0){Wb=c[M>>2]|0;hn(va,Ub,c[Tb+4>>2]|0);Tb=c[M>>2]|0;Ub=c[Tb+136>>2]|0;ib=c[Tb+132>>2]|0;c[wa>>2]=c[lb>>2];c[wa+4>>2]=c[lb+4>>2];c[wa+8>>2]=c[lb+8>>2];c[wa+12>>2]=c[lb+12>>2];Tb=Tn(40)|0;fb=Tb+8|0;c[fb>>2]=c[va>>2];c[fb+4>>2]=c[va+4>>2];c[fb+8>>2]=c[va+8>>2];c[va>>2]=0;c[va+4>>2]=0;c[va+8>>2]=0;fb=Tb+20|0;c[fb>>2]=c[wa>>2];c[fb+4>>2]=c[wa+4>>2];c[fb+8>>2]=c[wa+8>>2];c[fb+12>>2]=c[wa+12>>2];c[Tb+36>>2]=(Ub-ib>>2)+-1;ge(Wb+260|0,Tb)|0;jn(va)}Tb=c[M>>2]|0;Wb=Tb+40|0;c[Wb>>2]=(c[Wb>>2]|0)+1;ae=Tb;break}case 3:{Tb=c[M>>2]|0;Wb=(c[jb>>2]|0)+20|0;ib=Tb+64|0;Ub=c[ib>>2]|0;if((Ub|0)==(c[Tb+68>>2]|0))je(Tb+60|0,Wb);else{c[Ub>>2]=c[Wb>>2];c[ib>>2]=(c[ib>>2]|0)+4}ib=c[(c[jb>>2]|0)+20>>2]|0;Wb=c[ib>>2]|0;if(Wb|0){Ub=c[M>>2]|0;hn(xa,Wb,c[ib+4>>2]|0);ib=c[M>>2]|0;Wb=c[ib+64>>2]|0;Tb=c[ib+60>>2]|0;c[ya>>2]=c[lb>>2];c[ya+4>>2]=c[lb+4>>2];c[ya+8>>2]=c[lb+8>>2];c[ya+12>>2]=c[lb+12>>2];ib=Tn(40)|0;fb=ib+8|0;c[fb>>2]=c[xa>>2];c[fb+4>>2]=c[xa+4>>2];c[fb+8>>2]=c[xa+8>>2];c[xa>>2]=0;c[xa+4>>2]=0;c[xa+8>>2]=0;fb=ib+20|0;c[fb>>2]=c[ya>>2];c[fb+4>>2]=c[ya+4>>2];c[fb+8>>2]=c[ya+8>>2];c[fb+12>>2]=c[ya+12>>2];c[ib+36>>2]=(Wb-Tb>>2)+-1;ge(Ub+180|0,ib)|0;jn(xa)}ib=c[M>>2]|0;Ub=ib+44|0;c[Ub>>2]=(c[Ub>>2]|0)+1;ae=ib;break}default:ae=c[M>>2]|0}ib=ae+76|0;Ub=c[ib>>2]|0;if((Ub|0)==(c[ae+80>>2]|0)){qe(ae+72|0,jb);break a}else{c[Ub>>2]=c[jb>>2];c[ib>>2]=(c[ib>>2]|0)+4;break a}break}case 145:{ib=c[qb+-32>>2]|0;c[M>>2]=ib;Ub=yc(ib)|0;c[Ub>>2]=c[lb>>2];c[Ub+4>>2]=c[lb+4>>2];c[Ub+8>>2]=c[lb+8>>2];c[Ub+12>>2]=c[lb+12>>2];c[Ub+16>>2]=3;ib=c[qb>>2]|0;Tb=Ub+24|0;c[Tb>>2]=ib;Ub=c[M>>2]|0;Wb=Ub+88|0;fb=c[Wb>>2]|0;if((fb|0)==(c[Ub+92>>2]|0))ke(Ub+84|0,Tb);else{c[fb>>2]=ib;c[Wb>>2]=(c[Wb>>2]|0)+4}Wb=c[Tb>>2]|0;Tb=c[Wb>>2]|0;if(Tb|0){ib=c[M>>2]|0;hn(za,Tb,c[Wb+4>>2]|0);Wb=c[M>>2]|0;Tb=c[Wb+88>>2]|0;fb=c[Wb+84>>2]|0;c[Aa>>2]=c[lb>>2];c[Aa+4>>2]=c[lb+4>>2];c[Aa+8>>2]=c[lb+8>>2];c[Aa+12>>2]=c[lb+12>>2];Wb=Tn(40)|0;Ub=Wb+8|0;c[Ub>>2]=c[za>>2];c[Ub+4>>2]=c[za+4>>2];c[Ub+8>>2]=c[za+8>>2];c[za>>2]=0;c[za+4>>2]=0;c[za+8>>2]=0;Ub=Wb+20|0;c[Ub>>2]=c[Aa>>2];c[Ub+4>>2]=c[Aa+4>>2];c[Ub+8>>2]=c[Aa+8>>2];c[Ub+12>>2]=c[Aa+12>>2];c[Wb+36>>2]=(Tb-fb>>2)+-1;ge(ib+200|0,Wb)|0;jn(za)}break}case 146:{Wb=Tn(36)|0;Jd(Wb);c[M>>2]=Wb;c[Wb>>2]=0;ib=qb+-32|0;fb=c[ib>>2]|0;c[Wb+4>>2]=fb;Wb=qb+-64|0;Tb=c[Wb+4>>2]|0;Ub=fb+16|0;c[Ub>>2]=c[Wb>>2];c[Ub+4>>2]=Tb;Tb=c[(c[M>>2]|0)+4>>2]|0;Ub=lb+-48|0;c[Tb>>2]=c[Ub>>2];c[Tb+4>>2]=c[Ub+4>>2];c[Tb+8>>2]=c[Ub+8>>2];c[Tb+12>>2]=c[Ub+12>>2];Ub=c[ib>>2]|0;Tb=c[Ub+48>>2]|0;Wb=c[Ub+52>>2]|0;if((Tb|0)!=(Wb|0)){Ub=Tb;do{Tb=c[Ub>>2]|0;if((((a[Tb+8>>0]|0?(fb=Tb+48|0,(c[Tb+60>>2]|0)==(c[Tb+64>>2]|0)):0)?(c[fb>>2]|0)==(c[Tb+52>>2]|0):0)?(Vb=sc(c[ib>>2]|0,Tb+16|0)|0,Vb|0):0)?(eb=Vb+8|0,(fb|0)!=(eb|0)):0){Ac(fb,c[eb>>2]|0,c[Vb+12>>2]|0);Ac(Tb+60|0,c[Vb+20>>2]|0,c[Vb+24>>2]|0)}Ub=Ub+4|0}while((Ub|0)!=(Wb|0))}break}case 147:{Wb=Tn(36)|0;Jd(Wb);c[M>>2]=Wb;c[Wb>>2]=1;Ub=qb+-64|0;ib=c[Ub+4>>2]|0;jb=Wb+20|0;c[jb>>2]=c[Ub>>2];c[jb+4>>2]=ib;ib=Wb+4|0;jb=lb+-48|0;c[ib>>2]=c[jb>>2];c[ib+4>>2]=c[jb+4>>2];c[ib+8>>2]=c[jb+8>>2];c[ib+12>>2]=c[jb+12>>2];jb=qb+-32|0;ce(jb,Wb+28|0,Wb+32|0);yi(jb);break}case 148:{jb=c[qb>>2]|0;if(!(c[jb>>2]|0)){c[M>>2]=c[jb+4>>2];c[(c[qb>>2]|0)+4>>2]=0}else{jb=Tn(280)|0;Hd(jb);c[M>>2]=jb;Wb=h;c[Wb>>2]=0;c[Wb+4>>2]=0;Wb=(c[qb>>2]|0)+4|0;c[j>>2]=296;c[Pa>>2]=Wb;c[Qa>>2]=e;c[Ra>>2]=f;Wb=c[qb>>2]|0;Re(c[Wb+28>>2]|0,c[Wb+32>>2]|0,h,j,jb)|0;jb=(c[qb>>2]|0)+20|0;Wb=c[jb+4>>2]|0;ib=(c[M>>2]|0)+16|0;c[ib>>2]=c[jb>>2];c[ib+4>>2]=Wb;Wb=c[M>>2]|0;ib=(c[qb>>2]|0)+4|0;c[Wb>>2]=c[ib>>2];c[Wb+4>>2]=c[ib+4>>2];c[Wb+8>>2]=c[ib+8>>2];c[Wb+12>>2]=c[ib+12>>2];ib=(c[qb>>2]|0)+20|0;Wb=ib;a[Wb>>0]=0;a[Wb+1>>0]=0;a[Wb+2>>0]=0;a[Wb+3>>0]=0;Wb=ib+4|0;a[Wb>>0]=0;a[Wb+1>>0]=0;a[Wb+2>>0]=0;a[Wb+3>>0]=0}Wb=c[qb>>2]|0;if(Wb|0){Kd(Wb);An(Wb)}break}case 149:{c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;c[M+16>>2]=0;c[M+20>>2]=0;Wb=Ja;c[Wb>>2]=-1;c[Wb+4>>2]=-1;break}case 150:{c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;c[M+16>>2]=0;c[M+20>>2]=0;c[M+24>>2]=0;c[M+28>>2]=0;c[Ga>>2]=1;Wb=c[qb>>2]|0;ib=qb+4|0;jb=c[ib>>2]|0;j:do if(!jb)be=0;else{Ub=Wb;Vb=0;while(1){if(!(a[Ub>>0]|0)){be=Vb;break j}Tb=Vb+1|0;if(Tb>>>0<jb>>>0){Ub=Ub+1|0;Vb=Tb}else{be=Tb;break}}}while(0);jb=Vn(be+1|0)|0;ho(jb|0,Wb|0,be|0)|0;a[jb+be>>0]=0;c[Ka>>2]=jb;c[La>>2]=c[ib>>2];break}case 151:{jb=Tn(72)|0;Md(jb);c[M>>2]=jb;Vb=lb+-64|0;c[jb>>2]=c[Vb>>2];c[jb+4>>2]=c[Vb+4>>2];c[jb+8>>2]=c[Vb+8>>2];c[jb+12>>2]=c[Vb+12>>2];Vb=jb+24|0;Ub=qb+-96|0;c[Vb>>2]=c[Ub>>2];c[Vb+4>>2]=c[Ub+4>>2];c[Vb+8>>2]=c[Ub+8>>2];c[Vb+12>>2]=c[Ub+12>>2];c[Vb+16>>2]=c[Ub+16>>2];c[Vb+20>>2]=c[Ub+20>>2];c[Vb+24>>2]=c[Ub+24>>2];c[Vb+28>>2]=c[Ub+28>>2];c[jb+16>>2]=0;Ub=qb+-64|0;Vb=c[Ub+4>>2]|0;Tb=jb+56|0;c[Tb>>2]=c[Ub>>2];c[Tb+4>>2]=Vb;Vb=Tn(12)|0;Ld(Vb);c[(c[M>>2]|0)+64>>2]=Vb;Vb=c[(c[M>>2]|0)+64>>2]|0;Tb=qb+-32|0;Ub=c[Tb>>2]|0;jb=c[Vb>>2]|0;eb=jb;fb=Vb+4|0;if(!jb)he=Vb+8|0;else{db=c[fb>>2]|0;if((db|0)!=(jb|0))c[fb>>2]=db+(~((db+-32-eb|0)>>>5)<<5);An(jb);jb=Vb+8|0;c[jb>>2]=0;c[fb>>2]=0;c[Vb>>2]=0;he=jb}c[Vb>>2]=c[Ub>>2];Vb=Ub+4|0;c[fb>>2]=c[Vb>>2];fb=Ub+8|0;c[he>>2]=c[fb>>2];c[fb>>2]=0;c[Vb>>2]=0;c[Ub>>2]=0;Ub=c[Tb>>2]|0;if(Ub|0){Tb=c[Ub>>2]|0;Vb=Tb;if(Tb|0){fb=Ub+4|0;jb=c[fb>>2]|0;if((jb|0)!=(Tb|0))c[fb>>2]=jb+(~((jb+-32-Vb|0)>>>5)<<5);An(Tb)}An(Ub)}break}case 152:{Ub=Tn(72)|0;Md(Ub);c[M>>2]=Ub;Tb=lb+-48|0;c[Ub>>2]=c[Tb>>2];c[Ub+4>>2]=c[Tb+4>>2];c[Ub+8>>2]=c[Tb+8>>2];c[Ub+12>>2]=c[Tb+12>>2];Tb=Ub+24|0;Vb=qb+-64|0;c[Tb>>2]=c[Vb>>2];c[Tb+4>>2]=c[Vb+4>>2];c[Tb+8>>2]=c[Vb+8>>2];c[Tb+12>>2]=c[Vb+12>>2];c[Tb+16>>2]=c[Vb+16>>2];c[Tb+20>>2]=c[Vb+20>>2];c[Tb+24>>2]=c[Vb+24>>2];c[Tb+28>>2]=c[Vb+28>>2];c[Ub+16>>2]=1;Vb=qb+-32|0;Tb=c[Vb+4>>2]|0;jb=Ub+56|0;c[jb>>2]=c[Vb>>2];c[jb+4>>2]=Tb;break}case 153:{Tb=Tn(48)|0;Od(Tb);c[M>>2]=Tb;c[Tb>>2]=3;c[Tb+8>>2]=c[qb+-64>>2];jb=qb+-32|0;Vb=c[jb+4>>2]|0;Ub=Tb+12|0;c[Ub>>2]=c[jb>>2];c[Ub+4>>2]=Vb;break}case 154:{Vb=Tn(48)|0;Od(Vb);c[M>>2]=Vb;c[Vb>>2]=4;c[Vb+8>>2]=c[qb+-64>>2];Ub=qb+-32|0;jb=c[Ub+4>>2]|0;Tb=Vb+12|0;c[Tb>>2]=c[Ub>>2];c[Tb+4>>2]=jb;break}case 155:{jb=Tn(48)|0;Od(jb);c[M>>2]=jb;c[jb>>2]=6;c[jb+8>>2]=c[qb+-64>>2];Tb=qb+-32|0;Ub=c[Tb+4>>2]|0;Vb=jb+12|0;c[Vb>>2]=c[Tb>>2];c[Vb+4>>2]=Ub;break}case 156:{Ub=Tn(48)|0;Od(Ub);c[M>>2]=Ub;c[Ub>>2]=7;c[Ub+8>>2]=c[qb+-64>>2];Vb=qb+-32|0;Tb=c[Vb+4>>2]|0;jb=Ub+12|0;c[jb>>2]=c[Vb>>2];c[jb+4>>2]=Tb;break}case 157:{Tb=Tn(48)|0;Od(Tb);c[M>>2]=Tb;c[Tb>>2]=8;c[Tb+8>>2]=c[qb+-64>>2];c[Tb+12>>2]=c[qb+-32>>2];break}case 158:{Tb=Tn(48)|0;Od(Tb);c[M>>2]=Tb;c[Tb>>2]=9;c[Tb+8>>2]=c[qb+-32>>2];break}case 159:{Tb=Tn(48)|0;Od(Tb);c[M>>2]=Tb;c[Tb>>2]=10;c[Tb+8>>2]=c[qb+-32>>2];break}case 160:{Tb=Tn(48)|0;Od(Tb);c[M>>2]=Tb;c[Tb>>2]=11;c[Tb+8>>2]=c[qb+-64>>2];jb=qb+-32|0;Vb=c[jb+4>>2]|0;Ub=Tb+12|0;c[Ub>>2]=c[jb>>2];c[Ub+4>>2]=Vb;break}case 161:{Vb=Tn(48)|0;Od(Vb);c[M>>2]=Vb;c[Vb>>2]=12;c[Vb+8>>2]=c[qb+-64>>2];Ub=qb+-32|0;jb=c[Ub+4>>2]|0;Tb=Vb+12|0;c[Tb>>2]=c[Ub>>2];c[Tb+4>>2]=jb;break}case 162:{jb=Tn(48)|0;Od(jb);c[M>>2]=jb;c[jb>>2]=1;c[jb+8>>2]=c[qb>>2];break}case 164:{jb=Tn(48)|0;Od(jb);c[M>>2]=jb;c[jb>>2]=0;c[jb+8>>2]=c[qb>>2];break}case 165:{jb=Tn(48)|0;Od(jb);c[M>>2]=jb;c[jb>>2]=2;Tb=qb+-64|0;Ub=c[Tb+4>>2]|0;Vb=jb+8|0;c[Vb>>2]=c[Tb>>2];c[Vb+4>>2]=Ub;Ub=jb+16|0;Vb=qb+-32|0;c[Ub>>2]=c[Vb>>2];c[Ub+4>>2]=c[Vb+4>>2];c[Ub+8>>2]=c[Vb+8>>2];c[Ub+12>>2]=c[Vb+12>>2];c[Ub+16>>2]=c[Vb+16>>2];c[Ub+20>>2]=c[Vb+20>>2];c[Ub+24>>2]=c[Vb+24>>2];c[Ub+28>>2]=c[Vb+28>>2];Vb=jb+16|0;jb=lb+-16|0;c[Vb>>2]=c[jb>>2];c[Vb+4>>2]=c[jb+4>>2];c[Vb+8>>2]=c[jb+8>>2];c[Vb+12>>2]=c[jb+12>>2];break}case 166:{jb=Tn(12)|0;c[jb>>2]=0;c[jb+4>>2]=0;c[jb+8>>2]=0;c[M>>2]=jb;break}case 167:{jb=c[qb+-32>>2]|0;c[M>>2]=jb;Vb=jb+4|0;Ub=c[Vb>>2]|0;if(Ub>>>0<(c[jb+8>>2]|0)>>>0){c[Ub>>2]=c[qb>>2];c[Vb>>2]=Ub+4;break a}else{re(jb,qb);break a}break}case 168:{jb=lb+-32|0;c[M>>2]=c[jb>>2];c[M+4>>2]=c[jb+4>>2];c[M+8>>2]=c[jb+8>>2];c[M+12>>2]=c[jb+12>>2];jb=c[qb+-64>>2]|0;Ub=c[qb+-32>>2]|0;Vb=qb+-28|0;Tb=c[Vb>>2]|0;fb=Vb+4|0;eb=c[fb>>2]|0;db=Tb+eb|0;c[Ga>>2]=jb;switch(jb|0){case -1:{ie=di(Tb,db,Ka,1)|0;Cb=650;break}case -2:{ie=ci(Tb,db,Ja,1)|0;Cb=650;break}case -3:{ie=ei(Ub,Tb,db,Ka)|0;Cb=650;break}case -4:{ie=fi(Ub,Tb,db,Ja)|0;Cb=650;break}default:{ve=eb;we=Tb;Cb=652}}if((Cb|0)==650?(Cb=0,(ie|0)==1):0){ve=c[fb>>2]|0;we=c[Vb>>2]|0;Cb=652}if((Cb|0)==652){Cb=0;c[o>>2]=ve;c[o+4>>2]=we;wi(lb+-16|0,e,f,12595,o)}fb=c[Vb>>2]|0;if(fb|0)Wn(fb);break}case 169:{fb=Tn(12)|0;c[fb>>2]=0;c[fb+4>>2]=0;c[fb+8>>2]=0;c[M>>2]=fb;break}case 170:{fb=c[qb+-32>>2]|0;c[M>>2]=fb;Vb=fb+4|0;Tb=c[Vb>>2]|0;if((Tb|0)==(c[fb+8>>2]|0)){se(fb,qb);break a}else{c[Tb>>2]=c[qb>>2];c[Tb+4>>2]=c[qb+4>>2];c[Tb+8>>2]=c[qb+8>>2];c[Tb+12>>2]=c[qb+12>>2];c[Tb+16>>2]=c[qb+16>>2];c[Tb+20>>2]=c[qb+20>>2];c[Tb+24>>2]=c[qb+24>>2];c[Tb+28>>2]=c[qb+28>>2];c[Vb>>2]=(c[Vb>>2]|0)+32;break a}break}default:{}}while(0);Vb=nb+(hb<<1)|0;Tb=lb+(hb<<4)|0;fb=qb+(hb<<5)+32|0;c[fb>>2]=c[M>>2];c[fb+4>>2]=c[M+4>>2];c[fb+8>>2]=c[M+8>>2];c[fb+12>>2]=c[M+12>>2];c[fb+16>>2]=c[M+16>>2];c[fb+20>>2]=c[M+20>>2];c[fb+24>>2]=c[M+24>>2];c[fb+28>>2]=c[M+28>>2];eb=Tb+16|0;c[Tb+16>>2]=Ob;c[Tb+20>>2]=gb;c[Tb+24>>2]=Pb;c[Tb+28>>2]=Qb;Tb=(d[12730+Bb>>0]|0)+-75|0;db=b[Vb>>1]|0;Ub=(db<<16>>16)+(b[10790+(Tb<<1)>>1]|0)|0;if(Ub>>>0<798?(b[7598+(Ub<<1)>>1]|0)==db<<16>>16:0){Db=Ab;Eb=eb;Fb=Vb;Gb=b[9194+(Ub<<1)>>1]|0;Hb=fb;break}Db=Ab;Eb=eb;Fb=Vb;Gb=b[10916+(Tb<<1)>>1]|0;Hb=fb}while(0);Wa=Db;Xa=kb;Ya=Eb;Za=mb;_a=Fb+2|0;$a=ob;ab=Gb;bb=pb;cb=Hb}do if((Cb|0)==695){Hb=Kb;if((Jb|0)!=-2)if(Jb>>>0<330)xe=d[11622+Jb>>0]|0;else xe=2;else xe=-2;cb=te(O,N,Lb,xe)|0;switch(cb|0){case 0:{wi(I,e,f,N,n);ye=N;break}case 1:{pb=Vn(c[O>>2]|0)|0;ze=pb;Ae=pb;Be=te(O,pb,Lb,xe)|0;Cb=701;break}default:{ze=N;Ae=12903;Be=cb;Cb=701}}if((Cb|0)==701){wi(I,e,f,Ae,m);if((Be|0)==2){wi(I,e,f,14740,l);rb=Jb;sb=ze;tb=2;ub=Kb;vb=Lb;wb=Nb;break}else ye=ze}if((Lb|0)==(Kb|0)){rb=Jb;sb=ye;tb=1;ub=Lb;vb=Lb;wb=Nb}else{cb=~((Lb+-2-Hb|0)>>>1);Hb=Lb+(cb<<1)|0;pb=Lb;bb=Mb;Gb=Nb;while(1){ue(14725,d[14320+bb>>0]|0,Gb);ab=pb+-2|0;if((ab|0)==(Kb|0))break;else{pb=ab;bb=b[ab>>1]|0;Gb=Gb+-32|0}}rb=Jb;sb=ye;tb=1;ub=Kb;vb=Hb;wb=Nb+(cb<<5)|0}}while(0);if((rb|0)!=-2){if(rb>>>0<330)Ce=d[11622+rb>>0]|0;else Ce=2;ue(14757,Ce,H)}if((vb|0)!=(ub|0)){H=vb;vb=wb;while(1){ue(14787,d[14320+(b[H>>1]|0)>>0]|0,vb);H=H+-2|0;if((H|0)==(ub|0))break;else vb=vb+-32|0}}if((sb|0)==(N|0)){i=g;return tb|0}Wn(sb);i=g;return tb|0}function ce(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;i=i+16|0;g=f+4|0;h=f;j=c[b>>2]|0;b=(j|0)==0;if(b){k=Vn(0)|0;l=k;m=k;c[d>>2]=l;n=m;o=l;p=n-o|0;c[e>>2]=p;i=f;return}else{q=j;r=0}while(1){k=c[q>>2]|0;s=k+1|0;t=k+(c[q+4>>2]|0)+-1|0;k=(t>>>0>s>>>0?t-s|0:0)+r|0;q=c[q+8>>2]|0;if(!q){u=k;break}else r=k}r=Vn(u)|0;if(b){l=r;m=r;c[d>>2]=l;n=m;o=l;p=n-o|0;c[e>>2]=p;i=f;return}b=r;u=j;while(1){j=c[u>>2]|0;q=j+1|0;k=j+(c[u+4>>2]|0)+-1|0;if(q>>>0<k>>>0){j=b;s=q;while(1){q=a[s>>0]|0;t=s+1|0;if(q<<24>>24==92){v=a[t>>0]|0;switch(v<<24>>24|0){case 110:{a[j>>0]=10;w=j+1|0;x=t;break}case 116:{a[j>>0]=9;w=j+1|0;x=t;break}case 92:{a[j>>0]=92;w=j+1|0;x=t;break}case 39:{a[j>>0]=39;w=j+1|0;x=t;break}case 34:{a[j>>0]=34;w=j+1|0;x=t;break}default:{y=s+2|0;if((ai(v,g)|0)==0?(ai(a[y>>0]|0,h)|0)==0:0){a[j>>0]=c[g>>2]<<4|c[h>>2];z=j+1|0}else z=j;w=z;x=y}}A=w;B=x+1|0}else{a[j>>0]=q;A=j+1|0;B=t}if(B>>>0<k>>>0){j=A;s=B}else{C=A;break}}}else C=b;u=c[u+8>>2]|0;if(!u){l=r;m=C;break}else b=C}c[d>>2]=l;n=m;o=l;p=n-o|0;c[e>>2]=p;i=f;return}function de(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function ee(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>5)+1|0;if(f>>>0>134217727)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>5>>>0<67108863){i=h>>4;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>5;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=134217727;o=f;p=f-e>>5;q=6}if((q|0)==6){j=n;k=Tn(n<<5)|0;l=p;m=o}o=k+(l<<5)|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];c[o+16>>2]=c[b+16>>2];c[o+20>>2]=c[b+20>>2];c[o+24>>2]=c[b+24>>2];c[o+28>>2]=c[b+28>>2];b=m-e|0;m=o+(0-(b>>5)<<5)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+32;c[g>>2]=k+(j<<5);if(!e)return;An(e);return}function fe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=c[a>>2]|0;g=f;h=f+((c[b>>2]|0)-g>>2<<2)|0;b=c[d>>2]|0;i=c[e>>2]|0;e=i-b|0;j=e>>2;k=b;l=i;if((e|0)<=0){m=h;return m|0}e=a+8|0;n=c[e>>2]|0;o=a+4|0;p=c[o>>2]|0;q=p;if((j|0)<=(n-q>>2|0)){r=h;s=q-r|0;t=s>>2;if((j|0)>(t|0)){u=k+(t<<2)|0;t=u;if((u|0)==(l|0))v=p;else{w=(l+-4-t|0)>>>2;x=u;u=p;while(1){c[u>>2]=c[x>>2];x=x+4|0;if((x|0)==(l|0))break;else u=u+4|0}u=p+(w+1<<2)|0;c[o>>2]=u;v=u}if((s|0)>0){y=v;z=t}else{m=h;return m|0}}else{y=p;z=i}i=y-(h+(j<<2))|0;t=i>>2;v=h+(t<<2)|0;s=0-t|0;if(v>>>0<p>>>0){t=(p+(s<<2)+~r|0)>>>2;r=y;u=v;while(1){c[r>>2]=c[u>>2];u=u+4|0;if(u>>>0>=p>>>0)break;else r=r+4|0}c[o>>2]=y+(t+1<<2)}io(y+(s<<2)|0,h|0,i|0)|0;i=c[d>>2]|0;io(h|0,i|0,z-i|0)|0;m=h;return m|0}i=(q-g>>2)+j|0;if(i>>>0>1073741823)rn(a);j=n-g|0;if(j>>2>>>0<536870911){n=j>>1;j=n>>>0<i>>>0?i:n;n=h;i=n-g>>2;if(!j){A=0;B=0;C=i;D=n}else{E=j;F=i;G=n;H=19}}else{n=h;E=1073741823;F=n-g>>2;G=n;H=19}if((H|0)==19){A=E;B=Tn(E<<2)|0;C=F;D=G}G=B+(C<<2)|0;C=B+(A<<2)|0;if((k|0)==(l|0))I=G;else{A=(l+-4-b|0)>>>2;b=k;k=G;while(1){c[k>>2]=c[b>>2];b=b+4|0;if((b|0)==(l|0))break;else k=k+4|0}I=G+(A+1<<2)|0}A=D-f|0;k=G+(0-(A>>2)<<2)|0;ho(k|0,f|0,A|0)|0;A=(c[o>>2]|0)-D|0;ho(I|0,h|0,A|0)|0;c[a>>2]=k;c[o>>2]=I+(A>>2<<2);c[e>>2]=C;if(!f){m=G;return m|0}An(f);m=G;return m|0}function ge(e,f){e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;h=f+8|0;i=a[h>>0]|0;j=(i&1)==0;k=f+16|0;l=h+1|0;m=j?l:c[k>>2]|0;n=f+12|0;o=j?(i&255)>>>1:c[n>>2]|0;if(o>>>0>3){i=o;j=m;p=o;while(1){q=_(d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24,1540483477)|0;r=(_(q>>>24^q,1540483477)|0)^(_(p,1540483477)|0);i=i+-4|0;if(i>>>0<=3){s=r;break}else{j=j+4|0;p=r}}p=o+-4|0;j=p&-4;t=p-j|0;u=m+(j+4)|0;v=s}else{t=o;u=m;v=o}switch(t|0){case 3:{w=d[u+2>>0]<<16^v;x=6;break}case 2:{w=v;x=6;break}case 1:{y=v;x=7;break}default:z=v}if((x|0)==6){y=d[u+1>>0]<<8^w;x=7}if((x|0)==7)z=_(d[u>>0]^y,1540483477)|0;y=_(z>>>13^z,1540483477)|0;z=y>>>15^y;y=f+4|0;c[y>>2]=z;u=e+4|0;w=c[u>>2]|0;v=e+12|0;A=+(((c[v>>2]|0)+1|0)>>>0);B=+g[e+16>>2];if((w|0)==0|A>+(w>>>0)*B){if(w>>>0>2)C=(w+-1&w|0)==0;else C=0;t=(C&1|w<<1)^1;C=~~+Z(+(A/B))>>>0;he(e,t>>>0<C>>>0?C:t);D=c[y>>2]|0;E=c[u>>2]|0}else{D=z;E=w}w=E+-1|0;z=(w&E|0)==0;if(z)F=w&D;else F=(D>>>0)%(E>>>0)|0;u=c[(c[e>>2]|0)+(F<<2)>>2]|0;if(!u){y=e+8|0;c[f>>2]=c[y>>2];c[y>>2]=f;c[(c[e>>2]|0)+(F<<2)>>2]=y;y=c[f>>2]|0;if(!y){G=c[v>>2]|0;H=G+1|0;c[v>>2]=H;return f|0}t=c[y+4>>2]|0;if(z)I=t&w;else I=(t>>>0)%(E>>>0)|0;c[(c[e>>2]|0)+(I<<2)>>2]=f;G=c[v>>2]|0;H=G+1|0;c[v>>2]=H;return f|0}I=c[u>>2]|0;a:do if(I)if(z){t=u;y=I;C=0;o=u;while(1){m=c[y+4>>2]|0;if((m&w|0)!=(F|0)){J=t;K=o;break a}b:do if((m|0)==(D|0)?(s=y+8|0,j=b[s>>1]|0,p=(j&1)==0,i=(j&254)>>>1,r=p?i:c[y+12>>2]|0,q=a[h>>0]|0,L=(q&1)==0,M=(j&65535)>>>8&255,(r|0)==((L?(q&255)>>>1:c[n>>2]|0)|0)):0){q=L?l:c[k>>2]|0;if(!p){N=(um(c[y+16>>2]|0,q,r)|0)==0;x=28;break}if(r)if(M<<24>>24==(a[q>>0]|0)){M=i;i=s+1|0;s=q;while(1){M=M+-1|0;i=i+1|0;if(!M){O=1;break b}s=s+1|0;if((a[i>>0]|0)!=(a[s>>0]|0)){N=0;x=28;break}}}else{N=0;x=28}else O=1}else{N=0;x=28}while(0);if((x|0)==28){x=0;if(N|C^1)O=N;else{J=t;K=o;break a}}m=c[y>>2]|0;if(!m){J=y;K=y;break}else{s=y;i=y;y=m;C=C|O;o=s;t=i}}}else{t=I;o=u;C=0;y=u;while(1){i=c[t+4>>2]|0;if(((i>>>0)%(E>>>0)|0|0)!=(F|0)){J=o;K=y;break a}c:do if((i|0)==(D|0)?(s=t+8|0,m=b[s>>1]|0,M=(m&1)==0,q=(m&254)>>>1,r=M?q:c[t+12>>2]|0,p=a[h>>0]|0,L=(p&1)==0,j=(m&65535)>>>8&255,(r|0)==((L?(p&255)>>>1:c[n>>2]|0)|0)):0){p=L?l:c[k>>2]|0;if(!M){P=(um(c[t+16>>2]|0,p,r)|0)==0;x=45;break}if(r)if(j<<24>>24==(a[p>>0]|0)){j=q;q=s+1|0;s=p;while(1){j=j+-1|0;q=q+1|0;if(!j){Q=1;break c}s=s+1|0;if((a[q>>0]|0)!=(a[s>>0]|0)){P=0;x=45;break}}}else{P=0;x=45}else Q=1}else{P=0;x=45}while(0);if((x|0)==45){x=0;if(P|C^1)Q=P;else{J=o;K=y;break a}}i=c[t>>2]|0;if(!i){J=t;K=t;break}else{s=t;q=t;t=i;C=C|Q;y=s;o=q}}}else{J=u;K=u}while(0);c[f>>2]=c[K>>2];c[J>>2]=f;J=c[f>>2]|0;if(!J){G=c[v>>2]|0;H=G+1|0;c[v>>2]=H;return f|0}K=c[J+4>>2]|0;if(z)R=K&w;else R=(K>>>0)%(E>>>0)|0;if((R|0)==(F|0)){G=c[v>>2]|0;H=G+1|0;c[v>>2]=H;return f|0}c[(c[e>>2]|0)+(R<<2)>>2]=f;G=c[v>>2]|0;H=G+1|0;c[v>>2]=H;return f|0}function he(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0;if((b|0)!=1)if(!(b+-1&b))d=b;else d=fn(b)|0;else d=2;b=c[a+4>>2]|0;if(d>>>0>b>>>0){ie(a,d);return}if(d>>>0>=b>>>0)return;if(b>>>0>2)e=(b+-1&b|0)==0;else e=0;f=~~+Z(+(+((c[a+12>>2]|0)>>>0)/+g[a+16>>2]))>>>0;if(e)h=1<<32-(aa(f+-1|0)|0);else h=fn(f)|0;f=d>>>0<h>>>0?h:d;if(f>>>0>=b>>>0)return;ie(a,f);return}function ie(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;f=d+4|0;if(!e){g=c[d>>2]|0;c[d>>2]=0;if(g|0)An(g);c[f>>2]=0;return}g=Tn(e<<2)|0;h=c[d>>2]|0;c[d>>2]=g;if(h|0)An(h);c[f>>2]=e;f=0;do{c[(c[d>>2]|0)+(f<<2)>>2]=0;f=f+1|0}while((f|0)!=(e|0));f=d+8|0;h=c[f>>2]|0;if(!h)return;g=c[h+4>>2]|0;i=e+-1|0;j=(i&e|0)==0;if(j)k=g&i;else k=(g>>>0)%(e>>>0)|0;c[(c[d>>2]|0)+(k<<2)>>2]=f;f=c[h>>2]|0;if(!f)return;else{l=h;m=f;n=k;o=h}a:while(1){h=l;k=m;f=o;b:while(1){g=k;while(1){p=c[g+4>>2]|0;if(j)q=p&i;else q=(p>>>0)%(e>>>0)|0;if((q|0)==(n|0)){r=g;break}p=(c[d>>2]|0)+(q<<2)|0;if(!(c[p>>2]|0)){s=p;t=q;u=g;v=f;break b}p=c[g>>2]|0;c:do if(p){w=g+8|0;x=b[w>>1]|0;y=(x&1)==0;z=(x&254)>>>1;A=y?z:c[g+12>>2]|0;B=(x&65535)>>>8&255;x=(A|0)==0;C=w+1|0;w=g+16|0;if(y){y=p;D=g;while(1){E=y+8|0;F=a[E>>0]|0;G=(F&1)==0;if((A|0)!=((G?(F&255)>>>1:c[y+12>>2]|0)|0)){H=D;break c}F=G?E+1|0:c[y+16>>2]|0;d:do if(!x){if(B<<24>>24==(a[F>>0]|0)){I=z;J=C;K=F}else{H=D;break c}while(1){I=I+-1|0;J=J+1|0;if(!I)break d;K=K+1|0;if((a[J>>0]|0)!=(a[K>>0]|0)){H=D;break c}}}while(0);F=c[y>>2]|0;if(!F){H=y;break}else{E=y;y=F;D=E}}}else{if(x){D=p;y=g;while(1){C=a[D+8>>0]|0;if(((C&1)==0?(C&255)>>>1:c[D+12>>2]|0)|0){H=y;break c}C=c[D>>2]|0;if(!C){H=D;break c}else{z=D;D=C;y=z}}}else{L=p;M=g}while(1){y=L+8|0;D=a[y>>0]|0;x=(D&1)==0;if((A|0)!=((x?(D&255)>>>1:c[L+12>>2]|0)|0)){H=M;break c}if(um(c[w>>2]|0,x?y+1|0:c[L+16>>2]|0,A)|0){H=M;break c}y=c[L>>2]|0;if(!y){H=L;break}else{x=L;L=y;M=x}}}}else H=g;while(0);c[f>>2]=c[H>>2];c[H>>2]=c[c[(c[d>>2]|0)+(q<<2)>>2]>>2];c[c[(c[d>>2]|0)+(q<<2)>>2]>>2]=g;g=c[h>>2]|0;if(!g){N=38;break a}}g=c[r>>2]|0;if(!g){N=38;break a}else{h=r;k=g;f=r}}c[s>>2]=v;f=c[u>>2]|0;if(!f){N=38;break}else{l=u;m=f;n=t;o=u}}if((N|0)==38)return}function je(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function ke(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function le(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function me(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function ne(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function oe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function pe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function qe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function re(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=e;h=a+8|0;i=(c[h>>2]|0)-e|0;if(i>>2>>>0<536870911){j=i>>1;i=j>>>0<f>>>0?f:j;j=c[d>>2]|0;f=j-e>>2;k=j;if(!i){l=0;m=0;n=f;o=k}else{p=i;q=k;r=f;s=6}}else{f=c[d>>2]|0;p=1073741823;q=f;r=f-e>>2;s=6}if((s|0)==6){l=p;m=Tn(p<<2)|0;n=r;o=q}q=m+(n<<2)|0;n=q;r=m+(l<<2)|0;c[q>>2]=c[b>>2];b=q+4|0;if((o|0)==(g|0)){t=n;u=e;v=o}else{e=o;o=q;q=n;while(1){e=e+-4|0;n=c[e>>2]|0;c[e>>2]=0;c[o+-4>>2]=n;o=q+-4|0;n=o;if((e|0)==(g|0)){w=n;break}else q=n}t=w;u=c[a>>2]|0;v=c[d>>2]|0}c[a>>2]=t;c[d>>2]=b;c[h>>2]=r;r=u;if((v|0)!=(r|0)){h=v;do{h=h+-4|0;v=c[h>>2]|0;c[h>>2]=0;if(v|0){Pd(v);An(v)}}while((h|0)!=(r|0))}if(!u)return;An(u);return}function se(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>5)+1|0;if(f>>>0>134217727)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>5>>>0<67108863){i=h>>4;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>5;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=134217727;o=f;p=f-e>>5;q=6}if((q|0)==6){j=n;k=Tn(n<<5)|0;l=p;m=o}o=k+(l<<5)|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];c[o+16>>2]=c[b+16>>2];c[o+20>>2]=c[b+20>>2];c[o+24>>2]=c[b+24>>2];c[o+28>>2]=c[b+28>>2];b=m-e|0;m=o+(0-(b>>5)<<5)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+32;c[g>>2]=k+(j<<5);if(!e)return;An(e);return}function te(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;h=i;i=i+32|0;j=h;k=c[308+(g<<2)>>2]|0;l=a[k>>0]|0;m=k;a:do switch(l<<24>>24){case 34:{n=0;o=k;b:while(1){p=o+1|0;switch(a[p>>0]|0){case 34:{q=n;break a;break}case 44:case 39:{break b;break}case 92:{r=o+2|0;if((a[r>>0]|0)==92)s=r;else break b;break}default:s=p}n=n+1|0;o=s}if(!(l<<24>>24))q=0;else{t=1;u=6}break}case 0:{q=0;break}default:{t=1;u=6}}while(0);if((u|0)==6)while(1){u=0;if(!(a[k+t>>0]|0)){q=t;break}else{t=t+1|0;u=6}}c:do if((g|0)==-2){v=q;u=21}else{t=b[6788+(b[f>>1]<<1)>>1]|0;k=t<<16>>16;c[j>>2]=m;d:do if(t<<16>>16!=-274?(l=t<<16>>16<0?0-k|0:0,s=797-k+1|0,o=(s|0)<75?s:75,(l|0)<(o|0)):0){s=1;n=q;p=l;while(1){if((p|0)!=1?(b[7598+(p+k<<1)>>1]|0)==(p|0):0){if((s|0)==5){w=q;break d}l=c[308+(p<<2)>>2]|0;r=s+1|0;c[j+(s<<2)>>2]=l;x=l;l=a[x>>0]|0;e:do switch(l<<24>>24){case 34:{y=0;z=x;f:while(1){A=z+1|0;switch(a[A>>0]|0){case 34:{B=y;break e;break}case 44:case 39:{break f;break}case 92:{C=z+2|0;if((a[C>>0]|0)==92)D=C;else break f;break}default:D=A}y=y+1|0;z=D}if(!(l<<24>>24))B=0;else{E=1;u=17}break}case 0:{B=0;break}default:{E=1;u=17}}while(0);if((u|0)==17)while(1){u=0;if(!(a[x+E>>0]|0)){B=E;break}else{E=E+1|0;u=17}}x=B+n|0;if(n>>>0>x>>>0){F=2;u=56;break}else{G=r;H=x}}else{G=s;H=n}p=p+1|0;if((p|0)>=(o|0)){I=G;J=H;break}else{s=G;n=H}}if((u|0)==56){i=h;return F|0}switch(I|0){case 0:{v=J;u=21;break c;break}case 1:{w=J;break d;break}case 2:{K=I;L=14116;M=J;break c;break}case 3:{K=I;L=14158;M=J;break c;break}case 4:{K=I;L=14206;M=J;break c;break}case 5:{K=I;L=14260;M=J;break c;break}default:{K=I;L=0;M=J;break c}}}else w=q;while(0);K=1;L=14088;M=w}while(0);if((u|0)==21){K=0;L=12903;M=v}v=0;while(1)if(!(a[L+v>>0]|0)){N=v;break}else v=v+1|0;v=N+M|0;N=M>>>0>v>>>0;w=N?M:v;if(N){F=2;i=h;return F|0}if((c[d>>2]|0)>>>0<w>>>0){N=w<<1;c[d>>2]=w>>>0>N>>>0?-1:N;F=1;i=h;return F|0}g:do if((K|0)>0){N=L;w=0;d=e;h:while(1){v=N;M=d;i:while(1){q=a[v>>0]|0;a[M>>0]=q;switch(q<<24>>24){case 0:{F=0;break h;break}case 37:{q=v+1|0;if((a[q>>0]|0)==115){O=v;P=M;break i}else Q=q;break}default:Q=v+1|0}v=Q;M=M+1|0}M=c[j+(w<<2)>>2]|0;w=w+1|0;v=a[M>>0]|0;j:do if(v<<24>>24==34){q=(P|0)==0;k:do if(q){J=0;I=M;while(1){H=I+1|0;switch(a[H>>0]|0){case 44:case 39:{u=42;break j;break}case 34:{R=J;S=0;break k;break}case 92:{G=I+2|0;if((a[G>>0]|0)==92)T=G;else{u=42;break j}break}default:T=H}J=J+1|0;I=T}}else{I=0;J=M;while(1){H=J+1|0;G=a[H>>0]|0;switch(G<<24>>24|0){case 44:case 39:{U=P;V=M;u=45;break j;break}case 34:{R=I;S=P;break k;break}case 92:{B=J+2|0;if((a[B>>0]|0)==92){W=92;X=B}else{U=P;V=M;u=45;break j}break}default:{W=G;X=H}}a[P+I>>0]=W;I=I+1|0;J=X}}while(0);if(q){Y=R;Z=S}else{a[S+R>>0]=0;Y=R;Z=S}}else u=42;while(0);if((u|0)==42){u=0;if(!P)if(!(v<<24>>24)){Y=0;Z=0}else{r=1;while(1)if(!(a[M+r>>0]|0)){Y=r;Z=0;break}else r=r+1|0}else{U=P;V=M;u=45}}if((u|0)==45){while(1){u=0;r=a[V>>0]|0;a[U>>0]=r;if(!(r<<24>>24)){_=U;break}else{U=U+1|0;V=V+1|0;u=45}}Y=_-P|0;Z=P}M=Z+Y|0;r=O+2|0;if((w|0)>=(K|0)){$=r;aa=M;break g}else{N=r;d=M}}i=h;return F|0}else{$=L;aa=e}while(0);e=a[$>>0]|0;a[aa>>0]=e;if(!(e<<24>>24)){F=0;i=h;return F|0}else{ba=$;ca=aa}do{ca=ca+1|0;ba=ba+1|0;aa=a[ba>>0]|0;a[ca>>0]=aa}while(aa<<24>>24!=0);F=0;i=h;return F|0}function ue(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;do switch(b|0){case 136:{a=c[d>>2]|0;if(!a)return;Mb(a);An(a);return}case 135:{a=c[d>>2]|0;if(!a)return;e=c[a>>2]|0;f=e;if(e|0){g=a+4|0;h=c[g>>2]|0;if((h|0)!=(e|0))c[g>>2]=h+(~((h+-32-f|0)>>>5)<<5);An(e)}An(a);return}case 133:{a=c[d>>2]|0;if(!a)return;e=c[a>>2]|0;if(e|0){f=a+4|0;h=c[f>>2]|0;if((h|0)==(e|0))i=e;else{g=h;do{h=g+-4|0;c[f>>2]=h;j=c[h>>2]|0;c[h>>2]=0;if(j|0){Pd(j);An(j)}g=c[f>>2]|0}while((g|0)!=(e|0));i=c[a>>2]|0}An(i)}An(a);return}case 132:{e=c[d>>2]|0;if(!e)return;Pd(e);An(e);return}case 131:{e=c[d>>2]|0;if(!e)return;Pd(e);An(e);return}case 130:{e=c[d>>2]|0;if(!e)return;Nd(e);An(e);return}case 129:{Cc(d);return}case 76:{yi(d);return}case 77:{yi(d);return}case 78:{$h(d);return}case 79:{e=c[d>>2]|0;if(!e)return;g=c[e>>2]|0;f=g;if(g|0){j=e+4|0;h=c[j>>2]|0;if((h|0)!=(g|0))c[j>>2]=h+(~((h+-4-f|0)>>>2)<<2);An(g)}An(e);return}case 81:{e=c[d>>2]|0;if(!e)return;td(e);An(e);return}case 82:{e=c[d>>2]|0;if(!e)return;g=c[e+12>>2]|0;f=g;if(g|0){h=e+16|0;j=c[h>>2]|0;if((j|0)!=(g|0))c[h>>2]=j+(~((j+-4-f|0)>>>2)<<2);An(g)}g=c[e>>2]|0;f=g;if(g|0){j=e+4|0;h=c[j>>2]|0;if((h|0)!=(g|0))c[j>>2]=h+(~((h+-4-f|0)>>>2)<<2);An(g)}An(e);return}case 83:{e=c[d>>2]|0;if(!e)return;g=c[e+12>>2]|0;f=g;if(g|0){h=e+16|0;j=c[h>>2]|0;if((j|0)!=(g|0))c[h>>2]=j+(~((j+-4-f|0)>>>2)<<2);An(g)}g=c[e>>2]|0;f=g;if(g|0){j=e+4|0;h=c[j>>2]|0;if((h|0)!=(g|0))c[j>>2]=h+(~((h+-4-f|0)>>>2)<<2);An(g)}An(e);return}case 85:{e=c[d>>2]|0;if(!e)return;Bd(e);An(e);return}case 87:{Cc(d);return}case 89:{$h(d+4|0);return}case 90:{Cc(d);return}case 91:{e=c[d>>2]|0;if(!e)return;g=c[e>>2]|0;f=g;if(g|0){h=e+4|0;j=c[h>>2]|0;if((j|0)!=(g|0))c[h>>2]=j+(~((j+-32-f|0)>>>5)<<5);An(g)}An(e);return}case 92:{$h(d);return}case 93:{$h(d);return}case 94:{$h(d);return}case 97:{Dc(c[d>>2]|0);return}case 98:{e=c[d>>2]|0;if(!e)return;Ec(e);An(e);return}case 99:{e=c[d>>2]|0;if(!e)return;Ec(e);An(e);return}case 100:{e=c[d>>2]|0;if(!e)return;Fc(e);An(e);return}case 101:{Dc(c[d>>2]|0);return}case 102:{Dc(c[d>>2]|0);return}case 103:{Dc(c[d>>2]|0);return}case 104:{Dc(c[d>>2]|0);return}case 105:{Dc(c[d>>2]|0);return}case 106:{Dc(c[d>>2]|0);return}case 107:{Bi(c[d>>2]|0);return}case 108:{Bi(c[d>>2]|0);return}case 109:{e=c[d>>2]|0;if(!e)return;rd(e);An(e);return}case 110:{e=c[d>>2]|0;if(!e)return;g=e+4|0;f=c[g>>2]|0;c[g>>2]=0;if(f|0){Fd(f);An(f)}f=c[e>>2]|0;c[e>>2]=0;if(f|0){rd(f);An(f)}An(e);return}case 111:{Dc(c[d>>2]|0);return}case 112:{e=c[d>>2]|0;if(!e)return;xd(e);An(e);return}case 113:{e=c[d>>2]|0;if(!e)return;f=e+8|0;g=c[f>>2]|0;c[f>>2]=0;if(g|0){Fd(g);An(g)}g=e+4|0;f=c[g>>2]|0;c[g>>2]=0;if(f|0){xd(f);An(f)}f=c[e>>2]|0;c[e>>2]=0;if(f|0){vd(f);An(f)}An(e);return}case 114:{e=c[d>>2]|0;if(!e)return;zd(e);An(e);return}case 115:{e=c[d>>2]|0;if(!e)return;f=e+8|0;g=c[f>>2]|0;c[f>>2]=0;if(g|0){Fd(g);An(g)}g=e+4|0;f=c[g>>2]|0;c[g>>2]=0;if(f|0){zd(f);An(f)}f=c[e>>2]|0;c[e>>2]=0;if(f|0){Bd(f);An(f)}An(e);return}case 117:{e=c[d>>2]|0;if(!e)return;Dd(e);An(e);return}case 118:{e=c[d>>2]|0;if(!e)return;Dd(e);An(e);return}case 119:{e=c[d>>2]|0;if(!e)return;Dd(e);An(e);return}case 120:{e=c[d>>2]|0;if(!e)return;Fd(e);An(e);return}case 121:{e=c[d>>2]|0;if(!e)return;Fd(e);An(e);return}case 122:{e=c[d>>2]|0;if(!e)return;f=c[e>>2]|0;c[e>>2]=0;if(f|0){Fd(f);An(f)}An(e);return}case 123:{e=c[d>>2]|0;if(!e)return;f=c[e>>2]|0;c[e>>2]=0;if(f|0){Fd(f);An(f)}An(e);return}case 124:{e=c[d>>2]|0;if(!e)return;od(e);An(e);return}case 125:{Cc(d);return}case 126:{e=c[d>>2]|0;if(!e)return;Id(e);An(e);return}case 127:{e=c[d>>2]|0;if(!e)return;Kd(e);An(e);return}case 128:{e=c[d>>2]|0;if(!e)return;Id(e);An(e);return}default:return}while(0)}function ve(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+32|0;f=e;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+4>>2]=d;d=be(a,f)|0;a=c[f+12>>2]|0;if(a|0)Wn(a);a=c[f+16>>2]|0;if(a|0)Wn(a);a=c[f+20>>2]|0;if(a|0)Wn(a);c[b>>2]=c[f>>2];i=e;return (c[f+8>>2]|d|0)!=0|0}function we(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0;f=i;i=i+608|0;g=f+472|0;h=f+464|0;j=f+456|0;k=f+448|0;l=f+416|0;m=f+392|0;n=f+368|0;o=f+360|0;p=f+328|0;q=f+304|0;r=f+280|0;s=f+272|0;t=f+264|0;u=f+256|0;v=f+248|0;w=f+240|0;x=f+232|0;y=f+224|0;z=f+192|0;A=f+168|0;B=f+144|0;C=f+136|0;D=f+104|0;E=f+80|0;F=f+56|0;G=f+48|0;H=f+40|0;I=f+32|0;J=f+24|0;K=f+16|0;L=f+8|0;M=f;N=f+592|0;O=f+576|0;P=f+568|0;Q=f+488|0;R=f+480|0;c[Q>>2]=e;c[Q+4>>2]=b;c[Q+8>>2]=d;b=Q+12|0;e=Q+68|0;c[e>>2]=0;S=Q+72|0;c[S>>2]=0;T=b;U=T+52|0;do{c[T>>2]=0;T=T+4|0}while((T|0)<(U|0));c[R>>2]=24;c[R+4>>2]=Q;c[Q+36>>2]=R;R=c[d>>2]|0;T=c[d+4>>2]|0;if((R|0)!=(T|0)){d=Q+20|0;U=Q+24|0;V=Q+28|0;W=Q+32|0;X=Q+16|0;Y=Q+36|0;Z=P+4|0;_=P+4|0;$=O+4|0;aa=O+8|0;ba=R;do{R=c[ba>>2]|0;switch(c[R>>2]|0){case 0:{ca=c[R+8>>2]|0;c[b>>2]=ca;da=ca+24|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;ea=c[da>>2]|0;if(ea|0){fa=ea;ea=0;while(1){a:do switch(c[fa+16>>2]|0){case 0:{ga=c[fa+24>>2]|0;c[X>>2]=ga;ha=ga+60|0;if((c[ga+64>>2]|0)-(c[ha>>2]|0)>>2>>>0>1){ye(Q,fa,15180,J);ia=ea;break a}do if(a[ga+8>>0]|0){ja=c[b>>2]|0;ka=c[ja+96>>2]|0;la=(c[ja+100>>2]|0)-ka>>2;ja=ga+40|0;ma=c[ja>>2]|0;na=c[ja+4>>2]|0;ja=((la|0)<0)<<31>>31;if(((na|0)>-1|(na|0)==-1&ma>>>0>4294967295)&((na|0)<(ja|0)|(na|0)==(ja|0)&ma>>>0<la>>>0)){ja=c[ka+(ma<<2)>>2]|0;Ae(Q,fa,ha,ja+20|0,15228);Ae(Q,fa,ga+48|0,ja+8|0,15312);break}else{c[I>>2]=17672;c[I+4>>2]=la;ye(Q,ga+16|0,14804,I);break}}while(0);c[e>>2]=fa;Ei(Y,ha)|0;la=c[ga+124>>2]|0;if(la|0){ja=la;do{Be(Q,ja);ja=c[ja+20>>2]|0}while((ja|0)!=0)}pj(Y)|0;c[X>>2]=0;ia=ea;break}case 1:{ja=c[fa+24>>2]|0;ze(Q,fa,c[ja+16>>2]|0,c[ja+8>>2]|0,15580);c[V>>2]=(c[V>>2]|0)+1;ia=ea;break}case 2:{ja=c[fa+24>>2]|0;switch(c[ja+16>>2]|0){case 0:{ga=c[ja+20>>2]|0;if(!(a[ga+8>>0]|0)){ia=ea;break a}ha=c[b>>2]|0;la=(c[ha+100>>2]|0)-(c[ha+96>>2]|0)>>2;ha=ga+40|0;ma=c[ha>>2]|0;ka=c[ha+4>>2]|0;ha=((la|0)<0)<<31>>31;if(((ka|0)>-1|(ka|0)==-1&ma>>>0>4294967295)&((ka|0)<(ha|0)|(ka|0)==(ha|0)&ma>>>0<la>>>0)){ia=ea;break a}c[H>>2]=17672;c[H+4>>2]=la;ye(Q,ga+16|0,14804,H);ia=ea;break a;break}case 1:{ga=c[ja+20>>2]|0;if((c[d>>2]|0)==1)ye(Q,fa,15610,G);la=ga+8|0;ma=la;ha=c[ma>>2]|0;ka=c[ma+4>>2]|0;if(ka>>>0>0|(ka|0)==0&ha>>>0>4294967295){c[F>>2]=15633;ma=F+8|0;c[ma>>2]=ha;c[ma+4>>2]=ka;ka=F+16|0;c[ka>>2]=-1;c[ka+4>>2]=0;ye(Q,fa,15639,F)}if(a[ga+24>>0]|0){ka=ga+16|0;ga=ka;ma=c[ga>>2]|0;ha=c[ga+4>>2]|0;if(ha>>>0>0|(ha|0)==0&ma>>>0>4294967295){c[E>>2]=15633;ga=E+8|0;c[ga>>2]=ma;c[ga+4>>2]=ha;ga=E+16|0;c[ga>>2]=-1;c[ga+4>>2]=0;ye(Q,fa,15675,E);ga=ka;oa=c[ga+4>>2]|0;pa=c[ga>>2]|0}else{oa=ha;pa=ma}ma=la;la=c[ma>>2]|0;ha=c[ma+4>>2]|0;if(oa>>>0<ha>>>0|(oa|0)==(ha|0)&pa>>>0<la>>>0){c[D>>2]=15633;ma=D+8|0;c[ma>>2]=pa;c[ma+4>>2]=oa;c[D+16>>2]=15633;ma=D+24|0;c[ma>>2]=la;c[ma+4>>2]=ha;ye(Q,fa,15707,D)}}c[d>>2]=(c[d>>2]|0)+1;ia=ea;break a;break}case 2:{ha=c[ja+20>>2]|0;if((c[U>>2]|0)==1)ye(Q,fa,15750,C);ma=ha+8|0;la=ma;ga=c[la>>2]|0;ka=c[la+4>>2]|0;if(ka>>>0>0|(ka|0)==0&ga>>>0>65536){c[B>>2]=15780;la=B+8|0;c[la>>2]=ga;c[la+4>>2]=ka;ka=B+16|0;c[ka>>2]=65536;c[ka+4>>2]=0;ye(Q,fa,15639,B)}if(a[ha+24>>0]|0){ka=ha+16|0;ha=ka;la=c[ha>>2]|0;ga=c[ha+4>>2]|0;if(ga>>>0>0|(ga|0)==0&la>>>0>65536){c[A>>2]=15780;ha=A+8|0;c[ha>>2]=la;c[ha+4>>2]=ga;ha=A+16|0;c[ha>>2]=65536;c[ha+4>>2]=0;ye(Q,fa,15675,A);ha=ka;qa=c[ha+4>>2]|0;ra=c[ha>>2]|0}else{qa=ga;ra=la}la=ma;ma=c[la>>2]|0;ga=c[la+4>>2]|0;if(qa>>>0<ga>>>0|(qa|0)==(ga|0)&ra>>>0<ma>>>0){c[z>>2]=15780;la=z+8|0;c[la>>2]=ra;c[la+4>>2]=qa;c[z+16>>2]=15780;la=z+24|0;c[la>>2]=ma;c[la+4>>2]=ga;ye(Q,fa,15707,z)}}c[U>>2]=(c[U>>2]|0)+1;ia=ea;break a;break}case 3:{if(a[(c[ja+20>>2]|0)+12>>0]|0)ye(Q,fa,15786,y);c[W>>2]=(c[W>>2]|0)+1;c[V>>2]=(c[V>>2]|0)+1;ia=ea;break a;break}default:{ia=ea;break a}}break}case 3:{ja=c[fa+24>>2]|0;switch(c[ja+8>>2]|0){case 0:{ga=c[b>>2]|0;la=(c[ga+52>>2]|0)-(c[ga+48>>2]|0)>>2;ga=ja+40|0;ma=c[ga>>2]|0;ha=c[ga+4>>2]|0;ga=((la|0)<0)<<31>>31;if(((ha|0)>-1|(ha|0)==-1&ma>>>0>4294967295)&((ha|0)<(ga|0)|(ha|0)==(ga|0)&ma>>>0<la>>>0)){ia=ea;break a}c[x>>2]=20395;c[x+4>>2]=la;ye(Q,ja+16|0,14804,x);ia=ea;break a;break}case 1:{la=c[b>>2]|0;ma=(c[la+112>>2]|0)-(c[la+108>>2]|0)>>2;la=ja+40|0;ga=c[la>>2]|0;ha=c[la+4>>2]|0;la=((ma|0)<0)<<31>>31;if(((ha|0)>-1|(ha|0)==-1&ga>>>0>4294967295)&((ha|0)<(la|0)|(ha|0)==(la|0)&ga>>>0<ma>>>0)){ia=ea;break a}c[w>>2]=17865;c[w+4>>2]=ma;ye(Q,ja+16|0,14804,w);ia=ea;break a;break}case 2:{ma=c[b>>2]|0;ga=(c[ma+136>>2]|0)-(c[ma+132>>2]|0)>>2;ma=ja+40|0;la=c[ma>>2]|0;ha=c[ma+4>>2]|0;ma=((ga|0)<0)<<31>>31;if(((ha|0)>-1|(ha|0)==-1&la>>>0>4294967295)&((ha|0)<(ma|0)|(ha|0)==(ma|0)&la>>>0<ga>>>0)){ia=ea;break a}c[v>>2]=17871;c[v+4>>2]=ga;ye(Q,ja+16|0,14804,v);ia=ea;break a;break}case 3:{ga=ja+16|0;la=c[b>>2]|0;ma=c[la+60>>2]|0;ha=(c[la+64>>2]|0)-ma>>2;la=ja+40|0;ja=c[la>>2]|0;ka=c[la+4>>2]|0;la=((ha|0)<0)<<31>>31;if(!(((ka|0)>-1|(ka|0)==-1&ja>>>0>4294967295)&((ka|0)<(la|0)|(ka|0)==(la|0)&ja>>>0<ha>>>0))){c[u>>2]=17878;c[u+4>>2]=ha;ye(Q,ga,14804,u);ia=ea;break a}if(!(a[(c[ma+(ja<<2)>>2]|0)+12>>0]|0)){ia=ea;break a}ye(Q,ga,15821,t);ia=ea;break a;break}default:{ia=ea;break a}}break}case 5:{ga=c[fa+24>>2]|0;if((c[d>>2]|0)==1)ye(Q,fa,15610,s);ja=ga+8|0;ma=ja;ha=c[ma>>2]|0;la=c[ma+4>>2]|0;if(la>>>0>0|(la|0)==0&ha>>>0>4294967295){c[r>>2]=15633;ma=r+8|0;c[ma>>2]=ha;c[ma+4>>2]=la;la=r+16|0;c[la>>2]=-1;c[la+4>>2]=0;ye(Q,fa,15639,r)}if(a[ga+24>>0]|0){la=ga+16|0;ga=la;ma=c[ga>>2]|0;ha=c[ga+4>>2]|0;if(ha>>>0>0|(ha|0)==0&ma>>>0>4294967295){c[q>>2]=15633;ga=q+8|0;c[ga>>2]=ma;c[ga+4>>2]=ha;ga=q+16|0;c[ga>>2]=-1;c[ga+4>>2]=0;ye(Q,fa,15675,q);ga=la;sa=c[ga+4>>2]|0;ta=c[ga>>2]|0}else{sa=ha;ta=ma}ma=ja;ja=c[ma>>2]|0;ha=c[ma+4>>2]|0;if(sa>>>0<ha>>>0|(sa|0)==(ha|0)&ta>>>0<ja>>>0){c[p>>2]=15633;ma=p+8|0;c[ma>>2]=ta;c[ma+4>>2]=sa;c[p+16>>2]=15633;ma=p+24|0;c[ma>>2]=ja;c[ma+4>>2]=ha;ye(Q,fa,15707,p)}}c[d>>2]=(c[d>>2]|0)+1;ia=ea;break}case 9:{if(ea)ye(Q,fa,15856,k);ha=c[b>>2]|0;ma=c[ha+48>>2]|0;ja=(c[ha+52>>2]|0)-ma>>2;ha=fa+48|0;ga=c[ha>>2]|0;la=c[ha+4>>2]|0;ha=((ja|0)<0)<<31>>31;if(!(((la|0)>-1|(la|0)==-1&ga>>>0>4294967295)&((la|0)<(ha|0)|(la|0)==(ha|0)&ga>>>0<ja>>>0))){c[j>>2]=20395;c[j+4>>2]=ja;ye(Q,fa+24|0,14804,j);ia=1;break a}ja=c[ma+(ga<<2)>>2]|0;ga=ja;if(ja){if((c[ga+52>>2]|0)!=(c[ga+48>>2]|0))ye(Q,fa,15888,h);if((c[ga+64>>2]|0)!=(c[ga+60>>2]|0)){ye(Q,fa,15919,g);ia=1}else ia=1}else ia=1;break}case 7:{ga=c[fa+24>>2]|0;if((c[U>>2]|0)==1)ye(Q,fa,15750,o);ja=ga+8|0;ma=ja;ha=c[ma>>2]|0;la=c[ma+4>>2]|0;if(la>>>0>0|(la|0)==0&ha>>>0>65536){c[n>>2]=15780;ma=n+8|0;c[ma>>2]=ha;c[ma+4>>2]=la;la=n+16|0;c[la>>2]=65536;c[la+4>>2]=0;ye(Q,fa,15639,n)}if(a[ga+24>>0]|0){la=ga+16|0;ga=la;ma=c[ga>>2]|0;ha=c[ga+4>>2]|0;if(ha>>>0>0|(ha|0)==0&ma>>>0>65536){c[m>>2]=15780;ga=m+8|0;c[ga>>2]=ma;c[ga+4>>2]=ha;ga=m+16|0;c[ga>>2]=65536;c[ga+4>>2]=0;ye(Q,fa,15675,m);ga=la;ua=c[ga+4>>2]|0;va=c[ga>>2]|0}else{ua=ha;va=ma}ma=ja;ja=c[ma>>2]|0;ha=c[ma+4>>2]|0;if(ua>>>0<ha>>>0|(ua|0)==(ha|0)&va>>>0<ja>>>0){c[l>>2]=15780;ma=l+8|0;c[ma>>2]=va;c[ma+4>>2]=ua;c[l+16>>2]=15780;ma=l+24|0;c[ma>>2]=ja;c[ma+4>>2]=ha;ye(Q,fa,15707,l)}}c[U>>2]=(c[U>>2]|0)+1;ia=ea;break}default:ia=ea}while(0);fa=c[fa+20>>2]|0;if(!fa)break;else ea=ia}ea=c[da>>2]|0;if(ea|0){fa=ea;do{do if((c[fa+16>>2]|0)==6){ea=c[fa+24>>2]|0;ha=c[b>>2]|0;ma=(c[ha+112>>2]|0)-(c[ha+108>>2]|0)>>2;ja=ea+24|0;ga=c[ja>>2]|0;la=c[ja+4>>2]|0;ja=((ma|0)<0)<<31>>31;if(!(((la|0)>-1|(la|0)==-1&ga>>>0>4294967295)&((la|0)<(ja|0)|(la|0)==(ja|0)&ga>>>0<ma>>>0))){c[M>>2]=17865;c[M+4>>2]=ma;ye(Q,ea,14804,M);break}ma=c[ea+36>>2]|0;ga=c[ea+40>>2]|0;b:do if((ma|0)!=(ga|0)){ja=ha;la=ma;while(1){ka=(c[ja+52>>2]|0)-(c[ja+48>>2]|0)>>2;na=la+24|0;wa=c[na>>2]|0;xa=c[na+4>>2]|0;na=((ka|0)<0)<<31>>31;if(!(((xa|0)>-1|(xa|0)==-1&wa>>>0>4294967295)&((xa|0)<(na|0)|(xa|0)==(na|0)&wa>>>0<ka>>>0))){c[L>>2]=20395;c[L+4>>2]=ka;ye(Q,la,14804,L)}ka=la+32|0;if((ka|0)==(ga|0))break b;ja=c[b>>2]|0;la=ka}}while(0);ze(Q,fa,c[ea+32>>2]|0,-1,14838)}while(0);fa=c[fa+20>>2]|0}while((fa|0)!=0);fa=c[da>>2]|0;if(fa|0){ga=fa;do{do if((c[ga+16>>2]|0)==8){fa=c[ga+24>>2]|0;ma=c[b>>2]|0;ha=(c[ma+136>>2]|0)-(c[ma+132>>2]|0)>>2;ma=fa+24|0;la=c[ma>>2]|0;ja=c[ma+4>>2]|0;ma=((ha|0)<0)<<31>>31;if(((ja|0)>-1|(ja|0)==-1&la>>>0>4294967295)&((ja|0)<(ma|0)|(ja|0)==(ma|0)&la>>>0<ha>>>0)){ze(Q,ga,c[fa+32>>2]|0,-1,15160);break}else{c[K>>2]=17871;c[K+4>>2]=ha;ye(Q,fa,14804,K);break}}while(0);ga=c[ga+20>>2]|0}while((ga|0)!=0)}}}rh(ca+200|0,22,Q);break}case 1:{Ee(N,Q,c[R+8>>2]|0);break}case 11:case 12:{Ee(N,Q,c[R+8>>2]|0);break}case 10:{Ge(Q,c[R+8>>2]|0);break}case 9:{Ge(Q,c[R+8>>2]|0);break}case 8:{ga=c[R+8>>2]|0;Ee(P,Q,ga);switch(c[P>>2]|0){case 1:{Fe(Q,ga,c[Z>>2]|0,c[R+12>>2]|0);break}case 2:{da=c[_>>2]|0;fa=c[R+12>>2]|0;c[N>>2]=da;c[O>>2]=0;c[$>>2]=0;c[aa>>2]=0;if((da|0)!=-64)de(O,N);Fe(Q,ga,O,fa);fa=c[O>>2]|0;ga=fa;if(fa|0){da=c[$>>2]|0;if((da|0)!=(fa|0))c[$>>2]=da+(~((da+-4-ga|0)>>>2)<<2);An(fa)}break}default:{}}break}default:{}}ba=ba+4|0}while((ba|0)!=(T|0));T=c[S>>2]|0;S=Q+52|0;ba=c[S>>2]|0;if(!ba)ya=T;else{$=Q+56|0;O=c[$>>2]|0;if((O|0)==(ba|0))za=ba;else{N=O;while(1){O=N+-24|0;c[$>>2]=O;aa=c[N+-20>>2]|0;_=aa;if(!aa)Aa=O;else{O=N+-16|0;Z=c[O>>2]|0;if((Z|0)!=(aa|0))c[O>>2]=Z+(~((Z+-4-_|0)>>>2)<<2);An(aa);Aa=c[$>>2]|0}if((Aa|0)==(ba|0))break;else N=Aa}za=c[S>>2]|0}An(za);ya=T}}else ya=0;T=c[Q+40>>2]|0;if(!T){i=f;return ya|0}za=Q+44|0;Q=c[za>>2]|0;if((Q|0)!=(T|0))c[za>>2]=Q+(~((Q+-4-T|0)>>>2)<<2);An(T);i=f;return ya|0}function xe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;f=c[b+68>>2]|0;c[e>>2]=a;ye(b,f,28484,e);i=d;return}function ye(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[a+72>>2]=1;c[g>>2]=e;xi(c[a>>2]|0,b,c[a+4>>2]|0,d,g);i=f;return}function ze(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+64|0;j=h+48|0;k=h+40|0;l=h+32|0;m=h+24|0;n=h+16|0;o=h+8|0;p=h;q=(e|0)!=0;a:do if(q){if(c[e+20>>2]|0){c[p>>2]=g;ye(b,d,14858,p);i=h;return}switch(c[e+16>>2]|0){case 8:{r=c[e+40>>2]|0;break a;break}case 12:{s=c[b+12>>2]|0;t=c[s+60>>2]|0;u=(c[s+64>>2]|0)-t>>2;s=e+48|0;v=c[s>>2]|0;w=c[s+4>>2]|0;s=((u|0)<0)<<31>>31;if(!(((w|0)>-1|(w|0)==-1&v>>>0>4294967295)&((w|0)<(s|0)|(w|0)==(s|0)&v>>>0<u>>>0))){c[l>>2]=17878;c[l+4>>2]=u;ye(b,e+24|0,14804,l);i=h;return}u=c[t+(v<<2)>>2]|0;t=c[u+8>>2]|0;if((v|0)<(c[b+28>>2]|0)){if((v|0)>=(c[b+32>>2]|0))ye(b,d,15001,n)}else ye(b,d,14931,o);if(!(a[u+12>>0]|0)){r=t;break a}ye(b,d,15062,m);r=t;break a;break}default:{c[k>>2]=g;ye(b,d,14858,k);i=h;return}}}else r=-64;while(0);k=q?e:d;if((r|0)==(f|0)){i=h;return}switch(r|0){case -1:{x=28480;break}case -2:{x=28476;break}case -3:{x=28472;break}case -4:{x=28468;break}case -16:{x=28460;break}case -32:{x=28455;break}case -64:{x=28450;break}case 0:{x=28446;break}default:x=0}switch(f|0){case -1:{y=28480;break}case -2:{y=28476;break}case -3:{y=28472;break}case -4:{y=28468;break}case -16:{y=28460;break}case -32:{y=28455;break}case -64:{y=28450;break}case 0:{y=28446;break}default:y=0}c[j>>2]=g;c[j+4>>2]=x;c[j+8>>2]=y;ye(b,k,15119,j);i=h;return}function Ae(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+24|0;j=g;k=d+4|0;l=c[k>>2]|0;m=c[d>>2]|0;n=l-m>>2;o=c[e>>2]|0;p=(c[e+4>>2]|0)-o>>2;if((n|0)!=(p|0)){c[h>>2]=p;c[h+4>>2]=f;c[h+8>>2]=n;ye(a,b,15286,h);i=g;return}if((l|0)==(m|0)){i=g;return}h=m;m=o;o=l;l=0;while(1){n=c[h+(l<<2)>>2]|0;p=c[m+(l<<2)>>2]|0;if((n|0)!=0&((p|0)!=(n|0)&(p|0)!=0)){switch(n|0){case -1:{q=28480;break}case -2:{q=28476;break}case -3:{q=28472;break}case -4:{q=28468;break}case -16:{q=28460;break}case -32:{q=28455;break}case -64:{q=28450;break}case 0:{q=28446;break}default:q=0}switch(p|0){case -1:{r=28480;break}case -2:{r=28476;break}case -3:{r=28472;break}case -4:{r=28468;break}case -16:{r=28460;break}case -32:{r=28455;break}case -64:{r=28450;break}case 0:{r=28446;break}default:r=0}c[j>>2]=f;c[j+4>>2]=l;c[j+8>>2]=20395;c[j+12>>2]=q;c[j+16>>2]=r;ye(a,b,15235,j);s=c[d>>2]|0;t=c[k>>2]|0}else{s=h;t=o}p=l+1|0;if(p>>>0>=t-s>>2>>>0)break;h=s;m=c[e>>2]|0;o=t;l=p}i=g;return}function Be(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;d=i;i=i+128|0;e=d+112|0;f=d+104|0;g=d+96|0;h=d+88|0;j=d+80|0;k=d+72|0;l=d+64|0;m=d+56|0;n=d+48|0;o=d+40|0;p=d+32|0;q=d+24|0;r=d+16|0;s=d+8|0;t=d;c[a+68>>2]=b;do switch(c[b+16>>2]|0){case 0:{Gi(a+36|0,c[b+24>>2]|0)|0;i=d;return}case 1:{u=a+36|0;v=b+24|0;Ii(u,(c[v>>2]|0)+8|0)|0;w=c[(c[v>>2]|0)+20>>2]|0;if(w|0){v=w;do{Be(a,v);v=c[v+20>>2]|0}while((v|0)!=0)}$i(u)|0;i=d;return}case 2:{Ji(a+36|0,c[b+48>>2]|0)|0;i=d;return}case 3:{Mi(a+36|0,c[b+48>>2]|0)|0;i=d;return}case 4:{v=a+36|0;Oi(v)|0;w=c[b+24>>2]|0;x=c[w>>2]|0;y=c[w+4>>2]|0;if((x|0)!=(y|0)){w=x;do{Pi(v,c[w+24>>2]|0)|0;w=w+32|0}while((w|0)!=(y|0))}Pi(v,c[b+56>>2]|0)|0;Qi(v)|0;i=d;return}case 5:{y=c[a+12>>2]|0;w=c[y+48>>2]|0;u=(c[y+52>>2]|0)-w>>2;y=b+48|0;x=c[y>>2]|0;z=c[y+4>>2]|0;y=((u|0)<0)<<31>>31;if(((z|0)>-1|(z|0)==-1&x>>>0>4294967295)&((z|0)<(y|0)|(z|0)==(y|0)&x>>>0<u>>>0)){y=c[w+(x<<2)>>2]|0;Ri(a+36|0,y+48|0,y+60|0)|0;i=d;return}else{c[t>>2]=20395;c[t+4>>2]=u;ye(a,b+24|0,14804,t);i=d;return}break}case 6:{u=a+12|0;y=c[u>>2]|0;if((c[y+112>>2]|0)==(c[y+108>>2]|0)){ye(a,b,15321,s);A=c[u>>2]|0}else A=y;y=c[A+96>>2]|0;u=(c[A+100>>2]|0)-y>>2;x=b+48|0;w=c[x>>2]|0;z=c[x+4>>2]|0;x=((u|0)<0)<<31>>31;if(((z|0)>-1|(z|0)==-1&w>>>0>4294967295)&((z|0)<(x|0)|(z|0)==(x|0)&w>>>0<u>>>0)){x=c[y+(w<<2)>>2]|0;Ui(a+36|0,x+8|0,x+20|0)|0;i=d;return}else{c[r>>2]=17672;c[r+4>>2]=u;ye(a,b+24|0,14804,r);i=d;return}break}case 7:{Vi(a+36|0,c[b+24>>2]|0)|0;i=d;return}case 8:{Wi(a+36|0,c[b+40>>2]|0)|0;i=d;return}case 9:{Xi(a+36|0,c[b+24>>2]|0)|0;i=d;return}case 11:{Zi(a+36|0)|0;i=d;return}case 12:{u=c[a+12>>2]|0;x=c[u+60>>2]|0;w=(c[u+64>>2]|0)-x>>2;u=b+48|0;y=c[u>>2]|0;z=c[u+4>>2]|0;u=((w|0)<0)<<31>>31;if(((z|0)>-1|(z|0)==-1&y>>>0>4294967295)&((z|0)<(u|0)|(z|0)==(u|0)&y>>>0<w>>>0))B=c[(c[x+(y<<2)>>2]|0)+8>>2]|0;else{c[q>>2]=17878;c[q+4>>2]=w;ye(a,b+24|0,14804,q);B=0}dj(a+36|0,B)|0;i=d;return}case 13:{ej(a+36|0,Ce(a,b+24|0)|0)|0;i=d;return}case 14:{w=c[a+12>>2]|0;if((c[w+136>>2]|0)==(c[w+132>>2]|0)){c[p>>2]=18751;ye(a,b,15401,p)}bj(a+36|0)|0;i=d;return}case 15:{w=a+36|0;y=b+24|0;cj(w,(c[y>>2]|0)+8|0)|0;x=c[(c[y>>2]|0)+20>>2]|0;if(x|0){u=x;do{Be(a,u);u=c[u+20>>2]|0}while((u|0)!=0)}u=y+4|0;if(c[u>>2]|0?(_i(w)|0,v=c[u>>2]|0,v|0):0){u=v;do{Be(a,u);u=c[u+20>>2]|0}while((u|0)!=0)}$i(w)|0;i=d;return}case 16:{u=b+24|0;y=c[a+12>>2]|0;if((c[y+136>>2]|0)==(c[y+132>>2]|0)){c[o>>2]=c[1536+((c[u>>2]|0)*20|0)>>2];ye(a,b,15401,o)}y=c[u+4>>2]|0;v=c[1536+((c[u>>2]|0)*20|0)+16>>2]|0;switch(y|0){case -1:break;case 0:{C=41;break}default:if(!(y+-1&y))C=42;else C=41}if((C|0)==41){ye(a,b,15444,n);C=42}if((C|0)==42?y>>>0>v>>>0:0){c[m>>2]=v;ye(a,b,15475,m)}v=b+32|0;y=c[v+4>>2]|0;if(y>>>0>0|(y|0)==0&(c[v>>2]|0)>>>0>4294967295)ye(a,b,15532,l);fj(a+36|0,c[u>>2]|0)|0;i=d;return}case 17:{u=a+36|0;v=b+24|0;gj(u,(c[v>>2]|0)+8|0)|0;y=c[(c[v>>2]|0)+20>>2]|0;if(y|0){v=y;do{Be(a,v);v=c[v+20>>2]|0}while((v|0)!=0)}$i(u)|0;i=d;return}case 10:{v=c[a+12>>2]|0;if((c[v+136>>2]|0)==(c[v+132>>2]|0)){c[k>>2]=18736;ye(a,b,15401,k)}Yi(a+36|0)|0;i=d;return}case 26:{oj(a+36|0)|0;i=d;return}case 19:{hj(a+36|0)|0;i=d;return}case 20:{ij(a+36|0)|0;i=d;return}case 21:{v=c[a+12>>2]|0;w=c[v+60>>2]|0;y=(c[v+64>>2]|0)-w>>2;v=b+48|0;x=c[v>>2]|0;z=c[v+4>>2]|0;v=((y|0)<0)<<31>>31;if(((z|0)>-1|(z|0)==-1&x>>>0>4294967295)&((z|0)<(v|0)|(z|0)==(v|0)&x>>>0<y>>>0))D=c[(c[w+(x<<2)>>2]|0)+8>>2]|0;else{c[j>>2]=17878;c[j+4>>2]=y;ye(a,b+24|0,14804,j);D=0}jj(a+36|0,D)|0;i=d;return}case 22:{kj(a+36|0,Ce(a,b+24|0)|0)|0;i=d;return}case 23:{y=b+24|0;x=c[a+12>>2]|0;if((c[x+136>>2]|0)==(c[x+132>>2]|0)){c[h>>2]=c[1536+((c[y>>2]|0)*20|0)>>2];ye(a,b,15401,h)}x=c[y+4>>2]|0;w=c[1536+((c[y>>2]|0)*20|0)+16>>2]|0;switch(x|0){case -1:break;case 0:{C=64;break}default:if(!(x+-1&x))C=65;else C=64}if((C|0)==64){ye(a,b,15444,g);C=65}if((C|0)==65?x>>>0>w>>>0:0){c[f>>2]=w;ye(a,b,15475,f)}w=b+32|0;x=c[w+4>>2]|0;if(x>>>0>0|(x|0)==0&(c[w>>2]|0)>>>0>4294967295)ye(a,b,15532,e);lj(a+36|0,c[y>>2]|0)|0;i=d;return}case 24:{mj(a+36|0,Ce(a,b+24|0)|0)|0;i=d;return}case 25:{nj(a+36|0,c[b+24>>2]|0)|0;i=d;return}default:{i=d;return}}while(0)}function Ce(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+16|0;e=d+8|0;f=d;g=a+16|0;h=c[g>>2]|0;j=h+48|0;k=h+52|0;l=((c[h+76>>2]|0)-(c[h+72>>2]|0)>>2)+((c[k>>2]|0)-(c[j>>2]|0)>>2)|0;m=pc(h,b)|0;if(!((m|0)>-1&(m|0)<(l|0)))if((c[b+16>>2]|0)==1){h=b+24|0;n=c[h>>2]|0;c[f>>2]=c[h+4>>2];c[f+4>>2]=n;ye(a,b,17686,f);o=0;i=d;return o|0}else{c[e>>2]=l;ye(a,b,15364,e);o=0;i=d;return o|0}else{e=c[j>>2]|0;j=(c[k>>2]|0)-e>>2;if((m|0)<(j|0))p=e+(m<<2)|0;else p=(c[(c[g>>2]|0)+72>>2]|0)+(m-j<<2)|0;o=c[p>>2]|0;i=d;return o|0}return 0}function De(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;h=(c[b+16>>2]|0)>(c[d+16>>2]|0)?b+12|0:d+12|0;c[g>>2]=(a[b>>0]&1)==0?b+1|0:c[b+8>>2]|0;ye(e,h,15959,g);i=f;return}function Ee(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+80|0;f=e+64|0;g=e+56|0;h=e+32|0;j=e+16|0;k=e+8|0;l=a;c[l>>2]=0;c[l+4>>2]=0;switch(c[d+16>>2]|0){case 0:{l=c[d+64>>2]|0;m=vc(c[b+8>>2]|0,d+24|0)|0;do if(m){n=d+56|0;o=jc(m,n)|0;if(!o){p=c[n>>2]|0;c[k>>2]=c[d+60>>2];c[k+4>>2]=p;ye(b,d,16002,k);q=0;break}p=qc(m,o+16|0)|0;if(!p)q=0;else{o=c[l>>2]|0;n=(c[l+4>>2]|0)-o>>5;r=c[p+48>>2]|0;s=(c[p+52>>2]|0)-r>>2;if((s|0)!=(n|0)){c[j>>2]=n>>>0>s>>>0?16033:16038;c[j+4>>2]=n;c[j+8>>2]=s;ye(b,d,16042,j);q=0;break}a:do if(n|0){s=p+48|0;t=o;u=r;v=0;while(1){w=t+(v<<5)|0;x=c[t+(v<<5)+16>>2]|0;y=c[u+(v<<2)>>2]|0;if((x|0)!=0&((y|0)!=(x|0)&(y|0)!=0)){switch(x|0){case -1:{z=28480;break}case -2:{z=28476;break}case -3:{z=28472;break}case -4:{z=28468;break}case -16:{z=28460;break}case -32:{z=28455;break}case -64:{z=28450;break}case 0:{z=28446;break}default:z=0}switch(y|0){case -1:{A=28480;break}case -2:{A=28476;break}case -3:{A=28472;break}case -4:{A=28468;break}case -16:{A=28460;break}case -32:{A=28455;break}case -64:{A=28450;break}case 0:{A=28446;break}default:A=0}c[h>>2]=15312;c[h+4>>2]=v;c[h+8>>2]=16095;c[h+12>>2]=z;c[h+16>>2]=A;ye(b,w,15235,h)}w=v+1|0;if((w|0)==(n|0))break a;t=c[l>>2]|0;u=c[s>>2]|0;v=w}}while(0);q=p+60|0}}else{ye(b,d,15987,e);q=0}while(0);c[a+4>>2]=q;c[a>>2]=(q|0)!=0&1;i=e;return}case 1:{q=a+4|0;l=vc(c[b+8>>2]|0,d+24|0)|0;do if(l){h=d+56|0;A=jc(l,h)|0;if(!A){z=c[h>>2]|0;c[f>>2]=c[d+60>>2];c[f+4>>2]=z;ye(b,d,16102,f);break}z=rc(l,A+16|0)|0;if(z|0){c[q>>2]=c[z+8>>2];c[a>>2]=2;i=e;return}}else ye(b,d,15987,g);while(0);c[a>>2]=0;i=e;return}default:{i=e;return}}}function Fe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+32|0;g=f+24|0;h=f;j=d+4|0;k=c[j>>2]|0;l=c[d>>2]|0;m=k-l>>2;n=c[e>>2]|0;o=(c[e+4>>2]|0)-n>>5;if((m|0)!=(o|0)){c[g>>2]=o;c[g+4>>2]=m;ye(a,b,16138,g);i=f;return}if((k|0)==(l|0)){i=f;return}g=l;l=n;n=k;k=0;while(1){m=c[g+(k<<2)>>2]|0;o=c[l+(k<<5)+16>>2]|0;if((m|0)!=0&((o|0)!=(m|0)&(o|0)!=0)){switch(m|0){case -1:{p=28480;break}case -2:{p=28476;break}case -3:{p=28472;break}case -4:{p=28468;break}case -16:{p=28460;break}case -32:{p=28455;break}case -64:{p=28450;break}case 0:{p=28446;break}default:p=0}switch(o|0){case -1:{q=28480;break}case -2:{q=28476;break}case -3:{q=28472;break}case -4:{q=28468;break}case -16:{q=28460;break}case -32:{q=28455;break}case -64:{q=28450;break}case 0:{q=28446;break}default:q=0}c[h>>2]=15228;c[h+4>>2]=k;c[h+8>>2]=16131;c[h+12>>2]=p;c[h+16>>2]=q;ye(a,b,15235,h);r=c[d>>2]|0;s=c[j>>2]|0}else{r=g;s=n}o=k+1|0;if(o>>>0>=s-r>>2>>>0)break;g=r;l=c[e>>2]|0;n=s;k=o}i=f;return}function Ge(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+8|0;f=d;g=d+16|0;Ee(g,a,b);switch(c[g>>2]|0){case 1:{h=2;break}case 2:break;default:{i=d;return}}do if((h|0)==2){j=g+4|0;k=c[j>>2]|0;l=c[k>>2]|0;m=(c[k+4>>2]|0)-l>>2;if((m|0)==1){c[g>>2]=2;c[j>>2]=c[l>>2];break}c[f>>2]=m;ye(a,b,16168,f);c[j>>2]=0;i=d;return}while(0);f=c[g+4>>2]|0;if(!f){i=d;return}if((f&-2|0)==-4){i=d;return}switch(f|0){case -1:{n=28480;break}case -2:{n=28476;break}case -3:{n=28472;break}case -4:{n=28468;break}case -16:{n=28460;break}case -32:{n=28455;break}case -64:{n=28450;break}default:n=0}c[e>>2]=16131;c[e+4>>2]=n;ye(a,b,16195,e);i=d;return}function He(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+16|0;e=d;switch(c|0){case -1:{f=28480;g=9;break}case -2:{f=28476;g=9;break}case -3:{f=28472;g=9;break}case -4:{f=28468;g=9;break}case -16:{f=28460;g=9;break}case -32:{f=28455;g=9;break}case -64:{f=28450;g=9;break}case 0:{h=28446;j=e;k=0;g=11;break}default:{l=c>>7;if((c|0)<0){m=0;n=e;o=l}else{h=0;j=e;k=l;g=11}}}if((g|0)==9){m=f;n=e;o=c>>7}else if((g|0)==11){if(!(k|c&64)){p=c;q=0}else{g=c;f=k;k=0;while(1){a[e+k>>0]=g|128;l=k+1|0;r=f>>7;if(!(r|f&64)){p=f;q=l;break}else{s=f;f=r;k=l;g=s}}}a[e+q>>0]=p&127;t=h;u=j;v=q;w=v+1|0;li(b,u,w,t,0);i=d;return}if((c&64|0)==0|(o|0)!=-1){q=c;j=o;o=0;while(1){a[e+o>>0]=q|128;h=o+1|0;p=j>>7;if((p|0)!=-1|(j&64|0)==0){g=j;j=p;o=h;q=g}else{x=j;y=h;break}}}else{x=c;y=0}a[e+y>>0]=x&127;t=m;u=n;v=y;w=v+1|0;li(b,u,w,t,0);i=d;return}function Ie(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e;g=d+16|0;a[f>>0]=a[g>>0]|0;li(b,f,1,16244,0);h=c[d>>2]|0;j=h>>>7;if(!j){k=h;l=0}else{m=h;h=j;j=0;while(1){a[f+j>>0]=m|128;n=j+1|0;o=h>>>7;if(!o){k=h;l=n;break}else{p=h;h=o;j=n;m=p}}}a[f+l>>0]=k&127;li(b,f,l+1|0,16258,0);if(!(a[g>>0]|0)){i=e;return}g=c[d+8>>2]|0;d=g>>>7;if(!d){q=g;r=0}else{l=g;g=d;d=0;while(1){a[f+d>>0]=l|128;k=d+1|0;m=g>>>7;if(!m){q=g;r=k;break}else{j=g;g=m;d=k;l=j}}}a[f+r>>0]=q&127;li(b,f,r+1|0,16274,0);i=e;return}
function Jl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);f=c[g>>2]|0;c[e>>2]=b;ki(f,31314,e);e=c[a+12>>2]|0;a=ub[c[(c[e>>2]|0)+468>>2]&255](e,b)|0;i=d;return a|0}function Kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,31344,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+472>>2]&127](f,b,d)|0;i=e;return a|0}function Ll(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+8|0;h=f;j=a+16|0;k=c[j>>2]|0;if(k>>>0>142){l=a+8|0;m=k;while(1){li(c[l>>2]|0,28142,142,0,0);n=m+-142|0;if(n>>>0>142)m=n;else{o=n;break}}}else o=k;k=a+8|0;if(o|0)li(c[k>>2]|0,28142,c[j>>2]|0,0,0);j=c[k>>2]|0;k=c[e+4>>2]|0;o=c[e>>2]|0;c[g>>2]=b;c[g+4>>2]=d;c[g+8>>2]=k;c[g+12>>2]=o;ki(j,31389,g);j=c[a+12>>2]|0;a=c[(c[j>>2]|0)+476>>2]|0;o=e;e=c[o+4>>2]|0;k=h;c[k>>2]=c[o>>2];c[k+4>>2]=e;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];h=sb[a&63](j,b,d,g)|0;i=f;return h|0}function Ml(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,31449,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+480>>2]&127](d)|0;i=b;return a|0}function Nl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=a+16|0;g=c[f>>2]|0;if(g>>>0>142){h=a+8|0;j=g;while(1){li(c[h>>2]|0,28142,142,0,0);k=j+-142|0;if(k>>>0>142)j=k;else{l=k;break}}}else l=g;g=a+8|0;if(l|0)li(c[g>>2]|0,28142,c[f>>2]|0,0,0);l=c[g>>2]|0;c[e>>2]=b;ki(l,31466,e);c[f>>2]=(c[f>>2]|0)+2;f=c[a+12>>2]|0;a=ub[c[(c[f>>2]|0)+484>>2]&255](f,b)|0;i=d;return a|0}function Ol(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+8|0;h=f;j=a+16|0;k=c[j>>2]|0;if(k>>>0>142){l=a+8|0;m=k;while(1){li(c[l>>2]|0,28142,142,0,0);n=m+-142|0;if(n>>>0>142)m=n;else{o=n;break}}}else o=k;k=a+8|0;if(o|0)li(c[k>>2]|0,28142,c[j>>2]|0,0,0);j=c[k>>2]|0;k=c[1416+(d<<2)>>2]|0;o=c[e+4>>2]|0;m=c[e>>2]|0;c[g>>2]=b;c[g+4>>2]=k;c[g+8>>2]=o;c[g+12>>2]=m;ki(j,31489,g);j=c[a+12>>2]|0;a=c[(c[j>>2]|0)+488>>2]|0;m=e;e=c[m+4>>2]|0;o=h;c[o>>2]=c[m>>2];c[o+4>>2]=e;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];h=sb[a&63](j,b,d,g)|0;i=f;return h|0}function Pl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;j=a+16|0;k=c[j>>2]|0;if(k>>>0>142){l=a+8|0;m=k;while(1){li(c[l>>2]|0,28142,142,0,0);n=m+-142|0;if(n>>>0>142)m=n;else{o=n;break}}}else o=k;k=a+8|0;if(o|0)li(c[k>>2]|0,28142,c[j>>2]|0,0,0);j=c[k>>2]|0;c[h>>2]=c[1480+(b<<2)>>2];c[h+4>>2]=d;c[h+8>>2]=e;c[h+12>>2]=f;ki(j,31547,h);h=c[a+12>>2]|0;a=vb[c[(c[h>>2]|0)+492>>2]&31](h,b,d,e,f)|0;i=g;return a|0}function Ql(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b;e=a+16|0;f=(c[e>>2]|0)+-2|0;c[e>>2]=f;if(f>>>0>142){g=a+8|0;h=f;while(1){li(c[g>>2]|0,28142,142,0,0);j=h+-142|0;if(j>>>0>142)h=j;else{k=j;break}}}else k=f;f=a+8|0;if(k|0)li(c[f>>2]|0,28142,c[e>>2]|0,0,0);ki(c[f>>2]|0,31601,d);d=c[a+12>>2]|0;a=pb[c[(c[d>>2]|0)+496>>2]&127](d)|0;i=b;return a|0}function Rl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,j=0.0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e;j=(c[k>>2]=d,+g[k>>2]);l=a+16|0;m=c[l>>2]|0;if(m>>>0>142){n=a+8|0;o=m;while(1){li(c[n>>2]|0,28142,142,0,0);p=o+-142|0;if(p>>>0>142)o=p;else{q=p;break}}}else q=m;m=a+8|0;if(q|0)li(c[m>>2]|0,28142,c[l>>2]|0,0,0);l=c[m>>2]|0;c[f>>2]=b;h[f+8>>3]=j;c[f+16>>2]=d;ki(l,31618,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+500>>2]&127](f,b,d)|0;i=e;return a|0}function Sl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0.0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+32|0;g=f;c[k>>2]=d;c[k+4>>2]=e;j=+h[k>>3];l=a+16|0;m=c[l>>2]|0;if(m>>>0>142){n=a+8|0;o=m;while(1){li(c[n>>2]|0,28142,142,0,0);p=o+-142|0;if(p>>>0>142)o=p;else{q=p;break}}}else q=m;m=a+8|0;if(q|0)li(c[m>>2]|0,28142,c[l>>2]|0,0,0);l=c[m>>2]|0;c[g>>2]=b;h[g+8>>3]=j;m=g+16|0;c[m>>2]=d;c[m+4>>2]=e;ki(l,31673,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+504>>2]&63](g,b,d,e)|0;i=f;return a|0}function Tl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,31729,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+508>>2]&127](f,b,d)|0;i=e;return a|0}function Ul(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e;g=a+16|0;h=c[g>>2]|0;if(h>>>0>142){j=a+8|0;k=h;while(1){li(c[j>>2]|0,28142,142,0,0);l=k+-142|0;if(l>>>0>142)k=l;else{m=l;break}}}else m=h;h=a+8|0;if(m|0)li(c[h>>2]|0,28142,c[g>>2]|0,0,0);g=c[h>>2]|0;c[f>>2]=b;c[f+4>>2]=d;ki(g,31783,f);f=c[a+12>>2]|0;a=kb[c[(c[f>>2]|0)+512>>2]&127](f,b,d)|0;i=e;return a|0}function Vl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=a+16|0;j=c[h>>2]|0;if(j>>>0>142){k=a+8|0;l=j;while(1){li(c[k>>2]|0,28142,142,0,0);m=l+-142|0;if(m>>>0>142)l=m;else{n=m;break}}}else n=j;j=a+8|0;if(n|0)li(c[j>>2]|0,28142,c[h>>2]|0,0,0);h=c[j>>2]|0;c[g>>2]=b;j=g+8|0;c[j>>2]=d;c[j+4>>2]=e;ki(h,31829,g);g=c[a+12>>2]|0;a=sb[c[(c[g>>2]|0)+516>>2]&63](g,b,d,e)|0;i=f;return a|0}function Wl(a,b,d){a=a|0;b=b|0;d=d|0;c[a+4>>2]=0;c[a>>2]=5404;c[a+8>>2]=b;c[a+12>>2]=d;c[a+16>>2]=0;return}function Xl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=c[a+60>>2];a=Yl(cb(6,d|0)|0)|0;i=b;return a|0}function Yl(a){a=a|0;var b=0;if(a>>>0>4294963200){c[(Zl()|0)>>2]=0-a;b=-1}else b=a;return b|0}function Zl(){var a=0;if(!(c[8780]|0))a=35164;else a=c[(Wa()|0)+64>>2]|0;return a|0}function _l(a){a=a|0;return}function $l(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;f=e;g=e+20|0;c[f>>2]=c[a+60>>2];c[f+4>>2]=0;c[f+8>>2]=b;c[f+12>>2]=g;c[f+16>>2]=d;if((Yl(fb(140,f|0)|0)|0)<0){c[g>>2]=-1;h=-1}else h=c[g>>2]|0;i=e;return h|0}function am(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+80|0;g=f;c[b+36>>2]=69;if((c[b>>2]&64|0)==0?(c[g>>2]=c[b+60>>2],c[g+4>>2]=21505,c[g+8>>2]=f+12,Ga(54,g|0)|0):0)a[b+75>>0]=-1;g=bm(b,d,e)|0;i=f;return g|0}function bm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+48|0;f=e+16|0;g=e;h=e+32|0;j=a+28|0;k=c[j>>2]|0;c[h>>2]=k;l=a+20|0;m=(c[l>>2]|0)-k|0;c[h+4>>2]=m;c[h+8>>2]=b;c[h+12>>2]=d;b=a+60|0;k=a+44|0;n=h;h=2;o=m+d|0;while(1){if(!(c[8780]|0)){c[f>>2]=c[b>>2];c[f+4>>2]=n;c[f+8>>2]=h;p=Yl(hb(146,f|0)|0)|0}else{db(43,a|0);c[g>>2]=c[b>>2];c[g+4>>2]=n;c[g+8>>2]=h;m=Yl(hb(146,g|0)|0)|0;Fa(0);p=m}if((o|0)==(p|0)){q=6;break}if((p|0)<0){r=n;s=h;q=8;break}m=o-p|0;t=c[n+4>>2]|0;if(p>>>0<=t>>>0)if((h|0)==2){c[j>>2]=(c[j>>2]|0)+p;u=t;v=p;w=n;x=2}else{u=t;v=p;w=n;x=h}else{y=c[k>>2]|0;c[j>>2]=y;c[l>>2]=y;u=c[n+12>>2]|0;v=p-t|0;w=n+8|0;x=h+-1|0}c[w>>2]=(c[w>>2]|0)+v;c[w+4>>2]=u-v;n=w;h=x;o=m}if((q|0)==6){o=c[k>>2]|0;c[a+16>>2]=o+(c[a+48>>2]|0);k=o;c[j>>2]=k;c[l>>2]=k;z=d}else if((q|0)==8){c[a+16>>2]=0;c[j>>2]=0;c[l>>2]=0;c[a>>2]=c[a>>2]|32;if((s|0)==2)z=0;else z=d-(c[r+4>>2]|0)|0}i=e;return z|0}function cm(a){a=a|0;if(!(c[a+68>>2]|0))_l(a);return}function dm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=em(a,b,d,g)|0;i=f;return e|0}function em(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+128|0;h=g+112|0;j=g;k=j;l=6156;m=k+112|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));if((d+-1|0)>>>0>2147483646)if(!d){n=h;o=1;p=4}else{c[(Zl()|0)>>2]=75;q=-1}else{n=b;o=d;p=4}if((p|0)==4){p=-2-n|0;d=o>>>0>p>>>0?p:o;c[j+48>>2]=d;o=j+20|0;c[o>>2]=n;c[j+44>>2]=n;p=n+d|0;n=j+16|0;c[n>>2]=p;c[j+28>>2]=p;p=gm(j,e,f)|0;if(!d)q=p;else{d=c[o>>2]|0;a[d+(((d|0)==(c[n>>2]|0))<<31>>31)>>0]=0;q=p}}i=g;return q|0}function fm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+20|0;f=c[e>>2]|0;g=(c[a+16>>2]|0)-f|0;a=g>>>0>d>>>0?d:g;ho(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function gm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+224|0;g=f+120|0;h=f+80|0;j=f;k=f+136|0;l=h;m=l+40|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));c[g>>2]=c[e>>2];if((hm(0,d,g,j,h)|0)<0)n=-1;else{if((c[b+76>>2]|0)>-1)o=tm(b)|0;else o=0;e=c[b>>2]|0;l=e&32;if((a[b+74>>0]|0)<1)c[b>>2]=e&-33;e=b+48|0;if(!(c[e>>2]|0)){m=b+44|0;p=c[m>>2]|0;c[m>>2]=k;q=b+28|0;c[q>>2]=k;r=b+20|0;c[r>>2]=k;c[e>>2]=80;s=b+16|0;c[s>>2]=k+80;k=hm(b,d,g,j,h)|0;if(!p)t=k;else{kb[c[b+36>>2]&127](b,0,0)|0;u=(c[r>>2]|0)==0?-1:k;c[m>>2]=p;c[e>>2]=0;c[s>>2]=0;c[q>>2]=0;c[r>>2]=0;t=u}}else t=hm(b,d,g,j,h)|0;h=c[b>>2]|0;c[b>>2]=h|l;if(o|0)_l(b);n=(h&32|0)==0?t:-1}i=f;return n|0}function hm(e,f,g,j,l){e=e|0;f=f|0;g=g|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0.0,db=0.0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0.0,kb=0.0,lb=0.0,mb=0.0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0.0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0.0,Yb=0.0,Zb=0.0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0;m=i;i=i+624|0;n=m+24|0;o=m+16|0;p=m+588|0;q=m+576|0;r=m;s=m+536|0;t=m+8|0;u=m+528|0;v=(e|0)!=0;w=s+40|0;x=w;y=s+39|0;s=t+4|0;z=p;A=0-z|0;B=q+12|0;D=q+11|0;q=B;E=q-z|0;F=-2-z|0;G=q+2|0;H=n+288|0;I=p+9|0;J=I;K=p+8|0;L=0;M=0;N=0;O=f;a:while(1){do if((L|0)>-1)if((M|0)>(2147483647-L|0)){c[(Zl()|0)>>2]=75;P=-1;break}else{P=M+L|0;break}else P=L;while(0);f=a[O>>0]|0;if(!(f<<24>>24)){Q=P;R=N;S=244;break}else{T=f;U=O}b:while(1){switch(T<<24>>24){case 37:{V=U;W=U;S=9;break b;break}case 0:{X=U;Y=U;break b;break}default:{}}f=U+1|0;T=a[f>>0]|0;U=f}c:do if((S|0)==9)while(1){S=0;if((a[V+1>>0]|0)!=37){X=V;Y=W;break c}f=W+1|0;Z=V+2|0;if((a[Z>>0]|0)==37){V=Z;W=f;S=9}else{X=Z;Y=f;break}}while(0);f=Y-O|0;if(v?(c[e>>2]&32|0)==0:0)im(O,f,e)|0;if((Y|0)!=(O|0)){L=P;M=f;O=X;continue}Z=X+1|0;$=a[Z>>0]|0;aa=($<<24>>24)+-48|0;if(aa>>>0<10){ba=(a[X+2>>0]|0)==36;ca=ba?X+3|0:Z;da=a[ca>>0]|0;ea=ba?aa:-1;fa=ba?1:N;ga=ca}else{da=$;ea=-1;fa=N;ga=Z}Z=da<<24>>24;d:do if((Z&-32|0)==32){$=Z;ca=da;ba=0;aa=ga;while(1){if(!(1<<$+-32&75913)){ha=ca;ia=ba;ja=aa;break d}ka=1<<(ca<<24>>24)+-32|ba;la=aa+1|0;ma=a[la>>0]|0;$=ma<<24>>24;if(($&-32|0)!=32){ha=ma;ia=ka;ja=la;break}else{ca=ma;ba=ka;aa=la}}}else{ha=da;ia=0;ja=ga}while(0);do if(ha<<24>>24==42){Z=ja+1|0;aa=(a[Z>>0]|0)+-48|0;if(aa>>>0<10?(a[ja+2>>0]|0)==36:0){c[l+(aa<<2)>>2]=10;na=1;oa=ja+3|0;pa=c[j+((a[Z>>0]|0)+-48<<3)>>2]|0}else{if(fa|0){qa=-1;break a}if(!v){ra=ia;sa=0;ta=Z;ua=0;break}aa=(c[g>>2]|0)+(4-1)&~(4-1);ba=c[aa>>2]|0;c[g>>2]=aa+4;na=0;oa=Z;pa=ba}if((pa|0)<0){ra=ia|8192;sa=na;ta=oa;ua=0-pa|0}else{ra=ia;sa=na;ta=oa;ua=pa}}else{ba=(ha<<24>>24)+-48|0;if(ba>>>0<10){Z=ja;aa=0;ca=ba;while(1){ba=(aa*10|0)+ca|0;$=Z+1|0;ca=(a[$>>0]|0)+-48|0;if(ca>>>0>=10){va=ba;wa=$;break}else{Z=$;aa=ba}}if((va|0)<0){qa=-1;break a}else{ra=ia;sa=fa;ta=wa;ua=va}}else{ra=ia;sa=fa;ta=ja;ua=0}}while(0);e:do if((a[ta>>0]|0)==46){aa=ta+1|0;Z=a[aa>>0]|0;if(Z<<24>>24!=42){ca=(Z<<24>>24)+-48|0;if(ca>>>0<10){xa=aa;ya=0;za=ca}else{Aa=0;Ba=aa;break}while(1){aa=(ya*10|0)+za|0;ca=xa+1|0;za=(a[ca>>0]|0)+-48|0;if(za>>>0>=10){Aa=aa;Ba=ca;break e}else{xa=ca;ya=aa}}}aa=ta+2|0;ca=(a[aa>>0]|0)+-48|0;if(ca>>>0<10?(a[ta+3>>0]|0)==36:0){c[l+(ca<<2)>>2]=10;Aa=c[j+((a[aa>>0]|0)+-48<<3)>>2]|0;Ba=ta+4|0;break}if(sa|0){qa=-1;break a}if(v){ca=(c[g>>2]|0)+(4-1)&~(4-1);Z=c[ca>>2]|0;c[g>>2]=ca+4;Aa=Z;Ba=aa}else{Aa=0;Ba=aa}}else{Aa=-1;Ba=ta}while(0);aa=Ba;Z=0;while(1){ca=(a[aa>>0]|0)+-65|0;if(ca>>>0>57){qa=-1;break a}ba=aa+1|0;$=a[31877+(Z*58|0)+ca>>0]|0;ca=$&255;if((ca+-1|0)>>>0<8){aa=ba;Z=ca}else{Ca=ba;Da=$;Ea=ca;Fa=aa;Ga=Z;break}}if(!(Da<<24>>24)){qa=-1;break}Z=(ea|0)>-1;do if(Da<<24>>24==19)if(Z){qa=-1;break a}else S=52;else{if(Z){c[l+(ea<<2)>>2]=Ea;aa=j+(ea<<3)|0;ca=c[aa+4>>2]|0;$=r;c[$>>2]=c[aa>>2];c[$+4>>2]=ca;S=52;break}if(!v){qa=0;break a}km(r,Ea,g)}while(0);if((S|0)==52?(S=0,!v):0){L=P;M=f;N=sa;O=Ca;continue}Z=a[Fa>>0]|0;ca=(Ga|0)!=0&(Z&15|0)==3?Z&-33:Z;Z=ra&-65537;$=(ra&8192|0)==0?ra:Z;f:do switch(ca|0){case 110:{switch(Ga|0){case 0:{c[c[r>>2]>>2]=P;L=P;M=f;N=sa;O=Ca;continue a;break}case 1:{c[c[r>>2]>>2]=P;L=P;M=f;N=sa;O=Ca;continue a;break}case 2:{aa=c[r>>2]|0;c[aa>>2]=P;c[aa+4>>2]=((P|0)<0)<<31>>31;L=P;M=f;N=sa;O=Ca;continue a;break}case 3:{b[c[r>>2]>>1]=P;L=P;M=f;N=sa;O=Ca;continue a;break}case 4:{a[c[r>>2]>>0]=P;L=P;M=f;N=sa;O=Ca;continue a;break}case 6:{c[c[r>>2]>>2]=P;L=P;M=f;N=sa;O=Ca;continue a;break}case 7:{aa=c[r>>2]|0;c[aa>>2]=P;c[aa+4>>2]=((P|0)<0)<<31>>31;L=P;M=f;N=sa;O=Ca;continue a;break}default:{L=P;M=f;N=sa;O=Ca;continue a}}break}case 112:{Ha=$|8;Ia=Aa>>>0>8?Aa:8;Ja=120;S=64;break}case 88:case 120:{Ha=$;Ia=Aa;Ja=ca;S=64;break}case 111:{aa=r;ba=c[aa>>2]|0;la=c[aa+4>>2]|0;if((ba|0)==0&(la|0)==0)Ka=w;else{aa=w;ka=ba;ba=la;while(1){la=aa+-1|0;a[la>>0]=ka&7|48;ka=eo(ka|0,ba|0,3)|0;ba=C;if((ka|0)==0&(ba|0)==0){Ka=la;break}else aa=la}}if(!($&8)){La=Ka;Ma=$;Na=Aa;Oa=0;Pa=32357;S=77}else{aa=x-Ka|0;La=Ka;Ma=$;Na=(Aa|0)>(aa|0)?Aa:aa+1|0;Oa=0;Pa=32357;S=77}break}case 105:case 100:{aa=r;ba=c[aa>>2]|0;ka=c[aa+4>>2]|0;if((ka|0)<0){aa=_n(0,0,ba|0,ka|0)|0;la=C;ma=r;c[ma>>2]=aa;c[ma+4>>2]=la;Qa=aa;Ra=la;Sa=1;Ta=32357;S=76;break f}if(!($&2048)){la=$&1;Qa=ba;Ra=ka;Sa=la;Ta=(la|0)==0?32357:32359;S=76}else{Qa=ba;Ra=ka;Sa=1;Ta=32358;S=76}break}case 117:{ka=r;Qa=c[ka>>2]|0;Ra=c[ka+4>>2]|0;Sa=0;Ta=32357;S=76;break}case 99:{a[y>>0]=c[r>>2];Ua=y;Va=Z;Wa=1;Xa=0;Ya=32357;Za=w;break}case 109:{_a=mm(c[(Zl()|0)>>2]|0)|0;S=82;break}case 115:{ka=c[r>>2]|0;_a=ka|0?ka:34259;S=82;break}case 67:{c[t>>2]=c[r>>2];c[s>>2]=0;c[r>>2]=t;$a=t;ab=-1;S=86;break}case 83:{ka=c[r>>2]|0;if(!Aa){om(e,32,ua,0,$);bb=0;S=97}else{$a=ka;ab=Aa;S=86}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{cb=+h[r>>3];c[o>>2]=0;h[k>>3]=cb;if((c[k+4>>2]|0)>=0)if(!($&2048)){ka=$&1;db=cb;eb=ka;fb=(ka|0)==0?34267:34272}else{db=cb;eb=1;fb=34269}else{db=-cb;eb=1;fb=34266}h[k>>3]=db;ka=c[k+4>>2]&2146435072;do if(ka>>>0<2146435072|(ka|0)==2146435072&0<0){cb=+rm(db,o)*2.0;ba=cb!=0.0;if(ba)c[o>>2]=(c[o>>2]|0)+-1;la=ca|32;if((la|0)==97){aa=ca&32;ma=(aa|0)==0?fb:fb+9|0;gb=eb|2;hb=12-Aa|0;do if(!(Aa>>>0>11|(hb|0)==0)){ib=hb;jb=8.0;while(1){ib=ib+-1|0;kb=jb*16.0;if(!ib){lb=kb;break}else jb=kb}if((a[ma>>0]|0)==45){mb=-(lb+(-cb-lb));break}else{mb=cb+lb-lb;break}}else mb=cb;while(0);hb=c[o>>2]|0;ib=(hb|0)<0?0-hb|0:hb;nb=lm(ib,((ib|0)<0)<<31>>31,B)|0;if((nb|0)==(B|0)){a[D>>0]=48;ob=D}else ob=nb;a[ob+-1>>0]=(hb>>31&2)+43;hb=ob+-2|0;a[hb>>0]=ca+15;nb=(Aa|0)<1;ib=($&8|0)==0;jb=mb;pb=p;while(1){qb=~~jb;rb=pb+1|0;a[pb>>0]=d[32341+qb>>0]|aa;jb=(jb-+(qb|0))*16.0;do if((rb-z|0)==1){if(ib&(nb&jb==0.0)){sb=rb;break}a[rb>>0]=46;sb=pb+2|0}else sb=rb;while(0);if(!(jb!=0.0)){tb=sb;break}else pb=sb}pb=tb;nb=hb;ib=(Aa|0)!=0&(F+pb|0)<(Aa|0)?G+Aa-nb|0:E-nb+pb|0;aa=ib+gb|0;om(e,32,ua,aa,$);if(!(c[e>>2]&32))im(ma,gb,e)|0;om(e,48,ua,aa,$^65536);rb=pb-z|0;if(!(c[e>>2]&32))im(p,rb,e)|0;pb=q-nb|0;om(e,48,ib-(rb+pb)|0,0,0);if(!(c[e>>2]&32))im(hb,pb,e)|0;om(e,32,ua,aa,$^8192);ub=(aa|0)<(ua|0)?ua:aa;break}aa=(Aa|0)<0?6:Aa;if(ba){pb=(c[o>>2]|0)+-28|0;c[o>>2]=pb;vb=cb*268435456.0;wb=pb}else{vb=cb;wb=c[o>>2]|0}pb=(wb|0)<0?n:H;rb=pb;jb=vb;ib=pb;while(1){nb=~~jb>>>0;c[ib>>2]=nb;qb=ib+4|0;jb=(jb-+(nb>>>0))*1.0e9;if(!(jb!=0.0)){xb=qb;break}else ib=qb}ib=c[o>>2]|0;if((ib|0)>0){ba=ib;hb=pb;gb=xb;while(1){ma=(ba|0)>29?29:ba;qb=gb+-4|0;do if(qb>>>0<hb>>>0)yb=hb;else{nb=0;zb=qb;while(1){Ab=ao(c[zb>>2]|0,0,ma|0)|0;Bb=go(Ab|0,C|0,nb|0,0)|0;Ab=C;Cb=qo(Bb|0,Ab|0,1e9,0)|0;c[zb>>2]=Cb;Cb=po(Bb|0,Ab|0,1e9,0)|0;zb=zb+-4|0;if(zb>>>0<hb>>>0){Db=Cb;break}else nb=Cb}if(!Db){yb=hb;break}nb=hb+-4|0;c[nb>>2]=Db;yb=nb}while(0);qb=gb;while(1){if(qb>>>0<=yb>>>0){Eb=qb;break}nb=qb+-4|0;if(!(c[nb>>2]|0))qb=nb;else{Eb=qb;break}}qb=(c[o>>2]|0)-ma|0;c[o>>2]=qb;if((qb|0)>0){ba=qb;hb=yb;gb=Eb}else{Fb=qb;Gb=yb;Hb=Eb;break}}}else{Fb=ib;Gb=pb;Hb=xb}if((Fb|0)<0){gb=((aa+25|0)/9|0)+1|0;hb=(la|0)==102;ba=Fb;qb=Gb;nb=Hb;while(1){zb=0-ba|0;Cb=(zb|0)>9?9:zb;do if(qb>>>0<nb>>>0){zb=(1<<Cb)+-1|0;Ab=1e9>>>Cb;Bb=0;Ib=qb;while(1){Jb=c[Ib>>2]|0;c[Ib>>2]=(Jb>>>Cb)+Bb;Kb=_(Jb&zb,Ab)|0;Ib=Ib+4|0;if(Ib>>>0>=nb>>>0){Lb=Kb;break}else Bb=Kb}Bb=(c[qb>>2]|0)==0?qb+4|0:qb;if(!Lb){Mb=Bb;Nb=nb;break}c[nb>>2]=Lb;Mb=Bb;Nb=nb+4|0}else{Mb=(c[qb>>2]|0)==0?qb+4|0:qb;Nb=nb}while(0);ma=hb?pb:Mb;Bb=(Nb-ma>>2|0)>(gb|0)?ma+(gb<<2)|0:Nb;ba=(c[o>>2]|0)+Cb|0;c[o>>2]=ba;if((ba|0)>=0){Ob=Mb;Pb=Bb;break}else{qb=Mb;nb=Bb}}}else{Ob=Gb;Pb=Hb}do if(Ob>>>0<Pb>>>0){nb=(rb-Ob>>2)*9|0;qb=c[Ob>>2]|0;if(qb>>>0<10){Qb=nb;break}else{Rb=nb;Sb=10}while(1){Sb=Sb*10|0;nb=Rb+1|0;if(qb>>>0<Sb>>>0){Qb=nb;break}else Rb=nb}}else Qb=0;while(0);qb=(la|0)==103;Cb=(aa|0)!=0;nb=aa-((la|0)!=102?Qb:0)+((Cb&qb)<<31>>31)|0;if((nb|0)<(((Pb-rb>>2)*9|0)+-9|0)){ba=nb+9216|0;nb=pb+4+(((ba|0)/9|0)+-1024<<2)|0;gb=((ba|0)%9|0)+1|0;if((gb|0)<9){ba=10;hb=gb;while(1){gb=ba*10|0;hb=hb+1|0;if((hb|0)==9){Tb=gb;break}else ba=gb}}else Tb=10;ba=c[nb>>2]|0;hb=(ba>>>0)%(Tb>>>0)|0;la=(nb+4|0)==(Pb|0);do if(la&(hb|0)==0){Ub=Ob;Vb=nb;Wb=Qb}else{jb=(((ba>>>0)/(Tb>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;gb=(Tb|0)/2|0;if(hb>>>0<gb>>>0)Xb=.5;else Xb=la&(hb|0)==(gb|0)?1.0:1.5;do if(!eb){Yb=jb;Zb=Xb}else{if((a[fb>>0]|0)!=45){Yb=jb;Zb=Xb;break}Yb=-jb;Zb=-Xb}while(0);gb=ba-hb|0;c[nb>>2]=gb;if(!(Yb+Zb!=Yb)){Ub=Ob;Vb=nb;Wb=Qb;break}ib=gb+Tb|0;c[nb>>2]=ib;if(ib>>>0>999999999){ib=Ob;gb=nb;while(1){Bb=gb+-4|0;c[gb>>2]=0;if(Bb>>>0<ib>>>0){ma=ib+-4|0;c[ma>>2]=0;_b=ma}else _b=ib;ma=(c[Bb>>2]|0)+1|0;c[Bb>>2]=ma;if(ma>>>0>999999999){ib=_b;gb=Bb}else{$b=_b;ac=Bb;break}}}else{$b=Ob;ac=nb}gb=(rb-$b>>2)*9|0;ib=c[$b>>2]|0;if(ib>>>0<10){Ub=$b;Vb=ac;Wb=gb;break}else{bc=gb;cc=10}while(1){cc=cc*10|0;gb=bc+1|0;if(ib>>>0<cc>>>0){Ub=$b;Vb=ac;Wb=gb;break}else bc=gb}}while(0);nb=Vb+4|0;dc=Ub;ec=Wb;fc=Pb>>>0>nb>>>0?nb:Pb}else{dc=Ob;ec=Qb;fc=Pb}nb=0-ec|0;hb=fc;while(1){if(hb>>>0<=dc>>>0){gc=0;hc=hb;break}ba=hb+-4|0;if(!(c[ba>>2]|0))hb=ba;else{gc=1;hc=hb;break}}do if(qb){hb=(Cb&1^1)+aa|0;if((hb|0)>(ec|0)&(ec|0)>-5){ic=ca+-1|0;jc=hb+-1-ec|0}else{ic=ca+-2|0;jc=hb+-1|0}hb=$&8;if(hb|0){kc=ic;lc=jc;mc=hb;break}do if(gc){hb=c[hc+-4>>2]|0;if(!hb){nc=9;break}if(!((hb>>>0)%10|0)){oc=10;pc=0}else{nc=0;break}while(1){oc=oc*10|0;ba=pc+1|0;if((hb>>>0)%(oc>>>0)|0|0){nc=ba;break}else pc=ba}}else nc=9;while(0);hb=((hc-rb>>2)*9|0)+-9|0;if((ic|32|0)==102){ba=hb-nc|0;la=(ba|0)<0?0:ba;kc=ic;lc=(jc|0)<(la|0)?jc:la;mc=0;break}else{la=hb+ec-nc|0;hb=(la|0)<0?0:la;kc=ic;lc=(jc|0)<(hb|0)?jc:hb;mc=0;break}}else{kc=ca;lc=aa;mc=$&8}while(0);aa=lc|mc;rb=(aa|0)!=0&1;Cb=(kc|32|0)==102;if(Cb){qc=(ec|0)>0?ec:0;rc=0}else{qb=(ec|0)<0?nb:ec;hb=lm(qb,((qb|0)<0)<<31>>31,B)|0;if((q-hb|0)<2){qb=hb;while(1){la=qb+-1|0;a[la>>0]=48;if((q-la|0)<2)qb=la;else{sc=la;break}}}else sc=hb;a[sc+-1>>0]=(ec>>31&2)+43;qb=sc+-2|0;a[qb>>0]=kc;qc=q-qb|0;rc=qb}qb=eb+1+lc+rb+qc|0;om(e,32,ua,qb,$);if(!(c[e>>2]&32))im(fb,eb,e)|0;om(e,48,ua,qb,$^65536);do if(Cb){nb=dc>>>0>pb>>>0?pb:dc;la=nb;while(1){ba=lm(c[la>>2]|0,0,I)|0;do if((la|0)==(nb|0)){if((ba|0)!=(I|0)){tc=ba;break}a[K>>0]=48;tc=K}else{if(ba>>>0<=p>>>0){tc=ba;break}$n(p|0,48,ba-z|0)|0;ib=ba;while(1){gb=ib+-1|0;if(gb>>>0>p>>>0)ib=gb;else{tc=gb;break}}}while(0);if(!(c[e>>2]&32))im(tc,J-tc|0,e)|0;ba=la+4|0;if(ba>>>0>pb>>>0){uc=ba;break}else la=ba}do if(aa|0){if(c[e>>2]&32|0)break;im(34297,1,e)|0}while(0);if((lc|0)>0&uc>>>0<hc>>>0){la=lc;nb=uc;while(1){ba=lm(c[nb>>2]|0,0,I)|0;if(ba>>>0>p>>>0){$n(p|0,48,ba-z|0)|0;ib=ba;while(1){gb=ib+-1|0;if(gb>>>0>p>>>0)ib=gb;else{vc=gb;break}}}else vc=ba;if(!(c[e>>2]&32))im(vc,(la|0)>9?9:la,e)|0;nb=nb+4|0;ib=la+-9|0;if(!((la|0)>9&nb>>>0<hc>>>0)){wc=ib;break}else la=ib}}else wc=lc;om(e,48,wc+9|0,9,0)}else{la=gc?hc:dc+4|0;if((lc|0)>-1){nb=(mc|0)==0;ib=lc;gb=dc;while(1){Bb=lm(c[gb>>2]|0,0,I)|0;if((Bb|0)==(I|0)){a[K>>0]=48;xc=K}else xc=Bb;do if((gb|0)==(dc|0)){Bb=xc+1|0;if(!(c[e>>2]&32))im(xc,1,e)|0;if(nb&(ib|0)<1){yc=Bb;break}if(c[e>>2]&32|0){yc=Bb;break}im(34297,1,e)|0;yc=Bb}else{if(xc>>>0<=p>>>0){yc=xc;break}$n(p|0,48,xc+A|0)|0;Bb=xc;while(1){ma=Bb+-1|0;if(ma>>>0>p>>>0)Bb=ma;else{yc=ma;break}}}while(0);ba=J-yc|0;if(!(c[e>>2]&32))im(yc,(ib|0)>(ba|0)?ba:ib,e)|0;Bb=ib-ba|0;gb=gb+4|0;if(!(gb>>>0<la>>>0&(Bb|0)>-1)){zc=Bb;break}else ib=Bb}}else zc=lc;om(e,48,zc+18|0,18,0);if(c[e>>2]&32|0)break;im(rc,q-rc|0,e)|0}while(0);om(e,32,ua,qb,$^8192);ub=(qb|0)<(ua|0)?ua:qb}else{aa=(ca&32|0)!=0;pb=db!=db|0.0!=0.0;Cb=pb?0:eb;rb=Cb+3|0;om(e,32,ua,rb,Z);hb=c[e>>2]|0;if(!(hb&32)){im(fb,Cb,e)|0;Ac=c[e>>2]|0}else Ac=hb;if(!(Ac&32))im(pb?(aa?34308:34293):aa?34285:34289,3,e)|0;om(e,32,ua,rb,$^8192);ub=(rb|0)<(ua|0)?ua:rb}while(0);L=P;M=ub;N=sa;O=Ca;continue a;break}default:{Ua=O;Va=$;Wa=Aa;Xa=0;Ya=32357;Za=w}}while(0);g:do if((S|0)==64){S=0;ca=r;f=c[ca>>2]|0;ka=c[ca+4>>2]|0;ca=Ja&32;if(!((f|0)==0&(ka|0)==0)){rb=w;aa=f;f=ka;while(1){ka=rb+-1|0;a[ka>>0]=d[32341+(aa&15)>>0]|ca;aa=eo(aa|0,f|0,4)|0;f=C;if((aa|0)==0&(f|0)==0){Bc=ka;break}else rb=ka}rb=r;if((Ha&8|0)==0|(c[rb>>2]|0)==0&(c[rb+4>>2]|0)==0){La=Bc;Ma=Ha;Na=Ia;Oa=0;Pa=32357;S=77}else{La=Bc;Ma=Ha;Na=Ia;Oa=2;Pa=32357+(Ja>>4)|0;S=77}}else{La=w;Ma=Ha;Na=Ia;Oa=0;Pa=32357;S=77}}else if((S|0)==76){S=0;La=lm(Qa,Ra,w)|0;Ma=$;Na=Aa;Oa=Sa;Pa=Ta;S=77}else if((S|0)==82){S=0;rb=nm(_a,0,Aa)|0;f=(rb|0)==0;Ua=_a;Va=Z;Wa=f?Aa:rb-_a|0;Xa=0;Ya=32357;Za=f?_a+Aa|0:rb}else if((S|0)==86){S=0;rb=0;f=0;aa=$a;while(1){ca=c[aa>>2]|0;if(!ca){Cc=rb;Dc=f;break}ka=pm(u,ca)|0;if((ka|0)<0|ka>>>0>(ab-rb|0)>>>0){Cc=rb;Dc=ka;break}ca=ka+rb|0;if(ab>>>0>ca>>>0){rb=ca;f=ka;aa=aa+4|0}else{Cc=ca;Dc=ka;break}}if((Dc|0)<0){qa=-1;break a}om(e,32,ua,Cc,$);if(!Cc){bb=0;S=97}else{aa=0;f=$a;while(1){rb=c[f>>2]|0;if(!rb){bb=Cc;S=97;break g}ka=pm(u,rb)|0;aa=ka+aa|0;if((aa|0)>(Cc|0)){bb=Cc;S=97;break g}if(!(c[e>>2]&32))im(u,ka,e)|0;if(aa>>>0>=Cc>>>0){bb=Cc;S=97;break}else f=f+4|0}}}while(0);if((S|0)==97){S=0;om(e,32,ua,bb,$^8192);L=P;M=(ua|0)>(bb|0)?ua:bb;N=sa;O=Ca;continue}if((S|0)==77){S=0;Z=(Na|0)>-1?Ma&-65537:Ma;f=r;aa=(c[f>>2]|0)!=0|(c[f+4>>2]|0)!=0;if((Na|0)!=0|aa){f=(aa&1^1)+(x-La)|0;Ua=La;Va=Z;Wa=(Na|0)>(f|0)?Na:f;Xa=Oa;Ya=Pa;Za=w}else{Ua=w;Va=Z;Wa=0;Xa=Oa;Ya=Pa;Za=w}}Z=Za-Ua|0;f=(Wa|0)<(Z|0)?Z:Wa;aa=Xa+f|0;ka=(ua|0)<(aa|0)?aa:ua;om(e,32,ka,aa,Va);if(!(c[e>>2]&32))im(Ya,Xa,e)|0;om(e,48,ka,aa,Va^65536);om(e,48,f,Z,0);if(!(c[e>>2]&32))im(Ua,Z,e)|0;om(e,32,ka,aa,Va^8192);L=P;M=ka;N=sa;O=Ca}h:do if((S|0)==244)if(!e)if(R){Ca=1;while(1){O=c[l+(Ca<<2)>>2]|0;if(!O){Ec=Ca;break}km(j+(Ca<<3)|0,O,g);Ca=Ca+1|0;if((Ca|0)>=10){qa=1;break h}}if((Ec|0)<10){Ca=Ec;while(1){if(c[l+(Ca<<2)>>2]|0){qa=-1;break h}Ca=Ca+1|0;if((Ca|0)>=10){qa=1;break}}}else qa=1}else qa=0;else qa=Q;while(0);i=m;return qa|0}function im(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=e+16|0;g=c[f>>2]|0;if(!g)if(!(jm(e)|0)){h=c[f>>2]|0;i=5}else j=0;else{h=g;i=5}a:do if((i|0)==5){g=e+20|0;f=c[g>>2]|0;k=f;if((h-f|0)>>>0<d>>>0){j=kb[c[e+36>>2]&127](e,b,d)|0;break}b:do if((a[e+75>>0]|0)>-1){f=d;while(1){if(!f){l=d;m=b;n=k;o=0;break b}p=f+-1|0;if((a[b+p>>0]|0)==10){q=f;break}else f=p}if((kb[c[e+36>>2]&127](e,b,q)|0)>>>0<q>>>0){j=q;break a}l=d-q|0;m=b+q|0;n=c[g>>2]|0;o=q}else{l=d;m=b;n=k;o=0}while(0);ho(n|0,m|0,l|0)|0;c[g>>2]=(c[g>>2]|0)+l;j=o+l|0}while(0);return j|0}function jm(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=c[b>>2]|0;if(!(e&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);f=0}else{c[b>>2]=e|32;f=-1}return f|0}function km(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f;break a;break}case 10:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=e;c[f+4>>2]=((e|0)<0)<<31>>31;break a;break}case 11:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;e=a;c[e>>2]=f;c[e+4>>2]=0;break a;break}case 12:{e=(c[d>>2]|0)+(8-1)&~(8-1);f=e;g=c[f>>2]|0;i=c[f+4>>2]|0;c[d>>2]=e+8;e=a;c[e>>2]=g;c[e+4>>2]=i;break a;break}case 13:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&65535)<<16>>16;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 14:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&65535;c[i+4>>2]=0;break a;break}case 15:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=(e&255)<<24>>24;e=a;c[e>>2]=i;c[e+4>>2]=((i|0)<0)<<31>>31;break a;break}case 16:{i=(c[d>>2]|0)+(4-1)&~(4-1);e=c[i>>2]|0;c[d>>2]=i+4;i=a;c[i>>2]=e&255;c[i+4>>2]=0;break a;break}case 17:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}case 18:{i=(c[d>>2]|0)+(8-1)&~(8-1);j=+h[i>>3];c[d>>2]=i+8;h[a>>3]=j;break a;break}default:break a}while(0);while(0);return}function lm(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295){e=d;f=b;g=c;while(1){c=qo(f|0,g|0,10,0)|0;h=e+-1|0;a[h>>0]=c|48;c=po(f|0,g|0,10,0)|0;if(g>>>0>9|(g|0)==9&f>>>0>4294967295){e=h;f=c;g=C}else{i=h;j=c;break}}k=i;l=j}else{k=d;l=b}if(!l)m=k;else{b=k;k=l;while(1){l=b+-1|0;a[l>>0]=(k>>>0)%10|0|48;if(k>>>0<10){m=l;break}else{b=l;k=(k>>>0)/10|0}}}return m|0}function mm(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0;c=0;while(1){if((d[32367+c>>0]|0)==(b|0)){e=c;f=2;break}c=c+1|0;if((c|0)==87){g=87;h=32455;f=5;break}}if((f|0)==2)if(!e)i=32455;else{g=e;h=32455;f=5}if((f|0)==5)while(1){f=0;e=h;while(1){c=e+1|0;if(!(a[e>>0]|0)){j=c;break}else e=c}g=g+-1|0;if(!g){i=j;break}else{h=j;f=5}}return i|0}function nm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=d&255;g=(e|0)!=0;a:do if(g&(b&3|0)!=0){h=d&255;i=e;j=b;while(1){if((a[j>>0]|0)==h<<24>>24){k=i;l=j;m=6;break a}n=j+1|0;o=i+-1|0;p=(o|0)!=0;if(p&(n&3|0)!=0){i=o;j=n}else{q=o;r=p;s=n;m=5;break}}}else{q=e;r=g;s=b;m=5}while(0);if((m|0)==5)if(r){k=q;l=s;m=6}else{t=0;u=s}b:do if((m|0)==6){s=d&255;if((a[l>>0]|0)==s<<24>>24){t=k;u=l}else{q=_(f,16843009)|0;c:do if(k>>>0>3){r=k;b=l;while(1){g=c[b>>2]^q;if((g&-2139062144^-2139062144)&g+-16843009|0){v=r;w=b;break}g=b+4|0;e=r+-4|0;if(e>>>0>3){r=e;b=g}else{x=e;y=g;m=11;break c}}z=v;A=w}else{x=k;y=l;m=11}while(0);if((m|0)==11)if(!x){t=0;u=y;break}else{z=x;A=y}while(1){if((a[A>>0]|0)==s<<24>>24){t=z;u=A;break b}q=A+1|0;z=z+-1|0;if(!z){t=0;u=q;break}else A=q}}}while(0);return (t|0?u:0)|0}function om(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+256|0;h=g;do if((d|0)>(e|0)&(f&73728|0)==0){j=d-e|0;$n(h|0,b|0,(j>>>0>256?256:j)|0)|0;k=c[a>>2]|0;l=(k&32|0)==0;if(j>>>0>255){m=d-e|0;n=j;o=k;k=l;while(1){if(k){im(h,256,a)|0;p=c[a>>2]|0}else p=o;n=n+-256|0;k=(p&32|0)==0;if(n>>>0<=255)break;else o=p}if(k)q=m&255;else break}else if(l)q=j;else break;im(h,q,a)|0}while(0);i=g;return}function pm(a,b){a=a|0;b=b|0;var c=0;if(!a)c=0;else c=qm(a,b,0)|0;return c|0}function qm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;do if(b){if(d>>>0<128){a[b>>0]=d;f=1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;f=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;f=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;f=4;break}else{c[(Zl()|0)>>2]=84;f=-1;break}}else f=1;while(0);return f|0}function rm(a,b){a=+a;b=b|0;return +(+sm(a,b))}function sm(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0,i=0.0,j=0.0,l=0,m=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=eo(d|0,e|0,52)|0;g=f&2047;switch(g|0){case 0:{if(a!=0.0){i=+sm(a*18446744073709551616.0,b);j=i;l=(c[b>>2]|0)+-64|0}else{j=a;l=0}c[b>>2]=l;m=j;break}case 2047:{m=a;break}default:{c[b>>2]=g+-1022;c[k>>2]=d;c[k+4>>2]=e&-2146435073|1071644672;m=+h[k>>3]}}return +m}function tm(a){a=a|0;return 0}function um(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if(!d)e=0;else{f=d;g=b;h=c;while(1){i=a[g>>0]|0;j=a[h>>0]|0;if(i<<24>>24!=j<<24>>24){k=i;l=j;break}f=f+-1|0;if(!f){e=0;break a}else{g=g+1|0;h=h+1|0}}e=(k&255)-(l&255)|0}while(0);return e|0}function vm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=b;a:do if(!(d&3)){e=b;f=4}else{g=b;h=d;while(1){if(!(a[g>>0]|0)){i=h;break a}j=g+1|0;h=j;if(!(h&3)){e=j;f=4;break}else g=j}}while(0);if((f|0)==4){f=e;while(1){e=c[f>>2]|0;if(!((e&-2139062144^-2139062144)&e+-16843009))f=f+4|0;else{k=e;l=f;break}}if(!((k&255)<<24>>24))m=l;else{k=l;while(1){l=k+1|0;if(!(a[l>>0]|0)){m=l;break}else k=l}}i=m}return i-d|0}function wm(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+16|0;e=b;if((c[a+8>>2]|0)==0?(xm(a)|0)!=0:0)f=-1;else if((kb[c[a+32>>2]&127](a,e,1)|0)==1)f=d[e>>0]|0;else f=-1;i=b;return f|0}function xm(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)kb[c[b+36>>2]&127](b,0,0)|0;c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=c[b>>2]|0;if(e&20)if(!(e&4))f=-1;else{c[b>>2]=e|32;f=-1}else{e=c[d>>2]|0;c[b+8>>2]=e;c[b+4>>2]=e;f=0}return f|0}function ym(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function zm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0))c[a+100>>2]=e+b;else c[a+100>>2]=d;return}function Am(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+104|0;f=c[e>>2]|0;if((f|0)!=0?(c[b+108>>2]|0)>=(f|0):0)g=4;else{f=wm(b)|0;if((f|0)>=0){h=c[e>>2]|0;e=c[b+8>>2]|0;if(h){i=c[b+4>>2]|0;j=h-(c[b+108>>2]|0)|0;h=e;if((e-i|0)<(j|0)){k=h;g=9}else{c[b+100>>2]=i+(j+-1);l=h}}else{k=e;g=9}if((g|0)==9){c[b+100>>2]=e;l=k}k=b+4|0;if(!l)m=c[k>>2]|0;else{e=c[k>>2]|0;k=b+108|0;c[k>>2]=l+1-e+(c[k>>2]|0);m=e}e=m+-1|0;if((d[e>>0]|0|0)==(f|0))n=f;else{a[e>>0]=f;n=f}}else g=4}if((g|0)==4){c[b+100>>2]=0;n=-1}return n|0}function Bm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0.0,n=0,o=0,p=0,q=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,$=0,aa=0.0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0.0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0.0,ua=0,va=0.0,wa=0.0,xa=0,ya=0.0,za=0,Aa=0.0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0.0,La=0,Ma=0,Na=0,Oa=0,Pa=0.0,Qa=0,Ra=0,Sa=0,Ta=0.0,Ua=0.0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0.0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0.0,fd=0.0,gd=0.0,hd=0.0,id=0.0,jd=0.0,kd=0.0,ld=0,md=0,nd=0.0,od=0,pd=0.0;g=i;i=i+512|0;h=g;switch(e|0){case 0:{j=24;k=-149;l=4;break}case 1:{j=53;k=-1074;l=4;break}case 2:{j=53;k=-1074;l=4;break}default:m=0.0}a:do if((l|0)==4){e=b+4|0;n=b+100|0;do{o=c[e>>2]|0;if(o>>>0<(c[n>>2]|0)>>>0){c[e>>2]=o+1;p=d[o>>0]|0}else p=Am(b)|0}while((ym(p)|0)!=0);q=p;b:do switch(q|0){case 43:case 45:{o=1-(((q|0)==45&1)<<1)|0;t=c[e>>2]|0;if(t>>>0<(c[n>>2]|0)>>>0){c[e>>2]=t+1;u=d[t>>0]|0;v=o;break b}else{u=Am(b)|0;v=o;break b}break}default:{u=q;v=1}}while(0);o=u;t=0;while(1){if((o|32|0)!=(a[34299+t>>0]|0)){w=o;x=t;break}do if(t>>>0<7){y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;z=d[y>>0]|0;break}else{z=Am(b)|0;break}}else z=o;while(0);y=t+1|0;if(y>>>0<8){o=z;t=y}else{w=z;x=y;break}}c:do switch(x|0){case 8:break;case 3:{l=23;break}default:{t=(f|0)!=0;if(t&x>>>0>3)if((x|0)==8)break c;else{l=23;break c}d:do if(!x){o=w;y=0;while(1){if((o|32|0)!=(a[34308+y>>0]|0)){A=o;B=y;break d}do if(y>>>0<2){D=c[e>>2]|0;if(D>>>0<(c[n>>2]|0)>>>0){c[e>>2]=D+1;E=d[D>>0]|0;break}else{E=Am(b)|0;break}}else E=o;while(0);D=y+1|0;if(D>>>0<3){o=E;y=D}else{A=E;B=D;break}}}else{A=w;B=x}while(0);switch(B|0){case 3:{y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;F=d[y>>0]|0}else F=Am(b)|0;if((F|0)==40)G=1;else{if(!(c[n>>2]|0)){m=r;break a}c[e>>2]=(c[e>>2]|0)+-1;m=r;break a}while(1){y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;H=d[y>>0]|0}else H=Am(b)|0;if(!((H+-48|0)>>>0<10|(H+-65|0)>>>0<26)?!((H|0)==95|(H+-97|0)>>>0<26):0){I=H;J=G;break}G=G+1|0}if((I|0)==41){m=r;break a}y=(c[n>>2]|0)==0;if(!y)c[e>>2]=(c[e>>2]|0)+-1;if(!t){c[(Zl()|0)>>2]=22;zm(b,0);m=0.0;break a}if(!J){m=r;break a}else K=J;while(1){K=K+-1|0;if(!y)c[e>>2]=(c[e>>2]|0)+-1;if(!K){m=r;break a}}break}case 0:{do if((A|0)==48){y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;L=d[y>>0]|0}else L=Am(b)|0;if((L|32|0)!=120){if(!(c[n>>2]|0)){M=48;break}c[e>>2]=(c[e>>2]|0)+-1;M=48;break}y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;O=d[y>>0]|0;P=0}else{O=Am(b)|0;P=0}e:while(1){switch(O|0){case 46:{Q=P;l=74;break e;break}case 48:break;default:{R=0;S=0;T=0;U=0;V=O;W=P;X=0;Y=0;Z=1.0;$=0;aa=0.0;break e}}y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;O=d[y>>0]|0;P=1;continue}else{O=Am(b)|0;P=1;continue}}if((l|0)==74){y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;ba=d[y>>0]|0}else ba=Am(b)|0;if((ba|0)==48){y=0;t=0;while(1){o=c[e>>2]|0;if(o>>>0<(c[n>>2]|0)>>>0){c[e>>2]=o+1;ca=d[o>>0]|0}else ca=Am(b)|0;o=go(y|0,t|0,-1,-1)|0;D=C;if((ca|0)==48){y=o;t=D}else{R=0;S=0;T=o;U=D;V=ca;W=1;X=1;Y=0;Z=1.0;$=0;aa=0.0;break}}}else{R=0;S=0;T=0;U=0;V=ba;W=Q;X=1;Y=0;Z=1.0;$=0;aa=0.0}}while(1){t=V+-48|0;y=V|32;if(t>>>0>=10){D=(V|0)==46;if(!(D|(y+-97|0)>>>0<6)){da=T;ea=S;fa=U;ga=R;ha=V;ia=W;ja=X;ka=$;la=aa;break}if(D)if(!X){ma=S;na=R;oa=S;pa=R;qa=W;ra=1;sa=Y;ta=Z;ua=$;va=aa}else{da=T;ea=S;fa=U;ga=R;ha=46;ia=W;ja=X;ka=$;la=aa;break}else l=86}else l=86;if((l|0)==86){l=0;D=(V|0)>57?y+-87|0:t;do if(!((R|0)<0|(R|0)==0&S>>>0<8)){if((R|0)<0|(R|0)==0&S>>>0<14){wa=Z*.0625;xa=Y;ya=wa;za=$;Aa=aa+wa*+(D|0);break}if((Y|0)!=0|(D|0)==0){xa=Y;ya=Z;za=$;Aa=aa}else{xa=1;ya=Z;za=$;Aa=aa+Z*.5}}else{xa=Y;ya=Z;za=D+($<<4)|0;Aa=aa}while(0);D=go(S|0,R|0,1,0)|0;ma=T;na=U;oa=D;pa=C;qa=1;ra=X;sa=xa;ta=ya;ua=za;va=Aa}D=c[e>>2]|0;if(D>>>0<(c[n>>2]|0)>>>0){c[e>>2]=D+1;R=pa;S=oa;T=ma;U=na;V=d[D>>0]|0;W=qa;X=ra;Y=sa;Z=ta;$=ua;aa=va;continue}else{R=pa;S=oa;T=ma;U=na;V=Am(b)|0;W=qa;X=ra;Y=sa;Z=ta;$=ua;aa=va;continue}}if(!ia){D=(c[n>>2]|0)==0;if(!D)c[e>>2]=(c[e>>2]|0)+-1;if(f){if(!D?(D=c[e>>2]|0,c[e>>2]=D+-1,ja|0):0)c[e>>2]=D+-2}else zm(b,0);m=+(v|0)*0.0;break a}D=(ja|0)==0;t=D?ea:da;y=D?ga:fa;if((ga|0)<0|(ga|0)==0&ea>>>0<8){D=ea;o=ga;Ba=ka;while(1){Ca=Ba<<4;D=go(D|0,o|0,1,0)|0;o=C;if(!((o|0)<0|(o|0)==0&D>>>0<8)){Da=Ca;break}else Ba=Ca}}else Da=ka;if((ha|32|0)==112){Ba=Cm(b,f)|0;D=C;if((Ba|0)==0&(D|0)==-2147483648){if(!f){zm(b,0);m=0.0;break a}if(!(c[n>>2]|0)){Ea=0;Fa=0}else{c[e>>2]=(c[e>>2]|0)+-1;Ea=0;Fa=0}}else{Ea=Ba;Fa=D}}else if(!(c[n>>2]|0)){Ea=0;Fa=0}else{c[e>>2]=(c[e>>2]|0)+-1;Ea=0;Fa=0}D=ao(t|0,y|0,2)|0;Ba=go(D|0,C|0,-32,-1)|0;D=go(Ba|0,C|0,Ea|0,Fa|0)|0;Ba=C;if(!Da){m=+(v|0)*0.0;break a}if((Ba|0)>0|(Ba|0)==0&D>>>0>(0-k|0)>>>0){c[(Zl()|0)>>2]=34;m=+(v|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break a}o=k+-106|0;Ca=((o|0)<0)<<31>>31;if((Ba|0)<(Ca|0)|(Ba|0)==(Ca|0)&D>>>0<o>>>0){c[(Zl()|0)>>2]=34;m=+(v|0)*2.2250738585072014e-308*2.2250738585072014e-308;break a}if((Da|0)>-1){o=D;Ca=Ba;Ga=Da;wa=la;while(1){Ha=!(wa>=.5);Ia=Ha&1|Ga<<1;Ja=Ia^1;Ka=wa+(Ha?wa:wa+-1.0);Ha=go(o|0,Ca|0,-1,-1)|0;La=C;if((Ia|0)>-1){o=Ha;Ca=La;Ga=Ja;wa=Ka}else{Ma=Ha;Na=La;Oa=Ja;Pa=Ka;break}}}else{Ma=D;Na=Ba;Oa=Da;Pa=la}Ga=_n(32,0,k|0,((k|0)<0)<<31>>31|0)|0;Ca=go(Ma|0,Na|0,Ga|0,C|0)|0;Ga=C;if(0>(Ga|0)|0==(Ga|0)&j>>>0>Ca>>>0)if((Ca|0)<0){Qa=0;l=127}else{Ra=Ca;l=125}else{Ra=j;l=125}if((l|0)==125)if((Ra|0)<53){Qa=Ra;l=127}else{Sa=Ra;Ta=+(v|0);Ua=0.0}if((l|0)==127){wa=+(v|0);Sa=Qa;Ta=wa;Ua=+Em(+Dm(1.0,84-Qa|0),wa)}Ca=(Oa&1|0)==0&(Pa!=0.0&(Sa|0)<32);wa=Ta*(Ca?0.0:Pa)+(Ua+Ta*+(((Ca&1)+Oa|0)>>>0))-Ua;if(!(wa!=0.0))c[(Zl()|0)>>2]=34;m=+Gm(wa,Ma);break a}else M=A;while(0);Ca=k+j|0;Ga=0-Ca|0;o=M;y=0;f:while(1){switch(o|0){case 46:{Va=y;l=138;break f;break}case 48:break;default:{Wa=o;Xa=0;Ya=0;Za=y;_a=0;break f}}t=c[e>>2]|0;if(t>>>0<(c[n>>2]|0)>>>0){c[e>>2]=t+1;o=d[t>>0]|0;y=1;continue}else{o=Am(b)|0;y=1;continue}}if((l|0)==138){y=c[e>>2]|0;if(y>>>0<(c[n>>2]|0)>>>0){c[e>>2]=y+1;$a=d[y>>0]|0}else $a=Am(b)|0;if(($a|0)==48){y=0;o=0;while(1){t=go(y|0,o|0,-1,-1)|0;Ja=C;La=c[e>>2]|0;if(La>>>0<(c[n>>2]|0)>>>0){c[e>>2]=La+1;ab=d[La>>0]|0}else ab=Am(b)|0;if((ab|0)==48){y=t;o=Ja}else{Wa=ab;Xa=t;Ya=Ja;Za=1;_a=1;break}}}else{Wa=$a;Xa=0;Ya=0;Za=Va;_a=1}}c[h>>2]=0;o=Wa+-48|0;y=(Wa|0)==46;g:do if(y|o>>>0<10){Ja=h+496|0;t=Wa;La=0;Ha=0;Ia=y;bb=o;cb=Xa;db=Ya;eb=Za;fb=_a;gb=0;hb=0;ib=0;h:while(1){do if(Ia)if(!fb){jb=La;kb=Ha;lb=La;mb=Ha;nb=eb;ob=1;pb=gb;qb=hb;rb=ib}else{sb=cb;tb=db;ub=La;vb=Ha;wb=eb;xb=gb;yb=hb;zb=ib;break h}else{Ab=go(La|0,Ha|0,1,0)|0;Bb=C;Cb=(t|0)!=48;if((hb|0)>=125){if(!Cb){jb=cb;kb=db;lb=Ab;mb=Bb;nb=eb;ob=fb;pb=gb;qb=hb;rb=ib;break}c[Ja>>2]=c[Ja>>2]|1;jb=cb;kb=db;lb=Ab;mb=Bb;nb=eb;ob=fb;pb=gb;qb=hb;rb=ib;break}Db=h+(hb<<2)|0;if(!gb)Eb=bb;else Eb=t+-48+((c[Db>>2]|0)*10|0)|0;c[Db>>2]=Eb;Db=gb+1|0;Fb=(Db|0)==9;jb=cb;kb=db;lb=Ab;mb=Bb;nb=1;ob=fb;pb=Fb?0:Db;qb=(Fb&1)+hb|0;rb=Cb?Ab:ib}while(0);Ab=c[e>>2]|0;if(Ab>>>0<(c[n>>2]|0)>>>0){c[e>>2]=Ab+1;Gb=d[Ab>>0]|0}else Gb=Am(b)|0;bb=Gb+-48|0;Ia=(Gb|0)==46;if(!(Ia|bb>>>0<10)){Hb=Gb;Ib=jb;Jb=lb;Kb=kb;Lb=mb;Mb=nb;Nb=ob;Ob=pb;Pb=qb;Qb=rb;l=161;break g}else{t=Gb;La=lb;Ha=mb;cb=jb;db=kb;eb=nb;fb=ob;gb=pb;hb=qb;ib=rb}}Rb=ub;Sb=vb;Tb=sb;Ub=tb;Vb=(wb|0)!=0;Wb=xb;Xb=yb;Yb=zb;l=169}else{Hb=Wa;Ib=Xa;Jb=0;Kb=Ya;Lb=0;Mb=Za;Nb=_a;Ob=0;Pb=0;Qb=0;l=161}while(0);do if((l|0)==161){o=(Nb|0)==0;y=o?Jb:Ib;ib=o?Lb:Kb;o=(Mb|0)!=0;if(!((Hb|32|0)==101&o))if((Hb|0)>-1){Rb=Jb;Sb=Lb;Tb=y;Ub=ib;Vb=o;Wb=Ob;Xb=Pb;Yb=Qb;l=169;break}else{Zb=Jb;_b=Lb;$b=o;ac=y;bc=ib;cc=Ob;dc=Pb;ec=Qb;l=171;break}o=Cm(b,f)|0;hb=C;if((o|0)==0&(hb|0)==-2147483648){if(!f){zm(b,0);fc=0.0;break}if(!(c[n>>2]|0)){gc=0;hc=0}else{c[e>>2]=(c[e>>2]|0)+-1;gc=0;hc=0}}else{gc=o;hc=hb}hb=go(gc|0,hc|0,y|0,ib|0)|0;ic=hb;jc=Jb;kc=C;lc=Lb;mc=Ob;nc=Pb;oc=Qb;l=173}while(0);if((l|0)==169)if(c[n>>2]|0){c[e>>2]=(c[e>>2]|0)+-1;if(Vb){ic=Tb;jc=Rb;kc=Ub;lc=Sb;mc=Wb;nc=Xb;oc=Yb;l=173}else l=172}else{Zb=Rb;_b=Sb;$b=Vb;ac=Tb;bc=Ub;cc=Wb;dc=Xb;ec=Yb;l=171}if((l|0)==171)if($b){ic=ac;jc=Zb;kc=bc;lc=_b;mc=cc;nc=dc;oc=ec;l=173}else l=172;do if((l|0)==172){c[(Zl()|0)>>2]=22;zm(b,0);fc=0.0}else if((l|0)==173){hb=c[h>>2]|0;if(!hb){fc=+(v|0)*0.0;break}if(((lc|0)<0|(lc|0)==0&jc>>>0<10)&((ic|0)==(jc|0)&(kc|0)==(lc|0))?j>>>0>30|(hb>>>j|0)==0:0){fc=+(v|0)*+(hb>>>0);break}hb=(k|0)/-2|0;ib=((hb|0)<0)<<31>>31;if((kc|0)>(ib|0)|(kc|0)==(ib|0)&ic>>>0>hb>>>0){c[(Zl()|0)>>2]=34;fc=+(v|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}hb=k+-106|0;ib=((hb|0)<0)<<31>>31;if((kc|0)<(ib|0)|(kc|0)==(ib|0)&ic>>>0<hb>>>0){c[(Zl()|0)>>2]=34;fc=+(v|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(!mc)pc=nc;else{if((mc|0)<9){hb=h+(nc<<2)|0;ib=c[hb>>2]|0;y=mc;while(1){o=ib*10|0;y=y+1|0;if((y|0)==9){qc=o;break}else ib=o}c[hb>>2]=qc}pc=nc+1|0}if((oc|0)<9?(oc|0)<=(ic|0)&(ic|0)<18:0){if((ic|0)==9){fc=+(v|0)*+((c[h>>2]|0)>>>0);break}if((ic|0)<9){fc=+(v|0)*+((c[h>>2]|0)>>>0)/+(c[6268+(8-ic<<2)>>2]|0);break}ib=j+27+(_(ic,-3)|0)|0;y=c[h>>2]|0;if((ib|0)>30|(y>>>ib|0)==0){fc=+(v|0)*+(y>>>0)*+(c[6268+(ic+-10<<2)>>2]|0);break}}y=(ic|0)%9|0;if(!y){rc=0;sc=0;tc=ic;uc=pc}else{ib=(ic|0)>-1?y:y+9|0;y=c[6268+(8-ib<<2)>>2]|0;if(pc){o=1e9/(y|0)|0;gb=0;fb=0;eb=0;db=ic;while(1){cb=h+(eb<<2)|0;Ha=c[cb>>2]|0;La=((Ha>>>0)/(y>>>0)|0)+fb|0;c[cb>>2]=La;cb=_((Ha>>>0)%(y>>>0)|0,o)|0;Ha=(eb|0)==(gb|0)&(La|0)==0;eb=eb+1|0;La=Ha?db+-9|0:db;t=Ha?eb&127:gb;if((eb|0)==(pc|0)){vc=cb;wc=t;xc=La;break}else{gb=t;fb=cb;db=La}}if(!vc){yc=wc;zc=xc;Ac=pc}else{c[h+(pc<<2)>>2]=vc;yc=wc;zc=xc;Ac=pc+1|0}}else{yc=0;zc=ic;Ac=0}rc=yc;sc=0;tc=9-ib+zc|0;uc=Ac}i:while(1){db=(tc|0)<18;fb=(tc|0)==18;gb=h+(rc<<2)|0;eb=sc;o=uc;while(1){if(!db){if(!fb){Bc=rc;Cc=eb;Dc=tc;Ec=o;break i}if((c[gb>>2]|0)>>>0>=9007199){Bc=rc;Cc=eb;Dc=18;Ec=o;break i}}y=0;hb=o+127|0;La=o;while(1){cb=hb&127;t=h+(cb<<2)|0;Ha=ao(c[t>>2]|0,0,29)|0;bb=go(Ha|0,C|0,y|0,0)|0;Ha=C;if(Ha>>>0>0|(Ha|0)==0&bb>>>0>1e9){Ia=po(bb|0,Ha|0,1e9,0)|0;Ja=qo(bb|0,Ha|0,1e9,0)|0;Fc=Ja;Gc=Ia}else{Fc=bb;Gc=0}c[t>>2]=Fc;t=(cb|0)==(rc|0);bb=(cb|0)!=(La+127&127|0)|t?La:(Fc|0)==0?cb:La;if(t){Hc=Gc;Ic=bb;break}else{y=Gc;hb=cb+-1|0;La=bb}}La=eb+-29|0;if(!Hc){eb=La;o=Ic}else{Jc=La;Kc=Hc;Lc=Ic;break}}o=rc+127&127;if((o|0)==(Lc|0)){eb=Lc+127&127;gb=h+((Lc+126&127)<<2)|0;c[gb>>2]=c[gb>>2]|c[h+(eb<<2)>>2];Mc=eb}else Mc=Lc;c[h+(o<<2)>>2]=Kc;rc=o;sc=Jc;tc=tc+9|0;uc=Mc}j:while(1){Nc=Ec+1&127;ib=h+((Ec+127&127)<<2)|0;o=Bc;eb=Cc;gb=Dc;while(1){fb=(gb|0)==18;db=(gb|0)>27?9:1;La=fb^1;Oc=o;Pc=eb;while(1){Qc=Oc&127;Rc=(Qc|0)==(Ec|0);do if(!Rc){hb=c[h+(Qc<<2)>>2]|0;if(hb>>>0<9007199){l=219;break}if(hb>>>0>9007199)break;hb=Oc+1&127;if((hb|0)==(Ec|0)){l=219;break}y=c[h+(hb<<2)>>2]|0;if(y>>>0<254740991){l=219;break}if(!(y>>>0>254740991|La)){Sc=Qc;Tc=Oc;Uc=Pc;Vc=Ec;break j}}else l=219;while(0);if((l|0)==219?(l=0,fb):0){l=220;break j}y=Pc+db|0;if((Oc|0)==(Ec|0)){Oc=Ec;Pc=y}else{Wc=y;Xc=Oc;break}}fb=(1<<db)+-1|0;La=1e9>>>db;y=Xc;hb=0;bb=Xc;cb=gb;while(1){t=h+(bb<<2)|0;Ia=c[t>>2]|0;Ja=(Ia>>>db)+hb|0;c[t>>2]=Ja;t=_(Ia&fb,La)|0;Ia=(bb|0)==(y|0)&(Ja|0)==0;bb=bb+1&127;Ja=Ia?cb+-9|0:cb;Ha=Ia?bb:y;if((bb|0)==(Ec|0)){Yc=t;Zc=Ha;_c=Ja;break}else{y=Ha;hb=t;cb=Ja}}if(!Yc){o=Zc;eb=Wc;gb=_c;continue}if((Nc|0)!=(Zc|0)){$c=Wc;ad=Yc;bd=Zc;cd=_c;break}c[ib>>2]=c[ib>>2]|1;o=Zc;eb=Wc;gb=_c}c[h+(Ec<<2)>>2]=ad;Bc=bd;Cc=$c;Dc=cd;Ec=Nc}if((l|0)==220)if(Rc){c[h+(Nc+-1<<2)>>2]=0;Sc=Ec;Tc=Oc;Uc=Pc;Vc=Nc}else{Sc=Qc;Tc=Oc;Uc=Pc;Vc=Ec}wa=+((c[h+(Sc<<2)>>2]|0)>>>0);gb=Tc+1&127;if((gb|0)==(Vc|0)){eb=Tc+2&127;c[h+(eb+-1<<2)>>2]=0;dd=eb}else dd=Vc;Ka=+(v|0);ed=Ka*(wa*1.0e9+ +((c[h+(gb<<2)>>2]|0)>>>0));gb=Uc+53|0;eb=gb-k|0;o=(eb|0)<(j|0);ib=o&1;cb=o?((eb|0)<0?0:eb):j;if((cb|0)<53){wa=+Em(+Dm(1.0,105-cb|0),ed);fd=+Hm(ed,+Dm(1.0,53-cb|0));gd=wa;hd=fd;id=wa+(ed-fd)}else{gd=0.0;hd=0.0;id=ed}hb=Tc+2&127;do if((hb|0)==(dd|0))jd=hd;else{y=c[h+(hb<<2)>>2]|0;do if(y>>>0>=5e8){if(y>>>0>5e8){kd=Ka*.75+hd;break}if((Tc+3&127|0)==(dd|0)){kd=Ka*.5+hd;break}else{kd=Ka*.75+hd;break}}else{if((y|0)==0?(Tc+3&127|0)==(dd|0):0){kd=hd;break}kd=Ka*.25+hd}while(0);if((53-cb|0)<=1){jd=kd;break}if(+Hm(kd,1.0)!=0.0){jd=kd;break}jd=kd+1.0}while(0);Ka=id+jd-gd;do if((gb&2147483647|0)>(-2-Ca|0)){if(!(+N(+Ka)>=9007199254740992.0)){ld=ib;md=Uc;nd=Ka}else{ld=o&(cb|0)==(eb|0)?0:ib;md=Uc+1|0;nd=Ka*.5}if((md+50|0)<=(Ga|0)?!(jd!=0.0&(ld|0)!=0):0){od=md;pd=nd;break}c[(Zl()|0)>>2]=34;od=md;pd=nd}else{od=Uc;pd=Ka}while(0);fc=+Gm(pd,od)}while(0);m=fc;break a;break}default:{if(c[n>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;c[(Zl()|0)>>2]=22;zm(b,0);m=0.0;break a}}}}while(0);if((l|0)==23){Ga=(c[n>>2]|0)==0;if(!Ga)c[e>>2]=(c[e>>2]|0)+-1;if((f|0)!=0&x>>>0>3){Ca=x;do{if(!Ga)c[e>>2]=(c[e>>2]|0)+-1;Ca=Ca+-1|0}while(Ca>>>0>3)}}m=+(v|0)*s}while(0);i=g;return +m}function Cm(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f>>0]|0}else h=Am(a)|0;switch(h|0){case 43:case 45:{f=(h|0)==45&1;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i>>0]|0}else j=Am(a)|0;if((b|0)!=0&(j+-48|0)>>>0>9?(c[g>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)+-1;k=j;l=f}else{k=j;l=f}break}default:{k=h;l=0}}if((k+-48|0)>>>0>9)if(!(c[g>>2]|0)){m=-2147483648;n=0}else{c[e>>2]=(c[e>>2]|0)+-1;m=-2147483648;n=0}else{h=k;k=0;while(1){f=h+-48+(k*10|0)|0;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;o=d[j>>0]|0}else o=Am(a)|0;if((o+-48|0)>>>0<10&(f|0)<214748364){h=o;k=f}else{p=f;q=o;break}}o=((p|0)<0)<<31>>31;if((q+-48|0)>>>0<10){k=p;h=o;f=q;while(1){j=oo(k|0,h|0,10,0)|0;b=C;i=go(f|0,((f|0)<0)<<31>>31|0,-48,-1)|0;r=go(i|0,C|0,j|0,b|0)|0;b=C;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;s=d[j>>0]|0}else s=Am(a)|0;if((s+-48|0)>>>0<10&((b|0)<21474836|(b|0)==21474836&r>>>0<2061584302)){k=r;h=b;f=s}else{t=r;u=b;v=s;break}}}else{t=p;u=o;v=q}if((v+-48|0)>>>0<10)do{v=c[e>>2]|0;if(v>>>0<(c[g>>2]|0)>>>0){c[e>>2]=v+1;w=d[v>>0]|0}else w=Am(a)|0}while((w+-48|0)>>>0<10);if(c[g>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;e=(l|0)!=0;l=_n(0,0,t|0,u|0)|0;m=e?C:u;n=e?l:t}C=m;return n|0}function Dm(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,g=0,i=0.0;if((b|0)>1023){d=a*8988465674311579538646525.0e283;e=b+-1023|0;if((e|0)>1023){f=b+-2046|0;g=(f|0)>1023?1023:f;i=d*8988465674311579538646525.0e283}else{g=e;i=d}}else if((b|0)<-1022){d=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){f=b+2044|0;g=(f|0)<-1022?-1022:f;i=d*2.2250738585072014e-308}else{g=e;i=d}}else{g=b;i=a}b=ao(g+1023|0,0,52)|0;g=C;c[k>>2]=b;c[k+4>>2]=g;return +(i*+h[k>>3])}function Em(a,b){a=+a;b=+b;return +(+Fm(a,b))}function Fm(a,b){a=+a;b=+b;var d=0,e=0;h[k>>3]=b;d=c[k+4>>2]|0;b=+N(+a);h[k>>3]=b;e=d&-2147483648|c[k+4>>2];c[k>>2]=c[k>>2];c[k+4>>2]=e;return +(+h[k>>3])}function Gm(a,b){a=+a;b=b|0;return +(+Dm(a,b))}function Hm(a,b){a=+a;b=+b;return +(+Im(a,b))}function Im(a,b){a=+a;b=+b;var d=0,e=0,f=0,g=0,i=0,j=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k>>2]|0;g=c[k+4>>2]|0;i=eo(d|0,e|0,52)|0;j=i&2047;i=eo(f|0,g|0,52)|0;l=i&2047;i=e&-2147483648;m=ao(f|0,g|0,1)|0;n=C;a:do if(!((m|0)==0&(n|0)==0)?(o=+N(+b),h[k>>3]=o,p=c[k+4>>2]|0,!(p>>>0>2146435072|(p|0)==2146435072&(c[k>>2]|0)>>>0>0|(j|0)==2047)):0){p=ao(d|0,e|0,1)|0;q=C;if(!(q>>>0>n>>>0|(q|0)==(n|0)&p>>>0>m>>>0))return +((p|0)==(m|0)&(q|0)==(n|0)?a*0.0:a);if(!j){q=ao(d|0,e|0,12)|0;p=C;if((p|0)>-1|(p|0)==-1&q>>>0>4294967295){r=q;q=p;p=0;while(1){s=p+-1|0;r=ao(r|0,q|0,1)|0;q=C;if(!((q|0)>-1|(q|0)==-1&r>>>0>4294967295)){t=s;break}else p=s}}else t=0;p=ao(d|0,e|0,1-t|0)|0;u=p;v=C;w=t}else{u=d;v=e&1048575|1048576;w=j}if(!l){p=ao(f|0,g|0,12)|0;r=C;if((r|0)>-1|(r|0)==-1&p>>>0>4294967295){q=p;p=r;r=0;while(1){s=r+-1|0;q=ao(q|0,p|0,1)|0;p=C;if(!((p|0)>-1|(p|0)==-1&q>>>0>4294967295)){x=s;break}else r=s}}else x=0;r=ao(f|0,g|0,1-x|0)|0;y=r;z=C;A=x}else{y=f;z=g&1048575|1048576;A=l}r=_n(u|0,v|0,y|0,z|0)|0;q=C;p=(q|0)>-1|(q|0)==-1&r>>>0>4294967295;b:do if((w|0)>(A|0)){s=p;B=r;D=q;E=u;F=v;G=w;while(1){if(s)if((E|0)==(y|0)&(F|0)==(z|0))break;else{H=B;I=D}else{H=E;I=F}J=ao(H|0,I|0,1)|0;K=C;L=G+-1|0;M=_n(J|0,K|0,y|0,z|0)|0;O=C;P=(O|0)>-1|(O|0)==-1&M>>>0>4294967295;if((L|0)>(A|0)){s=P;B=M;D=O;E=J;F=K;G=L}else{Q=P;R=J;S=K;T=M;U=O;V=L;break b}}W=a*0.0;break a}else{Q=p;R=u;S=v;T=r;U=q;V=w}while(0);if(Q)if((R|0)==(y|0)&(S|0)==(z|0)){W=a*0.0;break}else{X=U;Y=T}else{X=S;Y=R}if(X>>>0<1048576|(X|0)==1048576&Y>>>0<0){q=Y;r=X;p=V;while(1){G=ao(q|0,r|0,1)|0;F=C;E=p+-1|0;if(F>>>0<1048576|(F|0)==1048576&G>>>0<0){q=G;r=F;p=E}else{Z=G;_=F;$=E;break}}}else{Z=Y;_=X;$=V}if(($|0)>0){p=go(Z|0,_|0,0,-1048576)|0;r=C;q=ao($|0,0,52)|0;aa=r|C;ba=p|q}else{q=eo(Z|0,_|0,1-$|0)|0;aa=C;ba=q}c[k>>2]=ba;c[k+4>>2]=aa|i;W=+h[k>>3]}else ca=3;while(0);if((ca|0)==3){o=a*b;W=o/o}return +W}function Jm(a){a=a|0;var b=0,d=0,e=0,f=0;b=(c[a>>2]&1|0)!=0;if(!b){bb(35148);d=c[a+52>>2]|0;e=a+56|0;if(d|0)c[d+56>>2]=c[e>>2];f=c[e>>2]|0;if(f|0)c[f+52>>2]=d;if((c[8786]|0)==(a|0))c[8786]=f;Za(35148)}f=Km(a)|0;d=pb[c[a+12>>2]&127](a)|0|f;f=c[a+92>>2]|0;if(f|0)bn(f);if(!b)bn(a);return d|0}function Km(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;do if(a){if((c[a+76>>2]|0)<=-1){b=Lm(a)|0;break}d=(tm(a)|0)==0;e=Lm(a)|0;if(d)b=e;else{_l(a);b=e}}else{if(!(c[1509]|0))f=0;else f=Km(c[1509]|0)|0;bb(35148);e=c[8786]|0;if(!e)g=f;else{d=e;e=f;while(1){if((c[d+76>>2]|0)>-1)h=tm(d)|0;else h=0;if((c[d+20>>2]|0)>>>0>(c[d+28>>2]|0)>>>0)i=Lm(d)|0|e;else i=e;if(h|0)_l(d);d=c[d+56>>2]|0;if(!d){g=i;break}else e=i}}Za(35148);b=g}while(0);return b|0}function Lm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a+20|0;d=a+28|0;if((c[b>>2]|0)>>>0>(c[d>>2]|0)>>>0?(kb[c[a+36>>2]&127](a,0,0)|0,(c[b>>2]|0)==0):0)e=-1;else{f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;if(g>>>0<i>>>0)kb[c[a+40>>2]&127](a,g-i|0,1)|0;c[a+16>>2]=0;c[d>>2]=0;c[b>>2]=0;c[h>>2]=0;c[f>>2]=0;e=0}return e|0}function Mm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=gm(a,b,f)|0;i=e;return d|0}function Nm(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!e)f=0;else{g=a[b>>0]|0;a:do if(!(g<<24>>24)){h=0;i=c}else{j=e;k=g;l=b;m=c;while(1){j=j+-1|0;n=a[m>>0]|0;if(!(k<<24>>24==n<<24>>24&((j|0)!=0&n<<24>>24!=0))){h=k;i=m;break a}l=l+1|0;n=m+1|0;k=a[l>>0]|0;if(!(k<<24>>24)){h=0;i=n;break}else m=n}}while(0);f=(h&255)-(d[i>>0]|0)|0}return f|0}function Om(a){a=a|0;return (a+-32|0)>>>0<95|0}function Pm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=_(d,b)|0;if((c[e+76>>2]|0)>-1){g=(tm(e)|0)==0;h=im(a,f,e)|0;if(g)i=h;else{_l(e);i=h}}else i=im(a,f,e)|0;if((i|0)==(f|0))j=d;else j=(i>>>0)/(b>>>0)|0;return j|0}function Qm(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;h=e&255;a[g>>0]=h;j=b+16|0;k=c[j>>2]|0;if(!k)if(!(jm(b)|0)){l=c[j>>2]|0;m=4}else n=-1;else{l=k;m=4}do if((m|0)==4){k=b+20|0;j=c[k>>2]|0;if(j>>>0<l>>>0?(o=e&255,(o|0)!=(a[b+75>>0]|0)):0){c[k>>2]=j+1;a[j>>0]=h;n=o;break}if((kb[c[b+36>>2]&127](b,g,1)|0)==1)n=d[g>>0]|0;else n=-1}while(0);i=f;return n|0}function Rm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((c[d+76>>2]|0)>=0?(tm(d)|0)!=0:0){if((a[d+75>>0]|0)!=(b|0)?(e=d+20|0,f=c[e>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[e>>2]=f+1;a[f>>0]=b;g=b&255}else g=Qm(d,b)|0;_l(d);h=g}else i=3;do if((i|0)==3){if((a[d+75>>0]|0)!=(b|0)?(g=d+20|0,f=c[g>>2]|0,f>>>0<(c[d+16>>2]|0)>>>0):0){c[g>>2]=f+1;a[f>>0]=b;h=b&255;break}h=Qm(d,b)|0}while(0);return h|0}function Sm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=_(e,d)|0;if((c[f+76>>2]|0)>-1)h=tm(f)|0;else h=0;i=f+74|0;j=a[i>>0]|0;a[i>>0]=j+255|j;j=f+4|0;i=c[j>>2]|0;k=(c[f+8>>2]|0)-i|0;l=i;if((k|0)>0){i=k>>>0<g>>>0?k:g;ho(b|0,l|0,i|0)|0;c[j>>2]=l+i;m=b+i|0;n=g-i|0}else{m=b;n=g}a:do if(!n)o=13;else{b=f+32|0;i=m;l=n;while(1){if(xm(f)|0){p=l;break}j=kb[c[b>>2]&127](f,i,l)|0;if((j+1|0)>>>0<2){p=l;break}if((l|0)==(j|0)){o=13;break a}else{i=i+j|0;l=l-j|0}}if(h|0)_l(f);q=((g-p|0)>>>0)/(d>>>0)|0}while(0);if((o|0)==13)if(!h)q=e;else{_l(f);q=e}return q|0}function Tm(a){a=a|0;var b=0,d=0,e=0;if(!(c[a>>2]&128))b=1;else b=(c[a+20>>2]|0)>>>0>(c[a+28>>2]|0)>>>0?2:1;d=kb[c[a+40>>2]&127](a,0,b)|0;if((d|0)<0)e=d;else e=d-(c[a+8>>2]|0)+(c[a+4>>2]|0)+(c[a+20>>2]|0)-(c[a+28>>2]|0)|0;return e|0}function Um(a){a=a|0;var b=0,d=0,e=0;if((c[a+76>>2]|0)>-1){b=(tm(a)|0)==0;d=Tm(a)|0;if(b)e=d;else{_l(a);e=d}}else e=Tm(a)|0;return e|0}function Vm(a){a=a|0;return Um(a)|0}function Wm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==1)e=b-(c[a+8>>2]|0)+(c[a+4>>2]|0)|0;else e=b;b=a+20|0;f=a+28|0;if((c[b>>2]|0)>>>0>(c[f>>2]|0)>>>0?(kb[c[a+36>>2]&127](a,0,0)|0,(c[b>>2]|0)==0):0)g=-1;else{c[a+16>>2]=0;c[f>>2]=0;c[b>>2]=0;if((kb[c[a+40>>2]&127](a,e,d)|0)<0)g=-1;else{c[a+8>>2]=0;c[a+4>>2]=0;c[a>>2]=c[a>>2]&-17;g=0}}return g|0}function Xm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((c[a+76>>2]|0)>-1){e=(tm(a)|0)==0;f=Wm(a,b,d)|0;if(e)g=f;else{_l(a);g=f}}else g=Wm(a,b,d)|0;return g|0}function Ym(a,b,c){a=a|0;b=b|0;c=c|0;return Xm(a,b,c)|0}function Zm(a,b){a=a|0;b=b|0;return +(+_m(a,b,0))}function _m(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0;e=i;i=i+112|0;f=e;g=f;h=g+112|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=f+4|0;c[g>>2]=a;h=f+8|0;c[h>>2]=-1;c[f+44>>2]=a;c[f+76>>2]=-1;zm(f,0);j=+Bm(f,d,1);d=(c[g>>2]|0)-(c[h>>2]|0)+(c[f+108>>2]|0)|0;if(b|0)c[b>>2]=d|0?a+d|0:a;i=e;return +j}function $m(a,b){a=a|0;b=b|0;return +(+_m(a,b,1))}function an(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;do if(a>>>0<245){b=a>>>0<11?16:a+11&-8;d=b>>>3;e=c[8792]|0;f=e>>>d;if(f&3|0){g=(f&1^1)+d|0;h=35208+(g<<1<<2)|0;i=h+8|0;j=c[i>>2]|0;k=j+8|0;l=c[k>>2]|0;do if((h|0)!=(l|0)){if(l>>>0<(c[8796]|0)>>>0)Ha();m=l+12|0;if((c[m>>2]|0)==(j|0)){c[m>>2]=h;c[i>>2]=l;break}else Ha()}else c[8792]=e&~(1<<g);while(0);l=g<<3;c[j+4>>2]=l|3;i=j+l+4|0;c[i>>2]=c[i>>2]|1;n=k;return n|0}i=c[8794]|0;if(b>>>0>i>>>0){if(f|0){l=2<<d;h=f<<d&(l|0-l);l=(h&0-h)+-1|0;h=l>>>12&16;m=l>>>h;l=m>>>5&8;o=m>>>l;m=o>>>2&4;p=o>>>m;o=p>>>1&2;q=p>>>o;p=q>>>1&1;r=(l|h|m|o|p)+(q>>>p)|0;p=35208+(r<<1<<2)|0;q=p+8|0;o=c[q>>2]|0;m=o+8|0;h=c[m>>2]|0;do if((p|0)!=(h|0)){if(h>>>0<(c[8796]|0)>>>0)Ha();l=h+12|0;if((c[l>>2]|0)==(o|0)){c[l>>2]=p;c[q>>2]=h;s=c[8794]|0;break}else Ha()}else{c[8792]=e&~(1<<r);s=i}while(0);i=(r<<3)-b|0;c[o+4>>2]=b|3;e=o+b|0;c[e+4>>2]=i|1;c[e+i>>2]=i;if(s|0){h=c[8797]|0;q=s>>>3;p=35208+(q<<1<<2)|0;d=c[8792]|0;f=1<<q;if(d&f){q=p+8|0;k=c[q>>2]|0;if(k>>>0<(c[8796]|0)>>>0)Ha();else{t=q;u=k}}else{c[8792]=d|f;t=p+8|0;u=p}c[t>>2]=h;c[u+12>>2]=h;c[h+8>>2]=u;c[h+12>>2]=p}c[8794]=i;c[8797]=e;n=m;return n|0}e=c[8793]|0;if(e){i=(e&0-e)+-1|0;e=i>>>12&16;p=i>>>e;i=p>>>5&8;h=p>>>i;p=h>>>2&4;f=h>>>p;h=f>>>1&2;d=f>>>h;f=d>>>1&1;k=c[35472+((i|e|p|h|f)+(d>>>f)<<2)>>2]|0;f=(c[k+4>>2]&-8)-b|0;d=k;h=k;while(1){k=c[d+16>>2]|0;if(!k){p=c[d+20>>2]|0;if(!p){v=f;w=h;break}else x=p}else x=k;k=(c[x+4>>2]&-8)-b|0;p=k>>>0<f>>>0;f=p?k:f;d=x;h=p?x:h}h=c[8796]|0;if(w>>>0<h>>>0)Ha();d=w+b|0;if(w>>>0>=d>>>0)Ha();f=c[w+24>>2]|0;m=c[w+12>>2]|0;do if((m|0)==(w|0)){o=w+20|0;r=c[o>>2]|0;if(!r){p=w+16|0;k=c[p>>2]|0;if(!k){y=0;break}else{z=k;A=p}}else{z=r;A=o}while(1){o=z+20|0;r=c[o>>2]|0;if(r|0){z=r;A=o;continue}o=z+16|0;r=c[o>>2]|0;if(!r){B=z;C=A;break}else{z=r;A=o}}if(C>>>0<h>>>0)Ha();else{c[C>>2]=0;y=B;break}}else{o=c[w+8>>2]|0;if(o>>>0<h>>>0)Ha();r=o+12|0;if((c[r>>2]|0)!=(w|0))Ha();p=m+8|0;if((c[p>>2]|0)==(w|0)){c[r>>2]=m;c[p>>2]=o;y=m;break}else Ha()}while(0);do if(f|0){m=c[w+28>>2]|0;h=35472+(m<<2)|0;if((w|0)==(c[h>>2]|0)){c[h>>2]=y;if(!y){c[8793]=c[8793]&~(1<<m);break}}else{if(f>>>0<(c[8796]|0)>>>0)Ha();m=f+16|0;if((c[m>>2]|0)==(w|0))c[m>>2]=y;else c[f+20>>2]=y;if(!y)break}m=c[8796]|0;if(y>>>0<m>>>0)Ha();c[y+24>>2]=f;h=c[w+16>>2]|0;do if(h|0)if(h>>>0<m>>>0)Ha();else{c[y+16>>2]=h;c[h+24>>2]=y;break}while(0);h=c[w+20>>2]|0;if(h|0)if(h>>>0<(c[8796]|0)>>>0)Ha();else{c[y+20>>2]=h;c[h+24>>2]=y;break}}while(0);if(v>>>0<16){f=v+b|0;c[w+4>>2]=f|3;h=w+f+4|0;c[h>>2]=c[h>>2]|1}else{c[w+4>>2]=b|3;c[d+4>>2]=v|1;c[d+v>>2]=v;h=c[8794]|0;if(h|0){f=c[8797]|0;m=h>>>3;h=35208+(m<<1<<2)|0;o=c[8792]|0;p=1<<m;if(o&p){m=h+8|0;r=c[m>>2]|0;if(r>>>0<(c[8796]|0)>>>0)Ha();else{D=m;E=r}}else{c[8792]=o|p;D=h+8|0;E=h}c[D>>2]=f;c[E+12>>2]=f;c[f+8>>2]=E;c[f+12>>2]=h}c[8794]=v;c[8797]=d}n=w+8|0;return n|0}else F=b}else F=b}else if(a>>>0<=4294967231){h=a+11|0;f=h&-8;p=c[8793]|0;if(p){o=0-f|0;r=h>>>8;if(r)if(f>>>0>16777215)G=31;else{h=(r+1048320|0)>>>16&8;m=r<<h;r=(m+520192|0)>>>16&4;k=m<<r;m=(k+245760|0)>>>16&2;e=14-(r|h|m)+(k<<m>>>15)|0;G=f>>>(e+7|0)&1|e<<1}else G=0;e=c[35472+(G<<2)>>2]|0;a:do if(!e){H=o;I=0;J=0;K=86}else{m=o;k=0;h=f<<((G|0)==31?0:25-(G>>>1)|0);r=e;i=0;while(1){q=c[r+4>>2]&-8;j=q-f|0;if(j>>>0<m>>>0)if((q|0)==(f|0)){L=j;M=r;N=r;K=90;break a}else{O=j;P=r}else{O=m;P=i}j=c[r+20>>2]|0;r=c[r+16+(h>>>31<<2)>>2]|0;q=(j|0)==0|(j|0)==(r|0)?k:j;j=(r|0)==0;if(j){H=O;I=q;J=P;K=86;break}else{m=O;k=q;h=h<<(j&1^1);i=P}}}while(0);if((K|0)==86){if((I|0)==0&(J|0)==0){e=2<<G;o=p&(e|0-e);if(!o){F=f;break}e=(o&0-o)+-1|0;o=e>>>12&16;b=e>>>o;e=b>>>5&8;d=b>>>e;b=d>>>2&4;i=d>>>b;d=i>>>1&2;h=i>>>d;i=h>>>1&1;Q=c[35472+((e|o|b|d|i)+(h>>>i)<<2)>>2]|0}else Q=I;if(!Q){R=H;S=J}else{L=H;M=Q;N=J;K=90}}if((K|0)==90)while(1){K=0;i=(c[M+4>>2]&-8)-f|0;h=i>>>0<L>>>0;d=h?i:L;i=h?M:N;h=c[M+16>>2]|0;if(h|0){L=d;M=h;N=i;K=90;continue}M=c[M+20>>2]|0;if(!M){R=d;S=i;break}else{L=d;N=i;K=90}}if((S|0)!=0?R>>>0<((c[8794]|0)-f|0)>>>0:0){p=c[8796]|0;if(S>>>0<p>>>0)Ha();i=S+f|0;if(S>>>0>=i>>>0)Ha();d=c[S+24>>2]|0;h=c[S+12>>2]|0;do if((h|0)==(S|0)){b=S+20|0;o=c[b>>2]|0;if(!o){e=S+16|0;k=c[e>>2]|0;if(!k){T=0;break}else{U=k;V=e}}else{U=o;V=b}while(1){b=U+20|0;o=c[b>>2]|0;if(o|0){U=o;V=b;continue}b=U+16|0;o=c[b>>2]|0;if(!o){W=U;X=V;break}else{U=o;V=b}}if(X>>>0<p>>>0)Ha();else{c[X>>2]=0;T=W;break}}else{b=c[S+8>>2]|0;if(b>>>0<p>>>0)Ha();o=b+12|0;if((c[o>>2]|0)!=(S|0))Ha();e=h+8|0;if((c[e>>2]|0)==(S|0)){c[o>>2]=h;c[e>>2]=b;T=h;break}else Ha()}while(0);do if(d|0){h=c[S+28>>2]|0;p=35472+(h<<2)|0;if((S|0)==(c[p>>2]|0)){c[p>>2]=T;if(!T){c[8793]=c[8793]&~(1<<h);break}}else{if(d>>>0<(c[8796]|0)>>>0)Ha();h=d+16|0;if((c[h>>2]|0)==(S|0))c[h>>2]=T;else c[d+20>>2]=T;if(!T)break}h=c[8796]|0;if(T>>>0<h>>>0)Ha();c[T+24>>2]=d;p=c[S+16>>2]|0;do if(p|0)if(p>>>0<h>>>0)Ha();else{c[T+16>>2]=p;c[p+24>>2]=T;break}while(0);p=c[S+20>>2]|0;if(p|0)if(p>>>0<(c[8796]|0)>>>0)Ha();else{c[T+20>>2]=p;c[p+24>>2]=T;break}}while(0);do if(R>>>0>=16){c[S+4>>2]=f|3;c[i+4>>2]=R|1;c[i+R>>2]=R;d=R>>>3;if(R>>>0<256){p=35208+(d<<1<<2)|0;h=c[8792]|0;b=1<<d;if(h&b){d=p+8|0;e=c[d>>2]|0;if(e>>>0<(c[8796]|0)>>>0)Ha();else{Y=d;Z=e}}else{c[8792]=h|b;Y=p+8|0;Z=p}c[Y>>2]=i;c[Z+12>>2]=i;c[i+8>>2]=Z;c[i+12>>2]=p;break}p=R>>>8;if(p)if(R>>>0>16777215)_=31;else{b=(p+1048320|0)>>>16&8;h=p<<b;p=(h+520192|0)>>>16&4;e=h<<p;h=(e+245760|0)>>>16&2;d=14-(p|b|h)+(e<<h>>>15)|0;_=R>>>(d+7|0)&1|d<<1}else _=0;d=35472+(_<<2)|0;c[i+28>>2]=_;h=i+16|0;c[h+4>>2]=0;c[h>>2]=0;h=c[8793]|0;e=1<<_;if(!(h&e)){c[8793]=h|e;c[d>>2]=i;c[i+24>>2]=d;c[i+12>>2]=i;c[i+8>>2]=i;break}e=R<<((_|0)==31?0:25-(_>>>1)|0);h=c[d>>2]|0;while(1){if((c[h+4>>2]&-8|0)==(R|0)){$=h;K=148;break}d=h+16+(e>>>31<<2)|0;b=c[d>>2]|0;if(!b){aa=d;ba=h;K=145;break}else{e=e<<1;h=b}}if((K|0)==145)if(aa>>>0<(c[8796]|0)>>>0)Ha();else{c[aa>>2]=i;c[i+24>>2]=ba;c[i+12>>2]=i;c[i+8>>2]=i;break}else if((K|0)==148){h=$+8|0;e=c[h>>2]|0;b=c[8796]|0;if(e>>>0>=b>>>0&$>>>0>=b>>>0){c[e+12>>2]=i;c[h>>2]=i;c[i+8>>2]=e;c[i+12>>2]=$;c[i+24>>2]=0;break}else Ha()}}else{e=R+f|0;c[S+4>>2]=e|3;h=S+e+4|0;c[h>>2]=c[h>>2]|1}while(0);n=S+8|0;return n|0}else F=f}else F=f}else F=-1;while(0);S=c[8794]|0;if(S>>>0>=F>>>0){R=S-F|0;$=c[8797]|0;if(R>>>0>15){ba=$+F|0;c[8797]=ba;c[8794]=R;c[ba+4>>2]=R|1;c[ba+R>>2]=R;c[$+4>>2]=F|3}else{c[8794]=0;c[8797]=0;c[$+4>>2]=S|3;R=$+S+4|0;c[R>>2]=c[R>>2]|1}n=$+8|0;return n|0}$=c[8795]|0;if($>>>0>F>>>0){R=$-F|0;c[8795]=R;$=c[8798]|0;S=$+F|0;c[8798]=S;c[S+4>>2]=R|1;c[$+4>>2]=F|3;n=$+8|0;return n|0}do if(!(c[8910]|0)){$=ab(30)|0;if(!($+-1&$)){c[8912]=$;c[8911]=$;c[8913]=-1;c[8914]=-1;c[8915]=0;c[8903]=0;c[8910]=(eb(0)|0)&-16^1431655768;break}else Ha()}while(0);$=F+48|0;R=c[8912]|0;S=F+47|0;ba=R+S|0;aa=0-R|0;R=ba&aa;if(R>>>0<=F>>>0){n=0;return n|0}_=c[8902]|0;if(_|0?(Z=c[8900]|0,Y=Z+R|0,Y>>>0<=Z>>>0|Y>>>0>_>>>0):0){n=0;return n|0}b:do if(!(c[8903]&4)){_=c[8798]|0;c:do if(_){Y=35616;while(1){Z=c[Y>>2]|0;if(Z>>>0<=_>>>0?(T=Y+4|0,(Z+(c[T>>2]|0)|0)>>>0>_>>>0):0){ca=Y;da=T;break}Y=c[Y+8>>2]|0;if(!Y){K=173;break c}}Y=ba-(c[8795]|0)&aa;if(Y>>>0<2147483647){T=Pa(Y|0)|0;if((T|0)==((c[ca>>2]|0)+(c[da>>2]|0)|0)){if((T|0)!=(-1|0)){ea=T;fa=Y;K=193;break b}}else{ga=T;ha=Y;K=183}}}else K=173;while(0);do if((K|0)==173?(_=Pa(0)|0,(_|0)!=(-1|0)):0){f=_;Y=c[8911]|0;T=Y+-1|0;if(!(T&f))ia=R;else ia=R-f+(T+f&0-Y)|0;Y=c[8900]|0;f=Y+ia|0;if(ia>>>0>F>>>0&ia>>>0<2147483647){T=c[8902]|0;if(T|0?f>>>0<=Y>>>0|f>>>0>T>>>0:0)break;T=Pa(ia|0)|0;if((T|0)==(_|0)){ea=_;fa=ia;K=193;break b}else{ga=T;ha=ia;K=183}}}while(0);d:do if((K|0)==183){T=0-ha|0;do if($>>>0>ha>>>0&(ha>>>0<2147483647&(ga|0)!=(-1|0))?(_=c[8912]|0,f=S-ha+_&0-_,f>>>0<2147483647):0)if((Pa(f|0)|0)==(-1|0)){Pa(T|0)|0;break d}else{ja=f+ha|0;break}else ja=ha;while(0);if((ga|0)!=(-1|0)){ea=ga;fa=ja;K=193;break b}}while(0);c[8903]=c[8903]|4;K=190}else K=190;while(0);if((((K|0)==190?R>>>0<2147483647:0)?(ja=Pa(R|0)|0,R=Pa(0)|0,ja>>>0<R>>>0&((ja|0)!=(-1|0)&(R|0)!=(-1|0))):0)?(ga=R-ja|0,ga>>>0>(F+40|0)>>>0):0){ea=ja;fa=ga;K=193}if((K|0)==193){ga=(c[8900]|0)+fa|0;c[8900]=ga;if(ga>>>0>(c[8901]|0)>>>0)c[8901]=ga;ga=c[8798]|0;do if(ga){ja=35616;do{R=c[ja>>2]|0;ha=ja+4|0;S=c[ha>>2]|0;if((ea|0)==(R+S|0)){ka=R;la=ha;ma=S;na=ja;K=203;break}ja=c[ja+8>>2]|0}while((ja|0)!=0);if(((K|0)==203?(c[na+12>>2]&8|0)==0:0)?ga>>>0<ea>>>0&ga>>>0>=ka>>>0:0){c[la>>2]=ma+fa;ja=ga+8|0;S=(ja&7|0)==0?0:0-ja&7;ja=ga+S|0;ha=fa-S+(c[8795]|0)|0;c[8798]=ja;c[8795]=ha;c[ja+4>>2]=ha|1;c[ja+ha+4>>2]=40;c[8799]=c[8914];break}ha=c[8796]|0;if(ea>>>0<ha>>>0){c[8796]=ea;oa=ea}else oa=ha;ha=ea+fa|0;ja=35616;while(1){if((c[ja>>2]|0)==(ha|0)){pa=ja;qa=ja;K=211;break}ja=c[ja+8>>2]|0;if(!ja){ra=35616;break}}if((K|0)==211)if(!(c[qa+12>>2]&8)){c[pa>>2]=ea;ja=qa+4|0;c[ja>>2]=(c[ja>>2]|0)+fa;ja=ea+8|0;S=ea+((ja&7|0)==0?0:0-ja&7)|0;ja=ha+8|0;R=ha+((ja&7|0)==0?0:0-ja&7)|0;ja=S+F|0;$=R-S-F|0;c[S+4>>2]=F|3;do if((R|0)!=(ga|0)){if((R|0)==(c[8797]|0)){ia=(c[8794]|0)+$|0;c[8794]=ia;c[8797]=ja;c[ja+4>>2]=ia|1;c[ja+ia>>2]=ia;break}ia=c[R+4>>2]|0;if((ia&3|0)==1){da=ia&-8;ca=ia>>>3;e:do if(ia>>>0>=256){aa=c[R+24>>2]|0;ba=c[R+12>>2]|0;do if((ba|0)==(R|0)){T=R+16|0;f=T+4|0;_=c[f>>2]|0;if(!_){Y=c[T>>2]|0;if(!Y){sa=0;break}else{ta=Y;ua=T}}else{ta=_;ua=f}while(1){f=ta+20|0;_=c[f>>2]|0;if(_|0){ta=_;ua=f;continue}f=ta+16|0;_=c[f>>2]|0;if(!_){va=ta;wa=ua;break}else{ta=_;ua=f}}if(wa>>>0<oa>>>0)Ha();else{c[wa>>2]=0;sa=va;break}}else{f=c[R+8>>2]|0;if(f>>>0<oa>>>0)Ha();_=f+12|0;if((c[_>>2]|0)!=(R|0))Ha();T=ba+8|0;if((c[T>>2]|0)==(R|0)){c[_>>2]=ba;c[T>>2]=f;sa=ba;break}else Ha()}while(0);if(!aa)break;ba=c[R+28>>2]|0;f=35472+(ba<<2)|0;do if((R|0)!=(c[f>>2]|0)){if(aa>>>0<(c[8796]|0)>>>0)Ha();T=aa+16|0;if((c[T>>2]|0)==(R|0))c[T>>2]=sa;else c[aa+20>>2]=sa;if(!sa)break e}else{c[f>>2]=sa;if(sa|0)break;c[8793]=c[8793]&~(1<<ba);break e}while(0);ba=c[8796]|0;if(sa>>>0<ba>>>0)Ha();c[sa+24>>2]=aa;f=R+16|0;T=c[f>>2]|0;do if(T|0)if(T>>>0<ba>>>0)Ha();else{c[sa+16>>2]=T;c[T+24>>2]=sa;break}while(0);T=c[f+4>>2]|0;if(!T)break;if(T>>>0<(c[8796]|0)>>>0)Ha();else{c[sa+20>>2]=T;c[T+24>>2]=sa;break}}else{T=c[R+8>>2]|0;ba=c[R+12>>2]|0;aa=35208+(ca<<1<<2)|0;do if((T|0)!=(aa|0)){if(T>>>0<oa>>>0)Ha();if((c[T+12>>2]|0)==(R|0))break;Ha()}while(0);if((ba|0)==(T|0)){c[8792]=c[8792]&~(1<<ca);break}do if((ba|0)==(aa|0))xa=ba+8|0;else{if(ba>>>0<oa>>>0)Ha();f=ba+8|0;if((c[f>>2]|0)==(R|0)){xa=f;break}Ha()}while(0);c[T+12>>2]=ba;c[xa>>2]=T}while(0);ya=R+da|0;za=da+$|0}else{ya=R;za=$}ca=ya+4|0;c[ca>>2]=c[ca>>2]&-2;c[ja+4>>2]=za|1;c[ja+za>>2]=za;ca=za>>>3;if(za>>>0<256){ia=35208+(ca<<1<<2)|0;aa=c[8792]|0;f=1<<ca;do if(!(aa&f)){c[8792]=aa|f;Aa=ia+8|0;Ba=ia}else{ca=ia+8|0;_=c[ca>>2]|0;if(_>>>0>=(c[8796]|0)>>>0){Aa=ca;Ba=_;break}Ha()}while(0);c[Aa>>2]=ja;c[Ba+12>>2]=ja;c[ja+8>>2]=Ba;c[ja+12>>2]=ia;break}f=za>>>8;do if(!f)Ca=0;else{if(za>>>0>16777215){Ca=31;break}aa=(f+1048320|0)>>>16&8;da=f<<aa;_=(da+520192|0)>>>16&4;ca=da<<_;da=(ca+245760|0)>>>16&2;Y=14-(_|aa|da)+(ca<<da>>>15)|0;Ca=za>>>(Y+7|0)&1|Y<<1}while(0);f=35472+(Ca<<2)|0;c[ja+28>>2]=Ca;ia=ja+16|0;c[ia+4>>2]=0;c[ia>>2]=0;ia=c[8793]|0;Y=1<<Ca;if(!(ia&Y)){c[8793]=ia|Y;c[f>>2]=ja;c[ja+24>>2]=f;c[ja+12>>2]=ja;c[ja+8>>2]=ja;break}Y=za<<((Ca|0)==31?0:25-(Ca>>>1)|0);ia=c[f>>2]|0;while(1){if((c[ia+4>>2]&-8|0)==(za|0)){Da=ia;K=281;break}f=ia+16+(Y>>>31<<2)|0;da=c[f>>2]|0;if(!da){Ea=f;Fa=ia;K=278;break}else{Y=Y<<1;ia=da}}if((K|0)==278)if(Ea>>>0<(c[8796]|0)>>>0)Ha();else{c[Ea>>2]=ja;c[ja+24>>2]=Fa;c[ja+12>>2]=ja;c[ja+8>>2]=ja;break}else if((K|0)==281){ia=Da+8|0;Y=c[ia>>2]|0;da=c[8796]|0;if(Y>>>0>=da>>>0&Da>>>0>=da>>>0){c[Y+12>>2]=ja;c[ia>>2]=ja;c[ja+8>>2]=Y;c[ja+12>>2]=Da;c[ja+24>>2]=0;break}else Ha()}}else{Y=(c[8795]|0)+$|0;c[8795]=Y;c[8798]=ja;c[ja+4>>2]=Y|1}while(0);n=S+8|0;return n|0}else ra=35616;while(1){ja=c[ra>>2]|0;if(ja>>>0<=ga>>>0?($=ja+(c[ra+4>>2]|0)|0,$>>>0>ga>>>0):0){Ga=$;break}ra=c[ra+8>>2]|0}S=Ga+-47|0;$=S+8|0;ja=S+(($&7|0)==0?0:0-$&7)|0;$=ga+16|0;S=ja>>>0<$>>>0?ga:ja;ja=S+8|0;R=ea+8|0;ha=(R&7|0)==0?0:0-R&7;R=ea+ha|0;Y=fa+-40-ha|0;c[8798]=R;c[8795]=Y;c[R+4>>2]=Y|1;c[R+Y+4>>2]=40;c[8799]=c[8914];Y=S+4|0;c[Y>>2]=27;c[ja>>2]=c[8904];c[ja+4>>2]=c[8905];c[ja+8>>2]=c[8906];c[ja+12>>2]=c[8907];c[8904]=ea;c[8905]=fa;c[8907]=0;c[8906]=ja;ja=S+24|0;do{ja=ja+4|0;c[ja>>2]=7}while((ja+4|0)>>>0<Ga>>>0);if((S|0)!=(ga|0)){ja=S-ga|0;c[Y>>2]=c[Y>>2]&-2;c[ga+4>>2]=ja|1;c[S>>2]=ja;R=ja>>>3;if(ja>>>0<256){ha=35208+(R<<1<<2)|0;ia=c[8792]|0;da=1<<R;if(ia&da){R=ha+8|0;f=c[R>>2]|0;if(f>>>0<(c[8796]|0)>>>0)Ha();else{Ia=R;Ja=f}}else{c[8792]=ia|da;Ia=ha+8|0;Ja=ha}c[Ia>>2]=ga;c[Ja+12>>2]=ga;c[ga+8>>2]=Ja;c[ga+12>>2]=ha;break}ha=ja>>>8;if(ha)if(ja>>>0>16777215)Ka=31;else{da=(ha+1048320|0)>>>16&8;ia=ha<<da;ha=(ia+520192|0)>>>16&4;f=ia<<ha;ia=(f+245760|0)>>>16&2;R=14-(ha|da|ia)+(f<<ia>>>15)|0;Ka=ja>>>(R+7|0)&1|R<<1}else Ka=0;R=35472+(Ka<<2)|0;c[ga+28>>2]=Ka;c[ga+20>>2]=0;c[$>>2]=0;ia=c[8793]|0;f=1<<Ka;if(!(ia&f)){c[8793]=ia|f;c[R>>2]=ga;c[ga+24>>2]=R;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break}f=ja<<((Ka|0)==31?0:25-(Ka>>>1)|0);ia=c[R>>2]|0;while(1){if((c[ia+4>>2]&-8|0)==(ja|0)){La=ia;K=307;break}R=ia+16+(f>>>31<<2)|0;da=c[R>>2]|0;if(!da){Ma=R;Na=ia;K=304;break}else{f=f<<1;ia=da}}if((K|0)==304)if(Ma>>>0<(c[8796]|0)>>>0)Ha();else{c[Ma>>2]=ga;c[ga+24>>2]=Na;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break}else if((K|0)==307){ia=La+8|0;f=c[ia>>2]|0;ja=c[8796]|0;if(f>>>0>=ja>>>0&La>>>0>=ja>>>0){c[f+12>>2]=ga;c[ia>>2]=ga;c[ga+8>>2]=f;c[ga+12>>2]=La;c[ga+24>>2]=0;break}else Ha()}}}else{f=c[8796]|0;if((f|0)==0|ea>>>0<f>>>0)c[8796]=ea;c[8904]=ea;c[8905]=fa;c[8907]=0;c[8801]=c[8910];c[8800]=-1;f=0;do{ia=35208+(f<<1<<2)|0;c[ia+12>>2]=ia;c[ia+8>>2]=ia;f=f+1|0}while((f|0)!=32);f=ea+8|0;ia=(f&7|0)==0?0:0-f&7;f=ea+ia|0;ja=fa+-40-ia|0;c[8798]=f;c[8795]=ja;c[f+4>>2]=ja|1;c[f+ja+4>>2]=40;c[8799]=c[8914]}while(0);fa=c[8795]|0;if(fa>>>0>F>>>0){ea=fa-F|0;c[8795]=ea;fa=c[8798]|0;ga=fa+F|0;c[8798]=ga;c[ga+4>>2]=ea|1;c[fa+4>>2]=F|3;n=fa+8|0;return n|0}}c[(Zl()|0)>>2]=12;n=0;return n|0}function bn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;if(!a)return;b=a+-8|0;d=c[8796]|0;if(b>>>0<d>>>0)Ha();e=c[a+-4>>2]|0;a=e&3;if((a|0)==1)Ha();f=e&-8;g=b+f|0;do if(!(e&1)){h=c[b>>2]|0;if(!a)return;i=b+(0-h)|0;j=h+f|0;if(i>>>0<d>>>0)Ha();if((i|0)==(c[8797]|0)){k=g+4|0;l=c[k>>2]|0;if((l&3|0)!=3){m=i;n=j;break}c[8794]=j;c[k>>2]=l&-2;c[i+4>>2]=j|1;c[i+j>>2]=j;return}l=h>>>3;if(h>>>0<256){h=c[i+8>>2]|0;k=c[i+12>>2]|0;o=35208+(l<<1<<2)|0;if((h|0)!=(o|0)){if(h>>>0<d>>>0)Ha();if((c[h+12>>2]|0)!=(i|0))Ha()}if((k|0)==(h|0)){c[8792]=c[8792]&~(1<<l);m=i;n=j;break}if((k|0)!=(o|0)){if(k>>>0<d>>>0)Ha();o=k+8|0;if((c[o>>2]|0)==(i|0))p=o;else Ha()}else p=k+8|0;c[h+12>>2]=k;c[p>>2]=h;m=i;n=j;break}h=c[i+24>>2]|0;k=c[i+12>>2]|0;do if((k|0)==(i|0)){o=i+16|0;l=o+4|0;q=c[l>>2]|0;if(!q){r=c[o>>2]|0;if(!r){s=0;break}else{t=r;u=o}}else{t=q;u=l}while(1){l=t+20|0;q=c[l>>2]|0;if(q|0){t=q;u=l;continue}l=t+16|0;q=c[l>>2]|0;if(!q){v=t;w=u;break}else{t=q;u=l}}if(w>>>0<d>>>0)Ha();else{c[w>>2]=0;s=v;break}}else{l=c[i+8>>2]|0;if(l>>>0<d>>>0)Ha();q=l+12|0;if((c[q>>2]|0)!=(i|0))Ha();o=k+8|0;if((c[o>>2]|0)==(i|0)){c[q>>2]=k;c[o>>2]=l;s=k;break}else Ha()}while(0);if(h){k=c[i+28>>2]|0;l=35472+(k<<2)|0;if((i|0)==(c[l>>2]|0)){c[l>>2]=s;if(!s){c[8793]=c[8793]&~(1<<k);m=i;n=j;break}}else{if(h>>>0<(c[8796]|0)>>>0)Ha();k=h+16|0;if((c[k>>2]|0)==(i|0))c[k>>2]=s;else c[h+20>>2]=s;if(!s){m=i;n=j;break}}k=c[8796]|0;if(s>>>0<k>>>0)Ha();c[s+24>>2]=h;l=i+16|0;o=c[l>>2]|0;do if(o|0)if(o>>>0<k>>>0)Ha();else{c[s+16>>2]=o;c[o+24>>2]=s;break}while(0);o=c[l+4>>2]|0;if(o)if(o>>>0<(c[8796]|0)>>>0)Ha();else{c[s+20>>2]=o;c[o+24>>2]=s;m=i;n=j;break}else{m=i;n=j}}else{m=i;n=j}}else{m=b;n=f}while(0);if(m>>>0>=g>>>0)Ha();f=g+4|0;b=c[f>>2]|0;if(!(b&1))Ha();if(!(b&2)){if((g|0)==(c[8798]|0)){s=(c[8795]|0)+n|0;c[8795]=s;c[8798]=m;c[m+4>>2]=s|1;if((m|0)!=(c[8797]|0))return;c[8797]=0;c[8794]=0;return}if((g|0)==(c[8797]|0)){s=(c[8794]|0)+n|0;c[8794]=s;c[8797]=m;c[m+4>>2]=s|1;c[m+s>>2]=s;return}s=(b&-8)+n|0;d=b>>>3;do if(b>>>0>=256){v=c[g+24>>2]|0;w=c[g+12>>2]|0;do if((w|0)==(g|0)){u=g+16|0;t=u+4|0;p=c[t>>2]|0;if(!p){a=c[u>>2]|0;if(!a){x=0;break}else{y=a;z=u}}else{y=p;z=t}while(1){t=y+20|0;p=c[t>>2]|0;if(p|0){y=p;z=t;continue}t=y+16|0;p=c[t>>2]|0;if(!p){A=y;B=z;break}else{y=p;z=t}}if(B>>>0<(c[8796]|0)>>>0)Ha();else{c[B>>2]=0;x=A;break}}else{t=c[g+8>>2]|0;if(t>>>0<(c[8796]|0)>>>0)Ha();p=t+12|0;if((c[p>>2]|0)!=(g|0))Ha();u=w+8|0;if((c[u>>2]|0)==(g|0)){c[p>>2]=w;c[u>>2]=t;x=w;break}else Ha()}while(0);if(v|0){w=c[g+28>>2]|0;j=35472+(w<<2)|0;if((g|0)==(c[j>>2]|0)){c[j>>2]=x;if(!x){c[8793]=c[8793]&~(1<<w);break}}else{if(v>>>0<(c[8796]|0)>>>0)Ha();w=v+16|0;if((c[w>>2]|0)==(g|0))c[w>>2]=x;else c[v+20>>2]=x;if(!x)break}w=c[8796]|0;if(x>>>0<w>>>0)Ha();c[x+24>>2]=v;j=g+16|0;i=c[j>>2]|0;do if(i|0)if(i>>>0<w>>>0)Ha();else{c[x+16>>2]=i;c[i+24>>2]=x;break}while(0);i=c[j+4>>2]|0;if(i|0)if(i>>>0<(c[8796]|0)>>>0)Ha();else{c[x+20>>2]=i;c[i+24>>2]=x;break}}}else{i=c[g+8>>2]|0;w=c[g+12>>2]|0;v=35208+(d<<1<<2)|0;if((i|0)!=(v|0)){if(i>>>0<(c[8796]|0)>>>0)Ha();if((c[i+12>>2]|0)!=(g|0))Ha()}if((w|0)==(i|0)){c[8792]=c[8792]&~(1<<d);break}if((w|0)!=(v|0)){if(w>>>0<(c[8796]|0)>>>0)Ha();v=w+8|0;if((c[v>>2]|0)==(g|0))C=v;else Ha()}else C=w+8|0;c[i+12>>2]=w;c[C>>2]=i}while(0);c[m+4>>2]=s|1;c[m+s>>2]=s;if((m|0)==(c[8797]|0)){c[8794]=s;return}else D=s}else{c[f>>2]=b&-2;c[m+4>>2]=n|1;c[m+n>>2]=n;D=n}n=D>>>3;if(D>>>0<256){b=35208+(n<<1<<2)|0;f=c[8792]|0;s=1<<n;if(f&s){n=b+8|0;C=c[n>>2]|0;if(C>>>0<(c[8796]|0)>>>0)Ha();else{E=n;F=C}}else{c[8792]=f|s;E=b+8|0;F=b}c[E>>2]=m;c[F+12>>2]=m;c[m+8>>2]=F;c[m+12>>2]=b;return}b=D>>>8;if(b)if(D>>>0>16777215)G=31;else{F=(b+1048320|0)>>>16&8;E=b<<F;b=(E+520192|0)>>>16&4;s=E<<b;E=(s+245760|0)>>>16&2;f=14-(b|F|E)+(s<<E>>>15)|0;G=D>>>(f+7|0)&1|f<<1}else G=0;f=35472+(G<<2)|0;c[m+28>>2]=G;c[m+20>>2]=0;c[m+16>>2]=0;E=c[8793]|0;s=1<<G;do if(E&s){F=D<<((G|0)==31?0:25-(G>>>1)|0);b=c[f>>2]|0;while(1){if((c[b+4>>2]&-8|0)==(D|0)){H=b;I=130;break}C=b+16+(F>>>31<<2)|0;n=c[C>>2]|0;if(!n){J=C;K=b;I=127;break}else{F=F<<1;b=n}}if((I|0)==127)if(J>>>0<(c[8796]|0)>>>0)Ha();else{c[J>>2]=m;c[m+24>>2]=K;c[m+12>>2]=m;c[m+8>>2]=m;break}else if((I|0)==130){b=H+8|0;F=c[b>>2]|0;j=c[8796]|0;if(F>>>0>=j>>>0&H>>>0>=j>>>0){c[F+12>>2]=m;c[b>>2]=m;c[m+8>>2]=F;c[m+12>>2]=H;c[m+24>>2]=0;break}else Ha()}}else{c[8793]=E|s;c[f>>2]=m;c[m+24>>2]=f;c[m+12>>2]=m;c[m+8>>2]=m}while(0);m=(c[8800]|0)+-1|0;c[8800]=m;if(!m)L=35624;else return;while(1){m=c[L>>2]|0;if(!m)break;else L=m+8|0}c[8800]=-1;return}function cn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=an(b)|0;return d|0}if(b>>>0>4294967231){c[(Zl()|0)>>2]=12;d=0;return d|0}e=dn(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(e|0){d=e+8|0;return d|0}e=an(b)|0;if(!e){d=0;return d|0}f=c[a+-4>>2]|0;g=(f&-8)-((f&3|0)==0?8:4)|0;ho(e|0,a|0,(g>>>0<b>>>0?g:b)|0)|0;bn(a);d=e;return d|0}function dn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a+f|0;h=c[8796]|0;i=e&3;if(!((i|0)!=1&a>>>0>=h>>>0&a>>>0<g>>>0))Ha();j=c[g+4>>2]|0;if(!(j&1))Ha();if(!i){if(b>>>0<256){k=0;return k|0}if(f>>>0>=(b+4|0)>>>0?(f-b|0)>>>0<=c[8912]<<1>>>0:0){k=a;return k|0}k=0;return k|0}if(f>>>0>=b>>>0){i=f-b|0;if(i>>>0<=15){k=a;return k|0}l=a+b|0;c[d>>2]=e&1|b|2;c[l+4>>2]=i|3;m=l+i+4|0;c[m>>2]=c[m>>2]|1;en(l,i);k=a;return k|0}if((g|0)==(c[8798]|0)){i=(c[8795]|0)+f|0;if(i>>>0<=b>>>0){k=0;return k|0}l=i-b|0;i=a+b|0;c[d>>2]=e&1|b|2;c[i+4>>2]=l|1;c[8798]=i;c[8795]=l;k=a;return k|0}if((g|0)==(c[8797]|0)){l=(c[8794]|0)+f|0;if(l>>>0<b>>>0){k=0;return k|0}i=l-b|0;if(i>>>0>15){m=a+b|0;n=m+i|0;c[d>>2]=e&1|b|2;c[m+4>>2]=i|1;c[n>>2]=i;o=n+4|0;c[o>>2]=c[o>>2]&-2;p=m;q=i}else{c[d>>2]=e&1|l|2;i=a+l+4|0;c[i>>2]=c[i>>2]|1;p=0;q=0}c[8794]=q;c[8797]=p;k=a;return k|0}if(j&2|0){k=0;return k|0}p=(j&-8)+f|0;if(p>>>0<b>>>0){k=0;return k|0}f=p-b|0;q=j>>>3;do if(j>>>0>=256){i=c[g+24>>2]|0;l=c[g+12>>2]|0;do if((l|0)==(g|0)){m=g+16|0;o=m+4|0;n=c[o>>2]|0;if(!n){r=c[m>>2]|0;if(!r){s=0;break}else{t=r;u=m}}else{t=n;u=o}while(1){o=t+20|0;n=c[o>>2]|0;if(n|0){t=n;u=o;continue}o=t+16|0;n=c[o>>2]|0;if(!n){v=t;w=u;break}else{t=n;u=o}}if(w>>>0<h>>>0)Ha();else{c[w>>2]=0;s=v;break}}else{o=c[g+8>>2]|0;if(o>>>0<h>>>0)Ha();n=o+12|0;if((c[n>>2]|0)!=(g|0))Ha();m=l+8|0;if((c[m>>2]|0)==(g|0)){c[n>>2]=l;c[m>>2]=o;s=l;break}else Ha()}while(0);if(i|0){l=c[g+28>>2]|0;o=35472+(l<<2)|0;if((g|0)==(c[o>>2]|0)){c[o>>2]=s;if(!s){c[8793]=c[8793]&~(1<<l);break}}else{if(i>>>0<(c[8796]|0)>>>0)Ha();l=i+16|0;if((c[l>>2]|0)==(g|0))c[l>>2]=s;else c[i+20>>2]=s;if(!s)break}l=c[8796]|0;if(s>>>0<l>>>0)Ha();c[s+24>>2]=i;o=g+16|0;m=c[o>>2]|0;do if(m|0)if(m>>>0<l>>>0)Ha();else{c[s+16>>2]=m;c[m+24>>2]=s;break}while(0);m=c[o+4>>2]|0;if(m|0)if(m>>>0<(c[8796]|0)>>>0)Ha();else{c[s+20>>2]=m;c[m+24>>2]=s;break}}}else{m=c[g+8>>2]|0;l=c[g+12>>2]|0;i=35208+(q<<1<<2)|0;if((m|0)!=(i|0)){if(m>>>0<h>>>0)Ha();if((c[m+12>>2]|0)!=(g|0))Ha()}if((l|0)==(m|0)){c[8792]=c[8792]&~(1<<q);break}if((l|0)!=(i|0)){if(l>>>0<h>>>0)Ha();i=l+8|0;if((c[i>>2]|0)==(g|0))x=i;else Ha()}else x=l+8|0;c[m+12>>2]=l;c[x>>2]=m}while(0);if(f>>>0<16){c[d>>2]=p|e&1|2;x=a+p+4|0;c[x>>2]=c[x>>2]|1;k=a;return k|0}else{x=a+b|0;c[d>>2]=e&1|b|2;c[x+4>>2]=f|3;b=x+f+4|0;c[b>>2]=c[b>>2]|1;en(x,f);k=a;return k|0}return 0}function en(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=a+b|0;e=c[a+4>>2]|0;do if(!(e&1)){f=c[a>>2]|0;if(!(e&3))return;g=a+(0-f)|0;h=f+b|0;i=c[8796]|0;if(g>>>0<i>>>0)Ha();if((g|0)==(c[8797]|0)){j=d+4|0;k=c[j>>2]|0;if((k&3|0)!=3){l=g;m=h;break}c[8794]=h;c[j>>2]=k&-2;c[g+4>>2]=h|1;c[g+h>>2]=h;return}k=f>>>3;if(f>>>0<256){f=c[g+8>>2]|0;j=c[g+12>>2]|0;n=35208+(k<<1<<2)|0;if((f|0)!=(n|0)){if(f>>>0<i>>>0)Ha();if((c[f+12>>2]|0)!=(g|0))Ha()}if((j|0)==(f|0)){c[8792]=c[8792]&~(1<<k);l=g;m=h;break}if((j|0)!=(n|0)){if(j>>>0<i>>>0)Ha();n=j+8|0;if((c[n>>2]|0)==(g|0))o=n;else Ha()}else o=j+8|0;c[f+12>>2]=j;c[o>>2]=f;l=g;m=h;break}f=c[g+24>>2]|0;j=c[g+12>>2]|0;do if((j|0)==(g|0)){n=g+16|0;k=n+4|0;p=c[k>>2]|0;if(!p){q=c[n>>2]|0;if(!q){r=0;break}else{s=q;t=n}}else{s=p;t=k}while(1){k=s+20|0;p=c[k>>2]|0;if(p|0){s=p;t=k;continue}k=s+16|0;p=c[k>>2]|0;if(!p){u=s;v=t;break}else{s=p;t=k}}if(v>>>0<i>>>0)Ha();else{c[v>>2]=0;r=u;break}}else{k=c[g+8>>2]|0;if(k>>>0<i>>>0)Ha();p=k+12|0;if((c[p>>2]|0)!=(g|0))Ha();n=j+8|0;if((c[n>>2]|0)==(g|0)){c[p>>2]=j;c[n>>2]=k;r=j;break}else Ha()}while(0);if(f){j=c[g+28>>2]|0;i=35472+(j<<2)|0;if((g|0)==(c[i>>2]|0)){c[i>>2]=r;if(!r){c[8793]=c[8793]&~(1<<j);l=g;m=h;break}}else{if(f>>>0<(c[8796]|0)>>>0)Ha();j=f+16|0;if((c[j>>2]|0)==(g|0))c[j>>2]=r;else c[f+20>>2]=r;if(!r){l=g;m=h;break}}j=c[8796]|0;if(r>>>0<j>>>0)Ha();c[r+24>>2]=f;i=g+16|0;k=c[i>>2]|0;do if(k|0)if(k>>>0<j>>>0)Ha();else{c[r+16>>2]=k;c[k+24>>2]=r;break}while(0);k=c[i+4>>2]|0;if(k)if(k>>>0<(c[8796]|0)>>>0)Ha();else{c[r+20>>2]=k;c[k+24>>2]=r;l=g;m=h;break}else{l=g;m=h}}else{l=g;m=h}}else{l=a;m=b}while(0);b=c[8796]|0;if(d>>>0<b>>>0)Ha();a=d+4|0;r=c[a>>2]|0;if(!(r&2)){if((d|0)==(c[8798]|0)){u=(c[8795]|0)+m|0;c[8795]=u;c[8798]=l;c[l+4>>2]=u|1;if((l|0)!=(c[8797]|0))return;c[8797]=0;c[8794]=0;return}if((d|0)==(c[8797]|0)){u=(c[8794]|0)+m|0;c[8794]=u;c[8797]=l;c[l+4>>2]=u|1;c[l+u>>2]=u;return}u=(r&-8)+m|0;v=r>>>3;do if(r>>>0>=256){t=c[d+24>>2]|0;s=c[d+12>>2]|0;do if((s|0)==(d|0)){o=d+16|0;e=o+4|0;k=c[e>>2]|0;if(!k){j=c[o>>2]|0;if(!j){w=0;break}else{x=j;y=o}}else{x=k;y=e}while(1){e=x+20|0;k=c[e>>2]|0;if(k|0){x=k;y=e;continue}e=x+16|0;k=c[e>>2]|0;if(!k){z=x;A=y;break}else{x=k;y=e}}if(A>>>0<b>>>0)Ha();else{c[A>>2]=0;w=z;break}}else{e=c[d+8>>2]|0;if(e>>>0<b>>>0)Ha();k=e+12|0;if((c[k>>2]|0)!=(d|0))Ha();o=s+8|0;if((c[o>>2]|0)==(d|0)){c[k>>2]=s;c[o>>2]=e;w=s;break}else Ha()}while(0);if(t|0){s=c[d+28>>2]|0;h=35472+(s<<2)|0;if((d|0)==(c[h>>2]|0)){c[h>>2]=w;if(!w){c[8793]=c[8793]&~(1<<s);break}}else{if(t>>>0<(c[8796]|0)>>>0)Ha();s=t+16|0;if((c[s>>2]|0)==(d|0))c[s>>2]=w;else c[t+20>>2]=w;if(!w)break}s=c[8796]|0;if(w>>>0<s>>>0)Ha();c[w+24>>2]=t;h=d+16|0;g=c[h>>2]|0;do if(g|0)if(g>>>0<s>>>0)Ha();else{c[w+16>>2]=g;c[g+24>>2]=w;break}while(0);g=c[h+4>>2]|0;if(g|0)if(g>>>0<(c[8796]|0)>>>0)Ha();else{c[w+20>>2]=g;c[g+24>>2]=w;break}}}else{g=c[d+8>>2]|0;s=c[d+12>>2]|0;t=35208+(v<<1<<2)|0;if((g|0)!=(t|0)){if(g>>>0<b>>>0)Ha();if((c[g+12>>2]|0)!=(d|0))Ha()}if((s|0)==(g|0)){c[8792]=c[8792]&~(1<<v);break}if((s|0)!=(t|0)){if(s>>>0<b>>>0)Ha();t=s+8|0;if((c[t>>2]|0)==(d|0))B=t;else Ha()}else B=s+8|0;c[g+12>>2]=s;c[B>>2]=g}while(0);c[l+4>>2]=u|1;c[l+u>>2]=u;if((l|0)==(c[8797]|0)){c[8794]=u;return}else C=u}else{c[a>>2]=r&-2;c[l+4>>2]=m|1;c[l+m>>2]=m;C=m}m=C>>>3;if(C>>>0<256){r=35208+(m<<1<<2)|0;a=c[8792]|0;u=1<<m;if(a&u){m=r+8|0;B=c[m>>2]|0;if(B>>>0<(c[8796]|0)>>>0)Ha();else{D=m;E=B}}else{c[8792]=a|u;D=r+8|0;E=r}c[D>>2]=l;c[E+12>>2]=l;c[l+8>>2]=E;c[l+12>>2]=r;return}r=C>>>8;if(r)if(C>>>0>16777215)F=31;else{E=(r+1048320|0)>>>16&8;D=r<<E;r=(D+520192|0)>>>16&4;u=D<<r;D=(u+245760|0)>>>16&2;a=14-(r|E|D)+(u<<D>>>15)|0;F=C>>>(a+7|0)&1|a<<1}else F=0;a=35472+(F<<2)|0;c[l+28>>2]=F;c[l+20>>2]=0;c[l+16>>2]=0;D=c[8793]|0;u=1<<F;if(!(D&u)){c[8793]=D|u;c[a>>2]=l;c[l+24>>2]=a;c[l+12>>2]=l;c[l+8>>2]=l;return}u=C<<((F|0)==31?0:25-(F>>>1)|0);F=c[a>>2]|0;while(1){if((c[F+4>>2]&-8|0)==(C|0)){G=F;H=127;break}a=F+16+(u>>>31<<2)|0;D=c[a>>2]|0;if(!D){I=a;J=F;H=124;break}else{u=u<<1;F=D}}if((H|0)==124){if(I>>>0<(c[8796]|0)>>>0)Ha();c[I>>2]=l;c[l+24>>2]=J;c[l+12>>2]=l;c[l+8>>2]=l;return}else if((H|0)==127){H=G+8|0;J=c[H>>2]|0;I=c[8796]|0;if(!(J>>>0>=I>>>0&G>>>0>=I>>>0))Ha();c[J+12>>2]=l;c[H>>2]=l;c[l+8>>2]=J;c[l+12>>2]=G;c[l+24>>2]=0;return}}function fn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;a:do if(a>>>0<212){b=6300;d=48;b:while(1){e=d;while(1){if(!e){f=b;break b}g=(e|0)/2|0;h=b+(g<<2)|0;if((c[h>>2]|0)>>>0<a>>>0){i=g;j=h;k=e;break}else e=g}b=j+4|0;d=k+-1-i|0}l=c[f>>2]|0}else{d=(a>>>0)/210|0;b=d*210|0;e=a-b|0;g=6492;h=48;c:while(1){m=h;while(1){if(!m){n=g;break c}o=(m|0)/2|0;p=g+(o<<2)|0;if((c[p>>2]|0)>>>0<e>>>0){q=o;r=p;s=m;break}else m=o}g=r+4|0;h=s+-1-q|0}h=n-6492>>2;g=h;e=d;m=(c[6492+(h<<2)>>2]|0)+b|0;while(1){h=5;while(1){if(h>>>0>=47){t=211;u=17;break}o=c[6300+(h<<2)>>2]|0;p=(m>>>0)/(o>>>0)|0;if(p>>>0<o>>>0){l=m;break a}if((m|0)==(_(p,o)|0))break;else h=h+1|0}d:do if((u|0)==17)while(1){u=0;h=(m>>>0)/(t>>>0)|0;if(h>>>0<t>>>0){l=m;break a}if((m|0)==(_(h,t)|0))break d;h=t+10|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+12|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+16|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+18|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+22|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+28|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+30|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+36|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+40|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+42|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+46|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+52|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+58|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+60|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+66|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+70|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+72|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+78|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+82|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+88|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+96|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+100|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+102|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+106|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+108|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+112|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+120|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+126|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+130|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+136|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+138|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+142|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+148|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+150|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+156|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+162|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+166|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+168|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+172|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+178|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+180|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+186|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+190|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+192|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+196|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+198|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break d;h=t+208|0;o=(m>>>0)/(h>>>0)|0;if(o>>>0<h>>>0){l=m;break a}if((m|0)==(_(o,h)|0))break;else{t=t+210|0;u=17}}while(0);h=g+1|0;o=(h|0)==48;p=(o&1)+e|0;v=o?0:h;g=v;e=p;m=(c[6492+(v<<2)>>2]|0)+(p*210|0)|0}}while(0);return l|0}function gn(a){a=a|0;Ka(34312,34341,1164,34532)}function hn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0>4294967279)gn(b);if(e>>>0<11){a[b>>0]=e<<1;f=b+1|0}else{g=e+16&-16;h=Tn(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=e;f=h}ho(f|0,d|0,e|0)|0;a[f+e>>0]=0;return}function jn(b){b=b|0;if(a[b>>0]&1)An(c[b+8>>2]|0);return}function kn(b,d){b=b|0;d=d|0;var e=0,f=0;if((b|0)!=(d|0)){e=a[d>>0]|0;f=(e&1)==0;ln(b,f?d+1|0:c[d+8>>2]|0,f?(e&255)>>>1:c[d+4>>2]|0)|0}return b|0}function ln(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}f=(h&1)==0;do if(g>>>0>=e>>>0){if(f)i=b+1|0;else i=c[b+8>>2]|0;io(i|0,d|0,e|0)|0;a[i+e>>0]=0;if(!(a[b>>0]&1)){a[b>>0]=e<<1;break}else{c[b+4>>2]=e;break}}else{if(f)j=(h&255)>>>1;else j=c[b+4>>2]|0;mn(b,g,e-g|0,j,0,j,e,d)}while(0);return b|0}function mn(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;if((-18-d|0)>>>0<e>>>0)gn(b);if(!(a[b>>0]&1))k=b+1|0;else k=c[b+8>>2]|0;if(d>>>0<2147483623){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;n=m>>>0<11?11:m+16&-16}else n=-17;m=Tn(n)|0;if(g|0)ho(m|0,k|0,g|0)|0;if(i|0)ho(m+g|0,j|0,i|0)|0;j=f-h|0;if((j|0)!=(g|0))ho(m+g+i|0,k+g+h|0,j-g|0)|0;if((d|0)!=10)An(k);c[b+8>>2]=m;c[b>>2]=n|1;n=j+i|0;c[b+4>>2]=n;a[m+n>>0]=0;return}function nn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(d|0){f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}if(!(h&1))i=(h&255)>>>1;else i=c[b+4>>2]|0;if((g-i|0)>>>0<d>>>0){on(b,g,d-g+i|0,i,i,0,0);j=a[b>>0]|0}else j=h;if(!(j&1))k=b+1|0;else k=c[b+8>>2]|0;$n(k+i|0,e|0,d|0)|0;e=i+d|0;if(!(a[b>>0]&1))a[b>>0]=e<<1;else c[b+4>>2]=e;a[k+e>>0]=0}return b|0}function on(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((-17-d|0)>>>0<e>>>0)gn(b);if(!(a[b>>0]&1))j=b+1|0;else j=c[b+8>>2]|0;if(d>>>0<2147483623){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;m=l>>>0<11?11:l+16&-16}else m=-17;l=Tn(m)|0;if(g|0)ho(l|0,j|0,g|0)|0;k=f-h|0;if((k|0)!=(g|0))ho(l+g+i|0,j+g+h|0,k-g|0)|0;if((d|0)!=10)An(j);c[b+8>>2]=l;c[b>>2]=m|1;return}function pn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}if(!(h&1))i=(h&255)>>>1;else i=c[b+4>>2]|0;if((g-i|0)>>>0>=e>>>0){if(e|0){if(!(h&1))j=b+1|0;else j=c[b+8>>2]|0;ho(j+i|0,d|0,e|0)|0;h=i+e|0;if(!(a[b>>0]&1))a[b>>0]=h<<1;else c[b+4>>2]=h;a[j+h>>0]=0}}else mn(b,g,e-g+i|0,i,i,0,e,d);return b|0}function qn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a[b>>0]|0;f=(e&1)!=0;if(f){g=(c[b>>2]&-2)+-1|0;h=c[b+4>>2]|0}else{g=10;h=(e&255)>>>1}if((h|0)==(g|0)){on(b,g,1,g,g,0,0);if(!(a[b>>0]&1))i=7;else i=8}else if(f)i=8;else i=7;if((i|0)==7){a[b>>0]=(h<<1)+2;j=b+1|0}else if((i|0)==8){i=c[b+8>>2]|0;c[b+4>>2]=h+1;j=i}i=j+h|0;a[i>>0]=d;a[i+1>>0]=0;return}function rn(a){a=a|0;Ka(34425,34448,303,34532)}function sn(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;a=i;i=i+48|0;b=a+32|0;d=a+24|0;e=a+16|0;f=a;g=a+36|0;a=tn()|0;if(a|0?(h=c[a>>2]|0,h|0):0){a=h+48|0;j=c[a>>2]|0;k=c[a+4>>2]|0;if(!((j&-256|0)==1126902528&(k|0)==1129074247)){c[d>>2]=34835;wn(34930,d)}if((j|0)==1126902529&(k|0)==1129074247)l=c[h+44>>2]|0;else l=h+80|0;c[g>>2]=l;l=c[h>>2]|0;h=c[l+4>>2]|0;if(kb[c[(c[38]|0)+16>>2]&127](152,l,g)|0){l=c[g>>2]|0;g=pb[c[(c[l>>2]|0)+8>>2]&127](l)|0;c[f>>2]=34835;c[f+4>>2]=h;c[f+8>>2]=g;wn(34844,f)}else{c[e>>2]=34835;c[e+4>>2]=h;wn(34889,e)}}wn(34968,b)}function tn(){var a=0,b=0;a=i;i=i+16|0;if(!(Xa(35664,23)|0)){b=Va(c[8917]|0)|0;i=a;return b|0}else wn(34656,a);return 0}function un(){var a=0;a=i;i=i+16|0;if(!(Ya(35668,44)|0)){i=a;return}else wn(34606,a)}function vn(a){a=a|0;var b=0;b=i;i=i+16|0;bn(a);if(!(_a(c[8917]|0,0)|0)){i=b;return}else wn(34553,b)}function wn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=b;b=c[1510]|0;gm(b,a,e)|0;Rm(10,b)|0;Ha()}function xn(a){a=a|0;return}function yn(a){a=a|0;return}function zn(a){a=a|0;An(a);return}function An(a){a=a|0;bn(a);return}function Bn(a){a=a|0;return}function Cn(a){a=a|0;return}function Dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+64|0;f=e;if((a|0)!=(b|0))if((b|0)!=0?(g=En(b,192,160,0)|0,(g|0)!=0):0){b=f;h=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(h|0));c[f>>2]=g;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;wb[c[(c[g>>2]|0)+28>>2]&31](g,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];j=1}else j=0;k=j}else k=0;else k=1;i=e;return k|0}function En(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+-8>>2]|0)|0;m=c[k+-4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;g=j+16|0;e=j+20|0;d=j+24|0;k=j+28|0;n=j+32|0;o=j+40|0;p=(m|0)==(f|0);q=g;r=q+36|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(r|0));b[g+36>>1]=0;a[g+38>>0]=0;a:do if(p){c[j+48>>2]=1;tb[c[(c[f>>2]|0)+20>>2]&31](f,j,l,l,1,0);s=(c[d>>2]|0)==1?l:0}else{lb[c[(c[m>>2]|0)+24>>2]&31](m,j,l,1,0);switch(c[j+36>>2]|0){case 0:{s=(c[o>>2]|0)==1&(c[k>>2]|0)==1&(c[n>>2]|0)==1?c[e>>2]|0:0;break a;break}case 1:break;default:{s=0;break a}}if((c[d>>2]|0)!=1?!((c[o>>2]|0)==0&(c[k>>2]|0)==1&(c[n>>2]|0)==1):0){s=0;break}s=c[g>>2]|0}while(0);i=h;return s|0}function Fn(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if((a|0)==(c[b+8>>2]|0))Gn(0,b,d,e,f);else{h=c[a+8>>2]|0;tb[c[(c[h>>2]|0)+20>>2]&31](h,b,d,e,f,g)}return}function Gn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a[d+53>>0]=1;do if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;h=c[b>>2]|0;if(!h){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;break}h=d+24|0;b=c[h>>2]|0;if((b|0)==2){c[h>>2]=g;i=g}else i=b;if((i|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1}while(0);return}function Hn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(h=d+28|0,(c[h>>2]|0)!=1):0)c[h>>2]=f}else{if((b|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;lb[c[(c[h>>2]|0)+24>>2]&31](h,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4)break;j=d+52|0;a[j>>0]=0;k=d+53|0;a[k>>0]=0;l=c[b+8>>2]|0;tb[c[(c[l>>2]|0)+20>>2]&31](l,d,e,e,1,g);if(a[k>>0]|0)if(!(a[j>>0]|0)){m=1;n=13}else n=17;else{m=0;n=13}do if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(m){n=17;break}else{o=4;break}}if(m)n=17;else o=4}while(0);if((n|0)==17)o=3;c[i>>2]=o;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function In(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if((a|0)==(c[b+8>>2]|0))Jn(0,b,d,e);else{f=c[a+8>>2]|0;wb[c[(c[f>>2]|0)+28>>2]&31](f,b,d,e)}return}function Jn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=d+16|0;g=c[b>>2]|0;do if(g){if((g|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}h=d+24|0;if((c[h>>2]|0)==2)c[h>>2]=f}else{c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1}while(0);return}function Kn(a){a=a|0;An(a);return}function Ln(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((a|0)==(c[b+8>>2]|0))Gn(0,b,d,e,f);return}function Mn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(g=d+28|0,(c[g>>2]|0)!=1):0)c[g>>2]=f}else if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(g=d+20|0,(c[g>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[g>>2]=e;g=d+40|0;c[g>>2]=(c[g>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Nn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((a|0)==(c[b+8>>2]|0))Jn(0,b,d,e);return}function On(){var a=0,b=0,d=0,e=0;a=i;i=i+16|0;b=a+8|0;d=a;a=tn()|0;if((a|0?(e=c[a>>2]|0,e|0):0)?(a=e+48|0,(c[a>>2]&-256|0)==1126902528?(c[a+4>>2]|0)==1129074247:0):0){rb[c[e+12>>2]&31]();wn(34980,d)}d=c[1671]|0;c[1671]=d+0;rb[d&31]();wn(34980,b)}function Pn(a){a=a|0;return}function Qn(a){a=a|0;return}function Rn(a){a=a|0;An(a);return}function Sn(a){a=a|0;return 35033}function Tn(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){a=an(b)|0;if(a|0){d=a;e=6;break}a=Un()|0;if(!a){e=5;break}rb[a&31]()}if((e|0)==5){b=La(4)|0;c[b>>2]=6776;$a(b|0,216,39)}else if((e|0)==6)return d|0;return 0}function Un(){var a=0;a=c[8918]|0;c[8918]=a+0;return a|0}function Vn(a){a=a|0;return Tn(a)|0}function Wn(a){a=a|0;An(a);return}function Xn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;c[f>>2]=c[d>>2];g=kb[c[(c[a>>2]|0)+16>>2]&127](a,b,f)|0;if(g)c[d>>2]=c[f>>2];i=e;return g&1|0}function Yn(a){a=a|0;var b=0;if(!a)b=0;else b=(En(a,192,248,0)|0)!=0;return b&1|0}function Zn(){}function _n(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return (C=e,a-c>>>0|0)|0}function $n(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function ao(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}C=a<<c-32;return 0}function bo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;p=p+1|0;c[a>>2]=p;while((f|0)<(e|0)){if(!(c[d+(f<<3)>>2]|0)){c[d+(f<<3)>>2]=p;c[d+((f<<3)+4)>>2]=b;c[d+((f<<3)+8)>>2]=0;C=e;return d|0}f=f+1|0}e=e*2|0;d=cn(d|0,8*(e+1|0)|0)|0;d=bo(a|0,b|0,d|0,e|0)|0;C=e;return d|0}function co(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=(b|0)<0?-1:0;return b>>c-32|0}function eo(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=0;return b>>>c-32|0}function fo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;while((e|0)<(d|0)){f=c[b+(e<<3)>>2]|0;if(!f)break;if((f|0)==(a|0))return c[b+((e<<3)+4)>>2]|0;e=e+1|0}return 0}function go(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return (C=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function ho(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return Ra(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function io(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else ho(b,c,d)|0;return b|0}function jo(a,b,c){a=a|0;b=b|0;c=c|0;c=aa(b)|0;if((c|0)==32)c=c+(aa(a)|0)|0;C=0;return c|0}function ko(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function lo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=_(d,c)|0;f=a>>>16;a=(e>>>16)+(_(d,f)|0)|0;d=b>>>16;b=_(d,c)|0;return (C=(a>>>16)+(_(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function mo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=_n(e^a|0,f^b|0,e|0,f|0)|0;b=C;a=g^e;e=h^f;return _n((ro(i,b,_n(g^c|0,h^d|0,g|0,h|0)|0,C,0)|0)^a|0,C^e|0,a|0,e|0)|0}function no(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=_n(h^a|0,j^b|0,h|0,j|0)|0;b=C;ro(m,b,_n(k^d|0,l^e|0,k|0,l|0)|0,C,g)|0;l=_n(c[g>>2]^h|0,c[g+4>>2]^j|0,h|0,j|0)|0;j=C;i=f;return (C=j,l)|0}function oo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=lo(e,a)|0;f=C;return (C=(_(b,a)|0)+(_(d,e)|0)+f|f&0,c|0|0)|0}function po(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ro(a,b,c,d,0)|0}function qo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f|0;ro(a,b,d,e,g)|0;i=f;return (C=c[g+4>>2]|0,c[g>>2]|0)|0}function ro(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0;g=a;h=b;i=h;j=d;k=e;l=k;if(!i){m=(f|0)!=0;if(!l){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return (C=n,o)|0}else{if(!m){n=0;o=0;return (C=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return (C=n,o)|0}}m=(l|0)==0;do if(j){if(!m){p=(aa(l|0)|0)-(aa(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if(!f){n=0;o=0;return (C=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (C=n,o)|0}r=j-1|0;if(r&j|0){s=(aa(j|0)|0)+33-(aa(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if(f|0){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return (C=n,o)|0}else{r=ko(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return (C=n,o)|0}}else{if(m){if(f|0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return (C=n,o)|0}if(!g){if(f|0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return (C=n,o)|0}r=l-1|0;if(!(r&l)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((ko(l|0)|0)>>>0);return (C=n,o)|0}r=(aa(l|0)|0)-(aa(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if(!f){n=0;o=0;return (C=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (C=n,o)|0}while(0);if(!t){B=x;D=w;E=v;F=u;G=0;H=0}else{b=d|0|0;d=k|e&0;e=go(b|0,d|0,-1,-1)|0;k=C;h=x;x=w;w=v;v=u;u=t;t=0;do{a=h;h=x>>>31|h<<1;x=t|x<<1;g=v<<1|a>>>31|0;a=v>>>31|w<<1|0;_n(e|0,k|0,g|0,a|0)|0;i=C;l=i>>31|((i|0)<0?-1:0)<<1;t=l&1;v=_n(g|0,a|0,l&b|0,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d|0)|0;w=C;u=u-1|0}while((u|0)!=0);B=h;D=x;E=w;F=v;G=0;H=t}t=D;D=0;if(f|0){c[f>>2]=F;c[f+4>>2]=E}n=(t|0)>>>31|(B|D)<<1|(D<<1|t>>>31)&0|G;o=(t<<1|0>>>31)&-2|H;return (C=n,o)|0}function so(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return jb[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function to(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function uo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(1,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function vo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(2,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function wo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(3,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function xo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(4,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function yo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(5,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function zo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(6,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function Ao(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(7,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function Bo(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(8,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function Co(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ea(9,a|0,b|0,c|0,d|0,e|0,f|0,g|0)|0}function Do(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return kb[a&127](b|0,c|0,d|0)|0}function Eo(a,b,c){a=a|0;b=b|0;c=c|0;return ga(0,a|0,b|0,c|0)|0}function Fo(a,b,c){a=a|0;b=b|0;c=c|0;return ga(1,a|0,b|0,c|0)|0}function Go(a,b,c){a=a|0;b=b|0;c=c|0;return ga(2,a|0,b|0,c|0)|0}function Ho(a,b,c){a=a|0;b=b|0;c=c|0;return ga(3,a|0,b|0,c|0)|0}function Io(a,b,c){a=a|0;b=b|0;c=c|0;return ga(4,a|0,b|0,c|0)|0}function Jo(a,b,c){a=a|0;b=b|0;c=c|0;return ga(5,a|0,b|0,c|0)|0}function Ko(a,b,c){a=a|0;b=b|0;c=c|0;return ga(6,a|0,b|0,c|0)|0}function Lo(a,b,c){a=a|0;b=b|0;c=c|0;return ga(7,a|0,b|0,c|0)|0}function Mo(a,b,c){a=a|0;b=b|0;c=c|0;return ga(8,a|0,b|0,c|0)|0}function No(a,b,c){a=a|0;b=b|0;c=c|0;return ga(9,a|0,b|0,c|0)|0}function Oo(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;lb[a&31](b|0,c|0,d|0,e|0,f|0)}function Po(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(0,a|0,b|0,c|0,d|0,e|0)}function Qo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(1,a|0,b|0,c|0,d|0,e|0)}function Ro(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(2,a|0,b|0,c|0,d|0,e|0)}function So(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(3,a|0,b|0,c|0,d|0,e|0)}function To(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(4,a|0,b|0,c|0,d|0,e|0)}function Uo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(5,a|0,b|0,c|0,d|0,e|0)}function Vo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(6,a|0,b|0,c|0,d|0,e|0)}function Wo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(7,a|0,b|0,c|0,d|0,e|0)}function Xo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(8,a|0,b|0,c|0,d|0,e|0)}function Yo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(9,a|0,b|0,c|0,d|0,e|0)}function Zo(a,b){a=a|0;b=b|0;mb[a&63](b|0)}function _o(a){a=a|0;ka(0,a|0)}function $o(a){a=a|0;ka(1,a|0)}function ap(a){a=a|0;ka(2,a|0)}function bp(a){a=a|0;ka(3,a|0)}function cp(a){a=a|0;ka(4,a|0)}function dp(a){a=a|0;ka(5,a|0)}function ep(a){a=a|0;ka(6,a|0)}function fp(a){a=a|0;ka(7,a|0)}function gp(a){a=a|0;ka(8,a|0)}function hp(a){a=a|0;ka(9,a|0)}function ip(a,b,c){a=a|0;b=b|0;c=c|0;nb[a&31](b|0,c|0)}function jp(a,b){a=a|0;b=b|0;ma(0,a|0,b|0)}function kp(a,b){a=a|0;b=b|0;ma(1,a|0,b|0)}function lp(a,b){a=a|0;b=b|0;ma(2,a|0,b|0)}function mp(a,b){a=a|0;b=b|0;ma(3,a|0,b|0)}function np(a,b){a=a|0;b=b|0;ma(4,a|0,b|0)}function op(a,b){a=a|0;b=b|0;ma(5,a|0,b|0)}function pp(a,b){a=a|0;b=b|0;ma(6,a|0,b|0)}function qp(a,b){a=a|0;b=b|0;ma(7,a|0,b|0)}function rp(a,b){a=a|0;b=b|0;ma(8,a|0,b|0)}function sp(a,b){a=a|0;b=b|0;ma(9,a|0,b|0)}function tp(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ob[a&31](b|0,c|0,d|0,e|0,f|0,g|0)|0}function up(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(0,a|0,b|0,c|0,d|0,e|0,f|0)|0}function vp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(1,a|0,b|0,c|0,d|0,e|0,f|0)|0}function wp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(2,a|0,b|0,c|0,d|0,e|0,f|0)|0}function xp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(3,a|0,b|0,c|0,d|0,e|0,f|0)|0}function yp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(4,a|0,b|0,c|0,d|0,e|0,f|0)|0}function zp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(5,a|0,b|0,c|0,d|0,e|0,f|0)|0}function Ap(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(6,a|0,b|0,c|0,d|0,e|0,f|0)|0}function Bp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(7,a|0,b|0,c|0,d|0,e|0,f|0)|0}function Cp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(8,a|0,b|0,c|0,d|0,e|0,f|0)|0}function Dp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return oa(9,a|0,b|0,c|0,d|0,e|0,f|0)|0}function Ep(a,b){a=a|0;b=b|0;return pb[a&127](b|0)|0}function Fp(a){a=a|0;return qa(0,a|0)|0}function Gp(a){a=a|0;return qa(1,a|0)|0}function Hp(a){a=a|0;return qa(2,a|0)|0}function Ip(a){a=a|0;return qa(3,a|0)|0}function Jp(a){a=a|0;return qa(4,a|0)|0}function Kp(a){a=a|0;return qa(5,a|0)|0}function Lp(a){a=a|0;return qa(6,a|0)|0}function Mp(a){a=a|0;return qa(7,a|0)|0}function Np(a){a=a|0;return qa(8,a|0)|0}function Op(a){a=a|0;return qa(9,a|0)|0}function Pp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;qb[a&31](b|0,c|0,d|0)}function Qp(a,b,c){a=a|0;b=b|0;c=c|0;sa(0,a|0,b|0,c|0)}function Rp(a,b,c){a=a|0;b=b|0;c=c|0;sa(1,a|0,b|0,c|0)}function Sp(a,b,c){a=a|0;b=b|0;c=c|0;sa(2,a|0,b|0,c|0)}function Tp(a,b,c){a=a|0;b=b|0;c=c|0;sa(3,a|0,b|0,c|0)}function Up(a,b,c){a=a|0;b=b|0;c=c|0;sa(4,a|0,b|0,c|0)}function Vp(a,b,c){a=a|0;b=b|0;c=c|0;sa(5,a|0,b|0,c|0)}function Wp(a,b,c){a=a|0;b=b|0;c=c|0;sa(6,a|0,b|0,c|0)}function Xp(a,b,c){a=a|0;b=b|0;c=c|0;sa(7,a|0,b|0,c|0)}function Yp(a,b,c){a=a|0;b=b|0;c=c|0;sa(8,a|0,b|0,c|0)}function Zp(a,b,c){a=a|0;b=b|0;c=c|0;sa(9,a|0,b|0,c|0)}function _p(a){a=a|0;rb[a&31]()}function $p(){ua(0)}function aq(){ua(1)}function bq(){ua(2)}function cq(){ua(3)}function dq(){ua(4)}function eq(){ua(5)}function fq(){ua(6)}function gq(){ua(7)}function hq(){ua(8)}function iq(){ua(9)}function jq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return sb[a&63](b|0,c|0,d|0,e|0)|0}function kq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(0,a|0,b|0,c|0,d|0)|0}function lq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(1,a|0,b|0,c|0,d|0)|0}function mq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(2,a|0,b|0,c|0,d|0)|0}function nq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(3,a|0,b|0,c|0,d|0)|0}function oq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(4,a|0,b|0,c|0,d|0)|0}function pq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(5,a|0,b|0,c|0,d|0)|0}function qq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(6,a|0,b|0,c|0,d|0)|0}function rq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(7,a|0,b|0,c|0,d|0)|0}function sq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(8,a|0,b|0,c|0,d|0)|0}function tq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return wa(9,a|0,b|0,c|0,d|0)|0}function uq(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;tb[a&31](b|0,c|0,d|0,e|0,f|0,g|0)}function vq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(0,a|0,b|0,c|0,d|0,e|0,f|0)}function wq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(1,a|0,b|0,c|0,d|0,e|0,f|0)}function xq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(2,a|0,b|0,c|0,d|0,e|0,f|0)}function yq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(3,a|0,b|0,c|0,d|0,e|0,f|0)}function zq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(4,a|0,b|0,c|0,d|0,e|0,f|0)}function Aq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(5,a|0,b|0,c|0,d|0,e|0,f|0)}function Bq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(6,a|0,b|0,c|0,d|0,e|0,f|0)}function Cq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(7,a|0,b|0,c|0,d|0,e|0,f|0)}function Dq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(8,a|0,b|0,c|0,d|0,e|0,f|0)}function Eq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ya(9,a|0,b|0,c|0,d|0,e|0,f|0)}function Fq(a,b,c){a=a|0;b=b|0;c=c|0;return ub[a&255](b|0,c|0)|0}function Gq(a,b){a=a|0;b=b|0;return Aa(0,a|0,b|0)|0}function Hq(a,b){a=a|0;b=b|0;return Aa(1,a|0,b|0)|0}function Iq(a,b){a=a|0;b=b|0;return Aa(2,a|0,b|0)|0}function Jq(a,b){a=a|0;b=b|0;return Aa(3,a|0,b|0)|0}function Kq(a,b){a=a|0;b=b|0;return Aa(4,a|0,b|0)|0}function Lq(a,b){a=a|0;b=b|0;return Aa(5,a|0,b|0)|0}function Mq(a,b){a=a|0;b=b|0;return Aa(6,a|0,b|0)|0}function Nq(a,b){a=a|0;b=b|0;return Aa(7,a|0,b|0)|0}function Oq(a,b){a=a|0;b=b|0;return Aa(8,a|0,b|0)|0}function Pq(a,b){a=a|0;b=b|0;return Aa(9,a|0,b|0)|0}function Qq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return vb[a&31](b|0,c|0,d|0,e|0,f|0)|0}function Rq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(0,a|0,b|0,c|0,d|0,e|0)|0}function Sq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(1,a|0,b|0,c|0,d|0,e|0)|0}function Tq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(2,a|0,b|0,c|0,d|0,e|0)|0}function Uq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(3,a|0,b|0,c|0,d|0,e|0)|0}function Vq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(4,a|0,b|0,c|0,d|0,e|0)|0}function Wq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(5,a|0,b|0,c|0,d|0,e|0)|0}function Xq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(6,a|0,b|0,c|0,d|0,e|0)|0}function Yq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(7,a|0,b|0,c|0,d|0,e|0)|0}function Zq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(8,a|0,b|0,c|0,d|0,e|0)|0}function _q(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ca(9,a|0,b|0,c|0,d|0,e|0)|0}function $q(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;wb[a&31](b|0,c|0,d|0,e|0)}function ar(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(0,a|0,b|0,c|0,d|0)}function br(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(1,a|0,b|0,c|0,d|0)}function cr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(2,a|0,b|0,c|0,d|0)}function dr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(3,a|0,b|0,c|0,d|0)}function er(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(4,a|0,b|0,c|0,d|0)}function fr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(5,a|0,b|0,c|0,d|0)}function gr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(6,a|0,b|0,c|0,d|0)}function hr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(7,a|0,b|0,c|0,d|0)}function ir(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(8,a|0,b|0,c|0,d|0)}function jr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ea(9,a|0,b|0,c|0,d|0)}function kr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ba(0);return 0}function lr(a,b,c){a=a|0;b=b|0;c=c|0;ba(1);return 0}function mr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(2)}function nr(a){a=a|0;ba(3)}function or(a,b){a=a|0;b=b|0;ba(4)}function pr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(5);return 0}function qr(a){a=a|0;ba(6);return 0}function rr(a,b,c){a=a|0;b=b|0;c=c|0;ba(7)}function sr(){ba(8)}function tr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(9);return 0}function ur(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(10)}function vr(a,b){a=a|0;b=b|0;ba(11);return 0}function wr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(12);return 0}function xr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(13)}
function xb(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function yb(){return i|0}function zb(a){a=a|0;i=a}function Ab(a,b){a=a|0;b=b|0;i=a;j=b}function Bb(a,b){a=a|0;b=b|0;if(!n){n=a;o=b}}function Cb(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function Db(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function Eb(a){a=a|0;C=a}function Fb(){return C|0}function Gb(a,b,c){a=a|0;b=b|0;c=c|0;return Xd(a,b,c)|0}function Hb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=Tn(8)|0;g=f;c[g>>2]=0;c[g+4>>2]=0;c[e>>2]=0;c[f>>2]=ve(a,e,b)|0;c[f+4>>2]=c[e>>2];i=d;return f|0}function Ib(a,b,c){a=a|0;b=b|0;c=c|0;return Th(a,b,c)|0}function Jb(a,b,c){a=a|0;b=b|0;c=c|0;return we(a,b,c)|0}function Kb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+48|0;j=h+16|0;k=h+8|0;l=h;ni(j);m=(d|0)!=0;c[k>>2]=m?j:0;a[k+4>>0]=(e|0)!=0&1;a[k+5>>0]=(f|0)!=0&1;a[k+6>>0]=(g|0)!=0&1;ti(l);g=uc(b)|0;b=Tn(12)|0;f=b+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;e=Je(l,g,k)|0;c[b>>2]=e;if(!e){c[b+4>>2]=ui(l)|0;if(m)n=ui(j+16|0)|0;else n=0;c[f>>2]=n}c[l>>2]=1520;n=l+4|0;l=c[n>>2]|0;c[n>>2]=0;if(l|0){n=c[l>>2]|0;if(n|0){f=l+4|0;if((c[f>>2]|0)!=(n|0))c[f>>2]=n;An(n)}An(l)}c[j+16>>2]=1520;l=j+20|0;j=c[l>>2]|0;c[l>>2]=0;if(!j){i=h;return b|0}l=c[j>>2]|0;if(l|0){n=j+4|0;if((c[n>>2]|0)!=(l|0))c[n>>2]=l;An(l)}An(j);i=h;return b|0}function Lb(a){a=a|0;if(!a)return;Mb(a);An(a);return}function Mb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=c[a+20>>2]|0;if(b|0){d=b;do{b=d;d=c[d>>2]|0;jn(b+8|0);An(b)}while((d|0)!=0)}d=a+12|0;b=c[d>>2]|0;c[d>>2]=0;if(b|0)An(b);b=c[a>>2]|0;if(!b)return;d=a+4|0;e=c[d>>2]|0;if((e|0)==(b|0))f=b;else{g=e;do{e=g+-4|0;c[d>>2]=e;h=c[e>>2]|0;c[e>>2]=0;if(h|0){Pd(h);An(h)}g=c[d>>2]|0}while((g|0)!=(b|0));f=c[a>>2]|0}An(f);return}function Nb(a){a=a|0;Wd(a);return}function Ob(){var a=0;a=Tn(20)|0;gc(a,80);return a|0}function Pb(b){b=b|0;var d=0,e=0;d=b+8|0;if(!(a[d>>0]&1)){e=d+1|0;return e|0}else{e=c[b+16>>2]|0;return e|0}return 0}function Qb(b){b=b|0;var d=0,e=0;d=a[b+8>>0]|0;if(!(d&1)){e=(d&255)>>>1;return e|0}else{e=c[b+12>>2]|0;return e|0}return 0}function Rb(a){a=a|0;if(!a)return;mb[c[(c[a>>2]|0)+4>>2]&63](a);return}function Sb(a){a=a|0;return c[a>>2]|0}function Tb(a){a=a|0;var b=0;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;return a|0}function Ub(a){a=a|0;var b=0,d=0;if(!a)return;b=a+4|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0){Mb(d);An(d)}An(a);return}function Vb(a){a=a|0;return c[a>>2]|0}function Wb(a){a=a|0;var b=0;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;return a|0}function Xb(a){a=a|0;var b=0;b=a+8|0;a=c[b>>2]|0;c[b>>2]=0;return a|0}function Yb(a){a=a|0;var b=0,d=0,e=0;if(!a)return;b=a+8|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0){b=c[d>>2]|0;if(b|0){e=d+4|0;if((c[e>>2]|0)!=(b|0))c[e>>2]=b;An(b)}An(d)}d=a+4|0;b=c[d>>2]|0;c[d>>2]=0;if(b|0){d=c[b>>2]|0;if(d|0){e=b+4|0;if((c[e>>2]|0)!=(d|0))c[e>>2]=d;An(d)}An(b)}An(a);return}function Zb(a){a=a|0;return c[a>>2]|0}function _b(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)|0}function $b(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a>>2]|0;if(b|0){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;An(b)}An(a);return}function ac(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;d=i;i=i+16|0;j=d;k=c[e+4>>2]|0;l=e+8|0;m=c[l>>2]|0;n=(a[f>>0]&1)==0?f+1|0:c[f+8>>2]|0;c[j>>2]=c[e>>2];c[j+4>>2]=k;c[j+8>>2]=m;c[j+12>>2]=n;bc(b,11070,j);j=a[g>>0]|0;n=(j&1)==0;m=g+4|0;k=n?(j&255)>>>1:c[m>>2]|0;if(!k){i=d;return}pn(b,n?g+1|0:c[g+8>>2]|0,k)|0;qn(b,10);k=c[l>>2]|0;l=k+~h|0;h=(c[e+12>>2]|0)-k|0;k=a[g>>0]|0;g=((k&1)==0?(k&255)>>>1:c[m>>2]|0)-l|0;m=g>>>0<h>>>0?g:h;nn(b,l,32)|0;nn(b,(m|0)==0?1:m,94)|0;qn(b,10);i=d;return}function bc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+48|0;g=f+32|0;h=f+16|0;j=f;c[g>>2]=e;c[h>>2]=c[g>>2];e=em(0,0,d,g)|0;g=e+1|0;c[j>>2]=0;k=j+4|0;c[k>>2]=0;c[j+8>>2]=0;if(g|0){if((e|0)<-1)rn(j);l=Tn(g)|0;c[k>>2]=l;c[j>>2]=l;c[j+8>>2]=l+g;m=g;n=l;do{a[n>>0]=0;n=(c[k>>2]|0)+1|0;c[k>>2]=n;m=m+-1|0}while((m|0)!=0)}em(c[j>>2]|0,g,d,h)|0;hn(b,c[j>>2]|0,e);e=c[j>>2]|0;if(!e){i=f;return}if((c[k>>2]|0)!=(e|0))c[k>>2]=e;An(e);i=f;return}function cc(a){a=a|0;c[a>>2]=272;jn(a+8|0);return}function dc(a){a=a|0;c[a>>2]=272;jn(a+8|0);An(a);return}function ec(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;ac(j,0,d,e,f,g);g=a[j>>0]|0;f=(g&1)==0;pn(b+8|0,f?j+1|0:c[j+8>>2]|0,f?(g&255)>>>1:c[j+4>>2]|0)|0;jn(j);i=h;return 1}function fc(a){a=a|0;return c[a+4>>2]|0}function gc(a,b){a=a|0;b=b|0;c[a>>2]=272;c[a+4>>2]=b;b=a+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function hc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)!=1){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;hn(e,c[g>>2]|0,c[g+4>>2]|0);g=ic(a,e)|0;jn(e);if(!g)h=-1;else h=c[g+36>>2]|0;f=h;i=d;return f|0}function ic(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=a[f>>0]|0;h=(g&1)==0;i=h?f+1|0:c[f+8>>2]|0;j=h?(g&255)>>>1:c[f+4>>2]|0;if(j>>>0>3){f=j;g=i;h=j;while(1){k=_(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24,1540483477)|0;l=(_(k>>>24^k,1540483477)|0)^(_(h,1540483477)|0);f=f+-4|0;if(f>>>0<=3){m=l;break}else{g=g+4|0;h=l}}h=j+-4|0;g=h&-4;n=h-g|0;o=i+(g+4)|0;p=m}else{n=j;o=i;p=j}switch(n|0){case 3:{q=d[o+2>>0]<<16^p;r=6;break}case 2:{q=p;r=6;break}case 1:{s=p;r=7;break}default:t=p}if((r|0)==6){s=d[o+1>>0]<<8^q;r=7}if((r|0)==7)t=_(d[o>>0]^s,1540483477)|0;s=_(t>>>13^t,1540483477)|0;t=s>>>15^s;s=c[e+4>>2]|0;if(!s){u=0;return u|0}o=s+-1|0;q=(o&s|0)==0;if(q)v=t&o;else v=(t>>>0)%(s>>>0)|0;t=c[(c[e>>2]|0)+(v<<2)>>2]|0;if(!t){u=0;return u|0}e=c[t>>2]|0;if(!e){u=0;return u|0}t=(j|0)==0;if(q){q=e;a:while(1){if((c[q+4>>2]&o|0)!=(v|0)){u=0;r=35;break}p=q+8|0;n=b[p>>1]|0;m=(n&1)==0;g=(n&254)>>>1;h=(n&65535)>>>8&255;do if(((m?g:c[q+12>>2]|0)|0)==(j|0)){if(!m)if(!(um(c[q+16>>2]|0,i,j)|0)){u=q;r=35;break a}else break;if(t){u=q;r=35;break a}if(h<<24>>24==(a[i>>0]|0)){n=g;f=p+1|0;l=i;do{n=n+-1|0;f=f+1|0;if(!n){u=q;r=35;break a}l=l+1|0}while((a[f>>0]|0)==(a[l>>0]|0))}}while(0);q=c[q>>2]|0;if(!q){u=0;r=35;break}}if((r|0)==35)return u|0}else{q=e;b:while(1){if((((c[q+4>>2]|0)>>>0)%(s>>>0)|0|0)!=(v|0)){u=0;r=35;break}e=q+8|0;o=b[e>>1]|0;p=(o&1)==0;g=(o&254)>>>1;h=(o&65535)>>>8&255;do if(((p?g:c[q+12>>2]|0)|0)==(j|0)){if(!p)if(!(um(c[q+16>>2]|0,i,j)|0)){u=q;r=35;break b}else break;if(t){u=q;r=35;break b}if(h<<24>>24==(a[i>>0]|0)){o=g;m=e+1|0;l=i;do{o=o+-1|0;m=m+1|0;if(!o){u=q;r=35;break b}l=l+1|0}while((a[m>>0]|0)==(a[l>>0]|0))}}while(0);q=c[q>>2]|0;if(!q){u=0;r=35;break}}if((r|0)==35)return u|0}return 0}function jc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;hn(e,c[b>>2]|0,c[b+4>>2]|0);b=ic(a+200|0,e)|0;jn(e);if(!b){f=0;i=d;return f|0}e=c[b+36>>2]|0;if((e|0)==-1){f=0;i=d;return f|0}f=c[(c[a+84>>2]|0)+(e<<2)>>2]|0;i=d;return f|0}function kc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)!=1){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;hn(e,c[g>>2]|0,c[g+4>>2]|0);g=ic(a+160|0,e)|0;jn(e);if(!g)h=-1;else h=c[g+36>>2]|0;f=h;i=d;return f|0}function lc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)!=1){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;hn(e,c[g>>2]|0,c[g+4>>2]|0);g=ic(a+180|0,e)|0;jn(e);if(!g)h=-1;else h=c[g+36>>2]|0;f=h;i=d;return f|0}function mc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)!=1){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;hn(e,c[g>>2]|0,c[g+4>>2]|0);g=ic(a+240|0,e)|0;jn(e);if(!g)h=-1;else h=c[g+36>>2]|0;f=h;i=d;return f|0}function nc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)!=1){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;hn(e,c[g>>2]|0,c[g+4>>2]|0);g=ic(a+260|0,e)|0;jn(e);if(!g)h=-1;else h=c[g+36>>2]|0;f=h;i=d;return f|0}function oc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)!=1){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;hn(e,c[g>>2]|0,c[g+4>>2]|0);g=ic(a+220|0,e)|0;jn(e);if(!g)h=-1;else h=c[g+36>>2]|0;f=h;i=d;return f|0}function pc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;if(!(c[b+16>>2]|0)){f=c[b+24>>2]|0;i=d;return f|0}g=b+24|0;b=g+4|0;hn(e,c[g>>2]|0,c[b>>2]|0);h=ic(a+84|0,e)|0;jn(e);if(h){j=c[h+36>>2]|0;if((j|0)!=-1){f=j;i=d;return f|0}}hn(e,c[g>>2]|0,c[b>>2]|0);b=ic(a+104|0,e)|0;jn(e);if(!b){f=-1;i=d;return f|0}e=c[b+36>>2]|0;if((e|0)==-1){f=-1;i=d;return f|0}f=((c[a+52>>2]|0)-(c[a+48>>2]|0)>>2)+e|0;i=d;return f|0}function qc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)==1){f=b+24|0;hn(e,c[f>>2]|0,c[f+4>>2]|0);f=ic(a+160|0,e)|0;jn(e);if(!f)g=-1;else g=c[f+36>>2]|0;h=g}else h=c[b+24>>2]|0;if((h|0)<0){j=0;i=d;return j|0}b=c[a+48>>2]|0;if(h>>>0>=(c[a+52>>2]|0)-b>>2>>>0){j=0;i=d;return j|0}j=c[b+(h<<2)>>2]|0;i=d;return j|0}function rc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)==1){f=b+24|0;hn(e,c[f>>2]|0,c[f+4>>2]|0);f=ic(a+180|0,e)|0;jn(e);if(!f)g=-1;else g=c[f+36>>2]|0;h=g}else h=c[b+24>>2]|0;if((h|0)<0){j=0;i=d;return j|0}b=c[a+60>>2]|0;if(h>>>0>=(c[a+64>>2]|0)-b>>2>>>0){j=0;i=d;return j|0}j=c[b+(h<<2)>>2]|0;i=d;return j|0}function sc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)==1){f=b+24|0;hn(e,c[f>>2]|0,c[f+4>>2]|0);f=ic(a+220|0,e)|0;jn(e);if(!f)g=-1;else g=c[f+36>>2]|0;h=g}else h=c[b+24>>2]|0;if((h|0)<0){j=0;i=d;return j|0}b=c[a+96>>2]|0;if(h>>>0>=(c[a+100>>2]|0)-b>>2>>>0){j=0;i=d;return j|0}j=c[b+(h<<2)>>2]|0;i=d;return j|0}function tc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+16|0;f=e;if(a[d>>0]|0){if((c[d+24>>2]|0)!=1){g=c[d+32>>2]|0;i=e;return g|0}h=d+32|0;hn(f,c[h>>2]|0,c[h+4>>2]|0);h=ic(b+220|0,f)|0;jn(f);if(!h)j=-1;else j=c[h+36>>2]|0;g=j;i=e;return g|0}j=c[b+100>>2]|0;h=c[b+96>>2]|0;b=h;if((j|0)==(h|0)){g=-1;i=e;return g|0}f=c[d+40>>2]|0;k=(c[d+44>>2]|0)-f|0;l=d+52|0;m=d+56|0;d=f;f=j-h>>2;h=0;a:while(1){j=c[b+(h<<2)>>2]|0;n=c[j+12>>2]|0;o=c[j+8>>2]|0;p=o;q=n;b:do if((n-o|0)==(k|0)){if((p|0)!=(q|0)){r=p;s=d;while(1){if((c[r>>2]|0)!=(c[s>>2]|0))break b;r=r+4|0;if((r|0)==(q|0))break;else s=s+4|0}}s=c[j+24>>2]|0;r=c[j+20>>2]|0;t=c[l>>2]|0;u=r;v=s;if((s-r|0)==((c[m>>2]|0)-t|0)){if((u|0)==(v|0)){g=h;w=19;break a}r=u;u=t;while(1){if((c[r>>2]|0)!=(c[u>>2]|0))break b;r=r+4|0;if((r|0)==(v|0)){g=h;w=19;break a}else u=u+4|0}}}while(0);h=h+1|0;if(h>>>0>=f>>>0){g=-1;w=19;break}}if((w|0)==19){i=e;return g|0}return 0}function uc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=c[a>>2]|0;d=c[a+4>>2]|0;if((b|0)==(d|0)){e=0;return e|0}else f=b;while(1){b=c[f>>2]|0;f=f+4|0;if(!(c[b>>2]|0)){g=b;break}if((f|0)==(d|0)){e=0;h=5;break}}if((h|0)==5)return e|0;e=c[g+8>>2]|0;return e|0}function vc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d;if((c[b+16>>2]|0)==1){f=b+24|0;hn(e,c[f>>2]|0,c[f+4>>2]|0);f=ic(a+12|0,e)|0;jn(e);if(!f)g=-1;else g=c[f+36>>2]|0;h=g}else h=c[b+24>>2]|0;if((h|0)<0){j=0;i=d;return j|0}b=c[a>>2]|0;if(h>>>0>=(c[a+4>>2]|0)-b>>2>>>0){j=0;i=d;return j|0}j=c[(c[b+(h<<2)>>2]|0)+8>>2]|0;i=d;return j|0}function wc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=c[d>>2]|0;f=d+4|0;g=c[f>>2]|0;if((g|0)==(e|0)){h=g;i=e}else{j=g;while(1){g=j+-12|0;c[f>>2]=g;jn(g);g=c[f>>2]|0;if((g|0)==(e|0)){k=g;break}else j=g}h=k;i=c[d>>2]|0}k=(c[a+4>>2]|0)-(c[a>>2]|0)>>2;a=(h-i|0)/12|0;j=i;if(k>>>0<=a>>>0){if(k>>>0<a>>>0?(i=j+(k*12|0)|0,(h|0)!=(i|0)):0){j=h;do{h=j+-12|0;c[f>>2]=h;jn(h);j=c[f>>2]|0}while((j|0)!=(i|0))}}else xc(d,k-a|0);a=c[b+8>>2]|0;if(!a)return;else l=a;do{a=l;kn((c[d>>2]|0)+((c[a+36>>2]|0)*12|0)|0,a+8|0)|0;l=c[l>>2]|0}while((l|0)!=0);return}function xc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a+8|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;if(((e-g|0)/12|0)>>>0>=b>>>0){h=b;i=g;do{c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;i=(c[f>>2]|0)+12|0;c[f>>2]=i;h=h+-1|0}while((h|0)!=0);return}h=c[a>>2]|0;i=((g-h|0)/12|0)+b|0;if(i>>>0>357913941)rn(a);g=(e-h|0)/12|0;if(g>>>0<178956970){e=g<<1;g=e>>>0<i>>>0?i:e;e=((c[f>>2]|0)-h|0)/12|0;if(!g){j=0;k=0;l=e}else{m=g;n=e;o=9}}else{m=357913941;n=((c[f>>2]|0)-h|0)/12|0;o=9}if((o|0)==9){j=m;k=Tn(m*12|0)|0;l=n}n=k+(l*12|0)|0;l=n;m=k+(j*12|0)|0;j=b;b=n;k=l;while(1){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=k+12|0;o=b;j=j+-1|0;if(!j){p=o;break}else k=o}k=m;m=c[a>>2]|0;j=c[f>>2]|0;if((j|0)==(m|0)){q=l;r=m;s=m}else{b=j;j=n;n=l;while(1){l=j+-12|0;b=b+-12|0;c[l>>2]=c[b>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;j=n+-12|0;l=j;if((b|0)==(m|0)){t=l;break}else n=l}q=t;r=c[a>>2]|0;s=c[f>>2]|0}c[a>>2]=q;c[f>>2]=p;c[d>>2]=k;k=r;if((s|0)!=(k|0)){d=s;do{d=d+-12|0;jn(d)}while((d|0)!=(k|0))}if(!r)return;An(r);return}function yc(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=Tn(56)|0;c[d+16>>2]=9;e=d+20|0;f=d;g=f+16|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));f=e;g=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));f=b+24|0;if(!(c[f>>2]|0)){c[f>>2]=d;h=b+28|0;c[h>>2]=d;return d|0}f=b+28|0;b=c[f>>2]|0;if(!b){h=f;c[h>>2]=d;return d|0}c[b+20>>2]=d;h=f;c[h>>2]=d;return d|0}function zc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=Tn(56)|0;g=f+16|0;c[g>>2]=9;h=f+20|0;i=f;j=i+16|0;do{a[i>>0]=0;i=i+1|0}while((i|0)<(j|0));i=h;j=i+36|0;do{c[i>>2]=0;i=i+4|0}while((i|0)<(j|0));h=d+24|0;if(c[h>>2]|0){k=d+28|0;l=c[k>>2]|0;if(!l)m=k;else{c[l+20>>2]=f;m=k}}else{c[h>>2]=f;m=d+28|0}c[m>>2]=f;c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[g>>2]=4;g=Tn(32)|0;i=g;j=i+32|0;do{a[i>>0]=0;i=i+1|0}while((i|0)<(j|0));i=f+24|0;c[i>>2]=g;f=g+8|0;if((f|0)!=(e|0)){Ac(f,c[e>>2]|0,c[e+4>>2]|0);Ac(g+20|0,c[e+12>>2]|0,c[e+16>>2]|0)}e=d+100|0;g=c[e>>2]|0;if((g|0)==(c[d+104>>2]|0)){Bc(d+96|0,i);n=c[i>>2]|0;return n|0}else{c[g>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)+4;n=c[i>>2]|0;return n|0}return 0}function Ac(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b;f=d-e>>2;g=a+8|0;h=c[g>>2]|0;i=c[a>>2]|0;j=i;if(f>>>0<=h-i>>2>>>0){k=a+4|0;l=(c[k>>2]|0)-i>>2;m=f>>>0>l>>>0;n=b+(l<<2)|0;l=m?n:d;o=l;p=o-e|0;io(i|0,b|0,p|0)|0;q=j+(p>>2<<2)|0;if(!m){m=c[k>>2]|0;if((m|0)==(q|0))return;c[k>>2]=m+(~((m+-4-q|0)>>>2)<<2);return}if((l|0)==(d|0))return;l=c[k>>2]|0;q=(d+-4-o|0)>>>2;o=n;n=l;while(1){c[n>>2]=c[o>>2];o=o+4|0;if((o|0)==(d|0))break;else n=n+4|0}c[k>>2]=l+(q+1<<2);return}q=i;if(!i)r=h;else{h=a+4|0;l=c[h>>2]|0;if((l|0)!=(j|0))c[h>>2]=l+(~((l+-4-i|0)>>>2)<<2);An(q);c[g>>2]=0;c[h>>2]=0;c[a>>2]=0;r=0}if(f>>>0>1073741823)rn(a);h=r-0|0;if(h>>2>>>0<536870911){r=h>>1;h=r>>>0<f>>>0?f:r;if(h>>>0>1073741823)rn(a);else s=h}else s=1073741823;h=Tn(s<<2)|0;r=a+4|0;c[r>>2]=h;c[a>>2]=h;c[g>>2]=h+(s<<2);if((b|0)==(d|0))return;s=(d+-4-e|0)>>>2;e=b;b=h;while(1){c[b>>2]=c[e>>2];e=e+4|0;if((e|0)==(d|0))break;else b=b+4|0}c[r>>2]=h+(s+1<<2);return}function Bc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)rn(a);g=a+8|0;h=(c[g>>2]|0)-e|0;if(h>>2>>>0<536870911){i=h>>1;h=i>>>0<f>>>0?f:i;i=c[d>>2]|0;f=i-e>>2;if(!h){j=0;k=0;l=f;m=i}else{n=h;o=i;p=f;q=6}}else{f=c[d>>2]|0;n=1073741823;o=f;p=f-e>>2;q=6}if((q|0)==6){j=n;k=Tn(n<<2)|0;l=p;m=o}o=k+(l<<2)|0;c[o>>2]=c[b>>2];b=m-e|0;m=o+(0-(b>>2)<<2)|0;ho(m|0,e|0,b|0)|0;c[a>>2]=m;c[d>>2]=o+4;c[g>>2]=k+(j<<2);if(!e)return;An(e);return}function Cc(a){a=a|0;if((c[a+16>>2]|0)!=1)return;$h(a+24|0);return}function Dc(a){a=a|0;var b=0;if(!a)return;else b=a;do{a=b;b=c[b+20>>2]|0;Ec(a);An(a)}while((b|0)!=0);return}function Ec(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;do switch(c[a+16>>2]|0){case 1:{b=c[a+24>>2]|0;if(!b)return;Fc(b);An(b);return}case 2:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 3:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 4:{b=a+24|0;d=c[b>>2]|0;e=c[d>>2]|0;f=c[d+4>>2]|0;if((e|0)==(f|0))g=d;else{d=e;do{if((c[d+16>>2]|0)==1)$h(d+24|0);d=d+32|0}while((d|0)!=(f|0));g=c[b>>2]|0}if(g|0){f=c[g>>2]|0;d=f;if(f|0){e=g+4|0;h=c[e>>2]|0;if((h|0)!=(f|0))c[e>>2]=h+(~((h+-32-d|0)>>>5)<<5);An(f)}An(g)}if((c[a+48>>2]|0)!=1)return;$h(a+56|0);return}case 5:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 6:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 12:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 13:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 15:{f=a+24|0;d=c[f>>2]|0;if(d|0){Fc(d);An(d)}d=c[f+4>>2]|0;if(!d)return;else i=d;do{d=i;i=c[i+20>>2]|0;Ec(d);An(d)}while((i|0)!=0);return}case 17:{b=c[a+24>>2]|0;if(!b)return;Fc(b);An(b);return}case 21:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 22:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}case 24:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}default:return}while(0)}function Fc(a){a=a|0;var b=0,d=0;$h(a);b=c[a+20>>2]|0;if(b|0){d=b;do{b=d;d=c[d+20>>2]|0;Ec(b);An(b)}while((d|0)!=0)}d=c[a+8>>2]|0;if(!d)return;b=a+12|0;a=c[b>>2]|0;if((a|0)!=(d|0))c[b>>2]=a+(~((a+-4-d|0)>>>2)<<2);An(d);return}function Gc(a){a=a|0;Qa(a|0)|0;On()}function Hc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;c[b+16>>2]=0;f=b+24|0;c[f>>2]=d;c[f+4>>2]=e;e=b;b=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(b|0));return}function Ic(b,d,e){b=b|0;d=d|0;e=e|0;c[b+16>>2]=-1;c[b+24>>2]=e;e=b;b=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(b|0));return}function Jc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+16>>2]=-2;d=b+24|0;c[d>>2]=e;c[d+4>>2]=f;f=b;b=f+16|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(b|0));return}function Kc(b,d,e){b=b|0;d=d|0;e=e|0;c[b+16>>2]=-3;c[b+24>>2]=e;e=b;b=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(b|0));return}function Lc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+16>>2]=-4;d=b+24|0;c[d>>2]=e;c[d+4>>2]=f;f=b;b=f+16|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(b|0));return}function Mc(b){b=b|0;var c=0;c=b;b=c+24|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function Nc(b,d){b=b|0;d=d|0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=d;d=b;b=d;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;b=d+4|0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function Oc(b){b=b|0;var d=0,e=0,f=0,g=0;d=Tn(64)|0;e=d+24|0;f=d;g=f+24|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));c[e>>2]=b;return d|0}function Pc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=1;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));c[d+24>>2]=b;return d|0}function Qc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=2;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function Rc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=3;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function Sc(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Tn(64)|0;c[e+16>>2]=4;c[e+20>>2]=0;f=e;g=f+16|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));c[e+24>>2]=b;b=e+32|0;c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];return e|0}function Tc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=5;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function Uc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=6;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function Vc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=7;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));c[d+24>>2]=b;return d|0}function Wc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=8;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function Xc(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=9;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));c[d+24>>2]=b;return d|0}function Yc(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=10;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function Zc(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=11;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function _c(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=12;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function $c(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=13;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function ad(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=14;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function bd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Tn(64)|0;c[e+16>>2]=15;c[e+20>>2]=0;f=e;g=f+16|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));c[e+24>>2]=b;c[e+28>>2]=d;return e|0}function cd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=Tn(64)|0;c[g+16>>2]=16;c[g+20>>2]=0;h=g;i=h+16|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(i|0));c[g+24>>2]=b;c[g+28>>2]=d;d=g+32|0;c[d>>2]=e;c[d+4>>2]=f;return g|0}function dd(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=17;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));c[d+24>>2]=b;return d|0}function ed(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=18;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function fd(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=19;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function gd(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=20;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function hd(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=21;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function id(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=22;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function jd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=Tn(64)|0;c[g+16>>2]=23;c[g+20>>2]=0;h=g;i=h+16|0;do{a[h>>0]=0;h=h+1|0}while((h|0)<(i|0));c[g+24>>2]=b;c[g+28>>2]=d;d=g+32|0;c[d>>2]=e;c[d+4>>2]=f;return g|0}function kd(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=24;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));e=d+24|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];c[e+24>>2]=c[b+24>>2];c[e+28>>2]=c[b+28>>2];return d|0}function ld(b){b=b|0;var d=0,e=0,f=0;d=Tn(64)|0;c[d+16>>2]=25;c[d+20>>2]=0;e=d;f=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));c[d+24>>2]=b;return d|0}function md(){var b=0,d=0,e=0;b=Tn(64)|0;c[b+16>>2]=26;c[b+20>>2]=0;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return b|0}function nd(b){b=b|0;var c=0;c=b;b=c+32|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function od(a){a=a|0;var b=0,d=0,e=0,f=0;$h(a);b=c[a+20>>2]|0;d=b;if(b|0){e=a+24|0;f=c[e>>2]|0;if((f|0)!=(b|0))c[e>>2]=f+(~((f+-4-d|0)>>>2)<<2);An(b)}b=c[a+8>>2]|0;if(!b)return;d=a+12|0;a=c[d>>2]|0;if((a|0)!=(b|0))c[d>>2]=a+(~((a+-4-b|0)>>>2)<<2);An(b);return}function pd(a){a=a|0;var b=0,d=0,e=0,f=0;if((c[a+24>>2]|0)==1)$h(a+32|0);b=c[a+52>>2]|0;d=b;if(b|0){e=a+56|0;f=c[e>>2]|0;if((f|0)!=(b|0))c[e>>2]=f+(~((f+-4-d|0)>>>2)<<2);An(b)}b=c[a+40>>2]|0;if(!b)return;d=a+44|0;a=c[d>>2]|0;if((a|0)!=(b|0))c[d>>2]=a+(~((a+-4-b|0)>>>2)<<2);An(b);return}function qd(b){b=b|0;var d=0,e=0,f=0;a[b+8>>0]=0;d=b+100|0;e=b+16|0;f=e+84|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(f|0));g[d>>2]=1.0;d=b+104|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[b+120>>2]=1.0;c[b+124>>2]=0;d=b;b=d;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;b=d+4|0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function rd(a){a=a|0;var b=0,d=0,e=0,f=0;$h(a);b=c[a+124>>2]|0;if(b|0){d=b;do{b=d;d=c[d+20>>2]|0;Ec(b);An(b)}while((d|0)!=0)}d=c[a+112>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+104|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+92>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+84|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+72>>2]|0;if(!d){e=a+8|0;pd(e);return}b=a+76|0;f=c[b>>2]|0;if((f|0)!=(d|0))c[b>>2]=f+(~((f+-4-d|0)>>>2)<<2);An(d);e=a+8|0;pd(e);return}function sd(b){b=b|0;var d=0;c[b+8>>2]=-64;a[b+12>>0]=0;c[b+16>>2]=0;d=b;b=d;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;b=d+4|0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function td(a){a=a|0;var b=0,d=0;$h(a);b=c[a+16>>2]|0;if(!b)return;else d=b;do{b=d;d=c[d+20>>2]|0;Ec(b);An(b)}while((d|0)!=0);return}function ud(b){b=b|0;var c=0;c=b;b=c+32|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function vd(a){a=a|0;$h(a);return}function wd(b){b=b|0;var c=0;c=b;b=c+48|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function xd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;if((c[a+16>>2]|0)==1)$h(a+24|0);b=c[a+32>>2]|0;if(b|0){d=b;do{b=d;d=c[d+20>>2]|0;Ec(b);An(b)}while((d|0)!=0)}d=a+36|0;b=c[d>>2]|0;e=a+40|0;a=c[e>>2]|0;if((b|0)==(a|0))f=b;else{g=b;do{if((c[g+16>>2]|0)==1)$h(g+24|0);g=g+32|0}while((g|0)!=(a|0));f=c[d>>2]|0}if(!f)return;d=c[e>>2]|0;if((d|0)!=(f|0))c[e>>2]=d+(~((d+-32-f|0)>>>5)<<5);An(f);return}function yd(b){b=b|0;var c=0;c=b;b=c+44|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function zd(a){a=a|0;var b=0,d=0;if((c[a+16>>2]|0)==1)$h(a+24|0);b=c[a+32>>2]|0;if(b|0){d=b;do{b=d;d=c[d+20>>2]|0;Ec(b);An(b)}while((d|0)!=0)}d=c[a+36>>2]|0;if(!d)return;Wn(d);return}function Ad(b){b=b|0;var c=0;c=b;b=c+32|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function Bd(a){a=a|0;$h(a);return}function Cd(b){b=b|0;var c=0;c=b;b=c+24|0;do{a[c>>0]=0;c=c+1|0}while((c|0)<(b|0));return}function Dd(a){a=a|0;var b=0,d=0;$h(a);$h(a+8|0);switch(c[a+16>>2]|0){case 0:{b=c[a+20>>2]|0;if(!b)return;rd(b);An(b);return}case 1:{b=c[a+20>>2]|0;if(!b)return;$h(b);An(b);return}case 2:{b=c[a+20>>2]|0;if(!b)return;$h(b);An(b);return}case 3:{b=c[a+20>>2]|0;if(!b)return;$h(b);a=c[b+16>>2]|0;if(a|0){d=a;do{a=d;d=c[d+20>>2]|0;Ec(a);An(a)}while((d|0)!=0)}An(b);return}default:return}}function Ed(b){b=b|0;var c=0,d=0;c=b;d=c;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;a[d+3>>0]=0;d=c+4|0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;a[d+3>>0]=0;d=b+16|0;b=d+32|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(b|0));return}function Fd(a){a=a|0;$h(a);if((c[a+32>>2]|0)!=1)return;$h(a+40|0);return}function Gd(a){a=a|0;var b=0,d=0,e=0,f=0;do switch(c[a+16>>2]|0){case 0:{b=c[a+24>>2]|0;if(!b)return;rd(b);An(b);return}case 1:{b=c[a+24>>2]|0;if(!b)return;$h(b);d=c[b+16>>2]|0;if(d|0){e=d;do{d=e;e=c[e+20>>2]|0;Ec(d);An(d)}while((e|0)!=0)}An(b);return}case 2:{e=c[a+24>>2]|0;if(!e)return;Dd(e);An(e);return}case 3:{e=c[a+24>>2]|0;if(!e)return;$h(e);if((c[e+32>>2]|0)==1)$h(e+40|0);An(e);return}case 4:{e=c[a+24>>2]|0;if(!e)return;od(e);An(e);return}case 5:{e=c[a+24>>2]|0;if(!e)return;$h(e);An(e);return}case 6:{e=c[a+24>>2]|0;if(!e)return;xd(e);An(e);return}case 7:{e=c[a+24>>2]|0;if(!e)return;$h(e);An(e);return}case 8:{e=c[a+24>>2]|0;if(!e)return;if((c[e+16>>2]|0)==1)$h(e+24|0);d=c[e+32>>2]|0;if(d|0){f=d;do{d=f;f=c[f+20>>2]|0;Ec(d);An(d)}while((f|0)!=0)}f=c[e+36>>2]|0;if(f|0)Wn(f);An(e);return}case 9:{if((c[a+40>>2]|0)!=1)return;$h(a+48|0);return}default:return}while(0)}function Hd(b){b=b|0;var d=0;$n(b+24|0,0,152)|0;g[b+176>>2]=1.0;d=b+180|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[b+196>>2]=1.0;d=b+200|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[b+216>>2]=1.0;d=b+220|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[b+236>>2]=1.0;d=b+240|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[b+256>>2]=1.0;d=b+260|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[b+276>>2]=1.0;d=b;b=d+24|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(b|0));return}function Id(a){a=a|0;var b=0,d=0,e=0,f=0;$h(a+16|0);b=c[a+24>>2]|0;if(b|0){d=b;do{b=d;d=c[d+20>>2]|0;Gd(b);An(b)}while((d|0)!=0)}d=c[a+268>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+260|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+248>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+240|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+228>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+220|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+208>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+200|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+188>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+180|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+168>>2]|0;if(d|0){b=d;do{d=b;b=c[b>>2]|0;jn(d+8|0);An(d)}while((b|0)!=0)}b=a+160|0;d=c[b>>2]|0;c[b>>2]=0;if(d|0)An(d);d=c[a+144>>2]|0;b=d;if(d|0){e=a+148|0;f=c[e>>2]|0;if((f|0)!=(d|0))c[e>>2]=f+(~((f+-4-b|0)>>>2)<<2);An(d)}d=c[a+132>>2]|0;b=d;if(d|0){f=a+136|0;e=c[f>>2]|0;if((e|0)!=(d|0))c[f>>2]=e+(~((e+-4-b|0)>>>2)<<2);An(d)}d=c[a+120>>2]|0;b=d;if(d|0){e=a+124|0;f=c[e>>2]|0;if((f|0)!=(d|0))c[e>>2]=f+(~((f+-4-b|0)>>>2)<<2);An(d)}d=c[a+108>>2]|0;b=d;if(d|0){f=a+112|0;e=c[f>>2]|0;if((e|0)!=(d|0))c[f>>2]=e+(~((e+-4-b|0)>>>2)<<2);An(d)}d=c[a+96>>2]|0;b=d;if(d|0){e=a+100|0;f=c[e>>2]|0;if((f|0)!=(d|0))c[e>>2]=f+(~((f+-4-b|0)>>>2)<<2);An(d)}d=c[a+84>>2]|0;b=d;if(d|0){f=a+88|0;e=c[f>>2]|0;if((e|0)!=(d|0))c[f>>2]=e+(~((e+-4-b|0)>>>2)<<2);An(d)}d=c[a+72>>2]|0;b=d;if(d|0){e=a+76|0;f=c[e>>2]|0;if((f|0)!=(d|0))c[e>>2]=f+(~((f+-4-b|0)>>>2)<<2);An(d)}d=c[a+60>>2]|0;b=d;if(d|0){f=a+64|0;e=c[f>>2]|0;if((e|0)!=(d|0))c[f>>2]=e+(~((e+-4-b|0)>>>2)<<2);An(d)}d=c[a+48>>2]|0;if(!d)return;b=a+52|0;a=c[b>>2]|0;if((a|0)!=(d|0))c[b>>2]=a+(~((a+-4-d|0)>>>2)<<2);An(d);return}function Jd(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;return}function Kd(a){a=a|0;var b=0;if(!(c[a>>2]|0)){b=c[a+4>>2]|0;if(!b)return;Id(b);An(b);return}else{$h(a+20|0);b=c[a+28>>2]|0;if(!b)return;Wn(b);return}}function Ld(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function Md(b){b=b|0;var d=0,e=0;c[b+16>>2]=1;d=b;e=d+16|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));d=b+24|0;e=d+40|0;do{a[d>>0]=0;d=d+1|0}while((d|0)<(e|0));return}function Nd(a){a=a|0;var b=0,d=0,e=0,f=0;if((c[a+40>>2]|0)==1)$h(a+48|0);$h(a+56|0);if(c[a+16>>2]|0)return;b=c[a+64>>2]|0;if(!b)return;a=c[b>>2]|0;d=a;if(a|0){e=b+4|0;f=c[e>>2]|0;if((f|0)!=(a|0))c[e>>2]=f+(~((f+-32-d|0)>>>5)<<5);An(a)}An(b);return}function Od(a){a=a|0;c[a>>2]=0;c[a+8>>2]=0;return}function Pd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;do switch(c[a>>2]|0){case 0:{b=c[a+8>>2]|0;if(!b)return;Id(b);An(b);return}case 1:{b=c[a+8>>2]|0;if(!b)return;Nd(b);An(b);return}case 2:{$h(a+8|0);if((c[a+32>>2]|0)!=1)return;$h(a+40|0);return}case 3:{b=c[a+8>>2]|0;if(b|0){if(!(c[b>>2]|0)){d=c[b+4>>2]|0;if(d|0){Id(d);An(d)}}else{$h(b+20|0);d=c[b+28>>2]|0;if(d|0)Wn(d)}An(b)}$h(a+12|0);return}case 5:case 4:{b=c[a+8>>2]|0;if(b|0){if(!(c[b>>2]|0)){d=c[b+4>>2]|0;if(d|0){Id(d);An(d)}}else{$h(b+20|0);d=c[b+28>>2]|0;if(d|0)Wn(d)}An(b)}$h(a+12|0);return}case 6:{b=c[a+8>>2]|0;if(b|0){if(!(c[b>>2]|0)){d=c[b+4>>2]|0;if(d|0){Id(d);An(d)}}else{$h(b+20|0);d=c[b+28>>2]|0;if(d|0)Wn(d)}An(b)}$h(a+12|0);return}case 7:{b=c[a+8>>2]|0;if(b|0){if(!(c[b>>2]|0)){d=c[b+4>>2]|0;if(d|0){Id(d);An(d)}}else{$h(b+20|0);d=c[b+28>>2]|0;if(d|0)Wn(d)}An(b)}$h(a+12|0);return}case 8:{b=c[a+8>>2]|0;if(b|0){Nd(b);An(b)}b=c[a+12>>2]|0;if(!b)return;d=c[b>>2]|0;e=d;if(d|0){f=b+4|0;g=c[f>>2]|0;if((g|0)!=(d|0))c[f>>2]=g+(~((g+-32-e|0)>>>5)<<5);An(d)}An(b);return}case 9:{b=c[a+8>>2]|0;if(!b)return;Nd(b);An(b);return}case 10:{b=c[a+8>>2]|0;if(!b)return;Nd(b);An(b);return}case 12:case 11:{b=c[a+8>>2]|0;if(b|0){Nd(b);An(b)}$h(a+12|0);return}default:return}while(0)}function Qd(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;g[a+28>>2]=1.0;return}function Rd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=0;return d|0}else e=a;while(1){if((Sd(e,b)|0)==1){d=1;f=4;break}e=c[e+20>>2]|0;if(!e){d=0;f=4;break}}if((f|0)==4)return d|0;return 0}function Sd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;do switch(c[a+16>>2]|0){case 0:{d=c[b+4>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 1:{d=c[b+8>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}d=c[(c[a+24>>2]|0)+20>>2]|0;a:do if(d|0){f=d;while(1){if((Sd(f,b)|0)==1){e=1;break}f=c[f+20>>2]|0;if(!f)break a}return e|0}while(0);d=c[b+12>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 2:{d=c[b+16>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 3:{d=c[b+20>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 4:{d=c[b+24>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 5:{d=c[b+28>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 6:{d=c[b+32>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 7:{d=c[b+36>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 8:{d=c[b+40>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 9:{d=c[b+44>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 10:{d=c[b+48>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 11:{d=c[b+52>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 12:{d=c[b+56>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 13:{d=c[b+60>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 14:{d=c[b+64>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 15:{d=c[b+68>>2]|0;if(d|0?(ub[d&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}d=a+24|0;f=c[(c[d>>2]|0)+20>>2]|0;b:do if(f|0){g=f;while(1){if((Sd(g,b)|0)==1){e=1;break}g=c[g+20>>2]|0;if(!g)break b}return e|0}while(0);f=c[b+72>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}f=c[d+4>>2]|0;c:do if(f|0){g=f;while(1){if((Sd(g,b)|0)==1){e=1;break}g=c[g+20>>2]|0;if(!g)break c}return e|0}while(0);f=c[b+76>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 16:{f=c[b+80>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 17:{f=c[b+84>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}f=c[(c[a+24>>2]|0)+20>>2]|0;d:do if(f|0){d=f;while(1){if((Sd(d,b)|0)==1){e=1;break}d=c[d+20>>2]|0;if(!d)break d}return e|0}while(0);f=c[b+88>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 18:{f=c[b+92>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 19:{f=c[b+96>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 20:{f=c[b+100>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 21:{f=c[b+104>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 22:{f=c[b+108>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 23:{f=c[b+112>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 24:{f=c[b+116>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 25:{f=c[b+120>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}case 26:{f=c[b+124>>2]|0;if(f|0?(ub[f&255](a,c[b>>2]|0)|0)==1:0){e=1;return e|0}break}default:{}}while(0);e=0;return e|0}function Td(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a+124>>2]|0;if(!d){e=0;return e|0}else f=d;while(1){if((Sd(f,b)|0)==1){e=1;g=4;break}f=c[f+20>>2]|0;if(!f){e=0;g=4;break}}if((g|0)==4)return e|0;return 0}

// EMSCRIPTEN_END_FUNCS
var jb=[kr,kr,to,kr,uo,kr,vo,kr,wo,kr,xo,kr,yo,kr,zo,kr,Ao,kr,Bo,kr,Co,kr,hf,kf,Rj,Tj,kr,kr,kr,kr,kr,kr];var kb=[lr,lr,Eo,lr,Fo,lr,Go,lr,Ho,lr,Io,lr,Jo,lr,Ko,lr,Lo,lr,Mo,lr,No,lr,ae,Ye,Ze,of,wf,Vf,Wf,Yf,Zf,ag,pg,ug,vg,xg,Lg,Og,Pg,Vg,ch,fh,mh,oh,ph,Gj,Hj,Xj,dk,Bk,Ck,Ek,Fk,Hk,Vk,_k,$k,bl,pl,sl,tl,yl,Hl,Kl,Rl,Tl,Ul,am,$l,bm,fm,Dn,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr,lr];var lb=[mr,mr,Po,mr,Qo,mr,Ro,mr,So,mr,To,mr,Uo,mr,Vo,mr,Wo,mr,Xo,mr,Yo,mr,Mn,Hn,mr,mr,mr,mr,mr,mr,mr,mr];var mb=[nr,nr,_o,nr,$o,nr,ap,nr,bp,nr,cp,nr,dp,nr,ep,nr,fp,nr,gp,nr,hp,nr,cc,dc,_d,$d,Se,Te,Uh,Vh,oi,pi,Aj,Bj,xn,Kn,Bn,Cn,zn,Pn,Rn,uj,An,cm,vn,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr];var nb=[or,or,jp,or,kp,or,lp,or,mp,or,np,or,op,or,pp,or,qp,or,rp,or,sp,or,Ve,Dj,xe,or,or,or,or,or,or,or];var ob=[pr,pr,up,pr,vp,pr,wp,pr,xp,pr,yp,pr,zp,pr,Ap,pr,Bp,pr,Cp,pr,Dp,pr,bf,gf,jf,Lj,Qj,Sj,pr,pr,pr,pr];var pb=[qr,qr,Fp,qr,Gp,qr,Hp,qr,Ip,qr,Jp,qr,Kp,qr,Lp,qr,Mp,qr,Np,qr,Op,qr,fc,Xe,_e,cf,lf,pf,tf,xf,Ef,If,Lf,Tf,jg,kg,lg,mg,ng,sg,yg,zg,Ag,Gg,Ig,Sg,_g,hh,lh,Xh,Fj,Ij,Mj,Uj,Yj,ak,ek,lk,pk,sk,zk,Pk,Qk,Rk,Sk,Tk,Yk,cl,dl,el,kl,ml,vl,Dl,Ml,Ql,Xl,Sn,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr];var qb=[rr,rr,Qp,rr,Rp,rr,Sp,rr,Tp,rr,Up,rr,Vp,rr,Wp,rr,Xp,rr,Yp,rr,Zp,rr,De,Sh,Wl,tj,rr,rr,rr,rr,rr,rr];var rb=[sr,sr,$p,sr,aq,sr,bq,sr,cq,sr,dq,sr,eq,sr,fq,sr,gq,sr,hq,sr,iq,sr,sn,un,sr,sr,sr,sr,sr,sr,sr,sr];var sb=[tr,tr,kq,tr,lq,tr,mq,tr,nq,tr,oq,tr,pq,tr,qq,tr,rq,tr,sq,tr,tq,tr,ff,sf,Af,Rf,dg,wg,Dg,Yg,ah,dh,gh,jh,nh,qh,qi,si,Pj,$j,hk,xk,Kk,al,hl,Bl,Fl,Il,Ll,Ol,Sl,Vl,tr,tr,tr,tr,tr,tr,tr,tr,tr,tr,tr,tr];var tb=[ur,ur,vq,ur,wq,ur,xq,ur,yq,ur,zq,ur,Aq,ur,Bq,ur,Cq,ur,Dq,ur,Eq,ur,Ln,Fn,ur,ur,ur,ur,ur,ur,ur,ur];var ub=[vr,vr,Gq,vr,Hq,vr,Iq,vr,Jq,vr,Kq,vr,Lq,vr,Mq,vr,Nq,vr,Oq,vr,Pq,vr,Ue,We,$e,af,df,ef,mf,nf,qf,rf,uf,vf,yf,zf,Bf,Cf,Df,Ff,Gf,Jf,Kf,Mf,Nf,Of,Qf,Sf,Uf,Xf,_f,bg,cg,fg,gg,hg,ig,og,qg,rg,tg,Bg,Cg,Eg,Fg,Hg,Jg,Kg,Mg,Ng,Rg,Tg,Ug,Wg,Xg,Zg,$g,bh,eh,ih,Cj,Ej,Jj,Kj,Nj,Oj,Vj,Wj,Zj,_j,bk,ck,fk,gk,ik,jk,kk,mk,nk,qk,rk,tk,uk,vk,wk,yk,Ak,Dk,Gk,Ik,Jk,Lk,Mk,Nk,Ok,Uk,Wk,Xk,Zk,fl,gl,il,jl,ll,nl,ol,ql,rl,ul,wl,xl,zl,Al,Cl,El,Gl,Jl,Nl,zh,Bh,Ch,Dh,Eh,Gh,Hh,Ih,Jh,Kh,Lh,Mh,Nh,Oh,Ph,Qh,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr];var vb=[wr,wr,Rq,wr,Sq,wr,Tq,wr,Uq,wr,Vq,wr,Wq,wr,Xq,wr,Yq,wr,Zq,wr,_q,wr,ec,Hf,kh,Wh,ok,Pl,wr,wr,wr,wr];var wb=[xr,xr,ar,xr,br,xr,cr,xr,dr,xr,er,xr,fr,xr,gr,xr,hr,xr,ir,xr,jr,xr,Nn,In,xr,xr,xr,xr,xr,xr,xr,xr];return{_wabt_parse_wast_result_get_result:Sb,_wabt_destroy_script:Lb,_memset:$n,_bitshift64Lshr:eo,_wabt_output_buffer_get_size:_b,_wabt_source_error_handler_buffer_get_data:Pb,_wabt_write_binary_module_result_release_binary_output_buffer:Wb,_bitshift64Shl:ao,_wabt_new_source_error_handler_buffer:Ob,_wabt_write_binary_module_result_get_result:Vb,_wabt_write_binary_module:Kb,___cxa_is_pointer_type:Yn,_llvm_ctlz_i64:jo,_bitshift64Ashr:co,_wabt_validate_script:Jb,_wabt_destroy_source_error_handler_buffer:Rb,_memcpy:ho,_wabt_resolve_names_script:Ib,_wabt_new_wast_buffer_lexer:Gb,_i64Subtract:_n,_realloc:cn,_i64Add:go,_wabt_destroy_parse_wast_result:Ub,_saveSetjmp:bo,_wabt_destroy_wast_lexer:Nb,_wabt_write_binary_module_result_release_log_output_buffer:Xb,___errno_location:Zl,_testSetjmp:fo,___cxa_can_catch:Xn,_wabt_destroy_write_binary_module_result:Yb,_free:bn,_wabt_output_buffer_get_data:Zb,_memmove:io,_wabt_parse_wast_result_release_script:Tb,_malloc:an,_wabt_destroy_output_buffer:$b,_wabt_source_error_handler_buffer_get_size:Qb,_wabt_parse_wast:Hb,runPostSets:Zn,stackAlloc:xb,stackSave:yb,stackRestore:zb,establishStackSpace:Ab,setThrew:Bb,setTempRet0:Eb,getTempRet0:Fb,dynCall_iiiiiiii:so,dynCall_iiii:Do,dynCall_viiiii:Oo,dynCall_vi:Zo,dynCall_vii:ip,dynCall_iiiiiii:tp,dynCall_ii:Ep,dynCall_viii:Pp,dynCall_v:_p,dynCall_iiiii:jq,dynCall_viiiiii:uq,dynCall_iii:Fq,dynCall_iiiiii:Qq,dynCall_viiii:$q}})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _wabt_parse_wast_result_get_result=Module["_wabt_parse_wast_result_get_result"]=asm["_wabt_parse_wast_result_get_result"];var _wabt_destroy_script=Module["_wabt_destroy_script"]=asm["_wabt_destroy_script"];var _wabt_validate_script=Module["_wabt_validate_script"]=asm["_wabt_validate_script"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _wabt_output_buffer_get_size=Module["_wabt_output_buffer_get_size"]=asm["_wabt_output_buffer_get_size"];var _wabt_source_error_handler_buffer_get_data=Module["_wabt_source_error_handler_buffer_get_data"]=asm["_wabt_source_error_handler_buffer_get_data"];var _wabt_write_binary_module_result_release_binary_output_buffer=Module["_wabt_write_binary_module_result_release_binary_output_buffer"]=asm["_wabt_write_binary_module_result_release_binary_output_buffer"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _wabt_new_source_error_handler_buffer=Module["_wabt_new_source_error_handler_buffer"]=asm["_wabt_new_source_error_handler_buffer"];var _wabt_write_binary_module_result_get_result=Module["_wabt_write_binary_module_result_get_result"]=asm["_wabt_write_binary_module_result_get_result"];var _wabt_write_binary_module=Module["_wabt_write_binary_module"]=asm["_wabt_write_binary_module"];var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=asm["___cxa_is_pointer_type"];var _llvm_ctlz_i64=Module["_llvm_ctlz_i64"]=asm["_llvm_ctlz_i64"];var _bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"];var _memset=Module["_memset"]=asm["_memset"];var _wabt_destroy_source_error_handler_buffer=Module["_wabt_destroy_source_error_handler_buffer"]=asm["_wabt_destroy_source_error_handler_buffer"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _wabt_resolve_names_script=Module["_wabt_resolve_names_script"]=asm["_wabt_resolve_names_script"];var _wabt_new_wast_buffer_lexer=Module["_wabt_new_wast_buffer_lexer"]=asm["_wabt_new_wast_buffer_lexer"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _realloc=Module["_realloc"]=asm["_realloc"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _wabt_destroy_parse_wast_result=Module["_wabt_destroy_parse_wast_result"]=asm["_wabt_destroy_parse_wast_result"];var ___cxa_can_catch=Module["___cxa_can_catch"]=asm["___cxa_can_catch"];var _wabt_destroy_wast_lexer=Module["_wabt_destroy_wast_lexer"]=asm["_wabt_destroy_wast_lexer"];var _wabt_write_binary_module_result_release_log_output_buffer=Module["_wabt_write_binary_module_result_release_log_output_buffer"]=asm["_wabt_write_binary_module_result_release_log_output_buffer"];var ___errno_location=Module["___errno_location"]=asm["___errno_location"];var _testSetjmp=Module["_testSetjmp"]=asm["_testSetjmp"];var _saveSetjmp=Module["_saveSetjmp"]=asm["_saveSetjmp"];var _wabt_destroy_write_binary_module_result=Module["_wabt_destroy_write_binary_module_result"]=asm["_wabt_destroy_write_binary_module_result"];var _free=Module["_free"]=asm["_free"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var _wabt_output_buffer_get_data=Module["_wabt_output_buffer_get_data"]=asm["_wabt_output_buffer_get_data"];var _memmove=Module["_memmove"]=asm["_memmove"];var _wabt_parse_wast_result_release_script=Module["_wabt_parse_wast_result_release_script"]=asm["_wabt_parse_wast_result_release_script"];var _malloc=Module["_malloc"]=asm["_malloc"];var _wabt_destroy_output_buffer=Module["_wabt_destroy_output_buffer"]=asm["_wabt_destroy_output_buffer"];var _wabt_source_error_handler_buffer_get_size=Module["_wabt_source_error_handler_buffer_get_size"]=asm["_wabt_source_error_handler_buffer_get_size"];var _wabt_parse_wast=Module["_wabt_parse_wast"]=asm["_wabt_parse_wast"];var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=asm["dynCall_iiiiiiii"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_viiiii=Module["dynCall_viiiii"]=asm["dynCall_viiiii"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];var dynCall_vii=Module["dynCall_vii"]=asm["dynCall_vii"];var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=asm["dynCall_iiiiiii"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_viii=Module["dynCall_viii"]=asm["dynCall_viii"];var dynCall_v=Module["dynCall_v"]=asm["dynCall_v"];var dynCall_iiiii=Module["dynCall_iiiii"]=asm["dynCall_iiiii"];var dynCall_viiiiii=Module["dynCall_viiiiii"]=asm["dynCall_viiiiii"];var dynCall_iii=Module["dynCall_iii"]=asm["dynCall_iii"];var dynCall_iiiiii=Module["dynCall_iiiiii"]=asm["dynCall_iiiiii"];var dynCall_viiii=Module["dynCall_viiii"]=asm["dynCall_viiii"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.establishStackSpace=asm["establishStackSpace"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}Module["noExitRuntime"]=true;run()





module.exports = { wasm: wabt, Module: Module }

}).call(this,require('_process'),"/node_modules/wast2wasm/src")
},{"_process":101,"fs":25,"path":99}],144:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../index");
var NO = {};
var SampleCombineListener = /** @class */ (function () {
    function SampleCombineListener(i, p) {
        this.i = i;
        this.p = p;
        p.ils[i] = this;
    }
    SampleCombineListener.prototype._n = function (t) {
        var p = this.p;
        if (p.out === NO)
            return;
        p.up(t, this.i);
    };
    SampleCombineListener.prototype._e = function (err) {
        this.p._e(err);
    };
    SampleCombineListener.prototype._c = function () {
        this.p.down(this.i, this);
    };
    return SampleCombineListener;
}());
exports.SampleCombineListener = SampleCombineListener;
var SampleCombineOperator = /** @class */ (function () {
    function SampleCombineOperator(ins, streams) {
        this.type = 'sampleCombine';
        this.ins = ins;
        this.others = streams;
        this.out = NO;
        this.ils = [];
        this.Nn = 0;
        this.vals = [];
    }
    SampleCombineOperator.prototype._start = function (out) {
        this.out = out;
        var s = this.others;
        var n = this.Nn = s.length;
        var vals = this.vals = new Array(n);
        for (var i = 0; i < n; i++) {
            vals[i] = NO;
            s[i]._add(new SampleCombineListener(i, this));
        }
        this.ins._add(this);
    };
    SampleCombineOperator.prototype._stop = function () {
        var s = this.others;
        var n = s.length;
        var ils = this.ils;
        this.ins._remove(this);
        for (var i = 0; i < n; i++) {
            s[i]._remove(ils[i]);
        }
        this.out = NO;
        this.vals = [];
        this.ils = [];
    };
    SampleCombineOperator.prototype._n = function (t) {
        var out = this.out;
        if (out === NO)
            return;
        if (this.Nn > 0)
            return;
        out._n([t].concat(this.vals));
    };
    SampleCombineOperator.prototype._e = function (err) {
        var out = this.out;
        if (out === NO)
            return;
        out._e(err);
    };
    SampleCombineOperator.prototype._c = function () {
        var out = this.out;
        if (out === NO)
            return;
        out._c();
    };
    SampleCombineOperator.prototype.up = function (t, i) {
        var v = this.vals[i];
        if (this.Nn > 0 && v === NO) {
            this.Nn--;
        }
        this.vals[i] = t;
    };
    SampleCombineOperator.prototype.down = function (i, l) {
        this.others[i]._remove(l);
    };
    return SampleCombineOperator;
}());
exports.SampleCombineOperator = SampleCombineOperator;
var sampleCombine;
/**
 *
 * Combines a source stream with multiple other streams. The result stream
 * will emit the latest events from all input streams, but only when the
 * source stream emits.
 *
 * If the source, or any input stream, throws an error, the result stream
 * will propagate the error. If any input streams end, their final emitted
 * value will remain in the array of any subsequent events from the result
 * stream.
 *
 * The result stream will only complete upon completion of the source stream.
 *
 * Marble diagram:
 *
 * ```text
 * --1----2-----3--------4--- (source)
 * ----a-----b-----c--d------ (other)
 *      sampleCombine
 * -------2a----3b-------4d--
 * ```
 *
 * Examples:
 *
 * ```js
 * import sampleCombine from 'xstream/extra/sampleCombine'
 * import xs from 'xstream'
 *
 * const sampler = xs.periodic(1000).take(3)
 * const other = xs.periodic(100)
 *
 * const stream = sampler.compose(sampleCombine(other))
 *
 * stream.addListener({
 *   next: i => console.log(i),
 *   error: err => console.error(err),
 *   complete: () => console.log('completed')
 * })
 * ```
 *
 * ```text
 * > [0, 8]
 * > [1, 18]
 * > [2, 28]
 * ```
 *
 * ```js
 * import sampleCombine from 'xstream/extra/sampleCombine'
 * import xs from 'xstream'
 *
 * const sampler = xs.periodic(1000).take(3)
 * const other = xs.periodic(100).take(2)
 *
 * const stream = sampler.compose(sampleCombine(other))
 *
 * stream.addListener({
 *   next: i => console.log(i),
 *   error: err => console.error(err),
 *   complete: () => console.log('completed')
 * })
 * ```
 *
 * ```text
 * > [0, 1]
 * > [1, 1]
 * > [2, 1]
 * ```
 *
 * @param {...Stream} streams One or more streams to combine with the sampler
 * stream.
 * @return {Stream}
 */
sampleCombine = function sampleCombine() {
    var streams = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        streams[_i] = arguments[_i];
    }
    return function sampleCombineOperator(sampler) {
        return new index_1.Stream(new SampleCombineOperator(sampler, streams));
    };
};
exports.default = sampleCombine;

},{"../index":145}],145:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var symbol_observable_1 = require("symbol-observable");
var NO = {};
exports.NO = NO;
function noop() { }
function cp(a) {
    var l = a.length;
    var b = Array(l);
    for (var i = 0; i < l; ++i)
        b[i] = a[i];
    return b;
}
function and(f1, f2) {
    return function andFn(t) {
        return f1(t) && f2(t);
    };
}
function _try(c, t, u) {
    try {
        return c.f(t);
    }
    catch (e) {
        u._e(e);
        return NO;
    }
}
var NO_IL = {
    _n: noop,
    _e: noop,
    _c: noop,
};
exports.NO_IL = NO_IL;
// mutates the input
function internalizeProducer(producer) {
    producer._start = function _start(il) {
        il.next = il._n;
        il.error = il._e;
        il.complete = il._c;
        this.start(il);
    };
    producer._stop = producer.stop;
}
var StreamSub = /** @class */ (function () {
    function StreamSub(_stream, _listener) {
        this._stream = _stream;
        this._listener = _listener;
    }
    StreamSub.prototype.unsubscribe = function () {
        this._stream.removeListener(this._listener);
    };
    return StreamSub;
}());
var Observer = /** @class */ (function () {
    function Observer(_listener) {
        this._listener = _listener;
    }
    Observer.prototype.next = function (value) {
        this._listener._n(value);
    };
    Observer.prototype.error = function (err) {
        this._listener._e(err);
    };
    Observer.prototype.complete = function () {
        this._listener._c();
    };
    return Observer;
}());
var FromObservable = /** @class */ (function () {
    function FromObservable(observable) {
        this.type = 'fromObservable';
        this.ins = observable;
        this.active = false;
    }
    FromObservable.prototype._start = function (out) {
        this.out = out;
        this.active = true;
        this._sub = this.ins.subscribe(new Observer(out));
        if (!this.active)
            this._sub.unsubscribe();
    };
    FromObservable.prototype._stop = function () {
        if (this._sub)
            this._sub.unsubscribe();
        this.active = false;
    };
    return FromObservable;
}());
var Merge = /** @class */ (function () {
    function Merge(insArr) {
        this.type = 'merge';
        this.insArr = insArr;
        this.out = NO;
        this.ac = 0;
    }
    Merge.prototype._start = function (out) {
        this.out = out;
        var s = this.insArr;
        var L = s.length;
        this.ac = L;
        for (var i = 0; i < L; i++)
            s[i]._add(this);
    };
    Merge.prototype._stop = function () {
        var s = this.insArr;
        var L = s.length;
        for (var i = 0; i < L; i++)
            s[i]._remove(this);
        this.out = NO;
    };
    Merge.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        u._n(t);
    };
    Merge.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Merge.prototype._c = function () {
        if (--this.ac <= 0) {
            var u = this.out;
            if (u === NO)
                return;
            u._c();
        }
    };
    return Merge;
}());
var CombineListener = /** @class */ (function () {
    function CombineListener(i, out, p) {
        this.i = i;
        this.out = out;
        this.p = p;
        p.ils.push(this);
    }
    CombineListener.prototype._n = function (t) {
        var p = this.p, out = this.out;
        if (out === NO)
            return;
        if (p.up(t, this.i)) {
            var a = p.vals;
            var l = a.length;
            var b = Array(l);
            for (var i = 0; i < l; ++i)
                b[i] = a[i];
            out._n(b);
        }
    };
    CombineListener.prototype._e = function (err) {
        var out = this.out;
        if (out === NO)
            return;
        out._e(err);
    };
    CombineListener.prototype._c = function () {
        var p = this.p;
        if (p.out === NO)
            return;
        if (--p.Nc === 0)
            p.out._c();
    };
    return CombineListener;
}());
var Combine = /** @class */ (function () {
    function Combine(insArr) {
        this.type = 'combine';
        this.insArr = insArr;
        this.out = NO;
        this.ils = [];
        this.Nc = this.Nn = 0;
        this.vals = [];
    }
    Combine.prototype.up = function (t, i) {
        var v = this.vals[i];
        var Nn = !this.Nn ? 0 : v === NO ? --this.Nn : this.Nn;
        this.vals[i] = t;
        return Nn === 0;
    };
    Combine.prototype._start = function (out) {
        this.out = out;
        var s = this.insArr;
        var n = this.Nc = this.Nn = s.length;
        var vals = this.vals = new Array(n);
        if (n === 0) {
            out._n([]);
            out._c();
        }
        else {
            for (var i = 0; i < n; i++) {
                vals[i] = NO;
                s[i]._add(new CombineListener(i, out, this));
            }
        }
    };
    Combine.prototype._stop = function () {
        var s = this.insArr;
        var n = s.length;
        var ils = this.ils;
        for (var i = 0; i < n; i++)
            s[i]._remove(ils[i]);
        this.out = NO;
        this.ils = [];
        this.vals = [];
    };
    return Combine;
}());
var FromArray = /** @class */ (function () {
    function FromArray(a) {
        this.type = 'fromArray';
        this.a = a;
    }
    FromArray.prototype._start = function (out) {
        var a = this.a;
        for (var i = 0, n = a.length; i < n; i++)
            out._n(a[i]);
        out._c();
    };
    FromArray.prototype._stop = function () {
    };
    return FromArray;
}());
var FromPromise = /** @class */ (function () {
    function FromPromise(p) {
        this.type = 'fromPromise';
        this.on = false;
        this.p = p;
    }
    FromPromise.prototype._start = function (out) {
        var prod = this;
        this.on = true;
        this.p.then(function (v) {
            if (prod.on) {
                out._n(v);
                out._c();
            }
        }, function (e) {
            out._e(e);
        }).then(noop, function (err) {
            setTimeout(function () { throw err; });
        });
    };
    FromPromise.prototype._stop = function () {
        this.on = false;
    };
    return FromPromise;
}());
var Periodic = /** @class */ (function () {
    function Periodic(period) {
        this.type = 'periodic';
        this.period = period;
        this.intervalID = -1;
        this.i = 0;
    }
    Periodic.prototype._start = function (out) {
        var self = this;
        function intervalHandler() { out._n(self.i++); }
        this.intervalID = setInterval(intervalHandler, this.period);
    };
    Periodic.prototype._stop = function () {
        if (this.intervalID !== -1)
            clearInterval(this.intervalID);
        this.intervalID = -1;
        this.i = 0;
    };
    return Periodic;
}());
var Debug = /** @class */ (function () {
    function Debug(ins, arg) {
        this.type = 'debug';
        this.ins = ins;
        this.out = NO;
        this.s = noop;
        this.l = '';
        if (typeof arg === 'string')
            this.l = arg;
        else if (typeof arg === 'function')
            this.s = arg;
    }
    Debug.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    Debug.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    Debug.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        var s = this.s, l = this.l;
        if (s !== noop) {
            try {
                s(t);
            }
            catch (e) {
                u._e(e);
            }
        }
        else if (l)
            console.log(l + ':', t);
        else
            console.log(t);
        u._n(t);
    };
    Debug.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Debug.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return Debug;
}());
var Drop = /** @class */ (function () {
    function Drop(max, ins) {
        this.type = 'drop';
        this.ins = ins;
        this.out = NO;
        this.max = max;
        this.dropped = 0;
    }
    Drop.prototype._start = function (out) {
        this.out = out;
        this.dropped = 0;
        this.ins._add(this);
    };
    Drop.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    Drop.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        if (this.dropped++ >= this.max)
            u._n(t);
    };
    Drop.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Drop.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return Drop;
}());
var EndWhenListener = /** @class */ (function () {
    function EndWhenListener(out, op) {
        this.out = out;
        this.op = op;
    }
    EndWhenListener.prototype._n = function () {
        this.op.end();
    };
    EndWhenListener.prototype._e = function (err) {
        this.out._e(err);
    };
    EndWhenListener.prototype._c = function () {
        this.op.end();
    };
    return EndWhenListener;
}());
var EndWhen = /** @class */ (function () {
    function EndWhen(o, ins) {
        this.type = 'endWhen';
        this.ins = ins;
        this.out = NO;
        this.o = o;
        this.oil = NO_IL;
    }
    EndWhen.prototype._start = function (out) {
        this.out = out;
        this.o._add(this.oil = new EndWhenListener(out, this));
        this.ins._add(this);
    };
    EndWhen.prototype._stop = function () {
        this.ins._remove(this);
        this.o._remove(this.oil);
        this.out = NO;
        this.oil = NO_IL;
    };
    EndWhen.prototype.end = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    EndWhen.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        u._n(t);
    };
    EndWhen.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    EndWhen.prototype._c = function () {
        this.end();
    };
    return EndWhen;
}());
var Filter = /** @class */ (function () {
    function Filter(passes, ins) {
        this.type = 'filter';
        this.ins = ins;
        this.out = NO;
        this.f = passes;
    }
    Filter.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    Filter.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    Filter.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        var r = _try(this, t, u);
        if (r === NO || !r)
            return;
        u._n(t);
    };
    Filter.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Filter.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return Filter;
}());
var FlattenListener = /** @class */ (function () {
    function FlattenListener(out, op) {
        this.out = out;
        this.op = op;
    }
    FlattenListener.prototype._n = function (t) {
        this.out._n(t);
    };
    FlattenListener.prototype._e = function (err) {
        this.out._e(err);
    };
    FlattenListener.prototype._c = function () {
        this.op.inner = NO;
        this.op.less();
    };
    return FlattenListener;
}());
var Flatten = /** @class */ (function () {
    function Flatten(ins) {
        this.type = 'flatten';
        this.ins = ins;
        this.out = NO;
        this.open = true;
        this.inner = NO;
        this.il = NO_IL;
    }
    Flatten.prototype._start = function (out) {
        this.out = out;
        this.open = true;
        this.inner = NO;
        this.il = NO_IL;
        this.ins._add(this);
    };
    Flatten.prototype._stop = function () {
        this.ins._remove(this);
        if (this.inner !== NO)
            this.inner._remove(this.il);
        this.out = NO;
        this.open = true;
        this.inner = NO;
        this.il = NO_IL;
    };
    Flatten.prototype.less = function () {
        var u = this.out;
        if (u === NO)
            return;
        if (!this.open && this.inner === NO)
            u._c();
    };
    Flatten.prototype._n = function (s) {
        var u = this.out;
        if (u === NO)
            return;
        var _a = this, inner = _a.inner, il = _a.il;
        if (inner !== NO && il !== NO_IL)
            inner._remove(il);
        (this.inner = s)._add(this.il = new FlattenListener(u, this));
    };
    Flatten.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Flatten.prototype._c = function () {
        this.open = false;
        this.less();
    };
    return Flatten;
}());
var Fold = /** @class */ (function () {
    function Fold(f, seed, ins) {
        var _this = this;
        this.type = 'fold';
        this.ins = ins;
        this.out = NO;
        this.f = function (t) { return f(_this.acc, t); };
        this.acc = this.seed = seed;
    }
    Fold.prototype._start = function (out) {
        this.out = out;
        this.acc = this.seed;
        out._n(this.acc);
        this.ins._add(this);
    };
    Fold.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
        this.acc = this.seed;
    };
    Fold.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        var r = _try(this, t, u);
        if (r === NO)
            return;
        u._n(this.acc = r);
    };
    Fold.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Fold.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return Fold;
}());
var Last = /** @class */ (function () {
    function Last(ins) {
        this.type = 'last';
        this.ins = ins;
        this.out = NO;
        this.has = false;
        this.val = NO;
    }
    Last.prototype._start = function (out) {
        this.out = out;
        this.has = false;
        this.ins._add(this);
    };
    Last.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
        this.val = NO;
    };
    Last.prototype._n = function (t) {
        this.has = true;
        this.val = t;
    };
    Last.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Last.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        if (this.has) {
            u._n(this.val);
            u._c();
        }
        else
            u._e(new Error('last() failed because input stream completed'));
    };
    return Last;
}());
var MapOp = /** @class */ (function () {
    function MapOp(project, ins) {
        this.type = 'map';
        this.ins = ins;
        this.out = NO;
        this.f = project;
    }
    MapOp.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    MapOp.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    MapOp.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        var r = _try(this, t, u);
        if (r === NO)
            return;
        u._n(r);
    };
    MapOp.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    MapOp.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return MapOp;
}());
var Remember = /** @class */ (function () {
    function Remember(ins) {
        this.type = 'remember';
        this.ins = ins;
        this.out = NO;
    }
    Remember.prototype._start = function (out) {
        this.out = out;
        this.ins._add(out);
    };
    Remember.prototype._stop = function () {
        this.ins._remove(this.out);
        this.out = NO;
    };
    return Remember;
}());
var ReplaceError = /** @class */ (function () {
    function ReplaceError(replacer, ins) {
        this.type = 'replaceError';
        this.ins = ins;
        this.out = NO;
        this.f = replacer;
    }
    ReplaceError.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    ReplaceError.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    ReplaceError.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        u._n(t);
    };
    ReplaceError.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        try {
            this.ins._remove(this);
            (this.ins = this.f(err))._add(this);
        }
        catch (e) {
            u._e(e);
        }
    };
    ReplaceError.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return ReplaceError;
}());
var StartWith = /** @class */ (function () {
    function StartWith(ins, val) {
        this.type = 'startWith';
        this.ins = ins;
        this.out = NO;
        this.val = val;
    }
    StartWith.prototype._start = function (out) {
        this.out = out;
        this.out._n(this.val);
        this.ins._add(out);
    };
    StartWith.prototype._stop = function () {
        this.ins._remove(this.out);
        this.out = NO;
    };
    return StartWith;
}());
var Take = /** @class */ (function () {
    function Take(max, ins) {
        this.type = 'take';
        this.ins = ins;
        this.out = NO;
        this.max = max;
        this.taken = 0;
    }
    Take.prototype._start = function (out) {
        this.out = out;
        this.taken = 0;
        if (this.max <= 0)
            out._c();
        else
            this.ins._add(this);
    };
    Take.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    Take.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        var m = ++this.taken;
        if (m < this.max)
            u._n(t);
        else if (m === this.max) {
            u._n(t);
            u._c();
        }
    };
    Take.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    Take.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return Take;
}());
var Stream = /** @class */ (function () {
    function Stream(producer) {
        this._prod = producer || NO;
        this._ils = [];
        this._stopID = NO;
        this._dl = NO;
        this._d = false;
        this._target = NO;
        this._err = NO;
    }
    Stream.prototype._n = function (t) {
        var a = this._ils;
        var L = a.length;
        if (this._d)
            this._dl._n(t);
        if (L == 1)
            a[0]._n(t);
        else if (L == 0)
            return;
        else {
            var b = cp(a);
            for (var i = 0; i < L; i++)
                b[i]._n(t);
        }
    };
    Stream.prototype._e = function (err) {
        if (this._err !== NO)
            return;
        this._err = err;
        var a = this._ils;
        var L = a.length;
        this._x();
        if (this._d)
            this._dl._e(err);
        if (L == 1)
            a[0]._e(err);
        else if (L == 0)
            return;
        else {
            var b = cp(a);
            for (var i = 0; i < L; i++)
                b[i]._e(err);
        }
        if (!this._d && L == 0)
            throw this._err;
    };
    Stream.prototype._c = function () {
        var a = this._ils;
        var L = a.length;
        this._x();
        if (this._d)
            this._dl._c();
        if (L == 1)
            a[0]._c();
        else if (L == 0)
            return;
        else {
            var b = cp(a);
            for (var i = 0; i < L; i++)
                b[i]._c();
        }
    };
    Stream.prototype._x = function () {
        if (this._ils.length === 0)
            return;
        if (this._prod !== NO)
            this._prod._stop();
        this._err = NO;
        this._ils = [];
    };
    Stream.prototype._stopNow = function () {
        // WARNING: code that calls this method should
        // first check if this._prod is valid (not `NO`)
        this._prod._stop();
        this._err = NO;
        this._stopID = NO;
    };
    Stream.prototype._add = function (il) {
        var ta = this._target;
        if (ta !== NO)
            return ta._add(il);
        var a = this._ils;
        a.push(il);
        if (a.length > 1)
            return;
        if (this._stopID !== NO) {
            clearTimeout(this._stopID);
            this._stopID = NO;
        }
        else {
            var p = this._prod;
            if (p !== NO)
                p._start(this);
        }
    };
    Stream.prototype._remove = function (il) {
        var _this = this;
        var ta = this._target;
        if (ta !== NO)
            return ta._remove(il);
        var a = this._ils;
        var i = a.indexOf(il);
        if (i > -1) {
            a.splice(i, 1);
            if (this._prod !== NO && a.length <= 0) {
                this._err = NO;
                this._stopID = setTimeout(function () { return _this._stopNow(); });
            }
            else if (a.length === 1) {
                this._pruneCycles();
            }
        }
    };
    // If all paths stemming from `this` stream eventually end at `this`
    // stream, then we remove the single listener of `this` stream, to
    // force it to end its execution and dispose resources. This method
    // assumes as a precondition that this._ils has just one listener.
    Stream.prototype._pruneCycles = function () {
        if (this._hasNoSinks(this, []))
            this._remove(this._ils[0]);
    };
    // Checks whether *there is no* path starting from `x` that leads to an end
    // listener (sink) in the stream graph, following edges A->B where B is a
    // listener of A. This means these paths constitute a cycle somehow. Is given
    // a trace of all visited nodes so far.
    Stream.prototype._hasNoSinks = function (x, trace) {
        if (trace.indexOf(x) !== -1)
            return true;
        else if (x.out === this)
            return true;
        else if (x.out && x.out !== NO)
            return this._hasNoSinks(x.out, trace.concat(x));
        else if (x._ils) {
            for (var i = 0, N = x._ils.length; i < N; i++)
                if (!this._hasNoSinks(x._ils[i], trace.concat(x)))
                    return false;
            return true;
        }
        else
            return false;
    };
    Stream.prototype.ctor = function () {
        return this instanceof MemoryStream ? MemoryStream : Stream;
    };
    /**
     * Adds a Listener to the Stream.
     *
     * @param {Listener} listener
     */
    Stream.prototype.addListener = function (listener) {
        listener._n = listener.next || noop;
        listener._e = listener.error || noop;
        listener._c = listener.complete || noop;
        this._add(listener);
    };
    /**
     * Removes a Listener from the Stream, assuming the Listener was added to it.
     *
     * @param {Listener<T>} listener
     */
    Stream.prototype.removeListener = function (listener) {
        this._remove(listener);
    };
    /**
     * Adds a Listener to the Stream returning a Subscription to remove that
     * listener.
     *
     * @param {Listener} listener
     * @returns {Subscription}
     */
    Stream.prototype.subscribe = function (listener) {
        this.addListener(listener);
        return new StreamSub(this, listener);
    };
    /**
     * Add interop between most.js and RxJS 5
     *
     * @returns {Stream}
     */
    Stream.prototype[symbol_observable_1.default] = function () {
        return this;
    };
    /**
     * Creates a new Stream given a Producer.
     *
     * @factory true
     * @param {Producer} producer An optional Producer that dictates how to
     * start, generate events, and stop the Stream.
     * @return {Stream}
     */
    Stream.create = function (producer) {
        if (producer) {
            if (typeof producer.start !== 'function'
                || typeof producer.stop !== 'function')
                throw new Error('producer requires both start and stop functions');
            internalizeProducer(producer); // mutates the input
        }
        return new Stream(producer);
    };
    /**
     * Creates a new MemoryStream given a Producer.
     *
     * @factory true
     * @param {Producer} producer An optional Producer that dictates how to
     * start, generate events, and stop the Stream.
     * @return {MemoryStream}
     */
    Stream.createWithMemory = function (producer) {
        if (producer)
            internalizeProducer(producer); // mutates the input
        return new MemoryStream(producer);
    };
    /**
     * Creates a Stream that does nothing when started. It never emits any event.
     *
     * Marble diagram:
     *
     * ```text
     *          never
     * -----------------------
     * ```
     *
     * @factory true
     * @return {Stream}
     */
    Stream.never = function () {
        return new Stream({ _start: noop, _stop: noop });
    };
    /**
     * Creates a Stream that immediately emits the "complete" notification when
     * started, and that's it.
     *
     * Marble diagram:
     *
     * ```text
     * empty
     * -|
     * ```
     *
     * @factory true
     * @return {Stream}
     */
    Stream.empty = function () {
        return new Stream({
            _start: function (il) { il._c(); },
            _stop: noop,
        });
    };
    /**
     * Creates a Stream that immediately emits an "error" notification with the
     * value you passed as the `error` argument when the stream starts, and that's
     * it.
     *
     * Marble diagram:
     *
     * ```text
     * throw(X)
     * -X
     * ```
     *
     * @factory true
     * @param error The error event to emit on the created stream.
     * @return {Stream}
     */
    Stream.throw = function (error) {
        return new Stream({
            _start: function (il) { il._e(error); },
            _stop: noop,
        });
    };
    /**
     * Creates a stream from an Array, Promise, or an Observable.
     *
     * @factory true
     * @param {Array|PromiseLike|Observable} input The input to make a stream from.
     * @return {Stream}
     */
    Stream.from = function (input) {
        if (typeof input[symbol_observable_1.default] === 'function')
            return Stream.fromObservable(input);
        else if (typeof input.then === 'function')
            return Stream.fromPromise(input);
        else if (Array.isArray(input))
            return Stream.fromArray(input);
        throw new TypeError("Type of input to from() must be an Array, Promise, or Observable");
    };
    /**
     * Creates a Stream that immediately emits the arguments that you give to
     * *of*, then completes.
     *
     * Marble diagram:
     *
     * ```text
     * of(1,2,3)
     * 123|
     * ```
     *
     * @factory true
     * @param a The first value you want to emit as an event on the stream.
     * @param b The second value you want to emit as an event on the stream. One
     * or more of these values may be given as arguments.
     * @return {Stream}
     */
    Stream.of = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        return Stream.fromArray(items);
    };
    /**
     * Converts an array to a stream. The returned stream will emit synchronously
     * all the items in the array, and then complete.
     *
     * Marble diagram:
     *
     * ```text
     * fromArray([1,2,3])
     * 123|
     * ```
     *
     * @factory true
     * @param {Array} array The array to be converted as a stream.
     * @return {Stream}
     */
    Stream.fromArray = function (array) {
        return new Stream(new FromArray(array));
    };
    /**
     * Converts a promise to a stream. The returned stream will emit the resolved
     * value of the promise, and then complete. However, if the promise is
     * rejected, the stream will emit the corresponding error.
     *
     * Marble diagram:
     *
     * ```text
     * fromPromise( ----42 )
     * -----------------42|
     * ```
     *
     * @factory true
     * @param {PromiseLike} promise The promise to be converted as a stream.
     * @return {Stream}
     */
    Stream.fromPromise = function (promise) {
        return new Stream(new FromPromise(promise));
    };
    /**
     * Converts an Observable into a Stream.
     *
     * @factory true
     * @param {any} observable The observable to be converted as a stream.
     * @return {Stream}
     */
    Stream.fromObservable = function (obs) {
        if (obs.endWhen)
            return obs;
        return new Stream(new FromObservable(obs));
    };
    /**
     * Creates a stream that periodically emits incremental numbers, every
     * `period` milliseconds.
     *
     * Marble diagram:
     *
     * ```text
     *     periodic(1000)
     * ---0---1---2---3---4---...
     * ```
     *
     * @factory true
     * @param {number} period The interval in milliseconds to use as a rate of
     * emission.
     * @return {Stream}
     */
    Stream.periodic = function (period) {
        return new Stream(new Periodic(period));
    };
    Stream.prototype._map = function (project) {
        return new (this.ctor())(new MapOp(project, this));
    };
    /**
     * Transforms each event from the input Stream through a `project` function,
     * to get a Stream that emits those transformed events.
     *
     * Marble diagram:
     *
     * ```text
     * --1---3--5-----7------
     *    map(i => i * 10)
     * --10--30-50----70-----
     * ```
     *
     * @param {Function} project A function of type `(t: T) => U` that takes event
     * `t` of type `T` from the input Stream and produces an event of type `U`, to
     * be emitted on the output Stream.
     * @return {Stream}
     */
    Stream.prototype.map = function (project) {
        return this._map(project);
    };
    /**
     * It's like `map`, but transforms each input event to always the same
     * constant value on the output Stream.
     *
     * Marble diagram:
     *
     * ```text
     * --1---3--5-----7-----
     *       mapTo(10)
     * --10--10-10----10----
     * ```
     *
     * @param projectedValue A value to emit on the output Stream whenever the
     * input Stream emits any value.
     * @return {Stream}
     */
    Stream.prototype.mapTo = function (projectedValue) {
        var s = this.map(function () { return projectedValue; });
        var op = s._prod;
        op.type = 'mapTo';
        return s;
    };
    /**
     * Only allows events that pass the test given by the `passes` argument.
     *
     * Each event from the input stream is given to the `passes` function. If the
     * function returns `true`, the event is forwarded to the output stream,
     * otherwise it is ignored and not forwarded.
     *
     * Marble diagram:
     *
     * ```text
     * --1---2--3-----4-----5---6--7-8--
     *     filter(i => i % 2 === 0)
     * ------2--------4---------6----8--
     * ```
     *
     * @param {Function} passes A function of type `(t: T) => boolean` that takes
     * an event from the input stream and checks if it passes, by returning a
     * boolean.
     * @return {Stream}
     */
    Stream.prototype.filter = function (passes) {
        var p = this._prod;
        if (p instanceof Filter)
            return new Stream(new Filter(and(p.f, passes), p.ins));
        return new Stream(new Filter(passes, this));
    };
    /**
     * Lets the first `amount` many events from the input stream pass to the
     * output stream, then makes the output stream complete.
     *
     * Marble diagram:
     *
     * ```text
     * --a---b--c----d---e--
     *    take(3)
     * --a---b--c|
     * ```
     *
     * @param {number} amount How many events to allow from the input stream
     * before completing the output stream.
     * @return {Stream}
     */
    Stream.prototype.take = function (amount) {
        return new (this.ctor())(new Take(amount, this));
    };
    /**
     * Ignores the first `amount` many events from the input stream, and then
     * after that starts forwarding events from the input stream to the output
     * stream.
     *
     * Marble diagram:
     *
     * ```text
     * --a---b--c----d---e--
     *       drop(3)
     * --------------d---e--
     * ```
     *
     * @param {number} amount How many events to ignore from the input stream
     * before forwarding all events from the input stream to the output stream.
     * @return {Stream}
     */
    Stream.prototype.drop = function (amount) {
        return new Stream(new Drop(amount, this));
    };
    /**
     * When the input stream completes, the output stream will emit the last event
     * emitted by the input stream, and then will also complete.
     *
     * Marble diagram:
     *
     * ```text
     * --a---b--c--d----|
     *       last()
     * -----------------d|
     * ```
     *
     * @return {Stream}
     */
    Stream.prototype.last = function () {
        return new Stream(new Last(this));
    };
    /**
     * Prepends the given `initial` value to the sequence of events emitted by the
     * input stream. The returned stream is a MemoryStream, which means it is
     * already `remember()`'d.
     *
     * Marble diagram:
     *
     * ```text
     * ---1---2-----3---
     *   startWith(0)
     * 0--1---2-----3---
     * ```
     *
     * @param initial The value or event to prepend.
     * @return {MemoryStream}
     */
    Stream.prototype.startWith = function (initial) {
        return new MemoryStream(new StartWith(this, initial));
    };
    /**
     * Uses another stream to determine when to complete the current stream.
     *
     * When the given `other` stream emits an event or completes, the output
     * stream will complete. Before that happens, the output stream will behaves
     * like the input stream.
     *
     * Marble diagram:
     *
     * ```text
     * ---1---2-----3--4----5----6---
     *   endWhen( --------a--b--| )
     * ---1---2-----3--4--|
     * ```
     *
     * @param other Some other stream that is used to know when should the output
     * stream of this operator complete.
     * @return {Stream}
     */
    Stream.prototype.endWhen = function (other) {
        return new (this.ctor())(new EndWhen(other, this));
    };
    /**
     * "Folds" the stream onto itself.
     *
     * Combines events from the past throughout
     * the entire execution of the input stream, allowing you to accumulate them
     * together. It's essentially like `Array.prototype.reduce`. The returned
     * stream is a MemoryStream, which means it is already `remember()`'d.
     *
     * The output stream starts by emitting the `seed` which you give as argument.
     * Then, when an event happens on the input stream, it is combined with that
     * seed value through the `accumulate` function, and the output value is
     * emitted on the output stream. `fold` remembers that output value as `acc`
     * ("accumulator"), and then when a new input event `t` happens, `acc` will be
     * combined with that to produce the new `acc` and so forth.
     *
     * Marble diagram:
     *
     * ```text
     * ------1-----1--2----1----1------
     *   fold((acc, x) => acc + x, 3)
     * 3-----4-----5--7----8----9------
     * ```
     *
     * @param {Function} accumulate A function of type `(acc: R, t: T) => R` that
     * takes the previous accumulated value `acc` and the incoming event from the
     * input stream and produces the new accumulated value.
     * @param seed The initial accumulated value, of type `R`.
     * @return {MemoryStream}
     */
    Stream.prototype.fold = function (accumulate, seed) {
        return new MemoryStream(new Fold(accumulate, seed, this));
    };
    /**
     * Replaces an error with another stream.
     *
     * When (and if) an error happens on the input stream, instead of forwarding
     * that error to the output stream, *replaceError* will call the `replace`
     * function which returns the stream that the output stream will replicate.
     * And, in case that new stream also emits an error, `replace` will be called
     * again to get another stream to start replicating.
     *
     * Marble diagram:
     *
     * ```text
     * --1---2-----3--4-----X
     *   replaceError( () => --10--| )
     * --1---2-----3--4--------10--|
     * ```
     *
     * @param {Function} replace A function of type `(err) => Stream` that takes
     * the error that occurred on the input stream or on the previous replacement
     * stream and returns a new stream. The output stream will behave like the
     * stream that this function returns.
     * @return {Stream}
     */
    Stream.prototype.replaceError = function (replace) {
        return new (this.ctor())(new ReplaceError(replace, this));
    };
    /**
     * Flattens a "stream of streams", handling only one nested stream at a time
     * (no concurrency).
     *
     * If the input stream is a stream that emits streams, then this operator will
     * return an output stream which is a flat stream: emits regular events. The
     * flattening happens without concurrency. It works like this: when the input
     * stream emits a nested stream, *flatten* will start imitating that nested
     * one. However, as soon as the next nested stream is emitted on the input
     * stream, *flatten* will forget the previous nested one it was imitating, and
     * will start imitating the new nested one.
     *
     * Marble diagram:
     *
     * ```text
     * --+--------+---------------
     *   \        \
     *    \       ----1----2---3--
     *    --a--b----c----d--------
     *           flatten
     * -----a--b------1----2---3--
     * ```
     *
     * @return {Stream}
     */
    Stream.prototype.flatten = function () {
        var p = this._prod;
        return new Stream(new Flatten(this));
    };
    /**
     * Passes the input stream to a custom operator, to produce an output stream.
     *
     * *compose* is a handy way of using an existing function in a chained style.
     * Instead of writing `outStream = f(inStream)` you can write
     * `outStream = inStream.compose(f)`.
     *
     * @param {function} operator A function that takes a stream as input and
     * returns a stream as well.
     * @return {Stream}
     */
    Stream.prototype.compose = function (operator) {
        return operator(this);
    };
    /**
     * Returns an output stream that behaves like the input stream, but also
     * remembers the most recent event that happens on the input stream, so that a
     * newly added listener will immediately receive that memorised event.
     *
     * @return {MemoryStream}
     */
    Stream.prototype.remember = function () {
        return new MemoryStream(new Remember(this));
    };
    /**
     * Returns an output stream that identically behaves like the input stream,
     * but also runs a `spy` function for each event, to help you debug your app.
     *
     * *debug* takes a `spy` function as argument, and runs that for each event
     * happening on the input stream. If you don't provide the `spy` argument,
     * then *debug* will just `console.log` each event. This helps you to
     * understand the flow of events through some operator chain.
     *
     * Please note that if the output stream has no listeners, then it will not
     * start, which means `spy` will never run because no actual event happens in
     * that case.
     *
     * Marble diagram:
     *
     * ```text
     * --1----2-----3-----4--
     *         debug
     * --1----2-----3-----4--
     * ```
     *
     * @param {function} labelOrSpy A string to use as the label when printing
     * debug information on the console, or a 'spy' function that takes an event
     * as argument, and does not need to return anything.
     * @return {Stream}
     */
    Stream.prototype.debug = function (labelOrSpy) {
        return new (this.ctor())(new Debug(this, labelOrSpy));
    };
    /**
     * *imitate* changes this current Stream to emit the same events that the
     * `other` given Stream does. This method returns nothing.
     *
     * This method exists to allow one thing: **circular dependency of streams**.
     * For instance, let's imagine that for some reason you need to create a
     * circular dependency where stream `first$` depends on stream `second$`
     * which in turn depends on `first$`:
     *
     * <!-- skip-example -->
     * ```js
     * import delay from 'xstream/extra/delay'
     *
     * var first$ = second$.map(x => x * 10).take(3);
     * var second$ = first$.map(x => x + 1).startWith(1).compose(delay(100));
     * ```
     *
     * However, that is invalid JavaScript, because `second$` is undefined
     * on the first line. This is how *imitate* can help solve it:
     *
     * ```js
     * import delay from 'xstream/extra/delay'
     *
     * var secondProxy$ = xs.create();
     * var first$ = secondProxy$.map(x => x * 10).take(3);
     * var second$ = first$.map(x => x + 1).startWith(1).compose(delay(100));
     * secondProxy$.imitate(second$);
     * ```
     *
     * We create `secondProxy$` before the others, so it can be used in the
     * declaration of `first$`. Then, after both `first$` and `second$` are
     * defined, we hook `secondProxy$` with `second$` with `imitate()` to tell
     * that they are "the same". `imitate` will not trigger the start of any
     * stream, it just binds `secondProxy$` and `second$` together.
     *
     * The following is an example where `imitate()` is important in Cycle.js
     * applications. A parent component contains some child components. A child
     * has an action stream which is given to the parent to define its state:
     *
     * <!-- skip-example -->
     * ```js
     * const childActionProxy$ = xs.create();
     * const parent = Parent({...sources, childAction$: childActionProxy$});
     * const childAction$ = parent.state$.map(s => s.child.action$).flatten();
     * childActionProxy$.imitate(childAction$);
     * ```
     *
     * Note, though, that **`imitate()` does not support MemoryStreams**. If we
     * would attempt to imitate a MemoryStream in a circular dependency, we would
     * either get a race condition (where the symptom would be "nothing happens")
     * or an infinite cyclic emission of values. It's useful to think about
     * MemoryStreams as cells in a spreadsheet. It doesn't make any sense to
     * define a spreadsheet cell `A1` with a formula that depends on `B1` and
     * cell `B1` defined with a formula that depends on `A1`.
     *
     * If you find yourself wanting to use `imitate()` with a
     * MemoryStream, you should rework your code around `imitate()` to use a
     * Stream instead. Look for the stream in the circular dependency that
     * represents an event stream, and that would be a candidate for creating a
     * proxy Stream which then imitates the target Stream.
     *
     * @param {Stream} target The other stream to imitate on the current one. Must
     * not be a MemoryStream.
     */
    Stream.prototype.imitate = function (target) {
        if (target instanceof MemoryStream)
            throw new Error('A MemoryStream was given to imitate(), but it only ' +
                'supports a Stream. Read more about this restriction here: ' +
                'https://github.com/staltz/xstream#faq');
        this._target = target;
        for (var ils = this._ils, N = ils.length, i = 0; i < N; i++)
            target._add(ils[i]);
        this._ils = [];
    };
    /**
     * Forces the Stream to emit the given value to its listeners.
     *
     * As the name indicates, if you use this, you are most likely doing something
     * The Wrong Way. Please try to understand the reactive way before using this
     * method. Use it only when you know what you are doing.
     *
     * @param value The "next" value you want to broadcast to all listeners of
     * this Stream.
     */
    Stream.prototype.shamefullySendNext = function (value) {
        this._n(value);
    };
    /**
     * Forces the Stream to emit the given error to its listeners.
     *
     * As the name indicates, if you use this, you are most likely doing something
     * The Wrong Way. Please try to understand the reactive way before using this
     * method. Use it only when you know what you are doing.
     *
     * @param {any} error The error you want to broadcast to all the listeners of
     * this Stream.
     */
    Stream.prototype.shamefullySendError = function (error) {
        this._e(error);
    };
    /**
     * Forces the Stream to emit the "completed" event to its listeners.
     *
     * As the name indicates, if you use this, you are most likely doing something
     * The Wrong Way. Please try to understand the reactive way before using this
     * method. Use it only when you know what you are doing.
     */
    Stream.prototype.shamefullySendComplete = function () {
        this._c();
    };
    /**
     * Adds a "debug" listener to the stream. There can only be one debug
     * listener, that's why this is 'setDebugListener'. To remove the debug
     * listener, just call setDebugListener(null).
     *
     * A debug listener is like any other listener. The only difference is that a
     * debug listener is "stealthy": its presence/absence does not trigger the
     * start/stop of the stream (or the producer inside the stream). This is
     * useful so you can inspect what is going on without changing the behavior
     * of the program. If you have an idle stream and you add a normal listener to
     * it, the stream will start executing. But if you set a debug listener on an
     * idle stream, it won't start executing (not until the first normal listener
     * is added).
     *
     * As the name indicates, we don't recommend using this method to build app
     * logic. In fact, in most cases the debug operator works just fine. Only use
     * this one if you know what you're doing.
     *
     * @param {Listener<T>} listener
     */
    Stream.prototype.setDebugListener = function (listener) {
        if (!listener) {
            this._d = false;
            this._dl = NO;
        }
        else {
            this._d = true;
            listener._n = listener.next || noop;
            listener._e = listener.error || noop;
            listener._c = listener.complete || noop;
            this._dl = listener;
        }
    };
    /**
     * Blends multiple streams together, emitting events from all of them
     * concurrently.
     *
     * *merge* takes multiple streams as arguments, and creates a stream that
     * behaves like each of the argument streams, in parallel.
     *
     * Marble diagram:
     *
     * ```text
     * --1----2-----3--------4---
     * ----a-----b----c---d------
     *            merge
     * --1-a--2--b--3-c---d--4---
     * ```
     *
     * @factory true
     * @param {Stream} stream1 A stream to merge together with other streams.
     * @param {Stream} stream2 A stream to merge together with other streams. Two
     * or more streams may be given as arguments.
     * @return {Stream}
     */
    Stream.merge = function merge() {
        var streams = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            streams[_i] = arguments[_i];
        }
        return new Stream(new Merge(streams));
    };
    /**
     * Combines multiple input streams together to return a stream whose events
     * are arrays that collect the latest events from each input stream.
     *
     * *combine* internally remembers the most recent event from each of the input
     * streams. When any of the input streams emits an event, that event together
     * with all the other saved events are combined into an array. That array will
     * be emitted on the output stream. It's essentially a way of joining together
     * the events from multiple streams.
     *
     * Marble diagram:
     *
     * ```text
     * --1----2-----3--------4---
     * ----a-----b-----c--d------
     *          combine
     * ----1a-2a-2b-3b-3c-3d-4d--
     * ```
     *
     * @factory true
     * @param {Stream} stream1 A stream to combine together with other streams.
     * @param {Stream} stream2 A stream to combine together with other streams.
     * Multiple streams, not just two, may be given as arguments.
     * @return {Stream}
     */
    Stream.combine = function combine() {
        var streams = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            streams[_i] = arguments[_i];
        }
        return new Stream(new Combine(streams));
    };
    return Stream;
}());
exports.Stream = Stream;
var MemoryStream = /** @class */ (function (_super) {
    __extends(MemoryStream, _super);
    function MemoryStream(producer) {
        var _this = _super.call(this, producer) || this;
        _this._has = false;
        return _this;
    }
    MemoryStream.prototype._n = function (x) {
        this._v = x;
        this._has = true;
        _super.prototype._n.call(this, x);
    };
    MemoryStream.prototype._add = function (il) {
        var ta = this._target;
        if (ta !== NO)
            return ta._add(il);
        var a = this._ils;
        a.push(il);
        if (a.length > 1) {
            if (this._has)
                il._n(this._v);
            return;
        }
        if (this._stopID !== NO) {
            if (this._has)
                il._n(this._v);
            clearTimeout(this._stopID);
            this._stopID = NO;
        }
        else if (this._has)
            il._n(this._v);
        else {
            var p = this._prod;
            if (p !== NO)
                p._start(this);
        }
    };
    MemoryStream.prototype._stopNow = function () {
        this._has = false;
        _super.prototype._stopNow.call(this);
    };
    MemoryStream.prototype._x = function () {
        this._has = false;
        _super.prototype._x.call(this);
    };
    MemoryStream.prototype.map = function (project) {
        return this._map(project);
    };
    MemoryStream.prototype.mapTo = function (projectedValue) {
        return _super.prototype.mapTo.call(this, projectedValue);
    };
    MemoryStream.prototype.take = function (amount) {
        return _super.prototype.take.call(this, amount);
    };
    MemoryStream.prototype.endWhen = function (other) {
        return _super.prototype.endWhen.call(this, other);
    };
    MemoryStream.prototype.replaceError = function (replace) {
        return _super.prototype.replaceError.call(this, replace);
    };
    MemoryStream.prototype.remember = function () {
        return this;
    };
    MemoryStream.prototype.debug = function (labelOrSpy) {
        return _super.prototype.debug.call(this, labelOrSpy);
    };
    return MemoryStream;
}(Stream));
exports.MemoryStream = MemoryStream;
exports.default = Stream;

},{"symbol-observable":137}],146:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
var run_1 = require("@cycle/run");
var dom_1 = require("@cycle/dom");
var xstream_1 = __importDefault(require("xstream"));
var vm = __importStar(require("vm"));
var wast2wasm_1 = __importDefault(require("wast2wasm"));
function view(state) {
    return dom_1.div(".tinker", [
        dom_1.header([dom_1.div("wasm-tinker")]),
        dom_1.div(".contents", [
            dom_1.div(".wast", [
                dom_1.textarea(".wast-text", { props: { spellcheck: false } }, state.WAST)
            ]),
            dom_1.div(".repl", [
                dom_1.span([">", dom_1.input(".repl-input", { props: { value: state.input } })])
            ].concat(state.replLog.map(function (s) {
                return dom_1.pre(".log-item", { class: { error: s.error, result: s.result, info: s.info } }, s.text);
            })))
        ])
    ]);
}
var WAST = "\n(module\n  (export \"main\" (func $main))\n  (func $main (result i32) (local $x i32) (local $y i32)\n    (return\n      (set_local $x (i32.const 5))\n      (set_local $y (i32.const 10))\n      (i32.add\n        (get_local $x)\n        (get_local $y)\n      )\n    )\n  )\n)\n".trim();
var initialState = {
    WAST: WAST,
    replLog: [],
    replState: vm.createContext({}),
    input: "",
    commandHistory: [],
    commandCursor: null
};
function replInput(input) {
    return function (state) {
        return __assign({}, state, { input: input });
    };
}
function updateWast(WAST) {
    return function (state) {
        return __assign({}, state, { WAST: WAST });
    };
}
function updateWASM(output) {
    var error = output.error;
    var exports = !error && output.instance.exports;
    var exportNames = Object.keys(exports);
    return function (state) {
        if (error) {
            return __assign({}, state, { replLog: [
                    { error: true, text: "** Error compiling wast **\n" + error.message }
                ].concat(state.replLog) });
        }
        else {
            return __assign({}, state, { replState: vm.createContext(__assign({}, state.replState, exports)), replLog: [
                    {
                        info: true,
                        text: "** Compiled wast, exported " + exportNames.join(", ") + " **"
                    }
                ].concat(state.replLog) });
        }
    };
}
function previousCommand() {
    return function (state) {
        var commandCursor = state.commandCursor;
        if (commandCursor !== null) {
            commandCursor += 1;
        }
        else {
            commandCursor = 0;
        }
        if (commandCursor > state.commandHistory.length - 1) {
            commandCursor = state.commandHistory.length - 1;
        }
        return __assign({}, state, { commandCursor: commandCursor, input: state.commandHistory[commandCursor] || "" });
    };
}
function nextCommand() {
    return function (state) {
        var commandCursor = state.commandCursor;
        if (commandCursor !== null) {
            commandCursor -= 1;
        }
        if (commandCursor < 0) {
            commandCursor = null;
        }
        return __assign({}, state, { commandCursor: commandCursor, input: state.commandHistory[commandCursor] || "" });
    };
}
function replEnter(ev) {
    var code = ev.target.value;
    return function (state) {
        var result;
        var error;
        try {
            result = vm.runInContext(code, state.replState);
        }
        catch (e) {
            error = e;
        }
        if (code.trim() !== "") {
            state.commandHistory.unshift(code);
        }
        state.commandCursor = null;
        if (error) {
            return __assign({}, state, { input: "", replLog: [
                    { error: true, text: "Error: " + error.message },
                    { text: "> " + code },
                ].concat(state.replLog) });
        }
        else {
            return __assign({}, state, { input: "", replLog: [
                    { result: true, text: JSON.stringify(result) },
                    { text: "> " + code },
                ].concat(state.replLog) });
        }
    };
}
function compileWAST(wast) {
    return wast2wasm_1.default(wast)
        .then(function (output) {
        return window.WebAssembly.instantiate(output.buffer, {
            imports: {}
        });
    })
        .catch(function (e) { return ({ error: e }); });
}
function main(sources) {
    var wast$ = sources.DOM
        .select(".wast textarea")
        .events("change")
        .map(function (ev) { return ev.target.value; })
        .startWith(WAST);
    var wasm$ = wast$
        .map(compileWAST)
        .map(xstream_1.default.fromPromise)
        .flatten();
    var replInput$ = sources.DOM
        .select(".repl-input")
        .events("input")
        .map(function (ev) { return ev.target.value; });
    var replKeyup$ = sources.DOM.select(".repl-input").events("keyup");
    var replEnter$ = replKeyup$.filter(function (ev) { return ev.keyCode === 13; }).map(replEnter);
    var previousCommand$ = replKeyup$
        .filter(function (ev) { return ev.keyCode === 38; })
        .map(previousCommand);
    var nextCommand$ = replKeyup$
        .filter(function (ev) { return ev.keyCode === 40; })
        .map(nextCommand);
    var reducer$ = xstream_1.default.merge(wast$.map(updateWast), replEnter$, wasm$.map(updateWASM), replInput$.map(replInput), previousCommand$, nextCommand$);
    var state$ = reducer$.fold(function (state, reducer) { return reducer(state); }, initialState);
    return {
        DOM: state$.map(view)
    };
}
var drivers = {
    DOM: dom_1.makeDOMDriver(document.body)
};
run_1.run(main, drivers);

},{"@cycle/dom":11,"@cycle/run":21,"vm":141,"wast2wasm":142,"xstream":145}]},{},[146]);
